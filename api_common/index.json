[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "js/base/collection.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\n// import _ from 'lodash'\r\n\r\n// COMMON IMPORTS\r\nimport T              from '../utils/types'\r\nimport CollectionBase from './collection_base'\r\n\r\n\r\n// const context = 'common/base/collection'\r\n\r\n\r\n\r\n/**\r\n * Instance objects collection.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n * API:\r\n * \t\t->set_all(arg_items):nothing - Set all collection items.\r\n * \t\t->get_all(arg_types):array - Get all collection items or filter items with given type.\r\n * \t\t->get_all_names(arg_types):array - Get all items names with or without a filter on items types.\r\n * \t\t->get_all_ids():array - Get all items ids with or without a filter on items types.\r\n * \r\n * \t\t->item(arg_name):Instance - Get an item by its name.\r\n * \r\n * \t\t->get_count():number - Get all items count.\r\n * \t\t->get_first():object|undefined - Get first item.\r\n * \t\t->get_last():object|undefined - Get last item.\r\n * \r\n * \t\t->add(arg_item):nothing - Add an item to the collection.\r\n * \t\t->add_first(arg_item):nothing - Add an item to the collection at the first position.\r\n * \t\t->remove(arg_item):nothing - Remove an item from the collection.\r\n * \t\t->has(arg_item):boolean -  Test if an item is inside the collection.\r\n * \r\n * \t\t->find_by_name(arg_name):Instance|undefined - Find an item by its name into the collection.\r\n * \t\t->find_by_id(arg_id):Instance|undefined - Find an item by its id into the collection.\r\n * \t\t->find_by_attr(arg_attr_name, arg_attr_value):Instance|undefined - Find an item by one of its attributes into the collection.\r\n * \t\t->find_by_filter(arg_filter_function):Instance|undefined - Find an item by a filter function.\r\n * \r\n * \t\t->filter_by_attr(arg_attr_name, arg_attr_value):array - Filter items by one of theirs attributes into the collection.\r\n * \t\t->filter_by_filter(arg_filter_function):array - Filter items by a filter function.\r\n * \r\n *  \t\t->get_accepted_types():array - Get all collection accepted types.\r\n * \t\t->set_accepted_types(arg_types):nothing - Set all collection accepted types.\r\n * \t\t->add_accepted_type(arg_type):nothing - Add one collection accepted type.\r\n * \t\t->has_accepted_type(arg_type):boolean - Test if collection has given accepted type.\r\n * \r\n * \t\t->forEach(arg_cb):nothing - forEach wrapper on ordered items.\r\n */\r\nexport default class Collection extends CollectionBase\r\n{\r\n\t/**\r\n\t * Create a collection of Instance objects.\r\n\t * \r\n\t * @param {...Instance} args - variadic list of Instance.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(...args)\r\n\t{\r\n\t\tsuper()\r\n\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_collection  = true\r\n\r\n\t\tif ( args.length == 1 && T.isArray(args[0]) )\r\n\t\t{\r\n\t\t\targs = args[0]\r\n\t\t}\r\n\t\t\r\n\t\tif (args && args.length > 0)\r\n\t\t{\r\n\t\t\tthis.set_all(args)\r\n\t\t}\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/base/collection.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "Collection",
    "memberof": "js/base/collection.js",
    "static": true,
    "longname": "js/base/collection.js~Collection",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/base/collection.js",
    "importStyle": "Collection",
    "description": "Instance objects collection.",
    "examples": [
      "API:\n\t\t->set_all(arg_items):nothing - Set all collection items.\n\t\t->get_all(arg_types):array - Get all collection items or filter items with given type.\n\t\t->get_all_names(arg_types):array - Get all items names with or without a filter on items types.\n\t\t->get_all_ids():array - Get all items ids with or without a filter on items types.\n\n\t\t->item(arg_name):Instance - Get an item by its name.\n\n\t\t->get_count():number - Get all items count.\n\t\t->get_first():object|undefined - Get first item.\n\t\t->get_last():object|undefined - Get last item.\n\n\t\t->add(arg_item):nothing - Add an item to the collection.\n\t\t->add_first(arg_item):nothing - Add an item to the collection at the first position.\n\t\t->remove(arg_item):nothing - Remove an item from the collection.\n\t\t->has(arg_item):boolean -  Test if an item is inside the collection.\n\n\t\t->find_by_name(arg_name):Instance|undefined - Find an item by its name into the collection.\n\t\t->find_by_id(arg_id):Instance|undefined - Find an item by its id into the collection.\n\t\t->find_by_attr(arg_attr_name, arg_attr_value):Instance|undefined - Find an item by one of its attributes into the collection.\n\t\t->find_by_filter(arg_filter_function):Instance|undefined - Find an item by a filter function.\n\n\t\t->filter_by_attr(arg_attr_name, arg_attr_value):array - Filter items by one of theirs attributes into the collection.\n\t\t->filter_by_filter(arg_filter_function):array - Filter items by a filter function.\n\n \t\t->get_accepted_types():array - Get all collection accepted types.\n\t\t->set_accepted_types(arg_types):nothing - Set all collection accepted types.\n\t\t->add_accepted_type(arg_type):nothing - Add one collection accepted type.\n\t\t->has_accepted_type(arg_type):boolean - Test if collection has given accepted type.\n\n\t\t->forEach(arg_cb):nothing - forEach wrapper on ordered items."
    ],
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/collection_base.js~CollectionBase"
    ]
  },
  {
    "__docId__": 50,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/collection.js~Collection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection.js~Collection#constructor",
    "access": "public",
    "description": "Create a collection of Instance objects.",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "...Instance"
        ],
        "spread": true,
        "optional": false,
        "name": "args",
        "description": "variadic list of Instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "is_collection",
    "memberof": "js/base/collection.js~Collection",
    "static": false,
    "longname": "js/base/collection.js~Collection#is_collection",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 70,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 52,
    "kind": "file",
    "name": "js/base/collection_base.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport _ from 'lodash'\r\n\r\n// COMMON IMPORTS\r\nimport T         from '../utils/types'\r\nimport Errorable from './errorable'\r\nimport Instance  from './instance'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\nconst context = 'common/base/collection_base'\r\n\r\n\r\n\r\n/**\r\n * Base class for all collections classes.\r\n * @abstract\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n  API:\r\n * \t\t->set_all(arg_items):nothing - Set all collection items.\r\n * \t\t->get_all(arg_types):array - Get all collection items or filter items with given type.\r\n * \t\t->get_all_names(arg_types):array - Get all items names with or without a filter on items types.\r\n * \t\t->get_all_ids():array - Get all items ids with or without a filter on items types.\r\n * \r\n * \t\t->item(arg_name):Instance - Get an item by its name.\r\n * \r\n * \t\t->get_count():number - Get all items count.\r\n * \t\t->get_first():object|undefined - Get first item.\r\n * \t\t->get_last():object|undefined - Get last item.\r\n * \r\n * \t\t->add(arg_item):nothing - Add an item to the collection.\r\n * \t\t->add_first(arg_item):nothing - Add an item to the collection at the first position.\r\n * \t\t->remove(arg_item):nothing - Remove an item from the collection.\r\n * \t\t->has(arg_item):boolean -  Test if an item is inside the collection.\r\n * \r\n * \t\t->find_by_name(arg_name):Instance|undefined - Find an item by its name into the collection.\r\n * \t\t->find_by_id(arg_id):Instance|undefined - Find an item by its id into the collection.\r\n * \t\t->find_by_attr(arg_attr_name, arg_attr_value):Instance|undefined - Find an item by one of its attributes into the collection.\r\n * \t\t->find_by_filter(arg_filter_function):Instance|undefined - Find an item by a filter function.\r\n * \r\n * \t\t->filter_by_attr(arg_attr_name, arg_attr_value):array - Filter items by one of theirs attributes into the collection.\r\n * \t\t->filter_by_filter(arg_filter_function):array - Filter items by a filter function.\r\n * \r\n * \t\t->get_accepted_types():array - Get all collection accepted types.\r\n * \t\t->set_accepted_types(arg_types):nothing - Set all collection accepted types.\r\n * \t\t->add_accepted_type(arg_type):nothing - Add one collection accepted type.\r\n * \t\t->has_accepted_type(arg_type):boolean - Test if collection has given accepted type.\r\n * \r\n * \t\t->forEach(arg_cb):nothing - forEach wrapper on ordered items.\r\n */\r\nexport default class CollectionBase extends Errorable\r\n{\r\n\t/**\r\n\t * Create a collection of Instance objects.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(context, undefined)\r\n\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_collection_base  = true\r\n\r\n\t\t/**\r\n\t\t * Items array.\r\n\t\t * @type {array}\r\n\t\t */\r\n\t\tthis._items_array   = []\r\n\r\n\t\t/**\r\n\t\t * Items names map.\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tthis._items_by_name = {}\r\n\r\n\t\t/**\r\n\t\t * Items ids map.\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tthis._items_by_id   = {}\r\n\r\n\t\t/**\r\n\t\t * Accepted types array.\r\n\t\t * @type {array}\r\n\t\t */\r\n\t\tthis._accepted_types = ['*']\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Format string dump.\r\n\t * \r\n\t * @returns{string}\r\n\t */\r\n\ttoString()\r\n\t{\r\n\t\tlet str = '['\r\n\t\t_.forEach(this._items_array, (item, index)=>(index > 0 ? ',' : '') + item.get_name() )\r\n\t\treturn str + ']'\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Set all collection items.\r\n\t * \r\n\t * @param {Instance|array} arg_items - collection items: one or many Instance objects.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tset_all(arg_items)\r\n\t{\r\n\t\t// DEBUG\r\n\t\tlet str = '['\r\n\t\t_.forEach(arg_items, (item, index)=> str += (index > 0 ? ',' : '') + (item.get_name ? item.get_name() : 'bad item of type ' + (typeof item) ) )\r\n\t\tstr += ']'\r\n\t\tconsole.log('set_all', str, typeof arg_items)\r\n\r\n\t\t// RESET STORES\r\n\t\tthis._items_array   = []\r\n\t\tthis._items_by_name = {}\r\n\t\tthis._items_by_id   = {}\r\n\r\n\t\t// ONE INSTANCE IS GIVEN\r\n\t\tif ( T.isObject(arg_items) && arg_items instanceof Instance )\r\n\t\t{\r\n\t\t\tthis._add(arg_items)\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\t// AN OBJECT OR AN ARRAY IS GIVEN\r\n\t\tif ( T.isObject(arg_items) || T.isArray(arg_items) )\r\n\t\t{\r\n\t\t\t_.forEach(arg_items,\r\n\t\t\t\t(item)=>{\r\n\t\t\t\t\tif ( T.isObject(item) && item instanceof Instance )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis._add(item)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconsole.error(context + '::bad given items type (not an Instance, object, array)')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Set all collection items.\r\n\t * @private\r\n\t * \r\n\t * @param {array} arg_items - Instance objects array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t_set_all(arg_items)\r\n\t{\r\n\t\tthis._items_array = arg_items\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get all collection items.\r\n\t * @private\r\n\t * \r\n\t * @returns {array}\r\n\t */\r\n\t_get_all()\r\n\t{\r\n\t\treturn this._items_array\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get all collection items or filter items with given type.\r\n\t * \r\n\t * @param {array|string|nothing} arg_types - type or types for items filtering.\r\n\t * \r\n\t * @returns {array} - all or filtered items, empty array if not found.\r\n\t */\r\n\tget_all(arg_types)\r\n\t{\r\n\t\t// NO TYPE FILTER\r\n\t\tif (! arg_types)\r\n\t\t{\r\n\t\t\treturn _.toArray( this._items_array )\r\n\t\t}\r\n\r\n\t\t// ONE TYPE FILTER\r\n\t\tif ( T.isString(arg_types) )\r\n\t\t{\r\n\t\t\treturn _.filter(this._items_array, item => item.get_types() == arg_types )\r\n\t\t}\r\n\r\n\t\t// MANY TYPES FILTER\r\n\t\tif ( T.isArray(arg_types) )\r\n\t\t{\r\n\t\t\treturn _.filter(this._items_array, item => arg_types.indexOf( item.get_types() ) >= 0 )\r\n\t\t}\r\n\r\n\t\treturn []\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get all items names with or without a filter on items types.\r\n\t * \r\n\t * @param {array|string|nothing} arg_types - type or types for items filtering.\r\n\t * \r\n\t * @returns {array} - all or filtered items names, empty array if not found.\r\n\t */\r\n\tget_all_names(arg_types)\r\n\t{\r\n\t\t// NO TYPE FILTER\r\n\t\tif (! arg_types)\r\n\t\t{\r\n\t\t\treturn _.map(this._items_array, (item) => item.get_name() )\r\n\t\t}\r\n\r\n\t\t// ONE TYPE FILTER\r\n\t\tif ( T.isString(arg_types) )\r\n\t\t{\r\n\t\t\treturn _.filter( this._items_array, item => item.get_types() == arg_types ).map( (item) => item.get_name() )\r\n\t\t}\r\n\r\n\t\t// MANY TYPES FILTER\r\n\t\tif ( T.isArray(arg_types) )\r\n\t\t{\r\n\t\t\treturn _.filter( this._items_array, item => arg_types.indexOf( item.get_types() ) >= 0 ).map( (item) => item.get_name() )\r\n\t\t}\r\n\r\n\t\treturn []\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Get all items ids with or without a filter on items types.\r\n\t * \r\n\t * @returns {array} - all items ids.\r\n\t */\r\n\tget_all_ids()\r\n\t{\r\n\t\treturn _.map(this._items_array, (item) => item.get_id() )\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get an item by its name.\r\n\t * \r\n\t * @param {string} arg_name - instance name.\r\n\t * \r\n\t * @returns {Instance|undefined}\r\n\t */\r\n\titem(arg_name)\r\n\t{\r\n\t\treturn this._items_by_name ? this._items_by_name[arg_name] : undefined\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get an item by its name.\r\n\t * \r\n\t * @param {string} arg_name - instance name.\r\n\t * \r\n\t * @returns {Instance|undefined}\r\n\t */\r\n\tget(arg_name)\r\n\t{\r\n\t\treturn this._items_by_name ? this._items_by_name[arg_name] : undefined\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Default iterator operator.\r\n\t */\r\n\t\r\n\t// * [Symbol.iterator]() {\r\n\t// \tfor (let item of this.$items)\r\n\t// \t{\r\n\t// \t\tyield item\r\n\t// \t}\r\n\t// }\r\n\t\r\n\t// [Symbol.iterator]()\r\n\t// {\r\n\t// \tlet step = 0\r\n\t// \tconst count = this.$items.length\r\n\t\t\r\n\t// \tconst iterator = {\r\n\t// \t\tnext()\r\n\t// \t\t{\r\n\t// \t\t\tif (step < count)\r\n\t// \t\t\t{\r\n\t// \t\t\t\tconst item = this.$items[step]\r\n\t// \t\t\t\tstep++\r\n\t// \t\t\t\treturn { value:item, done:false }\r\n\t// \t\t\t}\r\n\t\t\t\t\r\n\t// \t\t\treturn { value:undefined, done:true }\r\n\t// \t\t}\r\n\t// \t}\r\n\t\t\r\n\t// \treturn iterator\r\n\t// }\r\n\t\r\n\t\r\n\t// NOT COMPATIBLE WITH NODE 0.10\r\n\t// [Symbol.iterator]()\r\n\t// {\r\n\t// \treturn this.$items.iterator()\r\n\t// }\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get all items count.\r\n\t * \r\n\t * @returns {number} - all items count.\r\n\t */\r\n\tget_count()\r\n\t{\r\n\t\treturn _.size(this._items_array)\r\n\t}\r\n    \r\n    \r\n\t\r\n\t/**\r\n\t * Get first item.\r\n\t * \r\n\t * @returns {object|undefined} - first collection items or undefined if collection is empty.\r\n\t */\r\n\tget_first()\r\n    {\r\n\t\treturn _.first(this._items_array)\r\n\t}\r\n\t\r\n\t\r\n    \r\n\t/**\r\n\t * Get last item.\r\n\t * \r\n\t * @returns {object|undefined} - last collection items or null if collection is empty.\r\n\t */\r\n\tget_last()\r\n    {\r\n\t\treturn _.last(this._items_array)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Add an item to the collection.\r\n\t * \r\n\t * @param {Instance} arg_item - Instance item.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tadd(arg_item)\r\n\t{\r\n\t\tif ( T.isObject(arg_item) && arg_item instanceof Instance )\r\n\t\t{\r\n\t\t\tif ( this.has_accepted_type('*') || this.has_accepted_type( arg_item.get_type() ) )\r\n\t\t\t{\r\n\t\t\t\tthis._add(arg_item)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.error('not accepted type [' + arg_item.get_type() + '] for instance [' + arg_item.get_name() + ']')\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\tthis.error('bad item: not an instance object')\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Add an item to the collection at the first position.\r\n\t * \r\n\t * @param {Instance} arg_item - Instance item.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tadd_first(arg_item)\r\n\t{\r\n\t\tif ( T.isObject(arg_item) && arg_item instanceof Instance )\r\n\t\t{\r\n\t\t\tif ( this.has_accepted_type('*') || this.has_accepted_type(arg_item.$type) )\r\n\t\t\t{\r\n\t\t\t\tthis._add_first(arg_item)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.error('not accepted type [' + arg_item.$type + '] for instance [' + arg_item.$name + ']')\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\tthis.error('bad item: not an instance object')\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove an item from the collection.\r\n\t * \r\n\t * @param {Instance} arg_item - Instance item.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tremove(arg_item)\r\n\t{\r\n\t\tif ( T.isObject(arg_item) && arg_item instanceof Instance )\r\n\t\t{\r\n\t\t\tconst name = arg_item.get_name()\r\n\t\t\tif (name in this._items_by_name)\r\n\t\t\t{\r\n\t\t\t\tthis._remove(arg_item)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.error('bad item: not an instance object or not found')\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Test if an item is inside the collection.\r\n\t * \r\n\t * @param {Instance} arg_item - Instance item.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\thas(arg_item)\r\n\t{\r\n\t\tif ( T.isObject(arg_item) && arg_item instanceof Instance )\r\n\t\t{\r\n\t\t\treturn this._has(arg_item)\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Add an item to the collection without type checks (unsafe).\r\n\t * @private\r\n\t * \r\n\t * @param {Instance} arg_item - Instance item.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t_add(arg_item)\r\n\t{\r\n\t\tif( this._has(arg_item) )\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst name = arg_item.get_name()\r\n\t\tconst id   = arg_item.get_id()\r\n\r\n\t\tthis._items_array.push(arg_item)\r\n\t\tthis._items_by_name[name] = arg_item\r\n\t\tthis._items_by_id[id] = arg_item\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Add an item to the collection without type checks at first position (unsafe).\r\n\t * @private\r\n\t * \r\n\t * @param {Instance} arg_item - Instance item.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t_add_first(arg_item)\r\n\t{\r\n\t\tif( this._has(arg_item) )\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\tconst name = arg_item.get_name()\r\n\t\tconst id   = arg_item.get_id()\r\n\r\n\t\tthis._items_array = [arg_item].concat(this._items_array)\r\n\t\tthis._items_by_name[name] = arg_item\r\n\t\tthis._items_by_id[id] = arg_item\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Remove an item from the collection without type checks (unsafe).\r\n\t * @private\r\n\t * \r\n\t * @param {Instance} arg_item - Instance item.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t_remove(arg_item)\r\n\t{\r\n\t\tconst name  = arg_item.get_name()\r\n\t\tconst id    = arg_item.get_id()\r\n\t\tconst index = this._items_array.indexOf(arg_item)\r\n\r\n\t\tthis._items_array.splice(index, 1)\r\n\t\tdelete this._items_by_name[name]\r\n\t\tdelete this._items_by_id[id]\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Test if an item is inside the collection without type checks (unsafe).\r\n\t * @private\r\n\t * \r\n\t * @param {Instance} arg_item - Instance item.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\t_has(arg_item)\r\n\t{\r\n\t\tconst name = arg_item.get_name()\r\n\t\treturn (name in this._items_by_name)\r\n\t}\r\n\t\r\n\t\r\n    \r\n\t/**\r\n\t * Find an item by its name into the collection.\r\n\t * \r\n\t * TODO: optimize with a map index.\r\n\t * \r\n\t * @param {string} arg_name - instance name.\r\n\t * \r\n\t * @returns {Instance|undefined}\r\n\t */\r\n\tfind_by_name(arg_name)\r\n\t{\r\n\t\treturn this._items_by_name[arg_name]\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Find an item by its id into the collection.\r\n\t * \r\n\t * @param {string} arg_id - instance id.\r\n\t * \r\n\t * @returns {Instance|undefined}\r\n\t */\r\n\tfind_by_id(arg_id)\r\n\t{\r\n\t\treturn this._items_by_id[arg_id]\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Find an item by one of its attributes into the collection.\r\n\t * \r\n\t * @param {string} arg_attr_name - instance attribute name.\r\n\t * @param {any} arg_attr_value - instance attribute value.\r\n\t * \r\n\t * @returns {Instance|undefined}\r\n\t */\r\n\tfind_by_attr(arg_attr_name, arg_attr_value)\r\n\t{\r\n\t\treturn _.find(this._items_array, item => (arg_attr_name in item) && item[arg_attr_name] == arg_attr_value)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Find an item by a filter function.\r\n\t * \r\n\t * @param {string} arg_filter_function - function to apply on instance, returns a boolean.\r\n\t * \r\n\t * @returns {Instance|undefined}\r\n\t */\r\n\tfind_by_filter(arg_filter_function)\r\n\t{\r\n\t\treturn _.find(this._items_array, item => arg_filter_function(item) )\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Filter items by one of theirs attributes into the collection.\r\n\t * \r\n\t * @param {string} arg_attr_name - instance attribute name.\r\n\t * @param {any} arg_attr_value - instance attribute value.\r\n\t * \r\n\t * @returns {array}\r\n\t */\r\n\tfilter_by_attr(arg_attr_name, arg_attr_value)\r\n\t{\r\n\t\treturn _.filter(this._items_array, item => (arg_attr_name in item) && item[arg_attr_name] == arg_attr_value)\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Filter items by a filter function.\r\n\t * \r\n\t * @param {string} arg_filter_function - function to apply on instance, returns a boolean.\r\n\t * \r\n\t * @returns {array}\r\n\t */\r\n\tfilter_by_filter(arg_filter_function)\r\n\t{\r\n\t\treturn _.filter(this._items_array, item => arg_filter_function(item) )\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get all collection accepted types.\r\n\t * \r\n\t * @returns {array} - array of types strings.\r\n\t */\r\n\tget_accepted_types()\r\n\t{\r\n\t\tthis._accepted_types\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Set all collection accepted types.\r\n\t * \r\n\t * @param {array} arg_types - accepted types strings array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tset_accepted_types(arg_types)\r\n\t{\r\n\t\tassert(T.isArray(arg_types), context + ':bad accepted types array')\r\n\t\tthis._accepted_types = arg_types\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Add one collection accepted type.\r\n\t * \r\n\t * @param {string} arg_type - accepted types string.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tadd_accepted_type(arg_type)\r\n\t{\r\n\t\tassert(T.isString(arg_type), context + ':bad accepted type string')\r\n\t\tthis._accepted_types.push(arg_type)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Test if collection has given accepted type.\r\n\t * \r\n\t * @param {string} arg_type - accepted types string.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\thas_accepted_type(arg_type)\r\n\t{\r\n\t\treturn this._accepted_types.indexOf(arg_type) > -1\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * forEach wrapper on ordered items.\r\n\t * \r\n\t * @param {function} arg_cb - callback to call on each item.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tforEach(arg_cb)\r\n\t{\r\n\t\t_.forEach(this._items_array, arg_cb)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/base/collection_base.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 53,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/collection_base.js",
    "static": true,
    "longname": "js/base/collection_base.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/base/collection_base.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 15,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 54,
    "kind": "class",
    "name": "CollectionBase",
    "memberof": "js/base/collection_base.js",
    "static": true,
    "longname": "js/base/collection_base.js~CollectionBase",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/base/collection_base.js",
    "importStyle": "CollectionBase",
    "description": "Base class for all collections classes.",
    "examples": [
      "API:\n\t\t->set_all(arg_items):nothing - Set all collection items.\n\t\t->get_all(arg_types):array - Get all collection items or filter items with given type.\n\t\t->get_all_names(arg_types):array - Get all items names with or without a filter on items types.\n\t\t->get_all_ids():array - Get all items ids with or without a filter on items types.\n\n\t\t->item(arg_name):Instance - Get an item by its name.\n\n\t\t->get_count():number - Get all items count.\n\t\t->get_first():object|undefined - Get first item.\n\t\t->get_last():object|undefined - Get last item.\n\n\t\t->add(arg_item):nothing - Add an item to the collection.\n\t\t->add_first(arg_item):nothing - Add an item to the collection at the first position.\n\t\t->remove(arg_item):nothing - Remove an item from the collection.\n\t\t->has(arg_item):boolean -  Test if an item is inside the collection.\n\n\t\t->find_by_name(arg_name):Instance|undefined - Find an item by its name into the collection.\n\t\t->find_by_id(arg_id):Instance|undefined - Find an item by its id into the collection.\n\t\t->find_by_attr(arg_attr_name, arg_attr_value):Instance|undefined - Find an item by one of its attributes into the collection.\n\t\t->find_by_filter(arg_filter_function):Instance|undefined - Find an item by a filter function.\n\n\t\t->filter_by_attr(arg_attr_name, arg_attr_value):array - Filter items by one of theirs attributes into the collection.\n\t\t->filter_by_filter(arg_filter_function):array - Filter items by a filter function.\n\n\t\t->get_accepted_types():array - Get all collection accepted types.\n\t\t->set_accepted_types(arg_types):nothing - Set all collection accepted types.\n\t\t->add_accepted_type(arg_type):nothing - Add one collection accepted type.\n\t\t->has_accepted_type(arg_type):boolean - Test if collection has given accepted type.\n\n\t\t->forEach(arg_cb):nothing - forEach wrapper on ordered items."
    ],
    "lineNumber": 59,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "abstract": true,
    "interface": false,
    "extends": [
      "js/base/errorable.js~Errorable"
    ]
  },
  {
    "__docId__": 55,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#constructor",
    "access": "public",
    "description": "Create a collection of Instance objects.",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 56,
    "kind": "member",
    "name": "is_collection_base",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#is_collection_base",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 74,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 57,
    "kind": "member",
    "name": "_items_array",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#_items_array",
    "access": "private",
    "description": "Items array.",
    "lineNumber": 80,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 58,
    "kind": "member",
    "name": "_items_by_name",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#_items_by_name",
    "access": "private",
    "description": "Items names map.",
    "lineNumber": 86,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 59,
    "kind": "member",
    "name": "_items_by_id",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#_items_by_id",
    "access": "private",
    "description": "Items ids map.",
    "lineNumber": 92,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 60,
    "kind": "member",
    "name": "_accepted_types",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#_accepted_types",
    "access": "private",
    "description": "Accepted types array.",
    "lineNumber": 98,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "toString",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#toString",
    "access": "public",
    "description": "Format string dump.\n\n@returns{string}",
    "lineNumber": 108,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "set_all",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#set_all",
    "access": "public",
    "description": "Set all collection items.",
    "lineNumber": 124,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Instance",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items",
        "description": "collection items: one or many Instance objects."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "_set_all",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#_set_all",
    "access": "private",
    "description": "Set all collection items.",
    "lineNumber": 171,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items",
        "description": "Instance objects array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "_get_all",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#_get_all",
    "access": "private",
    "description": "Get all collection items.",
    "lineNumber": 184,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "get_all",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#get_all",
    "access": "public",
    "description": "Get all collection items or filter items with given type.",
    "lineNumber": 198,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} - all or filtered items, empty array if not found."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array",
          "string",
          "nothing"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_types",
        "description": "type or types for items filtering."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "all or filtered items, empty array if not found."
    }
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "get_all_names",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#get_all_names",
    "access": "public",
    "description": "Get all items names with or without a filter on items types.",
    "lineNumber": 230,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} - all or filtered items names, empty array if not found."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array",
          "string",
          "nothing"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_types",
        "description": "type or types for items filtering."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "all or filtered items names, empty array if not found."
    }
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "get_all_ids",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#get_all_ids",
    "access": "public",
    "description": "Get all items ids with or without a filter on items types.",
    "lineNumber": 260,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} - all items ids."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "all items ids."
    },
    "params": []
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "item",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#item",
    "access": "public",
    "description": "Get an item by its name.",
    "lineNumber": 274,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Instance|undefined}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Instance",
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "get",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#get",
    "access": "public",
    "description": "Get an item by its name.",
    "lineNumber": 288,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Instance|undefined}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Instance",
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "get_count",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#get_count",
    "access": "public",
    "description": "Get all items count.",
    "lineNumber": 342,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} - all items count."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "all items count."
    },
    "params": []
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "get_first",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#get_first",
    "access": "public",
    "description": "Get first item.",
    "lineNumber": 354,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object|undefined} - first collection items or undefined if collection is empty."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object",
        "undefined"
      ],
      "spread": false,
      "description": "first collection items or undefined if collection is empty."
    },
    "params": []
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "get_last",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#get_last",
    "access": "public",
    "description": "Get last item.",
    "lineNumber": 366,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object|undefined} - last collection items or null if collection is empty."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object",
        "undefined"
      ],
      "spread": false,
      "description": "last collection items or null if collection is empty."
    },
    "params": []
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "add",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#add",
    "access": "public",
    "description": "Add an item to the collection.",
    "lineNumber": 380,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Instance"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_item",
        "description": "Instance item."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "add_first",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#add_first",
    "access": "public",
    "description": "Add an item to the collection at the first position.",
    "lineNumber": 406,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Instance"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_item",
        "description": "Instance item."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "remove",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#remove",
    "access": "public",
    "description": "Remove an item from the collection.",
    "lineNumber": 432,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Instance"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_item",
        "description": "Instance item."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "has",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#has",
    "access": "public",
    "description": "Test if an item is inside the collection.",
    "lineNumber": 456,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Instance"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_item",
        "description": "Instance item."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "_add",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#_add",
    "access": "private",
    "description": "Add an item to the collection without type checks (unsafe).",
    "lineNumber": 475,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Instance"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_item",
        "description": "Instance item."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "_add_first",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#_add_first",
    "access": "private",
    "description": "Add an item to the collection without type checks at first position (unsafe).",
    "lineNumber": 500,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Instance"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_item",
        "description": "Instance item."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "_remove",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#_remove",
    "access": "private",
    "description": "Remove an item from the collection without type checks (unsafe).",
    "lineNumber": 525,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Instance"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_item",
        "description": "Instance item."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "_has",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#_has",
    "access": "private",
    "description": "Test if an item is inside the collection without type checks (unsafe).",
    "lineNumber": 546,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Instance"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_item",
        "description": "Instance item."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "find_by_name",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#find_by_name",
    "access": "public",
    "description": "Find an item by its name into the collection.\n\nTODO: optimize with a map index.",
    "lineNumber": 563,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Instance|undefined}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Instance",
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "find_by_id",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#find_by_id",
    "access": "public",
    "description": "Find an item by its id into the collection.",
    "lineNumber": 577,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Instance|undefined}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_id",
        "description": "instance id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Instance",
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "find_by_attr",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#find_by_attr",
    "access": "public",
    "description": "Find an item by one of its attributes into the collection.",
    "lineNumber": 592,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Instance|undefined}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_attr_name",
        "description": "instance attribute name."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_attr_value",
        "description": "instance attribute value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Instance",
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 89,
    "kind": "method",
    "name": "find_by_filter",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#find_by_filter",
    "access": "public",
    "description": "Find an item by a filter function.",
    "lineNumber": 606,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Instance|undefined}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_filter_function",
        "description": "function to apply on instance, returns a boolean."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Instance",
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "filter_by_attr",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#filter_by_attr",
    "access": "public",
    "description": "Filter items by one of theirs attributes into the collection.",
    "lineNumber": 621,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_attr_name",
        "description": "instance attribute name."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_attr_value",
        "description": "instance attribute value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "filter_by_filter",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#filter_by_filter",
    "access": "public",
    "description": "Filter items by a filter function.",
    "lineNumber": 635,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_filter_function",
        "description": "function to apply on instance, returns a boolean."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "get_accepted_types",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#get_accepted_types",
    "access": "public",
    "description": "Get all collection accepted types.",
    "lineNumber": 647,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} - array of types strings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "array of types strings."
    },
    "params": []
  },
  {
    "__docId__": 93,
    "kind": "method",
    "name": "set_accepted_types",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#set_accepted_types",
    "access": "public",
    "description": "Set all collection accepted types.",
    "lineNumber": 661,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_types",
        "description": "accepted types strings array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "add_accepted_type",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#add_accepted_type",
    "access": "public",
    "description": "Add one collection accepted type.",
    "lineNumber": 676,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_type",
        "description": "accepted types string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "has_accepted_type",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#has_accepted_type",
    "access": "public",
    "description": "Test if collection has given accepted type.",
    "lineNumber": 691,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_type",
        "description": "accepted types string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "forEach",
    "memberof": "js/base/collection_base.js~CollectionBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_base.js~CollectionBase#forEach",
    "access": "public",
    "description": "forEach wrapper on ordered items.",
    "lineNumber": 705,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_cb",
        "description": "callback to call on each item."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 98,
    "kind": "file",
    "name": "js/base/collection_version.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\nimport _ from 'lodash'\r\nimport semver from 'semver'\r\n\r\n// COMMON IMPORTS\r\nimport T              from '../utils/types'\r\nimport Instance       from './instance'\r\nimport CollectionBase from './collection_base'\r\n\r\n\r\n// let context = 'common/base/collection_version'\r\n\r\n\r\n\r\n/**\r\n * Versionned Instance objects collection\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n* \r\n* @example\r\n* API:\r\n* \t\t->set_version_getter(arg_getter):nothing - Set version getter.\r\n* \t\t->get_version(arg_item):string - Get instance version.\r\n* \t\t->compare_versions(arg_version1, arg_version2):integer - Compare two instance versions: v1 < v2 => -1, v1 = v2 => 0, v1 > v2 => 1.\r\n* \t\t\r\n* \t\t->get_latest_item(arg_name):Instance|undefined - Get latest version of item by its name.\r\n* \t\t->get_latest_items():array - Get latest version of all items.\r\n* \t\t->get_item_of_version(arg_name, arg_version):Instance|undefined - Get an item by its name and its version.\r\n* \t\t->has_version(arg_item_name, arg_version):boolean -  Test if an item is inside the collection.\r\n* \r\n* @example\r\n* INHERITED API:\r\n* \t\t->set_all(arg_items):nothing - Set all collection items. (INHERITED)\r\n* \t\t->get_all(arg_types):array - Get all collection items or filter items with given type. (INHERITED)\r\n* \t\t->get_all_names(arg_types):array - Get all items names with or without a filter on items types. (INHERITED)\r\n* \t\t->get_all_ids():array - Get all items ids with or without a filter on items types. (INHERITED)\r\n* \r\n* \t\t->item(arg_name):Instance - Get an item by its name. (INHERITED)\r\n* \r\n* \t\t->get_count():number - Get all items count. (INHERITED)\r\n* \t\t->get_first():object|undefined - Get first item. (INHERITED)\r\n* \t\t->get_last():object|undefined - Get last item. (INHERITED)\r\n* \r\n* \t\t->add(arg_item):nothing - Add an item to the collection. (OVERWRITTEN)\r\n* \t\t->add_first(arg_item):nothing - Add an item to the collection at the first position. (INHERITED)\r\n* \t\t->remove(arg_item):nothing - Remove an item from the collection.\r\n* \t\t->has(arg_item):boolean -  Test if an item is inside the collection.\r\n* \r\n* \t\t->find_by_name(arg_name):Instance|undefined - Find an item by its name into the collection.\r\n* \t\t->find_by_id(arg_id):Instance|undefined - Find an item by its id into the collection.\r\n* \t\t->find_by_attr(arg_attr_name, arg_attr_value):Instance|undefined - Find an item by one of its attributes into the collection.\r\n* \t\t->find_by_filter(arg_filter_function):Instance|undefined - Find an item by a filter function.\r\n* \r\n* \t\t->filter_by_attr(arg_attr_name, arg_attr_value):array - Filter items by one of theirs attributes into the collection.\r\n* \t\t->filter_by_filter(arg_filter_function):array - Filter items by a filter function.\r\n* \r\n* \t\t->get_accepted_types():array - Get all collection accepted types.\r\n* \t\t->set_accepted_types(arg_types):nothing - Set all collection accepted types.\r\n* \t\t->add_accepted_type(arg_type):nothing - Add one collection accepted type.\r\n* \t\t->has_accepted_type(arg_type):boolean - Test if collection has given accepted type.\r\n* \r\n* \t\t->forEach(arg_cb):nothing - forEach wrapper on ordered items.\r\n */\r\nexport default class CollectionVersion extends CollectionBase\r\n{\r\n\t/**\r\n\t * Create a collection of versionned Instance objects.\r\n\t * \r\n\t * @param {...Instance} args - variadic list of Instance.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(...args)\r\n\t{\r\n\t\tsuper()\r\n\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_collection_version  = true\r\n\r\n\t\t/**\r\n\t\t * Items versions names map.\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tthis._items_by_name_by_version     = {}\r\n\r\n\t\t/**\r\n\t\t * Items last version names map.\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tthis._items_by_name_latest_version = {}\r\n\r\n\t\t/**\r\n\t\t * Get version helper.\r\n\t\t * @type {function}\r\n\t\t */\r\n\t\tthis.$version_getter = (item)=> item && item.get_version ? item.get_version() : undefined\r\n\r\n\t\tif ( args.length == 1 && T.isArray(args[0]) )\r\n\t\t{\r\n\t\t\targs = args[0]\r\n\t\t}\r\n\t\t\r\n\t\tif (args && args.length > 0)\r\n\t\t{\r\n\t\t\tthis.set_all(args)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Set version getter.\r\n\t * \r\n\t * @param {Function} arg_getter - instance version getter.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tset_version_getter(arg_getter)\r\n\t{\r\n\t\tif ( T.isFunction(arg_getter) )\r\n\t\t{\r\n\t\t\tthis.$version_getter = arg_getter\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get instance version.\r\n\t * \r\n\t * @param {Instance} arg_item - Instance item.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_version(arg_item)\r\n\t{\r\n\t\tif ( T.isObject(arg_item) && arg_item instanceof Instance )\r\n\t\t{\r\n\t\t\treturn T.isFunction(this.$version_getter) ? this.$version_getter(arg_item) : undefined\r\n\t\t}\r\n\r\n\t\treturn undefined\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Compare two instance versions: v1 < v2 => -1, v1 = v2 => 0, v1 > v2 => 1.\r\n\t * \r\n\t * @param {string} arg_version1 - requested instance 1 version.\r\n\t * @param {string} arg_version2 - requested instance 2 version.\r\n\t * \r\n\t * @returns {integer}\r\n\t */\r\n\tcompare_versions(arg_version1, arg_version2)\r\n\t{\r\n\t\treturn semver.compare(arg_version1, arg_version2)\r\n\t\t// return (arg_version1 < arg_version2) ? -1 : ( (arg_version1 == arg_version2) ? 0 : 1) // TODO\r\n\t}\r\n\t\r\n\r\n\r\n\t/**\r\n\t * Get latest version of item by its name.\r\n\t * \r\n\t * @param {string} arg_name - instance name.\r\n\t * \r\n\t * @returns {Instance|undefined}\r\n\t */\r\n\tget_latest_item(arg_name)\r\n\t{\r\n\t\t// console.log('collection.get_latest_item:latest=' + Object.keys(this._items_by_name_latest_version).toString())\r\n\t\treturn this._items_by_name_latest_version ? this._items_by_name_latest_version[arg_name] : undefined\r\n\t}\r\n\t\r\n\r\n\r\n\t/**\r\n\t * Get latest version of all items.\r\n\t * \r\n\t * @returns {array}\r\n\t */\r\n\tget_latest_items()\r\n\t{\r\n\t\tconst items = this._items_by_name_latest_version ? _.toArray(this._items_by_name_latest_version) : []\r\n\t\t// console.log(items.length, context + ':get_latest_items:items.length')\r\n\t\treturn items\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get an item by its name and its version.\r\n\t * \r\n\t * @param {string} arg_name - requested instance name.\r\n\t * @param {string} arg_version - requested instance version.\r\n\t * \r\n\t * @returns {Instance|undefined}\r\n\t */\r\n\tget_item_of_version(arg_name, arg_version)\r\n\t{\r\n\t\tconst versions = this._items_by_name_by_version ? this._items_by_name_by_version[arg_name] : undefined\r\n\t\treturn versions ? versions[arg_version] : undefined\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Test if an item is inside the collection.\r\n\t * \r\n\t * @param {string} arg_item_name - Instance item name.\r\n\t * @param {string} arg_version - requested instance version.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\thas_version(arg_item_name, arg_version)\r\n\t{\r\n\t\tif ( ! this._items_by_name_by_version[arg_item_name] )\r\n\t\t{\r\n\t\t\treturn false\r\n\t\t}\r\n\t\treturn arg_version in this._items_by_name_by_version[arg_item_name]\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Add an item to the collection without type checks (unsafe).\r\n\t * @private\r\n\t * \r\n\t * @param {Instance} arg_item - Instance item.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t_add(arg_item)\r\n\t{\r\n\t\tif( this._has(arg_item) )\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst name = arg_item.get_name()\r\n\t\tconst id   = arg_item.get_id()\r\n\t\tconst version = this.get_version(arg_item)\r\n\r\n\t\tthis._items_array.push(arg_item)\r\n\t\tthis._items_by_name[name] = arg_item\r\n\t\tthis._items_by_id[id] = arg_item\r\n\r\n\t\tif (! this._items_by_name_by_version[name])\r\n\t\t{\r\n\t\t\tthis._items_by_name_by_version[name] = {}\r\n\t\t\tthis._items_by_name_latest_version[name] = undefined\r\n\t\t}\r\n\r\n\t\tthis._items_by_name_by_version[name][version] = arg_item\r\n\t\tif ( this._items_by_name_latest_version[name] )\r\n\t\t{\r\n\t\t\tconst prev_latest = this.get_version(this._items_by_name_latest_version[name])\r\n\t\t\tconst comparison = this.compare_versions(version, prev_latest)\r\n\t\t\tif (comparison == 1)\r\n\t\t\t{\r\n\t\t\t\tthis._items_by_name_latest_version[name] = arg_item\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._items_by_name_latest_version[name] = arg_item\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Add an item to the collection without type checks at first position (unsafe).\r\n\t * @private\r\n\t * \r\n\t * @param {Instance} arg_item - Instance item.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t_add_first(arg_item)\r\n\t{\r\n\t\tif( this._has(arg_item) )\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tthis._add(arg_item)\r\n\r\n\t\tconst items = this._get_all()\r\n\t\titems.pop()\r\n\t\tthis._set_all( [arg_item].concat(items) )\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Remove an item from the collection without type checks (unsafe).\r\n\t * @private\r\n\t * \r\n\t * @param {Instance} arg_item - Instance item.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t_remove(arg_item)\r\n\t{\r\n\t\tconst name = arg_item.get_name()\r\n\t\tconst id   = arg_item.get_id()\r\n\t\tconst version = this.get_version(arg_item)\r\n\t\tconst index = this._items_array.indexOf(arg_item)\r\n\r\n\t\tthis._items_array.splice(index, 1)\r\n\t\tdelete this._items_by_name[name]\r\n\t\tdelete this._items_by_id[id]\r\n\r\n\t\tif ( this._items_by_name_by_version[name] )\r\n\t\t{\r\n\t\t\tdelete this._items_by_name_by_version[name][version]\r\n\t\t}\r\n\t\tdelete this._items_by_name_latest_version[name]\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Test if an item is inside the collection without type checks (unsafe).\r\n\t * @private\r\n\t * \r\n\t * @param {Instance} arg_item - Instance item.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\t_has(arg_item)\r\n\t{\r\n\t\tconst name = arg_item.get_name()\r\n\t\tconst version = this.get_version(arg_item)\r\n\t\treturn (name in this._items_by_name) && this.has_version(name, version)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/base/collection_version.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 99,
    "kind": "class",
    "name": "CollectionVersion",
    "memberof": "js/base/collection_version.js",
    "static": true,
    "longname": "js/base/collection_version.js~CollectionVersion",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/base/collection_version.js",
    "importStyle": "CollectionVersion",
    "description": "Versionned Instance objects collection",
    "examples": [
      "API:\n\t\t->set_version_getter(arg_getter):nothing - Set version getter.\n\t\t->get_version(arg_item):string - Get instance version.\n\t\t->compare_versions(arg_version1, arg_version2):integer - Compare two instance versions: v1 < v2 => -1, v1 = v2 => 0, v1 > v2 => 1.\n\t\t\n\t\t->get_latest_item(arg_name):Instance|undefined - Get latest version of item by its name.\n\t\t->get_latest_items():array - Get latest version of all items.\n\t\t->get_item_of_version(arg_name, arg_version):Instance|undefined - Get an item by its name and its version.\n\t\t->has_version(arg_item_name, arg_version):boolean -  Test if an item is inside the collection.",
      "INHERITED API:\n\t\t->set_all(arg_items):nothing - Set all collection items. (INHERITED)\n\t\t->get_all(arg_types):array - Get all collection items or filter items with given type. (INHERITED)\n\t\t->get_all_names(arg_types):array - Get all items names with or without a filter on items types. (INHERITED)\n\t\t->get_all_ids():array - Get all items ids with or without a filter on items types. (INHERITED)\n\n\t\t->item(arg_name):Instance - Get an item by its name. (INHERITED)\n\n\t\t->get_count():number - Get all items count. (INHERITED)\n\t\t->get_first():object|undefined - Get first item. (INHERITED)\n\t\t->get_last():object|undefined - Get last item. (INHERITED)\n\n\t\t->add(arg_item):nothing - Add an item to the collection. (OVERWRITTEN)\n\t\t->add_first(arg_item):nothing - Add an item to the collection at the first position. (INHERITED)\n\t\t->remove(arg_item):nothing - Remove an item from the collection.\n\t\t->has(arg_item):boolean -  Test if an item is inside the collection.\n\n\t\t->find_by_name(arg_name):Instance|undefined - Find an item by its name into the collection.\n\t\t->find_by_id(arg_id):Instance|undefined - Find an item by its id into the collection.\n\t\t->find_by_attr(arg_attr_name, arg_attr_value):Instance|undefined - Find an item by one of its attributes into the collection.\n\t\t->find_by_filter(arg_filter_function):Instance|undefined - Find an item by a filter function.\n\n\t\t->filter_by_attr(arg_attr_name, arg_attr_value):array - Filter items by one of theirs attributes into the collection.\n\t\t->filter_by_filter(arg_filter_function):array - Filter items by a filter function.\n\n\t\t->get_accepted_types():array - Get all collection accepted types.\n\t\t->set_accepted_types(arg_types):nothing - Set all collection accepted types.\n\t\t->add_accepted_type(arg_type):nothing - Add one collection accepted type.\n\t\t->has_accepted_type(arg_type):boolean - Test if collection has given accepted type.\n\n\t\t->forEach(arg_cb):nothing - forEach wrapper on ordered items."
    ],
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/collection_base.js~CollectionBase"
    ]
  },
  {
    "__docId__": 100,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/collection_version.js~CollectionVersion",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_version.js~CollectionVersion#constructor",
    "access": "public",
    "description": "Create a collection of versionned Instance objects.",
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "...Instance"
        ],
        "spread": true,
        "optional": false,
        "name": "args",
        "description": "variadic list of Instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 101,
    "kind": "member",
    "name": "is_collection_version",
    "memberof": "js/base/collection_version.js~CollectionVersion",
    "static": false,
    "longname": "js/base/collection_version.js~CollectionVersion#is_collection_version",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 83,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 102,
    "kind": "member",
    "name": "_items_by_name_by_version",
    "memberof": "js/base/collection_version.js~CollectionVersion",
    "static": false,
    "longname": "js/base/collection_version.js~CollectionVersion#_items_by_name_by_version",
    "access": "private",
    "description": "Items versions names map.",
    "lineNumber": 89,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 103,
    "kind": "member",
    "name": "_items_by_name_latest_version",
    "memberof": "js/base/collection_version.js~CollectionVersion",
    "static": false,
    "longname": "js/base/collection_version.js~CollectionVersion#_items_by_name_latest_version",
    "access": "private",
    "description": "Items last version names map.",
    "lineNumber": 95,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 104,
    "kind": "member",
    "name": "$version_getter",
    "memberof": "js/base/collection_version.js~CollectionVersion",
    "static": false,
    "longname": "js/base/collection_version.js~CollectionVersion#$version_getter",
    "access": "public",
    "description": "Get version helper.",
    "lineNumber": 101,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "set_version_getter",
    "memberof": "js/base/collection_version.js~CollectionVersion",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_version.js~CollectionVersion#set_version_getter",
    "access": "public",
    "description": "Set version getter.",
    "lineNumber": 123,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_getter",
        "description": "instance version getter."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "get_version",
    "memberof": "js/base/collection_version.js~CollectionVersion",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_version.js~CollectionVersion#get_version",
    "access": "public",
    "description": "Get instance version.",
    "lineNumber": 140,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Instance"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_item",
        "description": "Instance item."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "compare_versions",
    "memberof": "js/base/collection_version.js~CollectionVersion",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_version.js~CollectionVersion#compare_versions",
    "access": "public",
    "description": "Compare two instance versions: v1 < v2 => -1, v1 = v2 => 0, v1 > v2 => 1.",
    "lineNumber": 160,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{integer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_version1",
        "description": "requested instance 1 version."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_version2",
        "description": "requested instance 2 version."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "integer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "get_latest_item",
    "memberof": "js/base/collection_version.js~CollectionVersion",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_version.js~CollectionVersion#get_latest_item",
    "access": "public",
    "description": "Get latest version of item by its name.",
    "lineNumber": 175,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Instance|undefined}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Instance",
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 110,
    "kind": "method",
    "name": "get_latest_items",
    "memberof": "js/base/collection_version.js~CollectionVersion",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_version.js~CollectionVersion#get_latest_items",
    "access": "public",
    "description": "Get latest version of all items.",
    "lineNumber": 188,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "get_item_of_version",
    "memberof": "js/base/collection_version.js~CollectionVersion",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_version.js~CollectionVersion#get_item_of_version",
    "access": "public",
    "description": "Get an item by its name and its version.",
    "lineNumber": 205,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Instance|undefined}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "requested instance name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_version",
        "description": "requested instance version."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Instance",
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 112,
    "kind": "method",
    "name": "has_version",
    "memberof": "js/base/collection_version.js~CollectionVersion",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_version.js~CollectionVersion#has_version",
    "access": "public",
    "description": "Test if an item is inside the collection.",
    "lineNumber": 221,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_item_name",
        "description": "Instance item name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_version",
        "description": "requested instance version."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "_add",
    "memberof": "js/base/collection_version.js~CollectionVersion",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_version.js~CollectionVersion#_add",
    "access": "private",
    "description": "Add an item to the collection without type checks (unsafe).",
    "lineNumber": 240,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Instance"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_item",
        "description": "Instance item."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "_add_first",
    "memberof": "js/base/collection_version.js~CollectionVersion",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_version.js~CollectionVersion#_add_first",
    "access": "private",
    "description": "Add an item to the collection without type checks at first position (unsafe).",
    "lineNumber": 285,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Instance"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_item",
        "description": "Instance item."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "_remove",
    "memberof": "js/base/collection_version.js~CollectionVersion",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_version.js~CollectionVersion#_remove",
    "access": "private",
    "description": "Remove an item from the collection without type checks (unsafe).",
    "lineNumber": 309,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Instance"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_item",
        "description": "Instance item."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 116,
    "kind": "method",
    "name": "_has",
    "memberof": "js/base/collection_version.js~CollectionVersion",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/collection_version.js~CollectionVersion#_has",
    "access": "private",
    "description": "Test if an item is inside the collection without type checks (unsafe).",
    "lineNumber": 337,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Instance"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_item",
        "description": "Instance item."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 117,
    "kind": "file",
    "name": "js/base/context.js",
    "content": "// NPM IMPORTS\r\nimport assert   from 'assert'\r\nimport fs       from 'fs'\r\nimport path     from 'path'\r\nimport mustache from 'mustache'\r\n\r\n// COMMON IMPORTS\r\nimport T            from '../utils/types'\r\nimport {is_browser} from '../utils/is_browser'\r\n\r\n/**\r\n * Cryptography library.\r\n * @private\r\n */\r\nlet  forge = undefined\r\nif ( is_browser() )\r\n{\r\n\tforge = require('forge-browser').forge\r\n} else {\r\n\tforge = require('node-forge')\r\n}\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\nconst context = 'common/base/context'\r\n\r\n\r\n\r\n/**\r\n * Runtime context methods (browser/server, locales, i18n).\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n * \tAPI:\r\n * \t\t->constructor(arg_runtime):nothing - constructor.\r\n * \r\n *  PATHS API:\r\n * \t\t->get_base_dir():string - Get project base directory, the root directory of the project.\r\n * \t\t->get_world_dir():string - Get topology  world resources directory, by default: the root directory of the project.\r\n * \r\n * \t\t->get_absolute_path(arg_relative_path1, arg_relative_path2, arg_relative_path3):string - Get absolute path of given relative path.\r\n * \t\t\t\tSearch strategy:\r\n * \t\t\t\t1-Joining given ordered paths\r\n * \t\t\t\t2-Joining base directory and given ordered paths\r\n * \t\t\t\t3-Joining world resources directory and given ordered paths\r\n * \r\n * \t\t->get_absolute_plugin_path(arg_relative_plugin, arg_relative_path1, arg_relative_path2):string - Get absolute path of given relative plugin name.\r\n * \t\t\t\tCall get_absolute_path(arg_relative_plugin, arg_relative_path1, arg_relative_path2)\r\n * \r\n * \t\t->get_absolute_package_path(arg_relative_pkg, arg_relative_path1, arg_relative_path2):string - Get absolute path of given relative package name.\r\n * \t\t\t\tCall get_absolute_path(arg_relative_pkg, arg_relative_path1, arg_relative_path2)\r\n * \t\t\t\tCall get_absolute_path( path.join('../../../node_modules', arg_relative_pkg), arg_relative_path1, arg_relative_path2)\r\n * \t\t\t\tCall get_absolute_path( path.join('../../node_modules', arg_relative_pkg), arg_relative_path1, arg_relative_path2)\r\n * \t\t\t\tCall get_absolute_path( path.join('../node_modules', arg_relative_pkg), arg_relative_path1, arg_relative_path2)\r\n * \t\t\t\tCall get_absolute_path( path.join('node_modules', arg_relative_pkg), arg_relative_path1, arg_relative_path2)\r\n * \r\n * \t\t->get_absolute_public_path(arg_relative_public, arg_relative_path1, arg_relative_path2):string - Get absolute path of given relative public path.\r\n * \t\t\t\tCall get_absolute_path(arg_relative_public, arg_relative_path1, arg_relative_path2)\r\n * \t\t\t\tIf not found, search with prefixes [base_public, world_public, 'public', '..', '../public', '../..', '../../public', '../../..', '../../../public']\r\n * \t\t\t\tCall get_absolute_path( join(prefix, arg_relative_public), arg_relative_path1, arg_relative_path2)\r\n * \r\n * \t\t->get_absolute_resources_path(arg_relative_resource, arg_relative_path1, arg_relative_path2):string - Get absolute path of given relative resource file.\r\n * \t\t\t\tCall get_absolute_path( path.join('resources', arg_relative_resource), arg_relative_path1, arg_relative_path2)\r\n * \r\n * \tCREDENTIALS API:\r\n * \t\t->get_credentials(arg_request):object - Get credentials.\r\n * \t\t->get_credentials_string(arg_credentials):string - Get credentials string as 'username=...&password=...&token=...'.\r\n * \t\t->get_url_with_credentials(arg_url, arg_request):string - Get given url augmented with credentials string.\r\n * \r\n * \t\t->render_credentials_template(arg_html, arg_request_or_credentials):string - Render credentials template.\r\n * \t\t\t\tCall  mustache.render(arg_html, credentials_datas)\r\n * \t\t\t\twith const credentials_datas = credentials_obj.get_credentials_for_template()\r\n * \t\t\t\t\tcredentials_datas.credentials_str = credentials_str\r\n * \t\t\t\t\tcredentials_datas.credentials_url = credentials_url\r\n * \t\t\t\t\tcredentials_datas.credentials_basic_base64 = base64_encoded\r\n * \t\t\t\t\tcredentials_datas.url = '{{url}}'\r\n */\r\nexport default class Context\r\n{\r\n    /**\r\n     * Create a context instance.\r\n\t * \r\n     * @param {object} arg_runtime - current runtime.\r\n\t * \r\n     * @returns {nothing}\r\n     */\r\n\tconstructor(arg_runtime)\r\n\t{\r\n\t\tassert( T.isObject(arg_runtime) && arg_runtime.is_server_runtime, context + ':bad runtime object')\r\n\t\t\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_context = true\r\n\t\t\r\n\t\t/**\r\n\t\t * Runtime instance.\r\n\t\t * @type {Runtime}\r\n\t\t */\r\n\t\tthis.$runtime = arg_runtime\r\n\t}\r\n    \r\n    \r\n\t\r\n\t// *************************************************** FILE PATH ********************************************************\r\n\t\r\n\t/**\r\n\t * Get project base directory, the root directory of the project.\r\n\t * \r\n\t * @returns {string} - absolute root directory path.\r\n\t */\r\n\tget_base_dir()\r\n\t{\r\n\t\treturn this.$runtime ? this.$runtime.get_setting('base_dir') : null\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get topology  world resources directory, by default: the root directory of the project.\r\n\t * \r\n\t * @returns {string} - absolute root directory path.\r\n\t */\r\n\tget_world_dir()\r\n\t{\r\n\t\treturn this.$runtime ? this.$runtime.get_setting('world_dir') : this.get_base_dir()\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * Get absolute path of given relative path.\r\n\t * \r\n\t * @param {string} arg_relative_path1 - relative path 1.\r\n\t * @param {string} arg_relative_path2 - relative path 2.\r\n\t * @param {string} arg_relative_path3 - relative path 3.\r\n\t * \r\n\t * @returns {string} - absolute path.\r\n\t */\r\n\tget_absolute_path(arg_relative_path1, arg_relative_path2, arg_relative_path3)\r\n\t{\r\n\t\tassert( T.isString(arg_relative_path1), context + ':get_absolute_path: bad paths strings')\r\n\t\tlet base_dir = path.isAbsolute(arg_relative_path1) ? '' : this.get_base_dir()\r\n\t\tassert( T.isString(base_dir), context + ':get_absolute_path: bad base dir string')\r\n\r\n\t\t// console.log(this.get_world_dir(), 'world_dir')\r\n\t\t// console.log('get_absolute_path:with ', arg_relative_path1, arg_relative_path2, arg_relative_path3)\r\n\r\n\t\tconst default_extension = '.js'\r\n\t\tlet ext = undefined\r\n\t\tlet p0 = undefined\r\n\t\tlet p1 = undefined\r\n\t\tlet p2 = undefined\r\n\r\n\t\tif ( T.isString(arg_relative_path2) )\r\n\t\t{\r\n\t\t\tif ( T.isString(arg_relative_path3) )\r\n\t\t\t{\r\n\t\t\t\text = path.extname(arg_relative_path3)\r\n\t\t\t\tp0 = path.join(arg_relative_path1, arg_relative_path2, arg_relative_path3)\r\n\t\t\t\tp1 = path.join(this.get_world_dir(), arg_relative_path1, arg_relative_path2, arg_relative_path3)\r\n\t\t\t\tp2 = path.join(base_dir, arg_relative_path1, arg_relative_path2, arg_relative_path3)\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\text = path.extname(arg_relative_path2)\r\n\t\t\t\tp0 = path.join(arg_relative_path1, arg_relative_path2)\r\n\t\t\t\tp1 = path.join(this.get_world_dir(), arg_relative_path1, arg_relative_path2)\r\n\t\t\t\tp2 = path.join(base_dir, arg_relative_path1, arg_relative_path2)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\text = path.extname(arg_relative_path1)\r\n\t\t\tp0 = arg_relative_path1\r\n\t\t\tp1 = path.join(this.get_world_dir(), arg_relative_path1)\r\n\t\t\tp2 = path.join(base_dir, arg_relative_path1)\r\n\t\t}\r\n\t\t// console.log('get_absolute_path:', p0, p1, p2)\r\n\r\n\t\tif ( path.isAbsolute(p0) )\r\n\t\t{\r\n\t\t\t// WITHOUT DEFAULT EXTENSION\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tconst fs_stat = fs.statSync(p0)\r\n\t\t\t\tif ( fs_stat.isFile() || fs_stat.isDirectory() )\r\n\t\t\t\t{\r\n\t\t\t\t\t// console.log(context + ':get_absolute_path:path found [%s] for [%s, %s, %s]', p0, arg_relative_path1, arg_relative_path2, arg_relative_path3)\r\n\t\t\t\t\treturn p0\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch(e) {}\r\n\r\n\t\t\t// WITH DEFAULT EXTENSION\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tconst fs_stat = fs.statSync(p0 + default_extension)\r\n\t\t\t\tif ( fs_stat.isFile() || fs_stat.isDirectory() )\r\n\t\t\t\t{\r\n\t\t\t\t\t// console.log(context + ':get_absolute_path:path found [%s] for [%s, %s, %s]', p0, arg_relative_path1, arg_relative_path2, arg_relative_path3)\r\n\t\t\t\t\treturn p0 + default_extension\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch(e) {}\r\n\t\t}\r\n\r\n\t\tif ( path.isAbsolute(p1) )\r\n\t\t{\r\n\t\t\t// WITHOUT DEFAULT EXTENSION\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tconst fs_stat = fs.statSync(p1)\r\n\t\t\t\tif ( fs_stat.isFile() || fs_stat.isDirectory() )\r\n\t\t\t\t{\r\n\t\t\t\t\t// console.log(context + ':get_absolute_path:path found [%s] for [%s, %s, %s]', p1, arg_relative_path1, arg_relative_path2, arg_relative_path3)\r\n\t\t\t\t\treturn p1\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch(e) {}\r\n\r\n\t\t\t// WITH DEFAULT EXTENSION\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tconst fs_stat = fs.statSync(p1 + default_extension)\r\n\t\t\t\tif ( fs_stat.isFile() || fs_stat.isDirectory() )\r\n\t\t\t\t{\r\n\t\t\t\t\t// console.log(context + ':get_absolute_path:path found [%s] for [%s, %s, %s] with .js', p1, arg_relative_path1, arg_relative_path2, arg_relative_path3)\r\n\t\t\t\t\treturn p1 + default_extension\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch(e) {}\r\n\t\t}\r\n\r\n\t\tif ( path.isAbsolute(p2) )\r\n\t\t{\r\n\t\t\t// WITHOUT DEFAULT EXTENSION\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tconst fs_stat = fs.statSync(p2)\r\n\t\t\t\tif ( fs_stat.isFile() || fs_stat.isDirectory() )\r\n\t\t\t\t{\r\n\t\t\t\t\t// console.log(context + ':get_absolute_path:path found [%s] for [%s, %s, %s]', p2, arg_relative_path1, arg_relative_path2, arg_relative_path3)\r\n\t\t\t\t\treturn p2\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch(e) {}\r\n\r\n\t\t\t// WITH DEFAULT EXTENSION\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tconst fs_stat = fs.statSync(p2 + default_extension)\r\n\t\t\t\tif ( fs_stat.isFile() || fs_stat.isDirectory() )\r\n\t\t\t\t{\r\n\t\t\t\t\t// console.log(context + ':get_absolute_path:path found [%s] for [%s, %s, %s] with .js', p2, arg_relative_path1, arg_relative_path2, arg_relative_path3)\r\n\t\t\t\t\treturn p2 + default_extension\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch(e) {}\r\n\t\t}\r\n\r\n\t\t\r\n\t\t// if (ext == '')\r\n\t\t// {\r\n\t\t// \tconst path_1_is_directory = path.dirname(arg_relative_path1) == arg_relative_path1\r\n\t\t// \tconst path_2_is_directory = path.dirname(arg_relative_path2) == arg_relative_path2\r\n\t\t// \tconst path_3_is_directory = path.dirname(arg_relative_path3) == arg_relative_path3\r\n\r\n\t\t// \tconst part_1 = (! path_1_is_directory && arg_relative_path1 && ! arg_relative_path2) ? arg_relative_path1 + '.js' : arg_relative_path1\r\n\t\t// \tconst part_2 = (! path_2_is_directory && arg_relative_path2 && ! arg_relative_path3) ? arg_relative_path2 + '.js' : arg_relative_path2\r\n\t\t// \tconst part_3 = arg_relative_path3 ? arg_relative_path3 + (! path_3_is_directory ? '.js' : '') : undefined\r\n\r\n\t\t// \tconst absolute_path = this.get_absolute_path(part_1, part_2, part_3)\r\n\t\t// \treturn absolute_path\r\n\t\t// }\r\n\r\n\t\tconsole.error(context + ':get_absolute_path:path not found [\\n%s, \\n%s, \\n%s\\n] for [\\n%s, \\n%s, \\n%s\\n]', p0, p1, p2, arg_relative_path1, arg_relative_path2, arg_relative_path3)\r\n\t\treturn undefined\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Get absolute path of given relative plugin name.\r\n\t * \r\n\t * @param {string} arg_relative_plugin - plugin name.\r\n\t * @param {string} arg_relative_path1 - relative path 1.\r\n\t * @param {string} arg_relative_path2 - relative path 2.\r\n\t * \r\n\t * @returns {string} - absolute path.\r\n\t */\r\n\tget_absolute_plugin_path(arg_relative_plugin, arg_relative_path1, arg_relative_path2)\r\n\t{\r\n\t\tassert( T.isString(arg_relative_plugin), context + 'get_absolute_plugin_path: bad plugin name string')\r\n\t\tif ( path.isAbsolute(arg_relative_plugin) )\r\n\t\t{\r\n\t\t\treturn this.get_absolute_path(arg_relative_plugin, arg_relative_path1, arg_relative_path2)\r\n\t\t}\r\n\t\treturn this.get_absolute_path('plugins', arg_relative_plugin, arg_relative_path1, arg_relative_path2)\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Get absolute path of given relative package name.\r\n\t * \r\n\t * @param {string} arg_relative_pkg - package name.\r\n\t * @param {string} arg_relative_path1 - relative path 1.\r\n\t * @param {string} arg_relative_path2 - relative path 2.\r\n\t * \r\n\t * @returns {string} - absolute path.\r\n\t */\r\n\tget_absolute_package_path(arg_relative_pkg, arg_relative_path1, arg_relative_path2)\r\n\t{\r\n\t\tassert( T.isString(arg_relative_pkg), context + 'get_absolute_package_path: bad package name string')\r\n\t\tif ( path.isAbsolute(arg_relative_pkg) )\r\n\t\t{\r\n\t\t\treturn this.get_absolute_path(arg_relative_pkg, arg_relative_path1, arg_relative_path2)\r\n\t\t}\r\n\t\t// debugger\r\n\t\t\r\n\t\tlet p = this.get_absolute_path( path.join('../../../node_modules', arg_relative_pkg), arg_relative_path1, arg_relative_path2)\r\n\t\t// console.log('get_absolute_package_path:../../../node_modules:', p)\r\n\t\tif (p)\r\n\t\t{\r\n\t\t\treturn p\r\n\t\t}\r\n\t\t\r\n\t\tp = this.get_absolute_path( path.join('../../node_modules', arg_relative_pkg), arg_relative_path1, arg_relative_path2)\r\n\t\t// console.log('get_absolute_package_path:../../../node_modules:', p)\r\n\t\tif (p)\r\n\t\t{\r\n\t\t\treturn p\r\n\t\t}\r\n\t\t\r\n\t\tp = this.get_absolute_path( path.join('../node_modules', arg_relative_pkg), arg_relative_path1, arg_relative_path2)\r\n\t\t// console.log('get_absolute_package_path:../../../node_modules:', p)\r\n\t\tif (p)\r\n\t\t{\r\n\t\t\treturn p\r\n\t\t}\r\n\r\n\t\treturn this.get_absolute_path( path.join('node_modules', arg_relative_pkg), arg_relative_path1, arg_relative_path2)\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Get absolute path of given relative public path.\r\n\t * \r\n\t * @param {string} arg_relative_public - public path.\r\n\t * @param {string} arg_relative_path1 - relative path 1.\r\n\t * @param {string} arg_relative_path2 - relative path 2.\r\n\t * \r\n\t * @returns {string} - absolute path.\r\n\t */\r\n\tget_absolute_public_path(arg_relative_public, arg_relative_path1, arg_relative_path2)\r\n\t{\r\n\t\tassert( T.isString(arg_relative_public), context + 'get_absolute_public_path: bad path string')\r\n\t\t\r\n\t\tif ( path.isAbsolute(arg_relative_public) )\r\n\t\t{\r\n\t\t\t// console.log('get_absolute_public_path:absolute:', arg_relative_public)\r\n\t\t\treturn this.get_absolute_path(arg_relative_public, arg_relative_path1, arg_relative_path2)\r\n\t\t}\r\n\t\t\r\n\t\tconst base_public = path.join(this.get_base_dir(), 'public')\r\n\t\tconst world_public = path.join(this.get_world_dir(), 'public')\r\n\t\tconst searchs = [base_public, world_public, 'public', '..', '../public', '../..', '../../public', '../../..', '../../../public']\r\n\t\t// console.log('get_absolute_public_path:base_public:', base_public)\r\n\t\t// console.log('get_absolute_public_path:world_public:', world_public)\r\n\r\n\t\tlet p = undefined\r\n\t\tlet index = 0\r\n\t\tlet prefix = undefined\r\n\t\twhile( ! p && index < searchs.length )\r\n\t\t{\r\n\t\t\tprefix = searchs[index]\r\n\t\t\tp = this.get_absolute_path( path.join(prefix, arg_relative_public), arg_relative_path1, arg_relative_path2)\r\n\t\t\t// console.log('get_absolute_public_path:prefix=%s:', prefix, p)\r\n\t\t\t++index\r\n\t\t}\r\n\t\t\r\n\t\treturn p\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * Get absolute path of given relative resource file.\r\n\t * \r\n\t * @param {string} arg_relative_resource - resource file name.\r\n\t * @param {string} arg_relative_path1 - relative path 1.\r\n\t * @param {string} arg_relative_path2 - relative path 2.\r\n\t * \r\n\t * @returns {string} - absolute path.\r\n\t */\r\n\tget_absolute_resources_path(arg_relative_resource, arg_relative_path1, arg_relative_path2)\r\n\t{\r\n\t\tassert( T.isString(arg_relative_resource), context + 'get_absolute_resources_path: bad resource file string')\r\n\t\treturn this.get_absolute_path( path.join('resources', arg_relative_resource), arg_relative_path1, arg_relative_path2)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\r\n\t// *************************************************** URL ********************************************************\r\n\t\r\n    /**\r\n     * Get credentials.\r\n\t * \r\n     * @param {object} arg_request - request object.\r\n\t * \r\n     * @returns {object} credentials plain object.\r\n     */\r\n\tget_credentials(arg_request)\r\n\t{\r\n\t\t// logs.debug('get_credentials')\r\n\r\n\t\tconst auth_mgr = this.$runtime ? this.$runtime.security().authentication() : null\r\n\t\tif (! auth_mgr)\r\n\t\t{\r\n\t\t\treturn undefined\r\n\t\t}\r\n\t\t\r\n\t\tif ( ! arg_request )\r\n\t\t{\r\n\t\t\treturn undefined\r\n\t\t}\r\n\t\t\r\n\t\tconst credentials = auth_mgr.get_credentials(arg_request)\r\n\t\treturn credentials\r\n\t}\r\n\t\r\n\t\r\n\t\r\n    /**\r\n     * Get credentials string.\r\n\t * \r\n     * @param {object} arg_credentials - Credetials object.\r\n\t * \r\n     * @returns {string} credentials string.\r\n     */\r\n\tget_credentials_string(arg_credentials)\r\n\t{\r\n\t\tif (! arg_credentials)\r\n\t\t{\r\n\t\t\treturn ''\r\n\t\t}\r\n\t\t\r\n\t\t// TODO: use security token\r\n\t\treturn 'username=' + arg_credentials.get_user() + '&password=' + arg_credentials.get_pass_digest() + '&token=' + arg_credentials.get_token()\r\n\t}\r\n\t\r\n\t\r\n\t\r\n    /**\r\n     * Get given url augmented with credentials string.\r\n\t * \r\n     * @param {string} arg_url - image asset relative url.\r\n     * @param {object|Credentials} arg_request_or_credentials - request object or Credentials instance.\r\n\t * \r\n     * @returns {string} absolute url.\r\n     */\r\n\tget_url_with_credentials(arg_url, arg_request_or_credentials)\r\n\t{\r\n\t\t// logs.debug('get_url_with_credentials')\r\n\t\t\r\n\t\t\r\n\t\t// TODO ARGS = REQUEST OR CRENDETIALS ??\r\n\r\n\t\t// NO CREDENTIALS, NO REQUEST\r\n\t\tif ( ! arg_request_or_credentials )\r\n\t\t{\r\n\t\t\treturn arg_url + '?{{credentials_url}}'\r\n\t\t}\r\n\t\r\n\t\t// GET CREDENTIALS\r\n\t\tconst credentials = arg_request_or_credentials.is_credentials ? arg_request_or_credentials : (arg_request_or_credentials.credentials ? arg_request_or_credentials.credentials : undefined)\r\n\t\t\r\n\t\t// GET CREDENTIALS STRING\r\n\t\tconst credentials_str = this.get_credentials_string(credentials)\r\n\t\tif (credentials_str)\r\n\t\t{\r\n\t\t\treturn arg_url + '?' + credentials_str\r\n\t\t}\r\n\t\t\r\n\t\treturn arg_url\r\n\t}\r\n    \r\n\t\r\n\t\r\n\t/**\r\n     * Render credentials template.\r\n\t * \r\n     * @param {string} arg_html - template html string.\r\n     * @param {Request|Credentials} arg_request_or_credentials - request object.\r\n\t * \r\n     * @returns {string} rendered template.\r\n     */\r\n\trender_credentials_template(arg_html, arg_request_or_credentials)\r\n\t{\r\n\t\tassert( T.isObject(arg_request_or_credentials), context + ':render_credentials_template:bad arg_request_or_credentials object')\r\n\r\n\t\tlet credentials_obj = arg_request_or_credentials.is_credentials ? arg_request_or_credentials : this.get_credentials(arg_request_or_credentials)\r\n\t\tlet credentials_str = this.get_credentials_string(credentials_obj)\r\n\t\tlet credentials_url = this.get_credentials_string(credentials_obj)\r\n\t\t// console.log(credentials_str, 'credentials_str')\r\n\t\t\r\n\t\t\r\n\t\t// TODO 2 cases:\r\n\t\t/*\r\n\t\t\turl:string\r\n\t\t\tvar:JSON.stringiy(object)\r\n\t\t*/\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tif (credentials_str)\r\n\t\t{\r\n\t\t\tconst base64_encoded = forge.util.encode64(credentials_obj.username + ':' + credentials_obj.password)\r\n\r\n\t\t\tconst credentials_datas = credentials_obj.get_credentials_for_template()\r\n\t\t\tcredentials_datas.credentials_str = credentials_str\r\n\t\t\tcredentials_datas.credentials_url = credentials_url\r\n\t\t\tcredentials_datas.credentials_basic_base64 = base64_encoded\r\n\t\t\tcredentials_datas.url = '{{url}}'\r\n\r\n\t\t\t// \tcredentials_token:credentials_obj.token,\r\n\t\t\t// \tcredentials_user_name:credentials_obj.username,\r\n\t\t\t// \tcredentials_pass_digest:credentials_obj.password,\r\n\t\t\t\t\r\n\t\t\t// \tcredentials_login:credentials_obj.ts_login,\r\n\t\t\t// \tcredentials_expire:credentials_obj.expire,\r\n\r\n\t\t\t// \tcredentials_basic_base64:base64_encoded\r\n\t\t\t// \t// credentials_obj: `{ \\\"username\\\":\\\"${credentials_obj.username}\\\", \"password\":\"${credentials_obj.password}\" }`\r\n\t\t\t// }\r\n\t\t\treturn mustache.render(arg_html, credentials_datas)\r\n\t\t}\r\n\t\t\r\n\t\treturn arg_html\r\n\t}\r\n\t\r\n\t\r\n    \r\n\t// TODO:TO CLEAN OR IMPLEMENT\r\n\t// get_relative_url(arg_url)\r\n    // {\r\n\t// \treturn arg_url\r\n\t// }\r\n    \r\n    \r\n\t// get_absolute_url(arg_url)\r\n\t// {\r\n\t// \treturn arg_url\r\n\t// }\r\n\r\n\r\n\t// get_absolute_plugin_url(arg_plugin)\r\n\t// {\r\n\t// \treturn arg_plugin\r\n\t// }\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/base/context.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 118,
    "kind": "variable",
    "name": "forge",
    "memberof": "js/base/context.js",
    "static": true,
    "longname": "js/base/context.js~forge",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/base/context.js",
    "importStyle": null,
    "description": "Cryptography library.",
    "lineNumber": 15,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 119,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/context.js",
    "static": true,
    "longname": "js/base/context.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/base/context.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 28,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 120,
    "kind": "class",
    "name": "Context",
    "memberof": "js/base/context.js",
    "static": true,
    "longname": "js/base/context.js~Context",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/base/context.js",
    "importStyle": "Context",
    "description": "Runtime context methods (browser/server, locales, i18n).",
    "examples": [
      "\tAPI:\n\t\t->constructor(arg_runtime):nothing - constructor.\n\n PATHS API:\n\t\t->get_base_dir():string - Get project base directory, the root directory of the project.\n\t\t->get_world_dir():string - Get topology  world resources directory, by default: the root directory of the project.\n\n\t\t->get_absolute_path(arg_relative_path1, arg_relative_path2, arg_relative_path3):string - Get absolute path of given relative path.\n\t\t\t\tSearch strategy:\n\t\t\t\t1-Joining given ordered paths\n\t\t\t\t2-Joining base directory and given ordered paths\n\t\t\t\t3-Joining world resources directory and given ordered paths\n\n\t\t->get_absolute_plugin_path(arg_relative_plugin, arg_relative_path1, arg_relative_path2):string - Get absolute path of given relative plugin name.\n\t\t\t\tCall get_absolute_path(arg_relative_plugin, arg_relative_path1, arg_relative_path2)\n\n\t\t->get_absolute_package_path(arg_relative_pkg, arg_relative_path1, arg_relative_path2):string - Get absolute path of given relative package name.\n\t\t\t\tCall get_absolute_path(arg_relative_pkg, arg_relative_path1, arg_relative_path2)\n\t\t\t\tCall get_absolute_path( path.join('../../../node_modules', arg_relative_pkg), arg_relative_path1, arg_relative_path2)\n\t\t\t\tCall get_absolute_path( path.join('../../node_modules', arg_relative_pkg), arg_relative_path1, arg_relative_path2)\n\t\t\t\tCall get_absolute_path( path.join('../node_modules', arg_relative_pkg), arg_relative_path1, arg_relative_path2)\n\t\t\t\tCall get_absolute_path( path.join('node_modules', arg_relative_pkg), arg_relative_path1, arg_relative_path2)\n\n\t\t->get_absolute_public_path(arg_relative_public, arg_relative_path1, arg_relative_path2):string - Get absolute path of given relative public path.\n\t\t\t\tCall get_absolute_path(arg_relative_public, arg_relative_path1, arg_relative_path2)\n\t\t\t\tIf not found, search with prefixes [base_public, world_public, 'public', '..', '../public', '../..', '../../public', '../../..', '../../../public']\n\t\t\t\tCall get_absolute_path( join(prefix, arg_relative_public), arg_relative_path1, arg_relative_path2)\n\n\t\t->get_absolute_resources_path(arg_relative_resource, arg_relative_path1, arg_relative_path2):string - Get absolute path of given relative resource file.\n\t\t\t\tCall get_absolute_path( path.join('resources', arg_relative_resource), arg_relative_path1, arg_relative_path2)\n\n\tCREDENTIALS API:\n\t\t->get_credentials(arg_request):object - Get credentials.\n\t\t->get_credentials_string(arg_credentials):string - Get credentials string as 'username=...&password=...&token=...'.\n\t\t->get_url_with_credentials(arg_url, arg_request):string - Get given url augmented with credentials string.\n\n\t\t->render_credentials_template(arg_html, arg_request_or_credentials):string - Render credentials template.\n\t\t\t\tCall  mustache.render(arg_html, credentials_datas)\n\t\t\t\twith const credentials_datas = credentials_obj.get_credentials_for_template()\n\t\t\t\t\tcredentials_datas.credentials_str = credentials_str\n\t\t\t\t\tcredentials_datas.credentials_url = credentials_url\n\t\t\t\t\tcredentials_datas.credentials_basic_base64 = base64_encoded\n\t\t\t\t\tcredentials_datas.url = '{{url}}'"
    ],
    "lineNumber": 83,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 121,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/context.js~Context",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/context.js~Context#constructor",
    "access": "public",
    "description": "Create a context instance.",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "current runtime."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 122,
    "kind": "member",
    "name": "is_context",
    "memberof": "js/base/context.js~Context",
    "static": false,
    "longname": "js/base/context.js~Context#is_context",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 100,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 123,
    "kind": "member",
    "name": "$runtime",
    "memberof": "js/base/context.js~Context",
    "static": false,
    "longname": "js/base/context.js~Context#$runtime",
    "access": "public",
    "description": "Runtime instance.",
    "lineNumber": 106,
    "type": {
      "nullable": null,
      "types": [
        "Runtime"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "get_base_dir",
    "memberof": "js/base/context.js~Context",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/context.js~Context#get_base_dir",
    "access": "public",
    "description": "Get project base directory, the root directory of the project.",
    "lineNumber": 118,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - absolute root directory path."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "absolute root directory path."
    },
    "params": []
  },
  {
    "__docId__": 125,
    "kind": "method",
    "name": "get_world_dir",
    "memberof": "js/base/context.js~Context",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/context.js~Context#get_world_dir",
    "access": "public",
    "description": "Get topology  world resources directory, by default: the root directory of the project.",
    "lineNumber": 130,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - absolute root directory path."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "absolute root directory path."
    },
    "params": []
  },
  {
    "__docId__": 126,
    "kind": "method",
    "name": "get_absolute_path",
    "memberof": "js/base/context.js~Context",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/context.js~Context#get_absolute_path",
    "access": "public",
    "description": "Get absolute path of given relative path.",
    "lineNumber": 146,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - absolute path."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_relative_path1",
        "description": "relative path 1."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_relative_path2",
        "description": "relative path 2."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_relative_path3",
        "description": "relative path 3."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "absolute path."
    }
  },
  {
    "__docId__": 127,
    "kind": "method",
    "name": "get_absolute_plugin_path",
    "memberof": "js/base/context.js~Context",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/context.js~Context#get_absolute_plugin_path",
    "access": "public",
    "description": "Get absolute path of given relative plugin name.",
    "lineNumber": 298,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - absolute path."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_relative_plugin",
        "description": "plugin name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_relative_path1",
        "description": "relative path 1."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_relative_path2",
        "description": "relative path 2."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "absolute path."
    }
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "get_absolute_package_path",
    "memberof": "js/base/context.js~Context",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/context.js~Context#get_absolute_package_path",
    "access": "public",
    "description": "Get absolute path of given relative package name.",
    "lineNumber": 319,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - absolute path."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_relative_pkg",
        "description": "package name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_relative_path1",
        "description": "relative path 1."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_relative_path2",
        "description": "relative path 2."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "absolute path."
    }
  },
  {
    "__docId__": 129,
    "kind": "method",
    "name": "get_absolute_public_path",
    "memberof": "js/base/context.js~Context",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/context.js~Context#get_absolute_public_path",
    "access": "public",
    "description": "Get absolute path of given relative public path.",
    "lineNumber": 363,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - absolute path."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_relative_public",
        "description": "public path."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_relative_path1",
        "description": "relative path 1."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_relative_path2",
        "description": "relative path 2."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "absolute path."
    }
  },
  {
    "__docId__": 130,
    "kind": "method",
    "name": "get_absolute_resources_path",
    "memberof": "js/base/context.js~Context",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/context.js~Context#get_absolute_resources_path",
    "access": "public",
    "description": "Get absolute path of given relative resource file.",
    "lineNumber": 404,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - absolute path."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_relative_resource",
        "description": "resource file name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_relative_path1",
        "description": "relative path 1."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_relative_path2",
        "description": "relative path 2."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "absolute path."
    }
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "get_credentials",
    "memberof": "js/base/context.js~Context",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/context.js~Context#get_credentials",
    "access": "public",
    "description": "Get credentials.",
    "lineNumber": 422,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} credentials plain object."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_request",
        "description": "request object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "credentials plain object."
    }
  },
  {
    "__docId__": 132,
    "kind": "method",
    "name": "get_credentials_string",
    "memberof": "js/base/context.js~Context",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/context.js~Context#get_credentials_string",
    "access": "public",
    "description": "Get credentials string.",
    "lineNumber": 450,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} credentials string."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "Credetials object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "credentials string."
    }
  },
  {
    "__docId__": 133,
    "kind": "method",
    "name": "get_url_with_credentials",
    "memberof": "js/base/context.js~Context",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/context.js~Context#get_url_with_credentials",
    "access": "public",
    "description": "Get given url augmented with credentials string.",
    "lineNumber": 471,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} absolute url."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_url",
        "description": "image asset relative url."
      },
      {
        "nullable": null,
        "types": [
          "object",
          "Credentials"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_request_or_credentials",
        "description": "request object or Credentials instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "absolute url."
    }
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "render_credentials_template",
    "memberof": "js/base/context.js~Context",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/context.js~Context#render_credentials_template",
    "access": "public",
    "description": "Render credentials template.",
    "lineNumber": 507,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} rendered template."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_html",
        "description": "template html string."
      },
      {
        "nullable": null,
        "types": [
          "Request",
          "Credentials"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_request_or_credentials",
        "description": "request object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "rendered template."
    }
  },
  {
    "__docId__": 135,
    "kind": "file",
    "name": "js/base/credentials.js",
    "content": "// NPM IMPORTS\r\nimport assert     from 'assert'\r\nimport util       from 'util'\r\nimport { fromJS } from 'immutable'\r\n\r\n// COMMON IMPORTS\r\nimport T              from '../utils/types'\r\nimport Digest         from '../utils/digest'\r\nimport EncodeDecode   from '../utils/encode_decode'\r\nimport EncryptDecrypt from '../utils/encrypt_decrypt'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\nconst context = 'common/base/credentials'\r\n\r\n\r\n\r\n/**\r\n * Default credentials record.\r\n * @private\r\n */\r\nconst default_credentials = {\r\n\ttenant:'default',\t\t// Tenant name (mandatory)\r\n\tenv:undefined,\t\t\t// Environment code: dev, test, int, rec, pro (mandatory)\r\n\tapplication:undefined,\t// Application name (mandatory)\r\n\r\n\ttoken:undefined,\r\n\tuser_name:undefined,\r\n\tuser_pass_digest:undefined,\r\n\r\n\tts_login:undefined,\r\n\tts_expiration:undefined,\r\n\r\n\terrors_count:0,\r\n\trenew_count:0,\r\n\r\n\thash:undefined\r\n}\r\n\r\n\r\n\r\n/**\r\n * Authentication informations, used on server and on browser.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n* @example\r\n* \tAPI:\r\n* \t\t->set_credentials(arg_datas):nothing - check and set crendtials datas.\r\n* \t\t\r\n* \t\t->dump():string - dump credentials to a readable string without sensitive datas.\r\n* \t\t->digest_password(arg_string):string - hash credentials password (static).\r\n* \t\t\r\n* \t\t->serialize(arg_app_secret):string - transform credentials to a string.\r\n* \t\t->deserialize(string, arg_app_secret):boolean - load credentials from a string.string\r\n* \r\n* \t\t->encrypt(arg_app_key):string - encrypted string.\r\n* \t\t->decrypt(arg_string, arg_app_key):boolean - success or failure.\r\n* \r\n* \t\t->extract(arg_string):object - extract a record with credentials values from a formatted string.\r\n */\r\nexport default class Credentials\r\n{\r\n    /**\r\n     * Create a Credentials instance. Store credentials values into an immutable Map.\r\n\t * \r\n     * @param {object} arg_datas - credentials datas object.\r\n\t * \r\n     * @returns {nothing}\r\n     */\r\n\tconstructor(arg_datas=default_credentials, update_handler=undefined)\r\n\t{\r\n\t\tassert( T.isObject(arg_datas), context + ':bad runtime object')\r\n\t\t\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_credentials = true\r\n\r\n\t\t/**\r\n\t\t * Credentials settings.\r\n\t\t * @type {Immutable.Map}\r\n\t\t */\r\n\t\tthis._credentials = fromJS(default_credentials)\r\n\r\n\t\t// this._crypt_mode = 'AES-CBC' // (other modes include: CFB, OFB, CTR, and GCM)\r\n\t\t// this._crypt_key_length = 32\r\n\t\t// this._crypt_iv_length = 8\r\n\t\t// this._crypt_num_iterations = 10\r\n\r\n\t\t/**\r\n\t\t * Update handler.\r\n\t\t * @type {function}\r\n\t\t */\r\n\t\tthis.update_handler = update_handler\r\n\r\n\t\tthis.set_credentials(arg_datas)\r\n\t}\r\n    \r\n    \r\n\t\r\n\t/**\r\n\t * Get credentials datas.\r\n\t * \r\n\t * @returns {object}\r\n\t */\r\n\tget_credentials()\r\n\t{\r\n\t\tconst datas = this._credentials.toJS()\r\n\t\treturn datas\r\n\t}\r\n    \r\n    \r\n\t\r\n\t/**\r\n\t * Get credentials tenant.\r\n\t * \r\n\t * @returns {string|undefined}\r\n\t */\r\n\tget_tenant()\r\n\t{\r\n\t\treturn this._credentials.get('tenant', undefined)\r\n\t}\r\n    \r\n    \r\n\t\r\n\t/**\r\n\t * Get credentials environment.\r\n\t * \r\n\t * @returns {string|undefined}\r\n\t */\r\n\tget_env()\r\n\t{\r\n\t\treturn this._credentials.get('env', undefined)\r\n\t}\r\n    \r\n    \r\n\t\r\n\t/**\r\n\t * Get credentials application.\r\n\t * \r\n\t * @returns {string|undefined}\r\n\t */\r\n\tget_application()\r\n\t{\r\n\t\treturn this._credentials.get('application', undefined)\r\n\t}\r\n    \r\n    \r\n\t\r\n\t/**\r\n\t * Get credentials token.\r\n\t * \r\n\t * @returns {string|undefined}\r\n\t */\r\n\tget_token()\r\n\t{\r\n\t\treturn this._credentials.get('token', undefined)\r\n\t}\r\n    \r\n    \r\n\t\r\n\t/**\r\n\t * Get credentials user.\r\n\t * \r\n\t * @returns {string|undefined}\r\n\t */\r\n\tget_user()\r\n\t{\r\n\t\treturn this._credentials.get('user_name', undefined)\r\n\t}\r\n    \r\n    \r\n\t\r\n\t/**\r\n\t * Get credentials user.\r\n\t * \r\n\t * @returns {string|undefined}\r\n\t */\r\n\tget_pass_digest()\r\n\t{\r\n\t\treturn this._credentials.get('user_pass_digest', undefined)\r\n\t}\r\n    \r\n    \r\n\t\r\n\t/**\r\n\t * Get credentials url part.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_url_part()\r\n\t{\r\n\t\treturn 'username=' + this.get_user() + '&password=' + this.get_pass_digest() + '&token=' + this.get_token()\r\n\t}\r\n    \r\n    \r\n\t\r\n\t/**\r\n\t * Get credentials datas.\r\n\t * \r\n\t * @returns {object}\r\n\t */\r\n\tget_credentials_for_template()\r\n\t{\r\n\t\tconst credentials_obj = this._credentials.toJS()\r\n\t\tconst template_datas = {\r\n\t\t\tcredentials_tenant:credentials_obj.tenant,\r\n\t\t\tcredentials_env:credentials_obj.env,\r\n\t\t\tcredentials_application:credentials_obj.application,\r\n\r\n\t\t\tcredentials_token:credentials_obj.token,\r\n\t\t\tcredentials_user_name:credentials_obj.user_name,\r\n\t\t\tcredentials_pass_digest:credentials_obj.user_pass_digest,\r\n\t\t\t\r\n\t\t\tcredentials_login:credentials_obj.ts_login,\r\n\t\t\tcredentials_expire:credentials_obj.ts_expiration,\r\n\r\n\t\t\tcredentials_errors_count:credentials_obj.errors_count,\r\n\t\t\tcredentials_renew_count:credentials_obj.renew_count,\r\n\r\n\t\t\tcredentials_hash:credentials_obj.hash\r\n\t\t}\r\n\t\treturn template_datas\r\n\t}\r\n    \r\n\t\r\n\r\n\t/**\r\n\t * Get empty credentials record.\r\n\t * \r\n\t * @returns {object}\r\n\t */\r\n\tstatic get_empty_credentials()\r\n\t{\r\n\t\treturn default_credentials\r\n\t}\r\n    \r\n    \r\n\t\r\n\t\t\t\r\n\t/**\r\n\t * Credentials are valid for access.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tis_valid() // TODO\r\n\t{\r\n\t\treturn true\r\n\t}\r\n\r\n    \r\n\t\r\n\t/**\r\n\t * Check and set credentials datas.\r\n\t * \r\n     * @param {object} arg_datas - credentials datas object.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tset_credentials(arg_datas)\r\n\t{\r\n\t\tassert( T.isObject(arg_datas), context + ':set_credentials:bad arg_datas object')\r\n\r\n\t\tassert( T.isString(arg_datas.tenant) && arg_datas.tenant.length > 0, context + ':set_credentials:bad tenant string')\r\n\t\tassert( T.isString(arg_datas.env) && arg_datas.env.length > 0, context + ':set_credentials:bad env string')\r\n\t\tassert( T.isString(arg_datas.application) && arg_datas.application.length > 0, context + ':set_credentials:bad application string')\r\n\r\n\t\tassert( T.isString(arg_datas.token), context + ':set_credentials:bad token string')\r\n\t\tassert( T.isString(arg_datas.user_name), context + ':set_credentials:bad user_name string')\r\n\t\tassert( T.isString(arg_datas.user_pass_digest), context + ':set_credentials:bad user_pass_digest string')\r\n\r\n\t\tif ( T.isString(arg_datas.ts_login) )\r\n\t\t{\r\n\t\t\ttry{\r\n\t\t\t\targ_datas.ts_login = parseInt(arg_datas.ts_login)\r\n\t\t\t}\r\n\t\t\tcatch(e)\r\n\t\t\t{}\r\n\t\t}\r\n\t\tif ( T.isString(arg_datas.ts_expiration) )\r\n\t\t{\r\n\t\t\ttry{\r\n\t\t\t\targ_datas.ts_expiration = parseInt(arg_datas.ts_expiration)\r\n\t\t\t}\r\n\t\t\tcatch(e)\r\n\t\t\t{}\r\n\t\t}\r\n\t\tassert( T.isNumber(arg_datas.ts_login), context + ':set_credentials:bad ts_login number')\r\n\t\tassert( T.isNumber(arg_datas.ts_expiration), context + ':set_credentials:bad ts_expiration number')\r\n\r\n\t\tif ( T.isString(arg_datas.errors_count) )\r\n\t\t{\r\n\t\t\ttry{\r\n\t\t\t\targ_datas.errors_count = parseInt(arg_datas.errors_count)\r\n\t\t\t}\r\n\t\t\tcatch(e)\r\n\t\t\t{}\r\n\t\t}\r\n\t\tif ( T.isString(arg_datas.renew_count) )\r\n\t\t{\r\n\t\t\ttry{\r\n\t\t\t\targ_datas.renew_count = parseInt(arg_datas.renew_count)\r\n\t\t\t}\r\n\t\t\tcatch(e)\r\n\t\t\t{}\r\n\t\t}\r\n\t\tassert( T.isNumber(arg_datas.errors_count), context + ':set_credentials:bad errors_count number')\r\n\t\tassert( T.isNumber(arg_datas.renew_count), context + ':set_credentials:bad renew_count number')\r\n\r\n\t\tlet datas = {}\r\n\t\tdatas.tenant = arg_datas.tenant\r\n\t\tdatas.env = arg_datas.env\r\n\t\tdatas.application = arg_datas.application\r\n\r\n\t\tdatas.token = arg_datas.token\r\n\t\tdatas.user_name = arg_datas.user_name\r\n\t\tdatas.user_pass_digest = arg_datas.user_pass_digest\r\n\r\n\t\tdatas.ts_login = arg_datas.ts_login\r\n\t\tdatas.ts_expiration = arg_datas.ts_expiration\r\n\r\n\t\tdatas.errors_count = arg_datas.errors_count\r\n\t\tdatas.renew_count = arg_datas.renew_count\r\n\r\n\t\tconst head = util.format('tenant:%s,env:%s,app:%s', datas.tenant, datas.env, datas.application)\r\n\t\tconst auth = util.format('token:%s,user:%s,pass:%s', datas.token ? datas.token : 'none', datas.user_name ? datas.user_name : 'none', datas.user_pass_digest ? datas.user_pass_digest : 'none')\r\n\t\tconst str = util.format('CREDENTIALS:{%s,%s}', head, auth)\r\n\t\tdatas.hash = Digest.hash(str, 'sha256', 'hex')\r\n\r\n\t\tthis._credentials = fromJS(datas)\r\n\r\n\t\tif ( T.isFunction(this.update_handler) )\r\n\t\t{\r\n\t\t\tthis.update_handler(this._credentials)\r\n\t\t}\r\n\r\n\t\treturn true\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Dump credentials datas to a readable string without sensitive datas.\r\n\t * \r\n\t * @returns {string} - readable string without sensitive datas.\r\n\t */\r\n\tdump()\r\n\t{\r\n\t\tconst datas = this._credentials.toJS()\r\n\t\tconst head = util.format('tenant:%s,env:%s,app:%s', datas.tenant, datas.env, datas.application)\r\n\t\tconst auth = util.format('token:%s,user:%s,pass:%s', datas.token ? datas.token : 'none', datas.user_name ? datas.user_name : 'none', datas.user_pass_digest ? '***' : 'none')\r\n\t\tconst foot = util.format('start:%n,expire:%n,errors:%n,renews:%n', datas.ts_login, datas.ts_expiration, datas.errors_count, datas.renew_count)\r\n\t\t\r\n\t\treturn util.format('CREDENTIALS:{%s,%s,%s}', head, auth, foot)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Transform credentials password with a hash method.\r\n\t * \r\n\t * @param {string} arg_password - password string.\r\n\t * \r\n\t * @returns {string} - hashed string.\r\n\t */\r\n\tstatic digest_password(arg_password)\r\n\t{\r\n\t\treturn Digest.hash(arg_password, 'sha256', 'hex')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Transform credentials to a string without encryption which could be sent over a network.\r\n\t * \r\n\t * @returns {string} - serialized string.\r\n\t */\r\n\tserialize()\r\n\t{\r\n\t\tconst datas = this._credentials.toJS()\r\n\t\tconst head = util.format('tenant:%s,env:%s,app:%s', datas.tenant, datas.env, datas.application)\r\n\t\tconst auth = util.format('token:%s,user:%s,pass:%s', datas.token ? datas.token : 'none', datas.user_name ? datas.user_name : 'none', datas.user_pass_digest ? datas.user_pass_digest : 'none')\r\n\t\tconst str = util.format('CREDENTIALS:{%s,%s}', head, auth)\r\n\r\n\t\treturn EncodeDecode.encode(str, 'base64')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Deserialize credentials from a string without encryption.\r\n\t * @TODO: use RegExp to split the string into credentials attributes.\r\n\t * \r\n\t * @param {string} arg_string - serialized string.\r\n\t * \r\n\t * @returns {boolean} - deserialized string success or failure.\r\n\t */\r\n\tdeserialize(arg_string)\r\n\t{\r\n\t\tconst str = EncodeDecode.decode(arg_string, 'base64')\r\n\t\tconst record = this.extract(str)\r\n\r\n\t\treturn this.set_credentials(record)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Transform credentials to a string with encryption.\r\n\t * \r\n\t * @param {string} arg_app_key - encryption key.\r\n\t * \r\n\t * @returns {string} - encrypted string.\r\n\t */\r\n\tencrypt(arg_app_key)\r\n\t{\r\n\t\tconst datas = this._credentials.toJS()\r\n\t\tconst head = util.format('tenant:%s,env:%s,app:%s', datas.tenant, datas.env, datas.application)\r\n\t\tconst auth = util.format('token:%s,user:%s,pass:%s', datas.token ? datas.token : 'none', datas.user_name ? datas.user_name : 'none', datas.user_pass_digest ? datas.user_pass_digest : 'none')\r\n\t\tconst str = util.format('CREDENTIALS:{%s,%s}', head, auth)\r\n\r\n\t\treturn EncryptDecrypt.encrypt(str, arg_app_key)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Decrypt credentials encrypted string.\r\n\t * \r\n\t * @param {string} arg_string - string.\r\n\t * @param {string} arg_app_key - encryption key.\r\n\t * \r\n\t * @returns {string} - encrypted string.\r\n\t */\r\n\tdecrypt(arg_string, arg_app_key)\r\n\t{\r\n\t\tconst str = EncryptDecrypt.decrypt(arg_string, arg_app_key)\r\n\t\tconst record = this.extract(str)\r\n\r\n\t\treturn this.set_credentials(record)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Extract credentials fields from a string (password should be hashed and encoded, only [a-zA-Z0-9_] chars).\r\n\t * \r\n\t * @param {string} arg_string - string as \"CREDENTIALS:{tenant:%s,env:%s,app:%s,token:%s,user:%s,pass:%s}\".\r\n\t * \r\n\t * @returns {object} - credentials values record.\r\n\t */\r\n\textract(arg_string)\r\n\t{\r\n\t\tconst regexp = /CREDENTIALS:{([a-zA-Z0-9_:]+),([a-zA-Z0-9_:]+),([a-zA-Z0-9_:]+),([a-zA-Z0-9_:]+),([a-zA-Z0-9_:]+),([a-zA-Z0-9_:]+)}/\r\n\t\tconst results = regexp.exec(arg_string)\r\n\r\n\t\tif (results.length != 6)\r\n\t\t{\r\n\t\t\tconsole.log(context + ':extract:bad format [%s]', arg_string)\r\n\t\t\treturn false\r\n\t\t}\r\n\t\t\r\n\t\tlet values = []\r\n\t\tresults.forEach(\r\n\t\t\t(str)=>{\r\n\t\t\t\tconst parts = str.split(':')\r\n\t\t\t\tconst value = parts.length == 2 ? parts[1] : undefined\r\n\t\t\t\tvalues.push(value)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tconst record = {\r\n\t\t\ttenant:results[0],\r\n\t\t\tenv:results[1],\r\n\t\t\tapplication:results[2],\r\n\r\n\t\t\ttoken:results[3],\r\n\t\t\tuser_name:results[4],\r\n\t\t\tuser_pass_digest:results[5]\r\n\t\t}\r\n\r\n\t\treturn record\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/base/credentials.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 136,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/credentials.js",
    "static": true,
    "longname": "js/base/credentials.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/base/credentials.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 17,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 137,
    "kind": "variable",
    "name": "default_credentials",
    "memberof": "js/base/credentials.js",
    "static": true,
    "longname": "js/base/credentials.js~default_credentials",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/base/credentials.js",
    "importStyle": null,
    "description": "Default credentials record.",
    "lineNumber": 25,
    "type": {
      "types": [
        "{\"tenant\": string, \"env\": *, \"application\": *, \"token\": *, \"user_name\": *, \"user_pass_digest\": *, \"ts_login\": *, \"ts_expiration\": *, \"errors_count\": *, \"renew_count\": *, \"hash\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 138,
    "kind": "class",
    "name": "Credentials",
    "memberof": "js/base/credentials.js",
    "static": true,
    "longname": "js/base/credentials.js~Credentials",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/base/credentials.js",
    "importStyle": "Credentials",
    "description": "Authentication informations, used on server and on browser.",
    "examples": [
      "\tAPI:\n\t\t->set_credentials(arg_datas):nothing - check and set crendtials datas.\n\t\t\n\t\t->dump():string - dump credentials to a readable string without sensitive datas.\n\t\t->digest_password(arg_string):string - hash credentials password (static).\n\t\t\n\t\t->serialize(arg_app_secret):string - transform credentials to a string.\n\t\t->deserialize(string, arg_app_secret):boolean - load credentials from a string.string\n\n\t\t->encrypt(arg_app_key):string - encrypted string.\n\t\t->decrypt(arg_string, arg_app_key):boolean - success or failure.\n\n\t\t->extract(arg_string):object - extract a record with credentials values from a formatted string."
    ],
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 139,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/credentials.js~Credentials",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/credentials.js~Credentials#constructor",
    "access": "public",
    "description": "Create a Credentials instance. Store credentials values into an immutable Map.",
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_datas",
        "description": "credentials datas object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 140,
    "kind": "member",
    "name": "is_credentials",
    "memberof": "js/base/credentials.js~Credentials",
    "static": false,
    "longname": "js/base/credentials.js~Credentials#is_credentials",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 83,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 141,
    "kind": "member",
    "name": "_credentials",
    "memberof": "js/base/credentials.js~Credentials",
    "static": false,
    "longname": "js/base/credentials.js~Credentials#_credentials",
    "access": "private",
    "description": "Credentials settings.",
    "lineNumber": 89,
    "type": {
      "nullable": null,
      "types": [
        "Immutable.Map"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 142,
    "kind": "member",
    "name": "update_handler",
    "memberof": "js/base/credentials.js~Credentials",
    "static": false,
    "longname": "js/base/credentials.js~Credentials#update_handler",
    "access": "public",
    "description": "Update handler.",
    "lineNumber": 100,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "get_credentials",
    "memberof": "js/base/credentials.js~Credentials",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/credentials.js~Credentials#get_credentials",
    "access": "public",
    "description": "Get credentials datas.",
    "lineNumber": 112,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 144,
    "kind": "method",
    "name": "get_tenant",
    "memberof": "js/base/credentials.js~Credentials",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/credentials.js~Credentials#get_tenant",
    "access": "public",
    "description": "Get credentials tenant.",
    "lineNumber": 125,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|undefined}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "undefined"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "get_env",
    "memberof": "js/base/credentials.js~Credentials",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/credentials.js~Credentials#get_env",
    "access": "public",
    "description": "Get credentials environment.",
    "lineNumber": 137,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|undefined}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "undefined"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "get_application",
    "memberof": "js/base/credentials.js~Credentials",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/credentials.js~Credentials#get_application",
    "access": "public",
    "description": "Get credentials application.",
    "lineNumber": 149,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|undefined}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "undefined"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 147,
    "kind": "method",
    "name": "get_token",
    "memberof": "js/base/credentials.js~Credentials",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/credentials.js~Credentials#get_token",
    "access": "public",
    "description": "Get credentials token.",
    "lineNumber": 161,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|undefined}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "undefined"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 148,
    "kind": "method",
    "name": "get_user",
    "memberof": "js/base/credentials.js~Credentials",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/credentials.js~Credentials#get_user",
    "access": "public",
    "description": "Get credentials user.",
    "lineNumber": 173,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|undefined}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "undefined"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 149,
    "kind": "method",
    "name": "get_pass_digest",
    "memberof": "js/base/credentials.js~Credentials",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/credentials.js~Credentials#get_pass_digest",
    "access": "public",
    "description": "Get credentials user.",
    "lineNumber": 185,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|undefined}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "undefined"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 150,
    "kind": "method",
    "name": "get_url_part",
    "memberof": "js/base/credentials.js~Credentials",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/credentials.js~Credentials#get_url_part",
    "access": "public",
    "description": "Get credentials url part.",
    "lineNumber": 197,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 151,
    "kind": "method",
    "name": "get_credentials_for_template",
    "memberof": "js/base/credentials.js~Credentials",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/credentials.js~Credentials#get_credentials_for_template",
    "access": "public",
    "description": "Get credentials datas.",
    "lineNumber": 209,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 152,
    "kind": "method",
    "name": "get_empty_credentials",
    "memberof": "js/base/credentials.js~Credentials",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/base/credentials.js~Credentials.get_empty_credentials",
    "access": "public",
    "description": "Get empty credentials record.",
    "lineNumber": 239,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 153,
    "kind": "method",
    "name": "is_valid",
    "memberof": "js/base/credentials.js~Credentials",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/credentials.js~Credentials#is_valid",
    "access": "public",
    "description": "Credentials are valid for access.",
    "lineNumber": 252,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 154,
    "kind": "method",
    "name": "set_credentials",
    "memberof": "js/base/credentials.js~Credentials",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/credentials.js~Credentials#set_credentials",
    "access": "public",
    "description": "Check and set credentials datas.",
    "lineNumber": 266,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_datas",
        "description": "credentials datas object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 156,
    "kind": "method",
    "name": "dump",
    "memberof": "js/base/credentials.js~Credentials",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/credentials.js~Credentials#dump",
    "access": "public",
    "description": "Dump credentials datas to a readable string without sensitive datas.",
    "lineNumber": 353,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - readable string without sensitive datas."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "readable string without sensitive datas."
    },
    "params": []
  },
  {
    "__docId__": 157,
    "kind": "method",
    "name": "digest_password",
    "memberof": "js/base/credentials.js~Credentials",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/base/credentials.js~Credentials.digest_password",
    "access": "public",
    "description": "Transform credentials password with a hash method.",
    "lineNumber": 372,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - hashed string."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_password",
        "description": "password string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "hashed string."
    }
  },
  {
    "__docId__": 158,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/base/credentials.js~Credentials",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/credentials.js~Credentials#serialize",
    "access": "public",
    "description": "Transform credentials to a string without encryption which could be sent over a network.",
    "lineNumber": 384,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - serialized string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "serialized string."
    },
    "params": []
  },
  {
    "__docId__": 159,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/base/credentials.js~Credentials",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/credentials.js~Credentials#deserialize",
    "access": "public",
    "description": "Deserialize credentials from a string without encryption.\n@TODO: use RegExp to split the string into credentials attributes.",
    "lineNumber": 404,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - deserialized string success or failure."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_string",
        "description": "serialized string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "deserialized string success or failure."
    }
  },
  {
    "__docId__": 160,
    "kind": "method",
    "name": "encrypt",
    "memberof": "js/base/credentials.js~Credentials",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/credentials.js~Credentials#encrypt",
    "access": "public",
    "description": "Transform credentials to a string with encryption.",
    "lineNumber": 421,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - encrypted string."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_app_key",
        "description": "encryption key."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "encrypted string."
    }
  },
  {
    "__docId__": 161,
    "kind": "method",
    "name": "decrypt",
    "memberof": "js/base/credentials.js~Credentials",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/credentials.js~Credentials#decrypt",
    "access": "public",
    "description": "Decrypt credentials encrypted string.",
    "lineNumber": 441,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - encrypted string."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_string",
        "description": "string."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_app_key",
        "description": "encryption key."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "encrypted string."
    }
  },
  {
    "__docId__": 162,
    "kind": "method",
    "name": "extract",
    "memberof": "js/base/credentials.js~Credentials",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/credentials.js~Credentials#extract",
    "access": "public",
    "description": "Extract credentials fields from a string (password should be hashed and encoded, only [a-zA-Z0-9_] chars).",
    "lineNumber": 458,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - credentials values record."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_string",
        "description": "string as \"CREDENTIALS:{tenant:%s,env:%s,app:%s,token:%s,user:%s,pass:%s}\"."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "credentials values record."
    }
  },
  {
    "__docId__": 163,
    "kind": "file",
    "name": "js/base/distributed_instance.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T                       from '../utils/types'\r\nimport Instance                from '../base/instance'\r\nimport DistributedMessage      from '../base/distributed_message'\r\nimport DistributedMetrics      from '../base/distributed_metrics'\r\nimport DistributedLogs         from '../base/distributed_logs'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\nconst context = 'common/base/distributed_instance'\r\n\r\n\r\n\r\n/**\r\n * Distributed instances base class: enable communication inside a node or between nodes.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n* API:\r\n* \t\t->load():nothing\r\n* \t    ->load_topology_settings(arg_settings):nothing\r\n* \r\n* \t\t->send(DistributedMessage|DistributedMetrics|DistributedLogs):boolean\r\n* \r\n*      ->enable_on_bus(arg_bus):nothing\r\n*      ->disable_on_bus(arg_bus):nothing\r\n* \r\n* API for messages:\r\n* \t\t->send_msg(target, payload):boolean\r\n* \t\t->receive_msg(DistributedMessage):nothing\r\n* \t\t->enable_msg():nothing\r\n* \t\t->disable_msg():nothing\r\n* \r\n* API for metrics:\r\n* \t\t->send_metrics(type, values):boolean\r\n* \t\t->receive_metrics(DistributedMetrics):nothing\r\n* \t\t->enable_metrics():nothing\r\n* \t\t->disable_metrics():nothing\r\n* \r\n* API for logs:\r\n* \t\t->send_logs(ts, level, texts):boolean\r\n* \t\t->receive_logs(DistributedLogs):nothing\r\n* \t\t->enable_logs():nothing\r\n* \t\t->disable_logs():nothing\r\n * \r\n */\r\nexport default class DistributedInstance extends Instance\r\n{\r\n\t/**\r\n\t * Create a DistributedInstance.\r\n\t * \r\n\t * @param {string} arg_collection - collection name.\r\n\t * @param {string} arg_name - server name\r\n\t * @param {string} arg_class - server class name\r\n\t * @param {object} arg_settings - plugin settings map\r\n\t * @param {string} arg_log_context - trace context string (optional, default=context).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_collection, arg_name, arg_class, arg_settings, arg_log_context=context)\r\n\t{\r\n\t\tassert( T.isObject(arg_settings.runtime) || (arg_settings.has && arg_settings.has('runtime')), arg_log_context + ':bad runtime instance')\r\n\t\tassert( T.isObject(arg_settings.logger_manager) || (arg_settings.has && arg_settings.has('logger_manager') ), arg_log_context + ':bad logger_manager instance')\r\n\t\tsuper(arg_collection, arg_class, arg_name, arg_settings, arg_log_context, arg_settings.logger_manager)\r\n\t\t\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_distributed_instance = true\r\n\r\n\t\t/**\r\n\t\t * Messages bus instance.\r\n\t\t * @type {MessageBus}\r\n\t\t */\r\n\t\tthis._msg_bus = undefined\r\n\r\n\t\t/**\r\n\t\t * Metrics messages bus instance.\r\n\t\t * @type {MessageBus}\r\n\t\t */\r\n\t\tthis._metrics_bus = undefined\r\n\t\t\r\n\t\t/**\r\n\t\t * Logs messages bus instance.\r\n\t\t * @type {MessageBus}\r\n\t\t */\r\n\t\tthis._logs_bus = undefined\r\n\t\t\r\n\t\t/**\r\n\t\t * Bus unsubscribes handlers map.\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tthis._bus_unsubscribes = {}\r\n\r\n\t\t// DEBUG\r\n\t\t// this.enable_trace()\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Load instance settings.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tload()\r\n\t{\r\n\t\t// console.log(context + ':load:DistributedInstance')\r\n\r\n\t\tsuper.load()\r\n\r\n\t\t// REGISTER BUSES\r\n\t\tif (! this.is_client_runtime)\r\n\t\t{\r\n\t\t\tthis._msg_bus     = this.get_runtime().node.get_msg_bus()\r\n\t\t\tthis._metrics_bus = this.get_runtime().node.get_metrics_bus()\r\n\t\t\tthis._logs_bus    = this.get_runtime().node.get_logs_bus()\r\n\t\t}\r\n\r\n\t\t// DEBUG\r\n\t\t// console.log(context + ':load:name=%s this._metrics_bus', this.get_name(), this._metrics_bus.get_name())\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Load topology settings.\r\n\t * \r\n\t * @param {object} arg_settings - master node settings.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tload_topology_settings(arg_settings)\r\n\t{\r\n\t\tthis.enter_group('load_topology_settings')\r\n\r\n\t\targ_settings = undefined\r\n\r\n\t\tthis.leave_group('load_topology_settings')\r\n\t\treturn arg_settings\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Send a message to an other client.\r\n\t * \r\n\t * @param {DistributedMessage} arg_msg - message object: a DistributedMessage or DistributedMetrics or DistributedLogs instance.\r\n\t * \r\n\t * @returns {boolean} - message send or not\r\n\t */\r\n\tsend(arg_msg)\r\n\t{\r\n\t\tassert( T.isObject(arg_msg), context + ':send:bad message object')\r\n\r\n\t\tif (this._msg_bus && arg_msg.is_distributed_message)\r\n\t\t{\r\n\t\t\tthis._msg_bus.msg_post(arg_msg)\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\tif (this._metrics_bus && arg_msg.is_distributed_metrics)\r\n\t\t{\r\n\t\t\tthis._metrics_bus.msg_post(arg_msg)\r\n\t\t\treturn true\r\n\t\t}\r\n\t\t\r\n\t\tif (this._logs_bus && arg_msg.is_distributed_logs)\r\n\t\t{\r\n\t\t\tthis._logs_bus.msg_post(arg_msg)\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\tassert(false, context + ':send:bad message type: not msg or metrics or logs')\r\n\r\n\t\treturn false\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Enable distributed messaging.\r\n\t * \r\n\t * @param {MessageBus} arg_bus - message bus.\r\n\t * @param {string} arg_channel - channel name string (default='default').\r\n\t * @param {string} arg_method  - receiveing method name string (default='receive_msg').\r\n\t * @param {string} arg_alias   - instance alias name string (optional, default undefined).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tenable_on_bus(arg_bus, arg_channel='default', arg_method='receive_msg', arg_alias=undefined)\r\n\t{\r\n\t\tconst bus_name = arg_bus.get_name() + ':' + arg_channel\r\n\t\tthis._bus_unsubscribes[bus_name] = arg_bus.msg_register(this, arg_channel, arg_method, arg_alias)\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Disable distributed messaging.\r\n\t * \r\n\t * @param {MessageBus} arg_bus - message bus.\r\n\t * @param {string} arg_channel - bus channel string (default='default').\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdisable_on_bus(arg_bus, arg_channel='default')\r\n\t{\r\n\t\tconst bus_name = arg_bus.get_name() + ':' + arg_channel\r\n\t\tconst unsubscribe = this._bus_unsubscribes[bus_name]\r\n\t\tif ( T.isFunction(unsubscribe) )\r\n\t\t{\r\n\t\t\tunsubscribe()\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t// -------------------------------- MESSAGES -------------------------------------\r\n\t\r\n\t/**\r\n\t * Create and send a message to an other client.\r\n\t * \r\n\t * @param {string} arg_target_name - recipient name.\r\n\t * @param {object} arg_payload - message payload plain object.\r\n\t * @param {string} arg_channel - channel name string (default='default').\r\n\t * \r\n\t * @returns {boolean} - message send or not.\r\n\t */\r\n\tsend_msg(arg_target_name, arg_payload, arg_channel)\r\n\t{\r\n\t\t// DEBUG\r\n\t\t// this.enable_trace()\r\n\r\n\t\tthis.enter_group('send_msg')\r\n\r\n\t\tlet msg = new DistributedMessage(this.get_name(), arg_target_name, arg_payload, arg_channel)\r\n\t\t\r\n\t\tif (this._msg_bus && msg.check_msg_format(msg) )\r\n\t\t{\r\n\t\t\tthis._msg_bus.msg_post(msg)\r\n\t\t\tthis.leave_group('send_msg')\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\tthis.leave_group('send_msg:bad format')\r\n\t\treturn false\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Process received message (to override in sub classes).\r\n\t * \r\n\t * @param {DistributedMessage} arg_msg - message instance.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\treceive_msg(arg_msg)\r\n\t{\r\n\t\tthis.enter_group('receive_msg')\r\n\t\t// console.log(context + ':receive_msg:from=%s', arg_msg.sender, arg_msg.payload)\r\n\r\n\t\t// DO NOT PROCESS MESSAGES FROM SELF\r\n\t\tif (arg_msg.sender == this.get_name())\r\n\t\t{\r\n\t\t\tthis.leave_group('receive_msg:ignore message from itself')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tthis.leave_group('receive_msg')\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Enable distributed messaging.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tenable_msg()\r\n\t{\r\n\t\tthis.enable_on_bus(this._msg_bus, 'default', 'receive_msg')\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Disable distributed messaging.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdisable_msg()\r\n\t{\r\n\t\tthis.disable_on_bus(this._msg_bus, 'default')\r\n\t}\r\n    \r\n    \r\n\t\r\n\t// -------------------------------- METRICS -------------------------------------\r\n\r\n\t/**\r\n\t * Send a metrics message.\r\n\t * \r\n\t * @param {string} arg_target_name - recipient name.\r\n\t * @param {string} arg_metric_type - type of metrics.\r\n\t * @param {array} arg_metrics - metrics values array.\r\n\t * \r\n\t * @returns {boolean} - message send or not\r\n\t */\r\n\tsend_metrics(arg_target_name, arg_metric_type, arg_metrics)\r\n\t{\r\n\t\tthis.enter_group('send_metrics')\r\n\t\t\r\n\t\tassert( T.isObject(this._metrics_bus), context + ':send_metrics:bad metrics bus object')\r\n\r\n\t\t// console.log(context + ':send_metrics:from=%s, to=%s, type=%s', this.get_name(), arg_target_name, arg_metric_type)\r\n\r\n\t\tlet msg = new DistributedMetrics(this.get_name(), arg_target_name, arg_metric_type, arg_metrics)\r\n\t\t\r\n\t\tif (this._metrics_bus && msg.check_msg_format(msg) )\r\n\t\t{\r\n\t\t\tthis._metrics_bus.msg_post(msg)\r\n\r\n\t\t\t// console.log(context + ':send_metrics:from=%s, to=%s, type=%s', this.get_name(), arg_target_name, arg_metric_type)\r\n\t\t\t\r\n\t\t\tthis.leave_group('send_metrics')\r\n\t\t\treturn true\r\n\t\t}\r\n\t\t\r\n\t\tconsole.error(context + ':send_metrics:BAD FORMAT:from=%s, to=%s, type=%s, values=', this.get_name(), arg_target_name, arg_metric_type, arg_metrics)\r\n\r\n\t\tthis.leave_group('send_metrics:bad format')\r\n\t\treturn false\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Process received metrics message (to override in sub classes).\r\n\t * \r\n\t * @param {DistributedMetrics} arg_msg - metrics message instance.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\treceive_metrics(arg_msg)\r\n\t{\r\n\t\tthis.enter_group('receive_metrics')\r\n\t\t// console.log(context + ':receive_metrics:from=%s', arg_msg.sender, arg_msg.payload)\r\n\r\n\t\t// DO NOT PROCESS MESSAGES FROM SELF\r\n\t\tif (arg_msg.sender == this.get_name())\r\n\t\t{\r\n\t\t\tthis.leave_group('receive_metrics:ignore message from itself')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tthis.leave_group('receive_metrics')\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Enable distributed metrics.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tenable_metrics()\r\n\t{\r\n\t\tthis.enable_on_bus(this._metrics_bus, 'metrics', 'receive_metrics')\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Disable distributed metrics.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdisable_metrics()\r\n\t{\r\n\t\tthis.disable_on_bus(this._metrics_bus, 'metrics')\r\n\t}\r\n\r\n\r\n\r\n\t// -------------------------------- LOGS -------------------------------------\r\n\r\n\t/**\r\n\t * Send a logs message.\r\n\t * \r\n\t * @param {string} arg_target_name - recipient name.\r\n\t * @param {string} arg_timestamp - logs timestamp string.\r\n\t * @param {string} arg_level - logs level string.\r\n\t * @param {array} arg_values - logs values array.\r\n\t * \r\n\t * @returns {boolean} - message send or not\r\n\t */\r\n\tsend_logs(arg_target_name, arg_timestamp, arg_level, arg_values)\r\n\t{\r\n\t\tthis.enter_group('send_logs')\r\n\r\n\t\tlet msg = new DistributedLogs(this.get_name(), arg_target_name, arg_timestamp, arg_level, arg_values)\r\n\t\t\r\n\t\tif (this._logs_bus && msg.check_msg_format(msg) )\r\n\t\t{\r\n\t\t\tthis._logs_bus.msg_post(msg)\r\n\t\t\tthis.leave_group('send_logs')\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\tthis.leave_group('send_logs:bad format')\r\n\t\treturn false\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Process received logs message (to override in sub classes).\r\n\t * \r\n\t * @param {DistributedLogs} arg_msg - logs message instance.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\treceive_logs(arg_msg)\r\n\t{\r\n\t\tthis.enter_group('receive_logs')\r\n\r\n\t\t// console.log(context + ':receive_logs:from=%s', arg_msg.sender, arg_msg.payload)\r\n\r\n\t\t// DO NOT PROCESS MESSAGES FROM SELF\r\n\t\tif (arg_msg.sender == this.get_name())\r\n\t\t{\r\n\t\t\tthis.leave_group('receive_logs:ignore message from itself')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tthis.leave_group('receive_logs')\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Enable distributed logs.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tenable_logs()\r\n\t{\r\n\t\tthis.enable_on_bus(this._logs_bus, 'logs', 'receive_logs')\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Disable distributed logs.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdisable_logs()\r\n\t{\r\n\t\tthis.disable_on_bus(this._logs_bus, 'logs')\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/base/distributed_instance.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 164,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/distributed_instance.js",
    "static": true,
    "longname": "js/base/distributed_instance.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/base/distributed_instance.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 16,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 165,
    "kind": "class",
    "name": "DistributedInstance",
    "memberof": "js/base/distributed_instance.js",
    "static": true,
    "longname": "js/base/distributed_instance.js~DistributedInstance",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/base/distributed_instance.js",
    "importStyle": "DistributedInstance",
    "description": "Distributed instances base class: enable communication inside a node or between nodes.",
    "examples": [
      "API:\n\t\t->load():nothing\n\t    ->load_topology_settings(arg_settings):nothing\n\n\t\t->send(DistributedMessage|DistributedMetrics|DistributedLogs):boolean\n\n     ->enable_on_bus(arg_bus):nothing\n     ->disable_on_bus(arg_bus):nothing\n\nAPI for messages:\n\t\t->send_msg(target, payload):boolean\n\t\t->receive_msg(DistributedMessage):nothing\n\t\t->enable_msg():nothing\n\t\t->disable_msg():nothing\n\nAPI for metrics:\n\t\t->send_metrics(type, values):boolean\n\t\t->receive_metrics(DistributedMetrics):nothing\n\t\t->enable_metrics():nothing\n\t\t->disable_metrics():nothing\n\nAPI for logs:\n\t\t->send_logs(ts, level, texts):boolean\n\t\t->receive_logs(DistributedLogs):nothing\n\t\t->enable_logs():nothing\n\t\t->disable_logs():nothing"
    ],
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/instance.js~Instance"
    ]
  },
  {
    "__docId__": 166,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/distributed_instance.js~DistributedInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_instance.js~DistributedInstance#constructor",
    "access": "public",
    "description": "Create a DistributedInstance.",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_collection",
        "description": "collection name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "server name"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_class",
        "description": "server class name"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "plugin settings map"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context string (optional, default=context)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 167,
    "kind": "member",
    "name": "is_distributed_instance",
    "memberof": "js/base/distributed_instance.js~DistributedInstance",
    "static": false,
    "longname": "js/base/distributed_instance.js~DistributedInstance#is_distributed_instance",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 78,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 168,
    "kind": "member",
    "name": "_msg_bus",
    "memberof": "js/base/distributed_instance.js~DistributedInstance",
    "static": false,
    "longname": "js/base/distributed_instance.js~DistributedInstance#_msg_bus",
    "access": "private",
    "description": "Messages bus instance.",
    "lineNumber": 84,
    "type": {
      "nullable": null,
      "types": [
        "MessageBus"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 169,
    "kind": "member",
    "name": "_metrics_bus",
    "memberof": "js/base/distributed_instance.js~DistributedInstance",
    "static": false,
    "longname": "js/base/distributed_instance.js~DistributedInstance#_metrics_bus",
    "access": "private",
    "description": "Metrics messages bus instance.",
    "lineNumber": 90,
    "type": {
      "nullable": null,
      "types": [
        "MessageBus"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 170,
    "kind": "member",
    "name": "_logs_bus",
    "memberof": "js/base/distributed_instance.js~DistributedInstance",
    "static": false,
    "longname": "js/base/distributed_instance.js~DistributedInstance#_logs_bus",
    "access": "private",
    "description": "Logs messages bus instance.",
    "lineNumber": 96,
    "type": {
      "nullable": null,
      "types": [
        "MessageBus"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 171,
    "kind": "member",
    "name": "_bus_unsubscribes",
    "memberof": "js/base/distributed_instance.js~DistributedInstance",
    "static": false,
    "longname": "js/base/distributed_instance.js~DistributedInstance#_bus_unsubscribes",
    "access": "private",
    "description": "Bus unsubscribes handlers map.",
    "lineNumber": 102,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 172,
    "kind": "method",
    "name": "load",
    "memberof": "js/base/distributed_instance.js~DistributedInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_instance.js~DistributedInstance#load",
    "access": "public",
    "description": "Load instance settings.",
    "lineNumber": 115,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 176,
    "kind": "method",
    "name": "load_topology_settings",
    "memberof": "js/base/distributed_instance.js~DistributedInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_instance.js~DistributedInstance#load_topology_settings",
    "access": "public",
    "description": "Load topology settings.",
    "lineNumber": 142,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "master node settings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 177,
    "kind": "method",
    "name": "send",
    "memberof": "js/base/distributed_instance.js~DistributedInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_instance.js~DistributedInstance#send",
    "access": "public",
    "description": "Send a message to an other client.",
    "lineNumber": 161,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - message send or not"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DistributedMessage"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_msg",
        "description": "message object: a DistributedMessage or DistributedMetrics or DistributedLogs instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "message send or not"
    }
  },
  {
    "__docId__": 178,
    "kind": "method",
    "name": "enable_on_bus",
    "memberof": "js/base/distributed_instance.js~DistributedInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_instance.js~DistributedInstance#enable_on_bus",
    "access": "public",
    "description": "Enable distributed messaging.",
    "lineNumber": 200,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "MessageBus"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_bus",
        "description": "message bus."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_channel",
        "description": "channel name string (default='default')."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_method",
        "description": "receiveing method name string (default='receive_msg')."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_alias",
        "description": "instance alias name string (optional, default undefined)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 179,
    "kind": "method",
    "name": "disable_on_bus",
    "memberof": "js/base/distributed_instance.js~DistributedInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_instance.js~DistributedInstance#disable_on_bus",
    "access": "public",
    "description": "Disable distributed messaging.",
    "lineNumber": 216,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "MessageBus"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_bus",
        "description": "message bus."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_channel",
        "description": "bus channel string (default='default')."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 180,
    "kind": "method",
    "name": "send_msg",
    "memberof": "js/base/distributed_instance.js~DistributedInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_instance.js~DistributedInstance#send_msg",
    "access": "public",
    "description": "Create and send a message to an other client.",
    "lineNumber": 239,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - message send or not."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_target_name",
        "description": "recipient name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_payload",
        "description": "message payload plain object."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_channel",
        "description": "channel name string (default='default')."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "message send or not."
    }
  },
  {
    "__docId__": 181,
    "kind": "method",
    "name": "receive_msg",
    "memberof": "js/base/distributed_instance.js~DistributedInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_instance.js~DistributedInstance#receive_msg",
    "access": "public",
    "description": "Process received message (to override in sub classes).",
    "lineNumber": 268,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DistributedMessage"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_msg",
        "description": "message instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 182,
    "kind": "method",
    "name": "enable_msg",
    "memberof": "js/base/distributed_instance.js~DistributedInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_instance.js~DistributedInstance#enable_msg",
    "access": "public",
    "description": "Enable distributed messaging.",
    "lineNumber": 290,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 183,
    "kind": "method",
    "name": "disable_msg",
    "memberof": "js/base/distributed_instance.js~DistributedInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_instance.js~DistributedInstance#disable_msg",
    "access": "public",
    "description": "Disable distributed messaging.",
    "lineNumber": 302,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 184,
    "kind": "method",
    "name": "send_metrics",
    "memberof": "js/base/distributed_instance.js~DistributedInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_instance.js~DistributedInstance#send_metrics",
    "access": "public",
    "description": "Send a metrics message.",
    "lineNumber": 320,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - message send or not"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_target_name",
        "description": "recipient name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_metric_type",
        "description": "type of metrics."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_metrics",
        "description": "metrics values array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "message send or not"
    }
  },
  {
    "__docId__": 185,
    "kind": "method",
    "name": "receive_metrics",
    "memberof": "js/base/distributed_instance.js~DistributedInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_instance.js~DistributedInstance#receive_metrics",
    "access": "public",
    "description": "Process received metrics message (to override in sub classes).",
    "lineNumber": 355,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DistributedMetrics"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_msg",
        "description": "metrics message instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 186,
    "kind": "method",
    "name": "enable_metrics",
    "memberof": "js/base/distributed_instance.js~DistributedInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_instance.js~DistributedInstance#enable_metrics",
    "access": "public",
    "description": "Enable distributed metrics.",
    "lineNumber": 377,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 187,
    "kind": "method",
    "name": "disable_metrics",
    "memberof": "js/base/distributed_instance.js~DistributedInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_instance.js~DistributedInstance#disable_metrics",
    "access": "public",
    "description": "Disable distributed metrics.",
    "lineNumber": 389,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 188,
    "kind": "method",
    "name": "send_logs",
    "memberof": "js/base/distributed_instance.js~DistributedInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_instance.js~DistributedInstance#send_logs",
    "access": "public",
    "description": "Send a logs message.",
    "lineNumber": 408,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - message send or not"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_target_name",
        "description": "recipient name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_timestamp",
        "description": "logs timestamp string."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_level",
        "description": "logs level string."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_values",
        "description": "logs values array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "message send or not"
    }
  },
  {
    "__docId__": 189,
    "kind": "method",
    "name": "receive_logs",
    "memberof": "js/base/distributed_instance.js~DistributedInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_instance.js~DistributedInstance#receive_logs",
    "access": "public",
    "description": "Process received logs message (to override in sub classes).",
    "lineNumber": 434,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DistributedLogs"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_msg",
        "description": "logs message instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 190,
    "kind": "method",
    "name": "enable_logs",
    "memberof": "js/base/distributed_instance.js~DistributedInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_instance.js~DistributedInstance#enable_logs",
    "access": "public",
    "description": "Enable distributed logs.",
    "lineNumber": 457,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 191,
    "kind": "method",
    "name": "disable_logs",
    "memberof": "js/base/distributed_instance.js~DistributedInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_instance.js~DistributedInstance#disable_logs",
    "access": "public",
    "description": "Disable distributed logs.",
    "lineNumber": 469,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 192,
    "kind": "file",
    "name": "js/base/distributed_logs.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport DistributedMessage from './distributed_message'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\nconst context = 'common/base/distributed_logs'\r\n\r\n\r\n\r\n/**\r\n * DistributedLogs class for distributed communication.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class DistributedLogs extends DistributedMessage\r\n{\r\n    /**\r\n     * Create a DistributedLogs instance.\r\n\t * \r\n\t * @param {string|object} arg_sender_name - sender name or message plain object (without other args).\r\n\t * @param {string} arg_target_name - recipient name.\r\n\t * @param {string} arg_timestamp - logs timestamp string.\r\n\t * @param {string} arg_level - logs level string.\r\n\t * @param {array}  arg_values - logs values array.\r\n\t * @param {string} arg_channel - channel name.\r\n\t * @param {array}  arg_buses_path - message buses path (optional default []).\r\n\t * \r\n     * @returns {nothing}\r\n     */\r\n\tconstructor(arg_sender_name, arg_target_name, arg_timestamp, arg_level, arg_values, arg_channel='logs', arg_buses_path=[])\r\n\t{\r\n\t\t// CASE WITH ONLY ONE ARGUMENT: MESSAGE PLAIN OBJECT\r\n\t\tif (arguments.length == 1)\r\n\t\t{\r\n\t\t\tconst plain_msg = arguments[0]\r\n\t\t\targ_sender_name = plain_msg._sender\r\n\t\t\targ_target_name = plain_msg._target\r\n\t\t\targ_timestamp   = plain_msg._payload.ts\r\n\t\t\targ_level       = plain_msg._payload.level\r\n\t\t\targ_values      = plain_msg._payload.logs\r\n\t\t\targ_channel     = plain_msg._channel\r\n\t\t\targ_buses_path  = plain_msg._buses_path\r\n\t\t}\r\n\r\n\t\tassert( T.isString(arg_timestamp) , context + ':bad log timestamp string')\r\n\t\tassert( T.isString(arg_level) , context + ':bad log level string')\r\n\t\tassert( T.isArray(arg_values), context + ':bad logs values array')\r\n\r\n\t\tconst payload = { ts:arg_timestamp, level:arg_level, source:'SERVER', logs:arg_values }\r\n\r\n\t\tsuper(arg_sender_name, arg_target_name, payload, arg_channel, arg_buses_path)\r\n\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_distributed_logs = true\r\n\r\n\t\tthis.set_channel(arg_channel)\r\n\t}\r\n    \r\n    \r\n\r\n\t/**\r\n\t * Get logs timestamp.\r\n\t * \r\n\t * @returns {string} - logs timestamp.\r\n\t */\r\n\tget_logs_ts()\r\n\t{\r\n\t\treturn this._payload.ts\r\n\t}\r\n    \r\n    \r\n\r\n\t/**\r\n\t * Get logs level.\r\n\t * \r\n\t * @returns {string} - logs level.\r\n\t */\r\n\tget_logs_level()\r\n\t{\r\n\t\treturn this._payload.level\r\n\t}\r\n    \r\n    \r\n\r\n\t/**\r\n\t * Get logs source.\r\n\t * \r\n\t * @returns {string} - logs source.\r\n\t */\r\n\tget_logs_source()\r\n\t{\r\n\t\treturn this._payload.source\r\n\t}\r\n    \r\n    \r\n\r\n\t/**\r\n\t * Get logs values.\r\n\t * \r\n\t * @returns {array} - logs values array.\r\n\t */\r\n\tget_logs_values()\r\n\t{\r\n\t\treturn this._payload.logs\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Check message format.\r\n\t * \r\n\t * @returns {boolean} - true:good format, false:bad format.\r\n\t */\r\n\tcheck_msg_format()\r\n\t{\r\n\t\tif ( ! super.check_msg_format() )\r\n\t\t{\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\tif ( T.isString(this.this._payload.ts) && this.this._payload.ts.length > 0 && T.isString(this.this._payload.level) && this.this._payload.level.length > 0 && T.isArray(this._payload.logs) )\r\n\t\t{\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\treturn false\r\n\t}\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/base/distributed_logs.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 193,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/distributed_logs.js",
    "static": true,
    "longname": "js/base/distributed_logs.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/base/distributed_logs.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 13,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 194,
    "kind": "class",
    "name": "DistributedLogs",
    "memberof": "js/base/distributed_logs.js",
    "static": true,
    "longname": "js/base/distributed_logs.js~DistributedLogs",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/base/distributed_logs.js",
    "importStyle": "DistributedLogs",
    "description": "DistributedLogs class for distributed communication.",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/distributed_message.js~DistributedMessage"
    ]
  },
  {
    "__docId__": 195,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/distributed_logs.js~DistributedLogs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_logs.js~DistributedLogs#constructor",
    "access": "public",
    "description": "Create a DistributedLogs instance.",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_sender_name",
        "description": "sender name or message plain object (without other args)."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_target_name",
        "description": "recipient name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_timestamp",
        "description": "logs timestamp string."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_level",
        "description": "logs level string."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_values",
        "description": "logs values array."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_channel",
        "description": "channel name."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_buses_path",
        "description": "message buses path (optional default [])."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 196,
    "kind": "member",
    "name": "is_distributed_logs",
    "memberof": "js/base/distributed_logs.js~DistributedLogs",
    "static": false,
    "longname": "js/base/distributed_logs.js~DistributedLogs#is_distributed_logs",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 65,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 197,
    "kind": "method",
    "name": "get_logs_ts",
    "memberof": "js/base/distributed_logs.js~DistributedLogs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_logs.js~DistributedLogs#get_logs_ts",
    "access": "public",
    "description": "Get logs timestamp.",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - logs timestamp."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "logs timestamp."
    },
    "params": []
  },
  {
    "__docId__": 198,
    "kind": "method",
    "name": "get_logs_level",
    "memberof": "js/base/distributed_logs.js~DistributedLogs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_logs.js~DistributedLogs#get_logs_level",
    "access": "public",
    "description": "Get logs level.",
    "lineNumber": 89,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - logs level."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "logs level."
    },
    "params": []
  },
  {
    "__docId__": 199,
    "kind": "method",
    "name": "get_logs_source",
    "memberof": "js/base/distributed_logs.js~DistributedLogs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_logs.js~DistributedLogs#get_logs_source",
    "access": "public",
    "description": "Get logs source.",
    "lineNumber": 101,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - logs source."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "logs source."
    },
    "params": []
  },
  {
    "__docId__": 200,
    "kind": "method",
    "name": "get_logs_values",
    "memberof": "js/base/distributed_logs.js~DistributedLogs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_logs.js~DistributedLogs#get_logs_values",
    "access": "public",
    "description": "Get logs values.",
    "lineNumber": 113,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} - logs values array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "logs values array."
    },
    "params": []
  },
  {
    "__docId__": 201,
    "kind": "method",
    "name": "check_msg_format",
    "memberof": "js/base/distributed_logs.js~DistributedLogs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_logs.js~DistributedLogs#check_msg_format",
    "access": "public",
    "description": "Check message format.",
    "lineNumber": 125,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - true:good format, false:bad format."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true:good format, false:bad format."
    },
    "params": []
  },
  {
    "__docId__": 202,
    "kind": "file",
    "name": "js/base/distributed_message.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\nconst context = 'common/base/distributed_message'\r\n\r\n\r\n\r\n/**\r\n * DistributedMessage class for distributed communication.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n * \tAPI:\r\n * \t\t->get_channel():string - get bus channel name.\r\n * \t\t->set_channel(arg_channel):nothing - set bus channel name.\r\n * \t\t->get_sender():string - Get message sender.\r\n * \t\t->...\r\n */\r\nexport default class DistributedMessage\r\n{\r\n    /**\r\n     * Create a DistributedMessage instance.\r\n\t * \r\n\t * @param {string|object} arg_sender_name - sender name or message plain object (without other args).\r\n\t * @param {string} arg_target_name - recipient name.\r\n\t * @param {object} arg_payload - message payload plain object.\r\n\t * @param {string} arg_channel - channel name.\r\n\t * @param {array}  arg_buses_path - message buses path (optional default []).\r\n\t * \r\n     * @returns {nothing}\r\n     */\r\n\tconstructor(arg_sender_name, arg_target_name, arg_payload, arg_channel='default', arg_buses_path=[])\r\n\t{\r\n\t\t// CASE WITH ONLY ONE ARGUMENT: MESSAGE PLAIN OBJECT\r\n\t\tif (arguments.length == 1)\r\n\t\t{\r\n\t\t\tconst plain_msg = arguments[0]\r\n\t\t\targ_sender_name = plain_msg._sender\r\n\t\t\targ_target_name = plain_msg._target\r\n\t\t\targ_payload     = plain_msg._payload\r\n\t\t\targ_channel     = plain_msg._channel\r\n\t\t\targ_buses_path  = plain_msg._buses_path\r\n\t\t}\r\n\r\n\t\tassert( T.isString(arg_sender_name) , context + ':bad sender string')\r\n\t\tassert( T.isString(arg_target_name) , context + ':bad target string')\r\n\t\tassert( T.isObject(arg_payload), context + ':bad payload object')\r\n\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_distributed_message = true\r\n\r\n\t\t/**\r\n\t\t * Message sender name.\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis._sender = arg_sender_name\r\n\r\n\t\t/**\r\n\t\t * Message target name.\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis._target = arg_target_name\r\n\r\n\t\t/**\r\n\t\t * Message payload object.\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tthis._payload = arg_payload\r\n\r\n\t\t/**\r\n\t\t * Message channel name.\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis._channel = arg_channel\r\n\r\n\t\t/**\r\n\t\t * Message buses path.\r\n\t\t * @type {array}\r\n\t\t */\r\n\t\tthis._buses_path = T.isArray(arg_buses_path) ? arg_buses_path : []\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Add a step to message buses path.\r\n\t * \r\n\t * @param {string} arg_bus_name - message step bus name.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tadd_buses_step(arg_bus_name)\r\n\t{\r\n\t\tthis._buses_path.push(arg_bus_name)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Test if message has a step into buses path.\r\n\t * \r\n\t * @param {string} arg_bus_name - message step bus name.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\thas_buses_step(arg_bus_name)\r\n\t{\r\n\t\treturn this._buses_path.indexOf(arg_bus_name) > -1\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get bus channel name.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_channel()\r\n\t{\r\n\t\treturn this._channel\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Set bus channel name.\r\n\t * \r\n\t * @param {string} arg_channel - bus channel name.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tset_channel(arg_channel)\r\n\t{\r\n\t\tthis._channel = arg_channel\r\n\t}\r\n    \r\n    \r\n\r\n\t/**\r\n\t * Get message sender.\r\n\t * \r\n\t * @returns {string} - sender name.\r\n\t */\r\n\tget_sender()\r\n\t{\r\n\t\treturn this._sender\r\n\t}\r\n    \r\n    \r\n\r\n\t/**\r\n\t * Get message sender.\r\n\t * \r\n\t * @returns {string} - target name.\r\n\t */\r\n\tget_target()\r\n\t{\r\n\t\treturn this._target\r\n\t}\r\n    \r\n    \r\n\r\n\t/**\r\n\t * Get message sender.\r\n\t * \r\n\t * @returns {object} - payload object\r\n\t */\r\n\tget_payload()\r\n\t{\r\n\t\treturn this._payload\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Check message format.\r\n\t * \r\n\t * @returns {boolean} - true:good format, false:bad format.\r\n\t */\r\n\tcheck_msg_format()\r\n\t{\r\n\t\t// console.log(context + ':check_msg_format:this', this)\r\n\r\n\t\tif ( T.isString(this._sender) && this._sender.length > 0 && T.isString(this._target) && this._target.length > 0 && T.isObject(this._payload) )\r\n\t\t{\r\n\t\t\treturn true\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/base/distributed_message.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 203,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/distributed_message.js",
    "static": true,
    "longname": "js/base/distributed_message.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/base/distributed_message.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 12,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 204,
    "kind": "class",
    "name": "DistributedMessage",
    "memberof": "js/base/distributed_message.js",
    "static": true,
    "longname": "js/base/distributed_message.js~DistributedMessage",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/base/distributed_message.js",
    "importStyle": "DistributedMessage",
    "description": "DistributedMessage class for distributed communication.",
    "examples": [
      "\tAPI:\n\t\t->get_channel():string - get bus channel name.\n\t\t->set_channel(arg_channel):nothing - set bus channel name.\n\t\t->get_sender():string - Get message sender.\n\t\t->..."
    ],
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 205,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/distributed_message.js~DistributedMessage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_message.js~DistributedMessage#constructor",
    "access": "public",
    "description": "Create a DistributedMessage instance.",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_sender_name",
        "description": "sender name or message plain object (without other args)."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_target_name",
        "description": "recipient name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_payload",
        "description": "message payload plain object."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_channel",
        "description": "channel name."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_buses_path",
        "description": "message buses path (optional default [])."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 206,
    "kind": "member",
    "name": "is_distributed_message",
    "memberof": "js/base/distributed_message.js~DistributedMessage",
    "static": false,
    "longname": "js/base/distributed_message.js~DistributedMessage#is_distributed_message",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 63,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 207,
    "kind": "member",
    "name": "_sender",
    "memberof": "js/base/distributed_message.js~DistributedMessage",
    "static": false,
    "longname": "js/base/distributed_message.js~DistributedMessage#_sender",
    "access": "private",
    "description": "Message sender name.",
    "lineNumber": 69,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 208,
    "kind": "member",
    "name": "_target",
    "memberof": "js/base/distributed_message.js~DistributedMessage",
    "static": false,
    "longname": "js/base/distributed_message.js~DistributedMessage#_target",
    "access": "private",
    "description": "Message target name.",
    "lineNumber": 75,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 209,
    "kind": "member",
    "name": "_payload",
    "memberof": "js/base/distributed_message.js~DistributedMessage",
    "static": false,
    "longname": "js/base/distributed_message.js~DistributedMessage#_payload",
    "access": "private",
    "description": "Message payload object.",
    "lineNumber": 81,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 210,
    "kind": "member",
    "name": "_channel",
    "memberof": "js/base/distributed_message.js~DistributedMessage",
    "static": false,
    "longname": "js/base/distributed_message.js~DistributedMessage#_channel",
    "access": "private",
    "description": "Message channel name.",
    "lineNumber": 87,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 211,
    "kind": "member",
    "name": "_buses_path",
    "memberof": "js/base/distributed_message.js~DistributedMessage",
    "static": false,
    "longname": "js/base/distributed_message.js~DistributedMessage#_buses_path",
    "access": "private",
    "description": "Message buses path.",
    "lineNumber": 93,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 212,
    "kind": "method",
    "name": "add_buses_step",
    "memberof": "js/base/distributed_message.js~DistributedMessage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_message.js~DistributedMessage#add_buses_step",
    "access": "public",
    "description": "Add a step to message buses path.",
    "lineNumber": 105,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_bus_name",
        "description": "message step bus name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 213,
    "kind": "method",
    "name": "has_buses_step",
    "memberof": "js/base/distributed_message.js~DistributedMessage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_message.js~DistributedMessage#has_buses_step",
    "access": "public",
    "description": "Test if message has a step into buses path.",
    "lineNumber": 119,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_bus_name",
        "description": "message step bus name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 214,
    "kind": "method",
    "name": "get_channel",
    "memberof": "js/base/distributed_message.js~DistributedMessage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_message.js~DistributedMessage#get_channel",
    "access": "public",
    "description": "Get bus channel name.",
    "lineNumber": 131,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 215,
    "kind": "method",
    "name": "set_channel",
    "memberof": "js/base/distributed_message.js~DistributedMessage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_message.js~DistributedMessage#set_channel",
    "access": "public",
    "description": "Set bus channel name.",
    "lineNumber": 145,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_channel",
        "description": "bus channel name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 217,
    "kind": "method",
    "name": "get_sender",
    "memberof": "js/base/distributed_message.js~DistributedMessage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_message.js~DistributedMessage#get_sender",
    "access": "public",
    "description": "Get message sender.",
    "lineNumber": 157,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - sender name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "sender name."
    },
    "params": []
  },
  {
    "__docId__": 218,
    "kind": "method",
    "name": "get_target",
    "memberof": "js/base/distributed_message.js~DistributedMessage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_message.js~DistributedMessage#get_target",
    "access": "public",
    "description": "Get message sender.",
    "lineNumber": 169,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - target name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "target name."
    },
    "params": []
  },
  {
    "__docId__": 219,
    "kind": "method",
    "name": "get_payload",
    "memberof": "js/base/distributed_message.js~DistributedMessage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_message.js~DistributedMessage#get_payload",
    "access": "public",
    "description": "Get message sender.",
    "lineNumber": 181,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - payload object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "payload object"
    },
    "params": []
  },
  {
    "__docId__": 220,
    "kind": "method",
    "name": "check_msg_format",
    "memberof": "js/base/distributed_message.js~DistributedMessage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_message.js~DistributedMessage#check_msg_format",
    "access": "public",
    "description": "Check message format.",
    "lineNumber": 193,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - true:good format, false:bad format."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true:good format, false:bad format."
    },
    "params": []
  },
  {
    "__docId__": 221,
    "kind": "file",
    "name": "js/base/distributed_metrics.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport DistributedMessage from './distributed_message'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\nconst context = 'common/base/distributed_metrics'\r\n\r\n\r\n\r\n/**\r\n * DistributedMetrics class for distributed communication.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class DistributedMetrics extends DistributedMessage\r\n{\r\n    /**\r\n     * Create a DistributedMetrics instance.\r\n\t * \r\n\t * @param {string|object} arg_sender_name - sender name or message plain object (without other args).\r\n\t * @param {string} arg_target_name - recipient name.\r\n\t * @param {string} arg_type - metrics type string.\r\n\t * @param {array} arg_values - metrics values array.\r\n\t * @param {string} arg_channel - channel name.\r\n\t * @param {array}  arg_buses_path - message buses path (optional default []).\r\n\t * \r\n     * @returns {nothing}\r\n     */\r\n\tconstructor(arg_sender_name, arg_target_name, arg_type, arg_values, arg_channel='metrics', arg_buses_path=[])\r\n\t{\r\n\t\t// CASE WITH ONLY ONE ARGUMENT: MESSAGE PLAIN OBJECT\r\n\t\tif (arguments.length == 1)\r\n\t\t{\r\n\t\t\tconst plain_msg = arguments[0]\r\n\t\t\targ_sender_name = plain_msg._sender\r\n\t\t\targ_target_name = plain_msg._target\r\n\t\t\targ_type        = plain_msg._payload.metric\r\n\t\t\targ_values      = plain_msg._payload.metrics\r\n\t\t\targ_channel     = plain_msg._channel\r\n\t\t\targ_buses_path  = plain_msg._buses_path\r\n\t\t}\r\n\r\n\t\tassert( T.isString(arg_type) , context + ':bad metric type string')\r\n\t\tassert( T.isArray(arg_values), context + ':bad metrics values array')\r\n\r\n\t\tconst payload = { metric:arg_type, metrics:arg_values }\r\n\t\t\r\n\t\tsuper(arg_sender_name, arg_target_name, payload, arg_channel, arg_buses_path)\r\n\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_distributed_metrics = true\r\n\r\n\t\tthis.set_channel(arg_channel)\r\n\t}\r\n    \r\n    \r\n\r\n\t/**\r\n\t * Get metric type.\r\n\t * \r\n\t * @returns {string} - metric type.\r\n\t */\r\n\tget_metrics_type()\r\n\t{\r\n\t\treturn this._payload.metric\r\n\t}\r\n    \r\n    \r\n\r\n\t/**\r\n\t * Get metrics values.\r\n\t * \r\n\t * @returns {array} - metrics values array.\r\n\t */\r\n\tget_metrics_values()\r\n\t{\r\n\t\treturn this._payload.metrics\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Check message format.\r\n\t * \r\n\t * @returns {boolean} - true:good format, false:bad format.\r\n\t */\r\n\tcheck_msg_format()\r\n\t{\r\n\t\t// console.log(context + ':check_msg_format:this', this)\r\n\r\n\t\tif ( ! super.check_msg_format() )\r\n\t\t{\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\t// console.log(context + ':check_msg_format:this._payload.metric=%s, this._payload.metrics=%s', this._payload.metric, this._payload.metrics)\r\n\t\tif ( T.isString(this._payload.metric) && this._payload.metric.length > 0 && T.isArray(this._payload.metrics) )\r\n\t\t{\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\treturn false\r\n\t}\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/base/distributed_metrics.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 222,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/distributed_metrics.js",
    "static": true,
    "longname": "js/base/distributed_metrics.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/base/distributed_metrics.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 13,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 223,
    "kind": "class",
    "name": "DistributedMetrics",
    "memberof": "js/base/distributed_metrics.js",
    "static": true,
    "longname": "js/base/distributed_metrics.js~DistributedMetrics",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/base/distributed_metrics.js",
    "importStyle": "DistributedMetrics",
    "description": "DistributedMetrics class for distributed communication.",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/distributed_message.js~DistributedMessage"
    ]
  },
  {
    "__docId__": 224,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/distributed_metrics.js~DistributedMetrics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_metrics.js~DistributedMetrics#constructor",
    "access": "public",
    "description": "Create a DistributedMetrics instance.",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_sender_name",
        "description": "sender name or message plain object (without other args)."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_target_name",
        "description": "recipient name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_type",
        "description": "metrics type string."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_values",
        "description": "metrics values array."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_channel",
        "description": "channel name."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_buses_path",
        "description": "message buses path (optional default [])."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 225,
    "kind": "member",
    "name": "is_distributed_metrics",
    "memberof": "js/base/distributed_metrics.js~DistributedMetrics",
    "static": false,
    "longname": "js/base/distributed_metrics.js~DistributedMetrics#is_distributed_metrics",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 62,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 226,
    "kind": "method",
    "name": "get_metrics_type",
    "memberof": "js/base/distributed_metrics.js~DistributedMetrics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_metrics.js~DistributedMetrics#get_metrics_type",
    "access": "public",
    "description": "Get metric type.",
    "lineNumber": 74,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - metric type."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "metric type."
    },
    "params": []
  },
  {
    "__docId__": 227,
    "kind": "method",
    "name": "get_metrics_values",
    "memberof": "js/base/distributed_metrics.js~DistributedMetrics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_metrics.js~DistributedMetrics#get_metrics_values",
    "access": "public",
    "description": "Get metrics values.",
    "lineNumber": 86,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} - metrics values array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "metrics values array."
    },
    "params": []
  },
  {
    "__docId__": 228,
    "kind": "method",
    "name": "check_msg_format",
    "memberof": "js/base/distributed_metrics.js~DistributedMetrics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/distributed_metrics.js~DistributedMetrics#check_msg_format",
    "access": "public",
    "description": "Check message format.",
    "lineNumber": 98,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - true:good format, false:bad format."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true:good format, false:bad format."
    },
    "params": []
  },
  {
    "__docId__": 229,
    "kind": "file",
    "name": "js/base/errorable.js",
    "content": "// COMMON IMPORTS\r\nimport Loggable from './loggable'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\nlet context = 'common/base/errorable'\r\n\r\n\r\n\r\n/**\r\n * Base class to deal with errors.\r\n * @abstract\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class Errorable extends Loggable\r\n{\r\n\t/**\r\n\t * Create an Errorable instance.\r\n\t * \r\n\t * @param {string} arg_log_context - trace context.\r\n\t * @param {LoggerManager} arg_logger_manager - logger manager object (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_log_context, arg_logger_manager)\r\n\t{\r\n\t\tconst my_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(my_context, arg_logger_manager)\r\n\t\t\r\n\t\t/**\r\n\t\t * Has error flag (default false).\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis._has_error = false\r\n\r\n\t\t/**\r\n\t\t * Error text (default null).\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis._error_msg = null\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Set an error.\r\n\t * @param {string} arg_msg - error message\r\n\t * @returns {nothing}\r\n\t */\r\n\terror(arg_msg)\r\n\t{\r\n\t\tthis._has_error = true\r\n\t\tthis._error_msg = arg_msg\r\n\t\tsuper.error(arg_msg)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Test is an error is set.\r\n\t * @returns {boolean}\r\n\t */\r\n\thas_error()\r\n\t{\r\n\t\treturn this._has_error\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Get error message.\r\n\t * @returns {string}\r\n\t */\r\n\tget_error_msg()\r\n\t{\r\n\t\treturn this._error_msg\r\n\t}\r\n    \r\n    \r\n\t/**\r\n\t * Default helper for \"not implemented\" error.\r\n\t */\r\n\terror_not_implemented()\r\n\t{\r\n\t\tthis.error('should be implemented')\r\n\t}\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/base/errorable.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 230,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/errorable.js",
    "static": true,
    "longname": "js/base/errorable.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/base/errorable.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 9,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 231,
    "kind": "class",
    "name": "Errorable",
    "memberof": "js/base/errorable.js",
    "static": true,
    "longname": "js/base/errorable.js~Errorable",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/base/errorable.js",
    "importStyle": "Errorable",
    "description": "Base class to deal with errors.",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "abstract": true,
    "interface": false,
    "extends": [
      "js/base/loggable.js~Loggable"
    ]
  },
  {
    "__docId__": 232,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/errorable.js~Errorable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/errorable.js~Errorable#constructor",
    "access": "public",
    "description": "Create an Errorable instance.",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context."
      },
      {
        "nullable": null,
        "types": [
          "LoggerManager"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_logger_manager",
        "description": "logger manager object (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 233,
    "kind": "member",
    "name": "_has_error",
    "memberof": "js/base/errorable.js~Errorable",
    "static": false,
    "longname": "js/base/errorable.js~Errorable#_has_error",
    "access": "private",
    "description": "Has error flag (default false).",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 234,
    "kind": "member",
    "name": "_error_msg",
    "memberof": "js/base/errorable.js~Errorable",
    "static": false,
    "longname": "js/base/errorable.js~Errorable#_error_msg",
    "access": "private",
    "description": "Error text (default null).",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 235,
    "kind": "method",
    "name": "error",
    "memberof": "js/base/errorable.js~Errorable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/errorable.js~Errorable#error",
    "access": "public",
    "description": "Set an error.",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_msg",
        "description": "error message"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 238,
    "kind": "method",
    "name": "has_error",
    "memberof": "js/base/errorable.js~Errorable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/errorable.js~Errorable#has_error",
    "access": "public",
    "description": "Test is an error is set.",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 239,
    "kind": "method",
    "name": "get_error_msg",
    "memberof": "js/base/errorable.js~Errorable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/errorable.js~Errorable#get_error_msg",
    "access": "public",
    "description": "Get error message.",
    "lineNumber": 76,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 240,
    "kind": "method",
    "name": "error_not_implemented",
    "memberof": "js/base/errorable.js~Errorable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/errorable.js~Errorable#error_not_implemented",
    "access": "public",
    "description": "Default helper for \"not implemented\" error.",
    "lineNumber": 85,
    "params": [],
    "return": null
  },
  {
    "__docId__": 241,
    "kind": "file",
    "name": "js/base/executable.js",
    "content": "// COMMON IMPORTS\r\nimport Errorable from './errorable'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\nlet context = 'common/base/executable'\r\n\r\n\r\n\r\n/**\r\n * Executable base class.\r\n * @abstract\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class Executable extends Errorable\r\n{\r\n\t/**\r\n\t * Create an Executable base class.\r\n\t * \r\n\t * @param {string|undefined} arg_log_context - (optional).\r\n\t * @param {LoggerManager} arg_logger_manager - logger manager object (optional).\r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_log_context=context, arg_logger_manager)\r\n\t{\r\n\t\tsuper(arg_log_context, arg_logger_manager)\r\n\t\t\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_executable = true\r\n\r\n\t\t/**\r\n\t\t * This object name.\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis._name = 'no name'\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Prepare an execution with contextual informations.\r\n\t * @abstract\r\n\t * \r\n\t * @param {object} arg_settings - execution settings.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tprepare(arg_settings)\r\n\t{\r\n\t\targ_settings = arg_settings ? arg_settings : undefined // for ESLint unused variable error\r\n\t\treturn arg_settings ? undefined : undefined \r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Execution with contextual informations.\r\n\t * @abstract\r\n\t * \r\n\t * @param {object} arg_data - execution datas.\r\n\t * \r\n\t * @returns {object} promise\r\n\t */\r\n\texecute(arg_data)\r\n\t{\r\n\t\targ_data = arg_data ? arg_data : undefined // for ESLint unused variable error\r\n\t\treturn Promise.reject('not implemented') || arg_data // to skip error with unused arg\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Finish (todo).\r\n\t * @abstract\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tfinish()\r\n\t{\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * On execution success (todo).\r\n\t * @abstract\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\texec_ack()\r\n\t{\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * On execution failure (todo).\r\n\t * @abstract\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\texec_fail()\r\n\t{\r\n\t}\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/base/executable.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 242,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/executable.js",
    "static": true,
    "longname": "js/base/executable.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/base/executable.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 9,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 243,
    "kind": "class",
    "name": "Executable",
    "memberof": "js/base/executable.js",
    "static": true,
    "longname": "js/base/executable.js~Executable",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/base/executable.js",
    "importStyle": "Executable",
    "description": "Executable base class.",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "abstract": true,
    "interface": false,
    "extends": [
      "js/base/errorable.js~Errorable"
    ]
  },
  {
    "__docId__": 244,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/executable.js~Executable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/executable.js~Executable#constructor",
    "access": "public",
    "description": "Create an Executable base class.",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "(optional)."
      },
      {
        "nullable": null,
        "types": [
          "LoggerManager"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_logger_manager",
        "description": "logger manager object (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 245,
    "kind": "member",
    "name": "is_executable",
    "memberof": "js/base/executable.js~Executable",
    "static": false,
    "longname": "js/base/executable.js~Executable#is_executable",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 246,
    "kind": "member",
    "name": "_name",
    "memberof": "js/base/executable.js~Executable",
    "static": false,
    "longname": "js/base/executable.js~Executable#_name",
    "access": "private",
    "description": "This object name.",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 247,
    "kind": "method",
    "name": "prepare",
    "memberof": "js/base/executable.js~Executable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/executable.js~Executable#prepare",
    "access": "public",
    "description": "Prepare an execution with contextual informations.",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "execution settings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true
  },
  {
    "__docId__": 248,
    "kind": "method",
    "name": "execute",
    "memberof": "js/base/executable.js~Executable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/executable.js~Executable#execute",
    "access": "public",
    "description": "Execution with contextual informations.",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} promise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_data",
        "description": "execution datas."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "promise"
    },
    "abstract": true
  },
  {
    "__docId__": 249,
    "kind": "method",
    "name": "finish",
    "memberof": "js/base/executable.js~Executable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/executable.js~Executable#finish",
    "access": "public",
    "description": "Finish (todo).",
    "lineNumber": 83,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true,
    "params": []
  },
  {
    "__docId__": 250,
    "kind": "method",
    "name": "exec_ack",
    "memberof": "js/base/executable.js~Executable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/executable.js~Executable#exec_ack",
    "access": "public",
    "description": "On execution success (todo).",
    "lineNumber": 94,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true,
    "params": []
  },
  {
    "__docId__": 251,
    "kind": "method",
    "name": "exec_fail",
    "memberof": "js/base/executable.js~Executable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/executable.js~Executable#exec_fail",
    "access": "public",
    "description": "On execution failure (todo).",
    "lineNumber": 105,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true,
    "params": []
  },
  {
    "__docId__": 252,
    "kind": "file",
    "name": "js/base/instance.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport uid from '../utils/uid'\r\nimport { is_browser, is_server } from '../utils/is_browser'\r\nimport Stateable from './stateable'\r\nimport runtime from './runtime'\r\n\r\n// SERVER INSTANCE\r\nimport topology_registry from '../topology/registry/index'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\nconst context = 'common/base/instance'\r\n\r\n\r\n\r\n/**\r\n * Collections list.\r\n * @private\r\n */\r\nconst NOT_STORED_COLLECTIONS = ['defined_topology', 'deployed_topology', 'registered_services', 'components', 'svc_providers', 'svc_consumers', 'buses', 'remote_bus_gateways']\r\n\r\n\r\n\r\n/**\r\n * Devapt base class for resources, servers, Collection items...\r\n * @abstract\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class Instance extends Stateable\r\n{\r\n\t/**\r\n\t * Create an instance.\r\n\t * \r\n\t * @param {string} arg_collection - collection name.\r\n\t * @param {string} arg_class - class name.\r\n\t * @param {string} arg_name - instance name.\r\n\t * @param {Immutable.Map|object} arg_settings - settings plain object\r\n\t * @param {string} arg_log_context - log context.\r\n\t * @param {LoggerManager} arg_logger_manager - logger manager object (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_collection, arg_class, arg_name, arg_settings, arg_log_context, arg_logger_manager)\r\n\t{\r\n\t\t// Loggable.static_debug(context, 'Instance.constructor(%s,%s,%s)', arg_collection, arg_class, arg_name)\r\n\t\t// Loggable.static_info(context, 'Instance.constructor(%s,%s,%s)', arg_collection, arg_class, arg_name)\r\n\t\t\r\n\t\t// console.log('Instance collection:%s class:%s name:%s context:%s', arg_collection, arg_class, arg_name, arg_log_context)\r\n\t\t\r\n\t\t// DEBUG\r\n\t\tif ( ! ( T.isString(arg_name) && arg_name.length > 0) )\r\n\t\t{\r\n\t\t\tconsole.error(context + ':Instance.constructor(%s,%s,%s)', arg_collection, arg_class, arg_name, arg_settings)\r\n\t\t}\r\n\t\t\r\n\t\tassert( T.isString(arg_collection) && arg_collection.length > 0, context + ':bad collection string')\r\n\t\tassert( (NOT_STORED_COLLECTIONS.indexOf(arg_collection) > -1) || topology_registry.has_collection(arg_collection), context + ':bad collection for ' + arg_collection)\r\n\t\tassert( T.isString(arg_class) && arg_class.length > 0, context + ':bad class [' + arg_class + ']')\r\n\t\tassert( T.isString(arg_name) && arg_name.length > 0, context + ':bad name [' + arg_name + ']')\r\n\t\t\r\n\t\tconst my_uid = uid()\r\n\t\tconst my_info = `[${arg_collection},${my_uid}] `\r\n\t\tconst my_context = arg_log_context ? arg_log_context + my_info : context + my_info\r\n\t\t\r\n\t\t// const runtime = undefined\r\n\t\tconst default_state = {}\r\n\r\n\t\tif (! arg_logger_manager && runtime)\r\n\t\t{\r\n\t\t\targ_logger_manager = runtime.get_logger_manager()\r\n\t\t}\r\n\t\tsuper(arg_settings, runtime, default_state, my_context, arg_logger_manager)\r\n\r\n\r\n        // CLASS ATTRIBUTES\r\n\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_instance = true\r\n        \r\n\r\n        // INSTANCE ATTRIBUTES\r\n\r\n\t\t/**\r\n\t\t * Instance is loaded flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_loaded = false\r\n\r\n\t\t/**\r\n\t\t * Instance id.\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis.$id = my_uid\r\n\r\n\t\t/**\r\n\t\t * Instance name.\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis.$name = arg_name\r\n\r\n\t\t/**\r\n\t\t * Instance collection name.\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis.$type = arg_collection\r\n\r\n\t\t/**\r\n\t\t * Instance class name.\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis.$class = arg_class\r\n\t\t\r\n\t\t// REGISTER INSTANCE IN TOPOLOGY\r\n\t\tif (is_server())\r\n\t\t{\r\n\t\t\tif ( topology_registry.has_collection(arg_collection) )\r\n\t\t\t{\r\n\t\t\t\ttopology_registry.set_item( ['runtime', 'instances', this.$name], {'id':this.$id, 'name':this.$name, 'class':this.$class, 'type':this.$type} )\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// UPDATE TRACE FLAG\r\n\t\tif ( ! this.is_server_runtime )\r\n\t\t{\r\n\t\t\tthis.update_trace_enabled()\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Get instance unique id.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_id()\r\n\t{\r\n\t\treturn this.$id\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Get instance unique name.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_name()\r\n\t{\r\n\t\treturn this.$name\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * Get instance type.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_type()\r\n\t{\r\n\t\treturn this.$type\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * Get instance class.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_class()\r\n\t{\r\n\t\treturn this.$class\r\n\t}\r\n\t\r\n\t\r\n\r\n    /**\r\n     * Get instance description: {$type:..., $class:..., $id:..., $name:...}.\r\n\t * \r\n     * @returns {object} - instance object description\r\n     */\r\n\tget_descriptor()\r\n\t{\r\n\t\treturn { $type:this.$type, $class:this.$class, $id:this.$id, $name:this.$name }\r\n\t}\r\n\t\r\n\r\n\t\r\n    /**\r\n     * Get instance description string: $type:..., $class:..., $id:..., $name:....\r\n\t * \r\n     * @returns {string} - instance object description\r\n     */\r\n\tget_descriptor_string()\r\n\t{\r\n\t\treturn '{$type:' + this.get_type() + ', $class:' + this.get_class() + ', $id:' + this.get_id() + ', $name:' + this.get_name() + '}'\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Test if this code run inside a browser.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tis_browser() { return is_browser() }\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * Test if this code run on a browser.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tis_server() { return is_server() }\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Load instance settings.\r\n\t * @abstract\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tload()\r\n\t{\r\n\t\tthis.is_loaded = true\r\n\t\tif ( ! this.is_server_runtime )\r\n\t\t{\r\n\t\t\tthis.update_trace_enabled()\r\n\t\t}\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/base/instance.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 253,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/instance.js",
    "static": true,
    "longname": "js/base/instance.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/base/instance.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 19,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 254,
    "kind": "variable",
    "name": "NOT_STORED_COLLECTIONS",
    "memberof": "js/base/instance.js",
    "static": true,
    "longname": "js/base/instance.js~NOT_STORED_COLLECTIONS",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/base/instance.js",
    "importStyle": null,
    "description": "Collections list.",
    "lineNumber": 27,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 255,
    "kind": "class",
    "name": "Instance",
    "memberof": "js/base/instance.js",
    "static": true,
    "longname": "js/base/instance.js~Instance",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/base/instance.js",
    "importStyle": "Instance",
    "description": "Devapt base class for resources, servers, Collection items...",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "abstract": true,
    "interface": false,
    "extends": [
      "js/base/stateable.js~Stateable"
    ]
  },
  {
    "__docId__": 256,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/instance.js~Instance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/instance.js~Instance#constructor",
    "access": "public",
    "description": "Create an instance.",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_collection",
        "description": "collection name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_class",
        "description": "class name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      },
      {
        "nullable": null,
        "types": [
          "Immutable.Map",
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "settings plain object"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "log context."
      },
      {
        "nullable": null,
        "types": [
          "LoggerManager"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_logger_manager",
        "description": "logger manager object (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 257,
    "kind": "member",
    "name": "is_instance",
    "memberof": "js/base/instance.js~Instance",
    "static": false,
    "longname": "js/base/instance.js~Instance#is_instance",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 91,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 258,
    "kind": "member",
    "name": "is_loaded",
    "memberof": "js/base/instance.js~Instance",
    "static": false,
    "longname": "js/base/instance.js~Instance#is_loaded",
    "access": "public",
    "description": "Instance is loaded flag.",
    "lineNumber": 100,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 259,
    "kind": "member",
    "name": "$id",
    "memberof": "js/base/instance.js~Instance",
    "static": false,
    "longname": "js/base/instance.js~Instance#$id",
    "access": "public",
    "description": "Instance id.",
    "lineNumber": 106,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 260,
    "kind": "member",
    "name": "$name",
    "memberof": "js/base/instance.js~Instance",
    "static": false,
    "longname": "js/base/instance.js~Instance#$name",
    "access": "public",
    "description": "Instance name.",
    "lineNumber": 112,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 261,
    "kind": "member",
    "name": "$type",
    "memberof": "js/base/instance.js~Instance",
    "static": false,
    "longname": "js/base/instance.js~Instance#$type",
    "access": "public",
    "description": "Instance collection name.",
    "lineNumber": 118,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 262,
    "kind": "member",
    "name": "$class",
    "memberof": "js/base/instance.js~Instance",
    "static": false,
    "longname": "js/base/instance.js~Instance#$class",
    "access": "public",
    "description": "Instance class name.",
    "lineNumber": 124,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 263,
    "kind": "method",
    "name": "get_id",
    "memberof": "js/base/instance.js~Instance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/instance.js~Instance#get_id",
    "access": "public",
    "description": "Get instance unique id.",
    "lineNumber": 149,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 264,
    "kind": "method",
    "name": "get_name",
    "memberof": "js/base/instance.js~Instance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/instance.js~Instance#get_name",
    "access": "public",
    "description": "Get instance unique name.",
    "lineNumber": 161,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 265,
    "kind": "method",
    "name": "get_type",
    "memberof": "js/base/instance.js~Instance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/instance.js~Instance#get_type",
    "access": "public",
    "description": "Get instance type.",
    "lineNumber": 173,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 266,
    "kind": "method",
    "name": "get_class",
    "memberof": "js/base/instance.js~Instance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/instance.js~Instance#get_class",
    "access": "public",
    "description": "Get instance class.",
    "lineNumber": 185,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 267,
    "kind": "method",
    "name": "get_descriptor",
    "memberof": "js/base/instance.js~Instance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/instance.js~Instance#get_descriptor",
    "access": "public",
    "description": "Get instance description: {$type:..., $class:..., $id:..., $name:...}.",
    "lineNumber": 197,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - instance object description"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "instance object description"
    },
    "params": []
  },
  {
    "__docId__": 268,
    "kind": "method",
    "name": "get_descriptor_string",
    "memberof": "js/base/instance.js~Instance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/instance.js~Instance#get_descriptor_string",
    "access": "public",
    "description": "Get instance description string: $type:..., $class:..., $id:..., $name:....",
    "lineNumber": 209,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - instance object description"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "instance object description"
    },
    "params": []
  },
  {
    "__docId__": 269,
    "kind": "method",
    "name": "is_browser",
    "memberof": "js/base/instance.js~Instance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/instance.js~Instance#is_browser",
    "access": "public",
    "description": "Test if this code run inside a browser.",
    "lineNumber": 221,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 270,
    "kind": "method",
    "name": "is_server",
    "memberof": "js/base/instance.js~Instance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/instance.js~Instance#is_server",
    "access": "public",
    "description": "Test if this code run on a browser.",
    "lineNumber": 230,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 271,
    "kind": "method",
    "name": "load",
    "memberof": "js/base/instance.js~Instance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/instance.js~Instance#load",
    "access": "public",
    "description": "Load instance settings.",
    "lineNumber": 240,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true,
    "params": []
  },
  {
    "__docId__": 273,
    "kind": "file",
    "name": "js/base/introspectable.js",
    "content": "\r\n// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\nlet context = 'common/base/introspectable'\r\n\r\n\r\n\r\n/**\r\n * Base class to build easily classes.\r\n * @abstract\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n* \tProperty record format:\r\n* \t\t{\r\n*\t\t\tname:string,\r\n*\t\t\ttype:string,\r\n*\t\t\tvalue:any,\r\n*\t\t\tprivate:boolean,\r\n*\t\t\tgetter:boolean,\r\n* \t\t\tsetter:boolean,\r\n*\t\t\ttester:boolean\r\n* \t\t}\r\n* \tAPI:\r\n* \t\t->has_property(arg_name):boolean - test if instance has given named property.\r\n* \t\t->add_property(arg_record:object):boolean - add given named property.\r\n* \t\t\r\n* \t\t->set_property_value(arg_name, arg_value)\r\n* \t\t->set_properties_values(arg_values:object|array):boolean - set properties values with arg_values as { prop_name_1:value1, ... }\r\n* \t\t\r\n* \t\t->has_method(arg_name):boolean - test if instance has given named method.\r\n* \t\t->add_method(arg_record:object):boolean - add given named method.\r\n */\r\nexport default class Introspectable\r\n{\r\n\t/**\r\n\t * Create an Introspectable instance.\r\n\t * \r\n\t * @param {object} arg_properties - properties records as { name:'...', type:'', getter:true, setter: true, tester:true }.\r\n\t * @param {object} arg_methods - methods records as { name:'...', type:'', functor:(...)=>{} }\r\n\t * @param {object|undefined} arg_values - properties values (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_properties=[], arg_methods=[], arg_values=undefined)\r\n\t{\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_introspectable = true\r\n\t\t\r\n\t\t/**\r\n\t\t * Properties map.\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tthis._properties = {}\r\n\r\n\t\t/**\r\n\t\t * Properties names array.\r\n\t\t * @type {array}\r\n\t\t */\r\n\t\tthis._properties_names = []\r\n\r\n\t\t/**\r\n\t\t * Methods map.\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tthis._methods = {}\r\n\r\n\t\t/**\r\n\t\t * Methods names array.\r\n\t\t * @type {array}\r\n\t\t */\r\n\t\tthis._methods_names = []\r\n\r\n\t\t// REGISTER PROPERTIES\r\n\t\targ_properties.forEach(\r\n\t\t\t(prop_record)=>{\r\n\t\t\t\tthis.add_property(prop_record)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\t// REGISTER METHODS\r\n\t\t// arg_methods.forEach(\r\n\t\t// \t(method_record)=>{\r\n\t\t\t\t// this.add_method(method_record) // TODO\r\n\t\t// \t}\r\n\t\t// )\r\n\r\n\t\t// SET VALUES\r\n\t\tthis.set_properties_values(arg_values)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Test if instance has given named property.\r\n\t * \r\n\t * @param {string} arg_name - property name.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\thas_property(arg_name)\r\n\t{\r\n\t\treturn (arg_name in this._properties) && ('current' in this[arg_name])\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Test if instance has given named property.\r\n\t * \r\n\t * @param {object} arg_record - property record.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tadd_property(arg_record)\r\n\t{\r\n\t\tassert( T.isObject(arg_record), context + ':add_property:bad property record object')\r\n\r\n\t\tconst name     = T.isString(arg_record.name) ? arg_record.name.toLocaleLowerCase() : undefined\r\n\t\tconst type     = T.isString(arg_record.type) ? arg_record.type.toLocaleLowerCase() : 'string'\r\n\t\tconst value    = arg_record.value\r\n\t\tconst is_priv  = T.isBoolean(arg_record.private) ? arg_record.private : true\r\n\t\tconst getter   = T.isBoolean(arg_record.getter) ? arg_record.getter : true\r\n\t\tconst setter   = T.isBoolean(arg_record.setter) ? arg_record.setter : true\r\n\t\tconst tester   = T.isBoolean(arg_record.tester) ? arg_record.tester : true\r\n\t\tconst serializable= T.isBoolean(arg_record.serializable) ? arg_record.serializable : true\r\n\t\t\r\n\t\tassert( T.isString(arg_record.name), context + ':add_property:bad property record.name string')\r\n\r\n\t\tconst this_name = is_priv ? '_' + name : name\r\n\t\tassert( !(name in this) && !(this_name in this), context + ':add_property:property already exists')\r\n\t\t\r\n\t\tthis._properties_names.push(name)\r\n\t\tthis._properties[name] = {\r\n\t\t\tname:name,\r\n\t\t\tthis_name:this_name,\r\n\t\t\ttype:type,\r\n\t\t\tvalue:value,\r\n\t\t\tprivate:is_priv,\r\n\t\t\tserializable:serializable,\r\n\t\t\tgetter:getter,\r\n\t\t\tsetter:setter,\r\n\t\t\ttester:tester\r\n\t\t}\r\n\r\n\t\t// BUILD ATTRIBUTE\r\n\t\t/**\r\n\t\t * Property value.\r\n\t\t * @type {any}\r\n\t\t */\r\n\t\tthis[this_name] = value\r\n\r\n\t\t// BUILD GETTER\r\n\t\tif (getter)\r\n\t\t{\r\n\t\t\t/**\r\n\t\t\t * Property getter.\r\n\t\t\t * @type {function}\r\n\t\t\t */\r\n\t\t\tthis['get_' + name] = ()=>{\r\n\t\t\t\treturn this[this_name]\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// BUILD SETTER\r\n\t\tif (setter)\r\n\t\t{\r\n\t\t\t/**\r\n\t\t\t * Property setter.\r\n\t\t\t * @type {function}\r\n\t\t\t */\r\n\t\t\tthis['set_' + name] = (arg_value)=>{\r\n\t\t\t\tthis.set_property_value(name, arg_value, this_name)\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// BUILD TESTER\r\n\t\tif (tester)\r\n\t\t{\r\n\t\t\t/**\r\n\t\t\t * Property tester.\r\n\t\t\t * @type {function}\r\n\t\t\t */\r\n\t\t\tthis['has_' + name] = ()=>{\r\n\t\t\t\treturn this[this_name] ? true : false\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Set a property value.\r\n\t * \r\n\t * @param {string} arg_name - property name.\r\n\t * @param {any}    arg_value - property value.\r\n\t * @param {string} arg_this_name - property attribute name.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tset_property_value(arg_name, arg_value, arg_this_name)\r\n\t{\r\n\t\tconst name = arg_this_name ? arg_this_name : arg_name\r\n\r\n\t\t/**\r\n\t\t * Property value.\r\n\t\t * @type {any}\r\n\t\t */\r\n\t\tthis[name] = arg_value\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get a property value.\r\n\t * \r\n\t * @param {string} arg_name - property name.\r\n\t * \r\n\t * @returns {any} - property value.\r\n\t */\r\n\tget_property_value(arg_name)\r\n\t{\r\n\t\tif (! (arg_name in this._properties) )\r\n\t\t{\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\tconst property_record = this._properties[arg_name]\r\n\t\tconst attr_name = property_record.this_name\r\n\t\treturn this[attr_name]\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Set properties values.\r\n\t * \r\n\t * @param {object|array} arg_values - properties values.\r\n\t * \r\n\t * @return {boolean}\r\n\t */\r\n\tset_properties_values(arg_values)\r\n\t{\r\n\t\tif ( T.isArray(arg_values) || T.isArguments(arg_values) )\r\n\t\t{\r\n\t\t\tthis._properties_names.forEach(\r\n\t\t\t\t(name, index)=>{\r\n\t\t\t\t\tconst record = this._properties[name]\r\n\t\t\t\t\tconst this_name = record.this_name\r\n\t\t\t\t\tconst value = arg_values.length > index ? arg_values[index] : record.value\r\n\t\t\t\t\tthis.set_property_value(name, value, this_name)\r\n\t\t\t\t}\r\n\t\t\t)\r\n\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\tif ( T.isObject(arg_values) )\r\n\t\t{\r\n\t\t\tthis._properties_names.forEach(\r\n\t\t\t\t(name)=>{\r\n\t\t\t\t\tconst record = this._properties[name]\r\n\t\t\t\t\tconst this_name = record.this_name\r\n\t\t\t\t\tconst value = (name in arg_values) ? arg_values[name] : record.value\r\n\t\t\t\t\tthis.set_property_value(name, value, this_name)\r\n\t\t\t\t}\r\n\t\t\t)\r\n\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\treturn false\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get properties values.\r\n\t * \r\n\t * @return {object} - properties values.\r\n\t */\r\n\tget_properties_values()\r\n\t{\r\n\t\tconst values ={}\r\n\t\tthis._properties_names.forEach(\r\n\t\t\t(name)=>{\r\n\t\t\t\tif ( this._properties[name].serializable )\r\n\t\t\t\t{\r\n\t\t\t\t\tvalues[name] = this.get_property_value(name)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn values\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Test if instance has given named method.\r\n\t * \r\n\t * @param {string} arg_name - method name.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\thas_method(arg_name)\r\n\t{\r\n\t\treturn (arg_name in this._methods) && (arg_name in this) && T.isFunction(this[arg_name])\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/base/introspectable.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 274,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/introspectable.js",
    "static": true,
    "longname": "js/base/introspectable.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/base/introspectable.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 13,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 275,
    "kind": "class",
    "name": "Introspectable",
    "memberof": "js/base/introspectable.js",
    "static": true,
    "longname": "js/base/introspectable.js~Introspectable",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/base/introspectable.js",
    "importStyle": "Introspectable",
    "description": "Base class to build easily classes.",
    "examples": [
      "\tProperty record format:\n\t\t{\n\t\tname:string,\n\t\ttype:string,\n\t\tvalue:any,\n\t\tprivate:boolean,\n\t\tgetter:boolean,\n\t\t\tsetter:boolean,\n\t\ttester:boolean\n\t\t}\n\tAPI:\n\t\t->has_property(arg_name):boolean - test if instance has given named property.\n\t\t->add_property(arg_record:object):boolean - add given named property.\n\t\t\n\t\t->set_property_value(arg_name, arg_value)\n\t\t->set_properties_values(arg_values:object|array):boolean - set properties values with arg_values as { prop_name_1:value1, ... }\n\t\t\n\t\t->has_method(arg_name):boolean - test if instance has given named method.\n\t\t->add_method(arg_record:object):boolean - add given named method."
    ],
    "lineNumber": 45,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "abstract": true,
    "interface": false
  },
  {
    "__docId__": 276,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/introspectable.js~Introspectable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/introspectable.js~Introspectable#constructor",
    "access": "public",
    "description": "Create an Introspectable instance.",
    "lineNumber": 56,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_properties",
        "description": "properties records as { name:'...', type:'', getter:true, setter: true, tester:true }."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_methods",
        "description": "methods records as { name:'...', type:'', functor:(...)=>{} }"
      },
      {
        "nullable": null,
        "types": [
          "object",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_values",
        "description": "properties values (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 277,
    "kind": "member",
    "name": "is_introspectable",
    "memberof": "js/base/introspectable.js~Introspectable",
    "static": false,
    "longname": "js/base/introspectable.js~Introspectable#is_introspectable",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 62,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 278,
    "kind": "member",
    "name": "_properties",
    "memberof": "js/base/introspectable.js~Introspectable",
    "static": false,
    "longname": "js/base/introspectable.js~Introspectable#_properties",
    "access": "private",
    "description": "Properties map.",
    "lineNumber": 68,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 279,
    "kind": "member",
    "name": "_properties_names",
    "memberof": "js/base/introspectable.js~Introspectable",
    "static": false,
    "longname": "js/base/introspectable.js~Introspectable#_properties_names",
    "access": "private",
    "description": "Properties names array.",
    "lineNumber": 74,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 280,
    "kind": "member",
    "name": "_methods",
    "memberof": "js/base/introspectable.js~Introspectable",
    "static": false,
    "longname": "js/base/introspectable.js~Introspectable#_methods",
    "access": "private",
    "description": "Methods map.",
    "lineNumber": 80,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 281,
    "kind": "member",
    "name": "_methods_names",
    "memberof": "js/base/introspectable.js~Introspectable",
    "static": false,
    "longname": "js/base/introspectable.js~Introspectable#_methods_names",
    "access": "private",
    "description": "Methods names array.",
    "lineNumber": 86,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 282,
    "kind": "method",
    "name": "has_property",
    "memberof": "js/base/introspectable.js~Introspectable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/introspectable.js~Introspectable#has_property",
    "access": "public",
    "description": "Test if instance has given named property.",
    "lineNumber": 115,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "property name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 283,
    "kind": "method",
    "name": "add_property",
    "memberof": "js/base/introspectable.js~Introspectable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/introspectable.js~Introspectable#add_property",
    "access": "public",
    "description": "Test if instance has given named property.",
    "lineNumber": 129,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record",
        "description": "property record."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 284,
    "kind": "member",
    "name": "[_name]",
    "memberof": "js/base/introspectable.js~Introspectable",
    "static": false,
    "longname": "js/base/introspectable.js~Introspectable#[_name]",
    "access": "public",
    "description": "Property value.",
    "lineNumber": 165,
    "type": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 285,
    "kind": "member",
    "name": "['get_' + name]",
    "memberof": "js/base/introspectable.js~Introspectable",
    "static": false,
    "longname": "js/base/introspectable.js~Introspectable#['get_' + name]",
    "access": "public",
    "description": "Property getter.",
    "lineNumber": 174,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 286,
    "kind": "member",
    "name": "['set_' + name]",
    "memberof": "js/base/introspectable.js~Introspectable",
    "static": false,
    "longname": "js/base/introspectable.js~Introspectable#['set_' + name]",
    "access": "public",
    "description": "Property setter.",
    "lineNumber": 186,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 287,
    "kind": "member",
    "name": "['has_' + name]",
    "memberof": "js/base/introspectable.js~Introspectable",
    "static": false,
    "longname": "js/base/introspectable.js~Introspectable#['has_' + name]",
    "access": "public",
    "description": "Property tester.",
    "lineNumber": 198,
    "type": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 288,
    "kind": "method",
    "name": "set_property_value",
    "memberof": "js/base/introspectable.js~Introspectable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/introspectable.js~Introspectable#set_property_value",
    "access": "public",
    "description": "Set a property value.",
    "lineNumber": 217,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "property name."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_value",
        "description": "property value."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_this_name",
        "description": "property attribute name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 289,
    "kind": "member",
    "name": "[name]",
    "memberof": "js/base/introspectable.js~Introspectable",
    "static": false,
    "longname": "js/base/introspectable.js~Introspectable#[name]",
    "access": "public",
    "description": "Property value.",
    "lineNumber": 225,
    "type": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 290,
    "kind": "method",
    "name": "get_property_value",
    "memberof": "js/base/introspectable.js~Introspectable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/introspectable.js~Introspectable#get_property_value",
    "access": "public",
    "description": "Get a property value.",
    "lineNumber": 237,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{any} - property value."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "property name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": "property value."
    }
  },
  {
    "__docId__": 291,
    "kind": "method",
    "name": "set_properties_values",
    "memberof": "js/base/introspectable.js~Introspectable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/introspectable.js~Introspectable#set_properties_values",
    "access": "public",
    "description": "Set properties values.",
    "lineNumber": 258,
    "params": [
      {
        "nullable": null,
        "types": [
          "object",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_values",
        "description": "properties values."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 292,
    "kind": "method",
    "name": "get_properties_values",
    "memberof": "js/base/introspectable.js~Introspectable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/introspectable.js~Introspectable#get_properties_values",
    "access": "public",
    "description": "Get properties values.",
    "lineNumber": 298,
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "properties values."
    },
    "params": []
  },
  {
    "__docId__": 293,
    "kind": "method",
    "name": "has_method",
    "memberof": "js/base/introspectable.js~Introspectable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/introspectable.js~Introspectable#has_method",
    "access": "public",
    "description": "Test if instance has given named method.",
    "lineNumber": 321,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "method name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 294,
    "kind": "file",
    "name": "js/base/loggable.js",
    "content": "\r\n// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\nconst context = 'common/base/loggable'\r\n\r\n\r\n\r\n/**\r\n * Base class to deal with traces.\r\n * @abstract\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n* API:\r\n* \t\tget_context():string - get instance context.\r\n* \t\tget_class):string - get instance class.\r\n* \t\tget_name():string - get instance name.\r\n* \r\n* \t\tshould_trace(arg_traces_cfg:plain object):boolean - test if loggers should trace this instance.\r\n* \r\n* \t\tget_logger_manager():LoggerManager\r\n* \t\tupdate_trace_enabled():nothing\r\n* \r\n* \t\tenable_trace():nothing\r\n* \t\tdisable_trace():nothing\r\n* \t\tget_trace():boolean\r\n* \t\tset_trace(arg_value):nothing\r\n* \t\ttoggle_trace():nothing\r\n* \r\n* \t\tdebug(...args):nothing\r\n* \t\tinfo(...args):nothing\r\n* \t\twarn(...args):nothing\r\n* \t\terror(...args):nothing\r\n* \r\n* \t\tenter_group(arg_group) leave_group(arg_group):nothing\r\n* \t\tseparate_level_1():nothing\r\n* \t\tseparate_level_2():nothing\r\n* \t\tseparate_level_3():nothing\r\n* \r\n */\r\nexport default class Loggable\r\n{\r\n\t/**\r\n\t * Create a Loggable instance.\r\n\t * \r\n\t * @param {string} arg_log_context - trace context.\r\n\t * @param {LoggerManager} arg_logger_manager - logger manager instance.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_log_context, arg_logger_manager)\r\n\t{\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_loggable = true\r\n\t\t\r\n\t\t/**\r\n\t\t * Log context.\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis.$context = T.isString(arg_log_context) ? arg_log_context : context\r\n\t\t\r\n\t\t/**\r\n\t\t * Trace is enabled for this flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_trace_enabled = true\r\n\t\t\r\n\t\t/**\r\n\t\t * Logger manager instance (default undefined)\r\n\t\t * @type {LoggerManager}\r\n\t\t */\r\n\t\tthis._logger_manager = undefined\r\n\r\n\t\tif ( T.isObject(arg_logger_manager) && arg_logger_manager.is_logger_manager )\r\n\t\t{\r\n\t\t\tthis._logger_manager = arg_logger_manager\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// DEBUG\r\n\t\t\t// console.warn(this.get_class() + ':' + this.get_name() + ':no logger manager')\r\n\t\t\t// debugger\r\n\t\t}\r\n\t\t\r\n\t\t// TO SET IN SUB CLASSES\r\n\t\t// if ( ! this.is_server_runtime )\r\n\t\t// {\r\n\t\t// \tthis.update_trace_enabled()\r\n\t\t// }\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Get instance context.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_context()\r\n\t{\r\n\t\treturn this.$context\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Define get instance name method for non Instance classes.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_name()\r\n\t{\r\n\t\treturn 'Loggable instance'\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Define get class name method for non Instance classes.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_class()\r\n\t{\r\n\t\treturn 'Loggable'\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Calculate should trace flag.\r\n\t * \r\n\t * @param {object} arg_traces_cfg - traces settings object as { modules:{ 'pattern':boolean }, classes:{ 'pattern':boolean }, instances:{ 'pattern':boolean } }.\r\n\t * \r\n\t * @returns {boolean} - trace flag.\r\n\t */\r\n\tshould_trace(arg_traces_cfg)\r\n\t{\r\n\t\tif ( ! T.isObject(arg_traces_cfg) )\r\n\t\t{\r\n\t\t\tconsole.error(context + ':should_trace(instance):no traces cfg')\r\n\t\t\treturn false\r\n\t\t}\r\n\t\t\r\n\t\tlet should_trace = false\r\n\t\t\r\n\t\t// CALCULATE TRACE FLAG\r\n\t\tshould_trace = should_trace || this.should_trace_module(arg_traces_cfg)\r\n\t\tshould_trace = should_trace || this.should_trace_class(arg_traces_cfg)\r\n\t\tshould_trace = should_trace || this.should_trace_name(arg_traces_cfg)\r\n\t\t\r\n\t\treturn should_trace\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Calculate should trace flag for modules.\r\n\t * \r\n\t * @param {object} arg_traces_cfg - traces settings object as { modules:{}, classes:{}, instances:{} }\r\n\t * \r\n\t * @returns {boolean} - trace flag.\r\n\t */\r\n\tshould_trace_module(arg_traces_cfg)\r\n\t{\r\n\t\treturn this.should_trace_collection_item(arg_traces_cfg, 'modules', 'get_context')\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Calculate should trace flag for classes.\r\n\t * \r\n\t * @param {object} arg_traces_cfg - traces settings object as { modules:{}, classes:{}, instances:{} }\r\n\t * \r\n\t * @returns {boolean} - trace flag.\r\n\t */\r\n\tshould_trace_class(arg_traces_cfg)\r\n\t{\r\n\t\treturn this.should_trace_collection_item(arg_traces_cfg, 'classes', 'get_class')\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Calculate should trace flag for instances names.\r\n\t * \r\n\t * @param {object} arg_traces_cfg - traces settings object as { modules:{}, classes:{}, instances:{} }\r\n\t * \r\n\t * @returns {boolean} - trace flag.\r\n\t */\r\n\tshould_trace_name(arg_traces_cfg)\r\n\t{\r\n\t\treturn this.should_trace_collection_item(arg_traces_cfg, 'instances', 'get_name')\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Calculate should trace flag for given collection of names or patterns.\r\n\t * \r\n\t * @param {object} arg_traces_cfg - traces settings object as { modules:{ 'pattern':boolean }, classes:{}, instances:{} }.\r\n\t * @param {string} arg_collection_name - 'modules' or 'classes' or 'instances'\r\n\t * @param {string} arg_this_item_accessor - this method name to access attribute value.\r\n\t * \r\n\t * @returns {boolean} - trace flag.\r\n\t */\r\n\tshould_trace_collection_item(arg_traces_cfg, arg_collection_name, arg_this_item_accessor)\r\n\t{\r\n\t\t// console.log(context + ':should_trace_collection_item: collection=%s this.aceessor=%s', arg_collection_name, arg_this_item_accessor, arg_traces_cfg)\r\n\r\n\t\tif ( ! T.isObject(arg_traces_cfg) )\r\n\t\t{\r\n\t\t\treturn false\r\n\t\t}\r\n\t\t\r\n\t\tlet should_trace = false\r\n\t\t\r\n\t\t// TRACES COLLECTION ?\r\n\t\tif ( T.isObject(arg_traces_cfg) && (arg_collection_name in arg_traces_cfg) )\r\n\t\t{\r\n\t\t\tconst collection = arg_traces_cfg[arg_collection_name]\r\n\t\t\tconst attribute = this[arg_this_item_accessor]()\r\n\t\t\t\r\n\t\t\tif ( (attribute in collection) )\r\n\t\t\t{\r\n\t\t\t\tshould_trace = collection[attribute]\r\n\t\t\t\t// console.log(context + ':should_trace_collection_item: collection=%s attribute=%s should_trace=%b', arg_collection_name, attribute, should_trace)\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// console.log(context + ':should_trace_collection_item: test patterns')\r\n\r\n\t\t\t\tObject.keys(collection).forEach(\r\n\t\t\t\t\tfunction(arg_item_pattern)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (should_trace)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// console.log(context + ':should_trace_collection_item: collection=%s attribute=%s loop on pattern=%s should_trace=%n', arg_collection_name, attribute, arg_item_pattern, should_trace)\r\n\r\n\t\t\t\t\t\t// CHECK PATTERN STRING\r\n\t\t\t\t\t\tif ( ! T.isString(arg_item_pattern) || arg_item_pattern.length < 1 )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// console.log(context + ':should_trace_collection_item: bad pattern=%s', arg_item_pattern)\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// REGEX\r\n\t\t\t\t\t\tif (arg_item_pattern.indexOf('*') > -1 || arg_item_pattern.indexOf('[') > -1 || arg_item_pattern.indexOf('{') > -1)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// console.log(context + ':should_trace_collection_item: good pattern=%s this.attribute=%s', arg_item_pattern, attribute)\r\n\r\n\t\t\t\t\t\t\t// NORMALIZE PATTERN\r\n\t\t\t\t\t\t\targ_item_pattern = arg_item_pattern == '*' ? '.*' : arg_item_pattern\r\n\t\t\t\t\t\t\t// console.log(context + ':should_trace_collection_item: noarmalized pattern=%s', arg_item_pattern)\r\n\r\n\t\t\t\t\t\t\t// CREATE REGEX AND TEST MATCHING\r\n\t\t\t\t\t\t\tconst re = new RegExp(arg_item_pattern, 'gi')\r\n\t\t\t\t\t\t\tconst found = re.test(attribute)\r\n\t\t\t\t\t\t\tif (found)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tconst should_trace_pattern = collection[arg_item_pattern]\r\n\t\t\t\t\t\t\t\tshould_trace = should_trace_pattern ? true : false\r\n\t\t\t\t\t\t\t\t// console.log(context + ':should_trace_collection_item: collection=%s pattern=%s this.attribute=%s should_trace_pattern=%b should_trace=%b', arg_collection_name, arg_item_pattern, attribute, should_trace_pattern, should_trace)\r\n\t\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn should_trace\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get logger manager.\r\n\t * @returns {LoggerManager}\r\n\t */\r\n\tget_logger_manager()\r\n\t{\r\n\t\tif (!this._logger_manager)\r\n\t\t{\r\n\t\t\t// DEBUG\r\n\t\t\tconsole.warn(this.get_class() + ':' + this.get_name(), 'bad logger manager')\r\n\t\t\t// debugger\r\n\t\t}\r\n\t\tassert( T.isObject(this._logger_manager) && this._logger_manager.is_logger_manager, context + ':get_logger_manager:bad logger manager object')\r\n\t\treturn this._logger_manager\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Update trace enabled flag.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tupdate_trace_enabled()\r\n\t{\r\n\t\tconst logger_mgr = this.get_logger_manager()\r\n\t\tconst traces_settings = logger_mgr.get_traces_settings()\r\n\t\tif (traces_settings)\r\n\t\t{\r\n\t\t\tconst traces_enabled = this.should_trace(traces_settings)\r\n\r\n\t\t\tif (traces_enabled)\r\n\t\t\t{\r\n\t\t\t\tthis.enable_trace()\r\n\t\t\t\t// console.log(context + ':update_trace_enabled:name=%s, is_trace_enabled', this.get_name(), this.is_trace_enabled)\r\n\t\t\t} else {\r\n\t\t\t\tthis.disable_trace()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Enable traces.\r\n\t * @returns {nothing}\r\n\t */\r\n\tenable_trace()\r\n\t{\r\n\t\tthis.is_trace_enabled = true\r\n\t\t// this.get_logger_manager().enable_trace()\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Disable traces.\r\n\t * @returns {nothing}\r\n\t */\r\n\tdisable_trace()\r\n\t{\r\n\t\tthis.is_trace_enabled = false\r\n\t\t// this.get_logger_manager().disable_trace()\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get trace flag.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget_trace()\r\n\t{\r\n\t\treturn this.get_logger_manager().get_trace() && this.is_trace_enabled\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Set trace flag.\r\n\t * @param {boolean} arg_value - trace flag.\r\n\t * @returns {nothing}\r\n\t */\r\n\tset_trace(arg_value)\r\n\t{\r\n\t\tthis.is_trace_enabled = arg_value ? true : false\r\n\t\tif (this.is_trace_enabled)\r\n\t\t{\r\n\t\t\tthis.get_logger_manager().enable_trace()\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Toggle trace flag.\r\n\t * @returns {boolean}\r\n\t */\r\n\ttoggle_trace()\r\n\t{\r\n\t\tthis.is_trace_enabled = ! this.is_trace_enabled\r\n\t\tthis.get_logger_manager().toggle_trace()\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Trace DEBUG formatted message.\r\n\t * @param {string|array} args - variadic messages to format.\r\n\t * @returns {nothing}\r\n\t */\r\n\tdebug(...args)\r\n\t{\r\n\t\tif(this.is_trace_enabled)\r\n\t\t{\r\n\t\t\tthis.get_logger_manager().debug(Date.now(), this.$context, this.get_name(), '', 'trace', ...args)\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Trace INFO formatted message.\r\n\t * @param {string|array} args - variadic messages to format.\r\n\t * @returns {nothing}\r\n\t */\r\n\tinfo(...args)\r\n\t{\r\n\t\tif(this.is_trace_enabled)\r\n\t\t{\r\n\t\t\tthis.get_logger_manager().info(Date.now(), this.$context, this.get_name(), '', 'trace', ...args)\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Trace WARN formatted message.\r\n\t * @param {string|array} args - variadic messages to format.\r\n\t * @returns {nothing}\r\n\t */\r\n\twarn(...args)\r\n\t{\r\n\t\tif(this.is_trace_enabled)\r\n\t\t{\r\n\t\t\tthis.get_logger_manager().warn(Date.now(), this.$context, this.get_name(), '', 'trace', ...args)\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Trace ERROR formatted message.\r\n\t * @param {string|array} args - variadic messages to format.\r\n\t * @returns {nothing}\r\n\t */\r\n\terror(...args)\r\n\t{\r\n\t\tthis.get_logger_manager().error(Date.now(), this.$context, this.get_name(), '', 'trace', ...args)\r\n\r\n\t\tconsole.error(Date.now(), this.$context, this.get_name(), '', 'trace', ...args)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Trace INFO message on \"enter trace group\".\r\n\t * @param {string} arg_group - trace group name.\r\n\t * @returns {nothing}\r\n\t */\r\n\tenter_group(arg_group)\r\n\t{\r\n\t\tif(this.is_trace_enabled)\r\n\t\t{\r\n\t\t\tthis.get_logger_manager().debug(Date.now(), this.$context, this.get_name(), arg_group, 'enter', '[' + arg_group + '] ------- ENTER -------')\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Trace INFO message on \"leave trace group\".\r\n\t * @param {string} arg_group - trace group name.\r\n\t * @returns {nothing}\r\n\t */\r\n\tleave_group(arg_group)\r\n\t{\r\n\t\tif(this.is_trace_enabled)\r\n\t\t{\r\n\t\t\tthis.get_logger_manager().debug(Date.now(), this.$context, this.get_name(), arg_group, 'leave', '[' + arg_group + '] ------- LEAVE -------')\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Trace INFO trace level 1 separator.\r\n\t * @returns {nothing}\r\n\t */\r\n\tseparate_level_1()\r\n\t{\r\n\t\tif(this.is_trace_enabled)\r\n\t\t{\r\n\t\t\tthis.get_logger_manager().debug(Date.now(), this.$context, this.get_name(), '', 'trace', '==========================================================================================================================')\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Trace INFO trace level 2 separator.\r\n\t * @returns {nothing}\r\n\t */\r\n\tseparate_level_2()\r\n\t{\r\n\t\tif(this.is_trace_enabled)\r\n\t\t{\r\n\t\t\tthis.get_logger_manager().debug(Date.now(), this.$context, this.get_name(), '', 'trace', '--------------------------------------------------------------------------------------------------------------------------')\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Trace INFO trace level 3 separator.\r\n\t * @returns {nothing}\r\n\t */\r\n\tseparate_level_3()\r\n\t{\r\n\t\tif(this.is_trace_enabled)\r\n\t\t{\r\n\t\t\tthis.get_logger_manager().debug(Date.now(), this.$context, this.get_name(), '', 'trace', '*************************************************************************************************************************')\r\n\t\t}\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/base/loggable.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 295,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/loggable.js",
    "static": true,
    "longname": "js/base/loggable.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/base/loggable.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 13,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 296,
    "kind": "class",
    "name": "Loggable",
    "memberof": "js/base/loggable.js",
    "static": true,
    "longname": "js/base/loggable.js~Loggable",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/base/loggable.js",
    "importStyle": "Loggable",
    "description": "Base class to deal with traces.",
    "examples": [
      "API:\n\t\tget_context():string - get instance context.\n\t\tget_class):string - get instance class.\n\t\tget_name():string - get instance name.\n\n\t\tshould_trace(arg_traces_cfg:plain object):boolean - test if loggers should trace this instance.\n\n\t\tget_logger_manager():LoggerManager\n\t\tupdate_trace_enabled():nothing\n\n\t\tenable_trace():nothing\n\t\tdisable_trace():nothing\n\t\tget_trace():boolean\n\t\tset_trace(arg_value):nothing\n\t\ttoggle_trace():nothing\n\n\t\tdebug(...args):nothing\n\t\tinfo(...args):nothing\n\t\twarn(...args):nothing\n\t\terror(...args):nothing\n\n\t\tenter_group(arg_group) leave_group(arg_group):nothing\n\t\tseparate_level_1():nothing\n\t\tseparate_level_2():nothing\n\t\tseparate_level_3():nothing"
    ],
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "abstract": true,
    "interface": false
  },
  {
    "__docId__": 297,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/loggable.js~Loggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/loggable.js~Loggable#constructor",
    "access": "public",
    "description": "Create a Loggable instance.",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context."
      },
      {
        "nullable": null,
        "types": [
          "LoggerManager"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_logger_manager",
        "description": "logger manager instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 298,
    "kind": "member",
    "name": "is_loggable",
    "memberof": "js/base/loggable.js~Loggable",
    "static": false,
    "longname": "js/base/loggable.js~Loggable#is_loggable",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 68,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 299,
    "kind": "member",
    "name": "$context",
    "memberof": "js/base/loggable.js~Loggable",
    "static": false,
    "longname": "js/base/loggable.js~Loggable#$context",
    "access": "public",
    "description": "Log context.",
    "lineNumber": 74,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 300,
    "kind": "member",
    "name": "is_trace_enabled",
    "memberof": "js/base/loggable.js~Loggable",
    "static": false,
    "longname": "js/base/loggable.js~Loggable#is_trace_enabled",
    "access": "public",
    "description": "Trace is enabled for this flag.",
    "lineNumber": 80,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 301,
    "kind": "member",
    "name": "_logger_manager",
    "memberof": "js/base/loggable.js~Loggable",
    "static": false,
    "longname": "js/base/loggable.js~Loggable#_logger_manager",
    "access": "private",
    "description": "Logger manager instance (default undefined)",
    "lineNumber": 86,
    "type": {
      "nullable": null,
      "types": [
        "LoggerManager"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 303,
    "kind": "method",
    "name": "get_context",
    "memberof": "js/base/loggable.js~Loggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/loggable.js~Loggable#get_context",
    "access": "public",
    "description": "Get instance context.",
    "lineNumber": 111,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 304,
    "kind": "method",
    "name": "get_name",
    "memberof": "js/base/loggable.js~Loggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/loggable.js~Loggable#get_name",
    "access": "public",
    "description": "Define get instance name method for non Instance classes.",
    "lineNumber": 122,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 305,
    "kind": "method",
    "name": "get_class",
    "memberof": "js/base/loggable.js~Loggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/loggable.js~Loggable#get_class",
    "access": "public",
    "description": "Define get class name method for non Instance classes.",
    "lineNumber": 133,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 306,
    "kind": "method",
    "name": "should_trace",
    "memberof": "js/base/loggable.js~Loggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/loggable.js~Loggable#should_trace",
    "access": "public",
    "description": "Calculate should trace flag.",
    "lineNumber": 147,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - trace flag."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_traces_cfg",
        "description": "traces settings object as { modules:{ 'pattern':boolean }, classes:{ 'pattern':boolean }, instances:{ 'pattern':boolean } }."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "trace flag."
    }
  },
  {
    "__docId__": 307,
    "kind": "method",
    "name": "should_trace_module",
    "memberof": "js/base/loggable.js~Loggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/loggable.js~Loggable#should_trace_module",
    "access": "public",
    "description": "Calculate should trace flag for modules.",
    "lineNumber": 174,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - trace flag."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_traces_cfg",
        "description": "traces settings object as { modules:{}, classes:{}, instances:{} }"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "trace flag."
    }
  },
  {
    "__docId__": 308,
    "kind": "method",
    "name": "should_trace_class",
    "memberof": "js/base/loggable.js~Loggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/loggable.js~Loggable#should_trace_class",
    "access": "public",
    "description": "Calculate should trace flag for classes.",
    "lineNumber": 187,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - trace flag."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_traces_cfg",
        "description": "traces settings object as { modules:{}, classes:{}, instances:{} }"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "trace flag."
    }
  },
  {
    "__docId__": 309,
    "kind": "method",
    "name": "should_trace_name",
    "memberof": "js/base/loggable.js~Loggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/loggable.js~Loggable#should_trace_name",
    "access": "public",
    "description": "Calculate should trace flag for instances names.",
    "lineNumber": 201,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - trace flag."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_traces_cfg",
        "description": "traces settings object as { modules:{}, classes:{}, instances:{} }"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "trace flag."
    }
  },
  {
    "__docId__": 310,
    "kind": "method",
    "name": "should_trace_collection_item",
    "memberof": "js/base/loggable.js~Loggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/loggable.js~Loggable#should_trace_collection_item",
    "access": "public",
    "description": "Calculate should trace flag for given collection of names or patterns.",
    "lineNumber": 217,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - trace flag."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_traces_cfg",
        "description": "traces settings object as { modules:{ 'pattern':boolean }, classes:{}, instances:{} }."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_collection_name",
        "description": "'modules' or 'classes' or 'instances'"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_this_item_accessor",
        "description": "this method name to access attribute value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "trace flag."
    }
  },
  {
    "__docId__": 311,
    "kind": "method",
    "name": "get_logger_manager",
    "memberof": "js/base/loggable.js~Loggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/loggable.js~Loggable#get_logger_manager",
    "access": "public",
    "description": "Get logger manager.",
    "lineNumber": 294,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{LoggerManager}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "LoggerManager"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 312,
    "kind": "method",
    "name": "update_trace_enabled",
    "memberof": "js/base/loggable.js~Loggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/loggable.js~Loggable#update_trace_enabled",
    "access": "public",
    "description": "Update trace enabled flag.",
    "lineNumber": 313,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 313,
    "kind": "method",
    "name": "enable_trace",
    "memberof": "js/base/loggable.js~Loggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/loggable.js~Loggable#enable_trace",
    "access": "public",
    "description": "Enable traces.",
    "lineNumber": 337,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 315,
    "kind": "method",
    "name": "disable_trace",
    "memberof": "js/base/loggable.js~Loggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/loggable.js~Loggable#disable_trace",
    "access": "public",
    "description": "Disable traces.",
    "lineNumber": 349,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 317,
    "kind": "method",
    "name": "get_trace",
    "memberof": "js/base/loggable.js~Loggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/loggable.js~Loggable#get_trace",
    "access": "public",
    "description": "Get trace flag.",
    "lineNumber": 361,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 318,
    "kind": "method",
    "name": "set_trace",
    "memberof": "js/base/loggable.js~Loggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/loggable.js~Loggable#set_trace",
    "access": "public",
    "description": "Set trace flag.",
    "lineNumber": 373,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_value",
        "description": "trace flag."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 320,
    "kind": "method",
    "name": "toggle_trace",
    "memberof": "js/base/loggable.js~Loggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/loggable.js~Loggable#toggle_trace",
    "access": "public",
    "description": "Toggle trace flag.",
    "lineNumber": 388,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 322,
    "kind": "method",
    "name": "debug",
    "memberof": "js/base/loggable.js~Loggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/loggable.js~Loggable#debug",
    "access": "public",
    "description": "Trace DEBUG formatted message.",
    "lineNumber": 401,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "variadic messages to format."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 323,
    "kind": "method",
    "name": "info",
    "memberof": "js/base/loggable.js~Loggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/loggable.js~Loggable#info",
    "access": "public",
    "description": "Trace INFO formatted message.",
    "lineNumber": 416,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "variadic messages to format."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 324,
    "kind": "method",
    "name": "warn",
    "memberof": "js/base/loggable.js~Loggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/loggable.js~Loggable#warn",
    "access": "public",
    "description": "Trace WARN formatted message.",
    "lineNumber": 430,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "variadic messages to format."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 325,
    "kind": "method",
    "name": "error",
    "memberof": "js/base/loggable.js~Loggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/loggable.js~Loggable#error",
    "access": "public",
    "description": "Trace ERROR formatted message.",
    "lineNumber": 444,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "variadic messages to format."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 326,
    "kind": "method",
    "name": "enter_group",
    "memberof": "js/base/loggable.js~Loggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/loggable.js~Loggable#enter_group",
    "access": "public",
    "description": "Trace INFO message on \"enter trace group\".",
    "lineNumber": 457,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_group",
        "description": "trace group name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 327,
    "kind": "method",
    "name": "leave_group",
    "memberof": "js/base/loggable.js~Loggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/loggable.js~Loggable#leave_group",
    "access": "public",
    "description": "Trace INFO message on \"leave trace group\".",
    "lineNumber": 471,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_group",
        "description": "trace group name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 328,
    "kind": "method",
    "name": "separate_level_1",
    "memberof": "js/base/loggable.js~Loggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/loggable.js~Loggable#separate_level_1",
    "access": "public",
    "description": "Trace INFO trace level 1 separator.",
    "lineNumber": 484,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 329,
    "kind": "method",
    "name": "separate_level_2",
    "memberof": "js/base/loggable.js~Loggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/loggable.js~Loggable#separate_level_2",
    "access": "public",
    "description": "Trace INFO trace level 2 separator.",
    "lineNumber": 497,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 330,
    "kind": "method",
    "name": "separate_level_3",
    "memberof": "js/base/loggable.js~Loggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/loggable.js~Loggable#separate_level_3",
    "access": "public",
    "description": "Trace INFO trace level 3 separator.",
    "lineNumber": 510,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 331,
    "kind": "file",
    "name": "js/base/registered_service.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport Instance from './instance'\r\n\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\nlet context = 'common/base/registered_service'\r\n\r\n\r\n\r\n/**\r\n * Registered service class.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class RegisteredService extends Instance\r\n{\r\n\t/**\r\n\t * Create a registered service instance.\r\n\t * \r\n\t * @param {string} arg_name - instance name.\r\n\t * @param {object} arg_settings - instance settings map.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_name, arg_settings)\r\n\t{\r\n\t\tassert( T.isObject(arg_settings), context + ':bad settings object')\r\n\t\tassert( T.isString(arg_settings.service_name), context + ':bad settings.service_name string')\r\n\t\tassert( T.isString(arg_settings.node_name), context + ':bad settings.node_name string')\r\n\t\tassert( T.isString(arg_settings.server_name), context + ':bad settings.server_name string')\r\n\t\tassert( T.isString(arg_settings.server_host), context + ':bad settings.server_host string')\r\n\t\tassert( T.isNumber(arg_settings.server_port), context + ':bad settings.server_port number')\r\n\t\t\r\n\t\tsuper('registered_services', 'RegisteredService', arg_name, arg_settings)\r\n\t\t\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_registered_services = true\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Get service name.\r\n\t * @returns {string}\r\n\t */\r\n\tget_service_name()\r\n\t{\r\n\t\treturn this.get_setting('service_name', null)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Get node name.\r\n\t * @returns {string}\r\n\t */\r\n\tget_node_name()\r\n\t{\r\n\t\treturn this.get_setting('node_name', null)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Get server name.\r\n\t * @returns {string}\r\n\t */\r\n\tget_server_name()\r\n\t{\r\n\t\treturn this.get_setting('server_name', null)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Get server host name.\r\n\t * @returns {string}\r\n\t */\r\n\tget_server_host()\r\n\t{\r\n\t\treturn this.get_setting('server_host', null)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Get server port value.\r\n\t * @returns {string|number}\r\n\t */\r\n\tget_server_port()\r\n\t{\r\n\t\treturn this.get_setting('server_port', null)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/base/registered_service.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 332,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/registered_service.js",
    "static": true,
    "longname": "js/base/registered_service.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/base/registered_service.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 14,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 333,
    "kind": "class",
    "name": "RegisteredService",
    "memberof": "js/base/registered_service.js",
    "static": true,
    "longname": "js/base/registered_service.js~RegisteredService",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/base/registered_service.js",
    "importStyle": "RegisteredService",
    "description": "Registered service class.",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/instance.js~Instance"
    ]
  },
  {
    "__docId__": 334,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/registered_service.js~RegisteredService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/registered_service.js~RegisteredService#constructor",
    "access": "public",
    "description": "Create a registered service instance.",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "instance settings map."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 335,
    "kind": "member",
    "name": "is_registered_services",
    "memberof": "js/base/registered_service.js~RegisteredService",
    "static": false,
    "longname": "js/base/registered_service.js~RegisteredService#is_registered_services",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 49,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 336,
    "kind": "method",
    "name": "get_service_name",
    "memberof": "js/base/registered_service.js~RegisteredService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/registered_service.js~RegisteredService#get_service_name",
    "access": "public",
    "description": "Get service name.",
    "lineNumber": 57,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 337,
    "kind": "method",
    "name": "get_node_name",
    "memberof": "js/base/registered_service.js~RegisteredService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/registered_service.js~RegisteredService#get_node_name",
    "access": "public",
    "description": "Get node name.",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 338,
    "kind": "method",
    "name": "get_server_name",
    "memberof": "js/base/registered_service.js~RegisteredService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/registered_service.js~RegisteredService#get_server_name",
    "access": "public",
    "description": "Get server name.",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 339,
    "kind": "method",
    "name": "get_server_host",
    "memberof": "js/base/registered_service.js~RegisteredService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/registered_service.js~RegisteredService#get_server_host",
    "access": "public",
    "description": "Get server host name.",
    "lineNumber": 87,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 340,
    "kind": "method",
    "name": "get_server_port",
    "memberof": "js/base/registered_service.js~RegisteredService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/registered_service.js~RegisteredService#get_server_port",
    "access": "public",
    "description": "Get server port value.",
    "lineNumber": 97,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 341,
    "kind": "file",
    "name": "js/base/runtime.js",
    "content": "\r\n// NPM IMPORTS\r\n\r\n// COMMON IMPORTS\r\n\r\n\r\n\r\n/**\r\n * Global runtime singleton.\r\n * @type {Runtime}\r\n */\r\nlet _runtime_instance = undefined\r\n\r\n\r\n\r\n/**\r\n * Register singleton runtime instance.\r\n * \r\n * @param {Runtime} arg_runtime - Runtime singleton.\r\n * \r\n * @returns {nothing}\r\n */\r\nexport const register_runtime = (arg_runtime)=> {\r\n\t_runtime_instance = arg_runtime\r\n}\r\n\r\n\r\n\r\n/**\r\n * Get singleton runtime instance.\r\n * \r\n * @returns {Runtime} - Runtime singleton.\r\n */\r\nexport const get_runtime = ()=> {\r\n\treturn _runtime_instance\r\n}\r\n\r\n\r\n\r\nexport default _runtime_instance",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/base/runtime.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 342,
    "kind": "function",
    "name": "register_runtime",
    "memberof": "js/base/runtime.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/base/runtime.js~register_runtime",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/base/runtime.js",
    "importStyle": "{register_runtime}",
    "description": "Register singleton runtime instance.",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Runtime"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "Runtime singleton."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 343,
    "kind": "function",
    "name": "get_runtime",
    "memberof": "js/base/runtime.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/base/runtime.js~get_runtime",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/base/runtime.js",
    "importStyle": "{get_runtime}",
    "description": "Get singleton runtime instance.",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Runtime} - Runtime singleton."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Runtime"
      ],
      "spread": false,
      "description": "Runtime singleton."
    },
    "params": []
  },
  {
    "__docId__": 344,
    "kind": "variable",
    "name": "_runtime_instance",
    "memberof": "js/base/runtime.js",
    "static": true,
    "longname": "js/base/runtime.js~_runtime_instance",
    "access": "private",
    "export": true,
    "importPath": "devapt-core-common/js/base/runtime.js",
    "importStyle": "_runtime_instance",
    "description": "Global runtime singleton.",
    "lineNumber": 12,
    "type": {
      "nullable": null,
      "types": [
        "Runtime"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 345,
    "kind": "file",
    "name": "js/base/runtime_base.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T                      from '../utils/types'\r\nimport Settingsable           from './settingsable'\r\nimport LoggerManager          from '../loggers/logger_manager'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\nlet context = 'browser/runtime'\r\n\r\n\r\n\r\n/**\r\n * Base class for runtime - main library interface.\r\n * @abstract\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class RuntimeBase extends Settingsable\r\n{\r\n\t/**\r\n\t * Create Runtime base instance.\r\n\t * \r\n\t * @param {string} arg_log_context - logging context.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_log_context)\r\n\t{\r\n\t\t// INIT LOGGING FEATURE\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tconst loggers_settings = undefined\r\n\t\tconst logger_manager = new LoggerManager(undefined, loggers_settings)\r\n\t\t\r\n\t\tsuper({}, log_context, logger_manager)\r\n\t\tlogger_manager._runtime = this\r\n\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_base_runtime = true\r\n\r\n\t\t/**\r\n\t\t * Runtime state (defautl undefined).\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tthis.current_state = undefined\r\n\r\n\t\t/**\r\n\t\t * Runtime state store (defautl undefined).\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tthis._state_store = undefined\r\n\t\t\r\n\t\tif ( ! this.is_server_runtime )\r\n\t\t{\r\n\t\t\tthis.update_trace_enabled()\r\n\t\t}\r\n\t\t\r\n\t\tthis.info('Runtime is created')\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get runtime logger manager.\r\n\t * \r\n\t * @returns {LoggerManager}\r\n\t */\r\n\tget_logger_manager()\r\n\t{\r\n\t\treturn this._logger_manager\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get state store, a Redux data store.\r\n\t * \r\n\t * @returns {object} - Redux state store.\r\n\t */\r\n\tget_state_store()\r\n\t{\r\n\t\tassert( T.isObject(this._state_store), context + ':get_state_store:bad state_store object')\r\n\t\treturn this._state_store\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get store reducers.\r\n\t * \r\n\t * @returns {function} - reducer pure function: (previous state, action) => new state\r\n\t */\r\n\tget_store_reducers()\r\n\t{\r\n\t\treturn (arg_previous_state, arg_action) => {\r\n\t\t\tconsole.info(context + ':get_store_reducers:type=' + arg_action.type)\r\n\t\t\t\r\n\t\t\treturn arg_previous_state\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Handle Redux store changes.\r\n\t * @returns {nothing}\r\n\t */\r\n\thandle_store_change()\r\n\t{\r\n\t\t// let previous_state = this.current_state\r\n\t\t// this.current_state = this._state_store.get_state()\r\n\t\t\r\n\t\t/// TODO\r\n\t\t\r\n\t\t// console.info(context + ':handle_store_change:global')\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/base/runtime_base.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 346,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/runtime_base.js",
    "static": true,
    "longname": "js/base/runtime_base.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/base/runtime_base.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 14,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 347,
    "kind": "class",
    "name": "RuntimeBase",
    "memberof": "js/base/runtime_base.js",
    "static": true,
    "longname": "js/base/runtime_base.js~RuntimeBase",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/base/runtime_base.js",
    "importStyle": "RuntimeBase",
    "description": "Base class for runtime - main library interface.",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "abstract": true,
    "interface": false,
    "extends": [
      "js/base/settingsable.js~Settingsable"
    ]
  },
  {
    "__docId__": 348,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/runtime_base.js~RuntimeBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/runtime_base.js~RuntimeBase#constructor",
    "access": "public",
    "description": "Create Runtime base instance.",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "logging context."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 349,
    "kind": "member",
    "name": "is_base_runtime",
    "memberof": "js/base/runtime_base.js~RuntimeBase",
    "static": false,
    "longname": "js/base/runtime_base.js~RuntimeBase#is_base_runtime",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 350,
    "kind": "member",
    "name": "current_state",
    "memberof": "js/base/runtime_base.js~RuntimeBase",
    "static": false,
    "longname": "js/base/runtime_base.js~RuntimeBase#current_state",
    "access": "public",
    "description": "Runtime state (defautl undefined).",
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 351,
    "kind": "member",
    "name": "_state_store",
    "memberof": "js/base/runtime_base.js~RuntimeBase",
    "static": false,
    "longname": "js/base/runtime_base.js~RuntimeBase#_state_store",
    "access": "private",
    "description": "Runtime state store (defautl undefined).",
    "lineNumber": 60,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 352,
    "kind": "method",
    "name": "get_logger_manager",
    "memberof": "js/base/runtime_base.js~RuntimeBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/runtime_base.js~RuntimeBase#get_logger_manager",
    "access": "public",
    "description": "Get runtime logger manager.",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{LoggerManager}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "LoggerManager"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 353,
    "kind": "method",
    "name": "get_state_store",
    "memberof": "js/base/runtime_base.js~RuntimeBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/runtime_base.js~RuntimeBase#get_state_store",
    "access": "public",
    "description": "Get state store, a Redux data store.",
    "lineNumber": 89,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - Redux state store."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "Redux state store."
    },
    "params": []
  },
  {
    "__docId__": 354,
    "kind": "method",
    "name": "get_store_reducers",
    "memberof": "js/base/runtime_base.js~RuntimeBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/runtime_base.js~RuntimeBase#get_store_reducers",
    "access": "public",
    "description": "Get store reducers.",
    "lineNumber": 102,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} - reducer pure function: (previous state, action) => new state"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "reducer pure function: (previous state, action) => new state"
    },
    "params": []
  },
  {
    "__docId__": 355,
    "kind": "method",
    "name": "handle_store_change",
    "memberof": "js/base/runtime_base.js~RuntimeBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/runtime_base.js~RuntimeBase#handle_store_change",
    "access": "public",
    "description": "Handle Redux store changes.",
    "lineNumber": 117,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 356,
    "kind": "file",
    "name": "js/base/settingsable.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport { fromJS } from 'immutable'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport Errorable from './errorable'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\nconst context = 'common/base/settingsable'\r\n\r\n\r\n\r\n/**\r\n * Settingsable base class: child classes are able to manage settings.\r\n * @abstract\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n* Settings are immutable values which define instance initial configuration.\r\n* Settings are not intended to act as a mutable state.\r\n* \r\n* API:\r\n* \t\tset_settings(arg_settings:plain object or Immutable object):nothing - replace settings Immutable.Map\r\n* \t\tget_settings(): Immutable.Map - get settings tree.\r\n* \t\thas_setting(arg_name:string|array): boolean - test if a value is avalaible for given key or path.\r\n* \t\tget_setting(arg_name:string|array, arg_default): Immutable or js value - get value from a path or a key.\r\n* \t\tset_setting(arg_name:string|array, arg_value): nothing - set or replace a value at given key or path.\r\n* \r\n */\r\nexport default class Settingsable extends Errorable\r\n{\r\n\t/**\r\n\t * Create a Settingsable instance.\r\n\t * \r\n\t * @param {Immutable.Map|object} arg_settings - instance settings map.\r\n\t * @param {string} arg_log_context - trace context string.\r\n\t * @param {LoggerManager} arg_logger_manager - logger manager object (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_settings=fromJS({}), arg_log_context, arg_logger_manager)\r\n\t{\r\n\t\tconst my_context = arg_log_context ? arg_log_context : context\r\n\t\t\r\n\t\tlet logger_manager = arg_logger_manager ? arg_logger_manager : undefined\r\n\t\tif ( ! logger_manager)\r\n\t\t{\r\n\t\t\tif (arg_settings.get)\r\n\t\t\t{\r\n\t\t\t\tlogger_manager = arg_settings.get('logger_manager', undefined)\r\n\t\t\t} else {\r\n\t\t\t\tlogger_manager = (arg_settings && arg_settings.logger_manager) ? arg_settings.logger_manager : undefined\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper(my_context, logger_manager)\r\n\t\t\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_settable = true\r\n\r\n\t\t/**\r\n\t\t * Instance settings (default undefined).\r\n\t\t * @type {object|Immutable.Map}\r\n\t\t */\r\n\t\tthis.$settings = undefined\r\n\t\t\r\n\t\tthis.set_settings(arg_settings)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Set instance settings.\r\n\t * @param {Immutable.Map} arg_settings - instance settings map.\r\n\t * @returns {nothing}\r\n\t */\r\n\tset_settings(arg_settings)\r\n\t{\r\n\t\tif (arg_settings.has && arg_settings.set & arg_settings.hasIn && arg_settings.setIn && arg_settings.get && arg_settings.getIn)\r\n\t\t{\r\n\t\t\tthis.$settings = arg_settings\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.$settings = fromJS(arg_settings)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Get instance settings.\r\n\t * @returns {Immutable.Map}\r\n\t */\r\n\tget_settings()\r\n\t{\r\n\t\treturn this.$settings\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Get instance settings.\r\n\t * @returns {Immutable.Map}\r\n\t */\r\n\tget_settings_js()\r\n\t{\r\n\t\tconst settings = this.$settings.toJS()\r\n\r\n\t\tdelete settings.runtime\r\n\t\tdelete settings.logger_manager\r\n\r\n\t\treturn settings\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Test if a key exists in settings.\r\n\t * @param {string} arg_name - settings value key.\r\n\t * @returns {boolean}\r\n\t */\r\n\thas_setting(arg_name)\r\n\t{\r\n\t\tassert( T.isFunction(this.$settings.has), context + ':has:bad settings object')\r\n\t\t\r\n\t\tif ( T.isArray(arg_name) )\r\n\t\t{\r\n\t\t\treturn this.$settings.hasIn(arg_name)\r\n\t\t}\r\n\t\treturn this.$settings.has(arg_name)\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Get a value in settings for given key.\r\n\t * \r\n\t * @param {string|array} arg_name - settings value key.\r\n\t * @param {any} arg_default - default value.\r\n\t * \r\n\t * @returns {any} - found value or given default value\r\n\t */\r\n\tget_setting(arg_name, arg_default)\r\n\t{\r\n\t\tassert( T.isFunction(this.$settings.has), context + ':has:bad settings object')\r\n\t\t\r\n\t\tif ( T.isArray(arg_name) )\r\n\t\t{\r\n\t\t\treturn this.$settings.hasIn(arg_name) ? this.$settings.getIn(arg_name) : (arg_default ? arg_default : null)\r\n\t\t}\r\n\t\treturn this.$settings.has(arg_name) ? this.$settings.get(arg_name) : (arg_default ? arg_default : null)\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * Get a value in settings for given key.\r\n\t * \r\n\t * @param {string|array} arg_name - settings value key.\r\n\t * @param {any} arg_default - default value.\r\n\t * \r\n\t * @returns {any} - found value or given default value\r\n\t */\r\n\tget_setting_js(arg_name, arg_default)\r\n\t{\r\n\t\tassert( T.isFunction(this.$settings.has), context + ':has:bad settings object')\r\n\t\t\r\n\t\tlet result = undefined\r\n\t\tif ( T.isArray(arg_name) )\r\n\t\t{\r\n\t\t\tresult = this.$settings.hasIn(arg_name) ? this.$settings.getIn(arg_name) : (arg_default ? arg_default : null)\r\n\t\t} else {\r\n\t\t\tresult = this.$settings.has(arg_name) ? this.$settings.get(arg_name) : (arg_default ? arg_default : null)\r\n\t\t}\r\n\t\treturn (result && T.isFunction(result.toJS) ) ? result.toJS() : result\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * Set a value in settings for given key.\r\n\t * @param {string} arg_name - settings value key.\r\n\t * @param {any} arg_value - settings value.\r\n\t * @returns {nothing}\r\n\t */\r\n\tset_setting(arg_name, arg_value)\r\n\t{\r\n\t\tif ( T.isArray(arg_name) )\r\n\t\t{\r\n\t\t\tthis.$settings = this.$settings.setIn(arg_name, arg_value)\r\n\t\t}\r\n\t\tthis.$settings = this.$settings.set(arg_name, arg_value)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/base/settingsable.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 357,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/settingsable.js",
    "static": true,
    "longname": "js/base/settingsable.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/base/settingsable.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 14,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 358,
    "kind": "class",
    "name": "Settingsable",
    "memberof": "js/base/settingsable.js",
    "static": true,
    "longname": "js/base/settingsable.js~Settingsable",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/base/settingsable.js",
    "importStyle": "Settingsable",
    "description": "Settingsable base class: child classes are able to manage settings.",
    "examples": [
      "Settings are immutable values which define instance initial configuration.\nSettings are not intended to act as a mutable state.\n\nAPI:\n\t\tset_settings(arg_settings:plain object or Immutable object):nothing - replace settings Immutable.Map\n\t\tget_settings(): Immutable.Map - get settings tree.\n\t\thas_setting(arg_name:string|array): boolean - test if a value is avalaible for given key or path.\n\t\tget_setting(arg_name:string|array, arg_default): Immutable or js value - get value from a path or a key.\n\t\tset_setting(arg_name:string|array, arg_value): nothing - set or replace a value at given key or path."
    ],
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "abstract": true,
    "interface": false,
    "extends": [
      "js/base/errorable.js~Errorable"
    ]
  },
  {
    "__docId__": 359,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/settingsable.js~Settingsable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/settingsable.js~Settingsable#constructor",
    "access": "public",
    "description": "Create a Settingsable instance.",
    "lineNumber": 48,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Immutable.Map",
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "instance settings map."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context string."
      },
      {
        "nullable": null,
        "types": [
          "LoggerManager"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_logger_manager",
        "description": "logger manager object (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 360,
    "kind": "member",
    "name": "is_settable",
    "memberof": "js/base/settingsable.js~Settingsable",
    "static": false,
    "longname": "js/base/settingsable.js~Settingsable#is_settable",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 69,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 361,
    "kind": "member",
    "name": "$settings",
    "memberof": "js/base/settingsable.js~Settingsable",
    "static": false,
    "longname": "js/base/settingsable.js~Settingsable#$settings",
    "access": "public",
    "description": "Instance settings (default undefined).",
    "lineNumber": 75,
    "type": {
      "nullable": null,
      "types": [
        "object",
        "Immutable.Map"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 362,
    "kind": "method",
    "name": "set_settings",
    "memberof": "js/base/settingsable.js~Settingsable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/settingsable.js~Settingsable#set_settings",
    "access": "public",
    "description": "Set instance settings.",
    "lineNumber": 86,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Immutable.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "instance settings map."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 365,
    "kind": "method",
    "name": "get_settings",
    "memberof": "js/base/settingsable.js~Settingsable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/settingsable.js~Settingsable#get_settings",
    "access": "public",
    "description": "Get instance settings.",
    "lineNumber": 104,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Immutable.Map}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Immutable.Map"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 366,
    "kind": "method",
    "name": "get_settings_js",
    "memberof": "js/base/settingsable.js~Settingsable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/settingsable.js~Settingsable#get_settings_js",
    "access": "public",
    "description": "Get instance settings.",
    "lineNumber": 115,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Immutable.Map}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Immutable.Map"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 367,
    "kind": "method",
    "name": "has_setting",
    "memberof": "js/base/settingsable.js~Settingsable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/settingsable.js~Settingsable#has_setting",
    "access": "public",
    "description": "Test if a key exists in settings.",
    "lineNumber": 132,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "settings value key."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 368,
    "kind": "method",
    "name": "get_setting",
    "memberof": "js/base/settingsable.js~Settingsable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/settingsable.js~Settingsable#get_setting",
    "access": "public",
    "description": "Get a value in settings for given key.",
    "lineNumber": 153,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{any} - found value or given default value"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "settings value key."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_default",
        "description": "default value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": "found value or given default value"
    }
  },
  {
    "__docId__": 369,
    "kind": "method",
    "name": "get_setting_js",
    "memberof": "js/base/settingsable.js~Settingsable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/settingsable.js~Settingsable#get_setting_js",
    "access": "public",
    "description": "Get a value in settings for given key.",
    "lineNumber": 174,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{any} - found value or given default value"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "settings value key."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_default",
        "description": "default value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": "found value or given default value"
    }
  },
  {
    "__docId__": 370,
    "kind": "method",
    "name": "set_setting",
    "memberof": "js/base/settingsable.js~Settingsable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/settingsable.js~Settingsable#set_setting",
    "access": "public",
    "description": "Set a value in settings for given key.",
    "lineNumber": 196,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "settings value key."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_value",
        "description": "settings value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 373,
    "kind": "file",
    "name": "js/base/stateable.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport Immutable from 'immutable'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport Settingsable from './settingsable'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\nconst context = 'common/base/stateable'\r\n\r\n\r\n\r\n/**\r\n * Stateable base class.\r\n * @abstract\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n* API:\r\n* \t\t->get_initial_state():plain object - get state at creation.\r\n* \t\t->get_state():plain object - get current state.\r\n* \t\t->get_state_store():object - get state store.\r\n* \t\t->get_state_path():array|string - get state path into store.\r\n* \t\t->get_state_value(arg_key_or_path, arg_default_value=undefined):any - get a state value at path.\r\n* \r\n* \t\t->handle_state_change(arg_previous_state, arg_new_state):nothing - handle state changes (to be implemented in sub classes)\r\n* \t\t->register_state_value_change_handle(arg_path, arg_listener):nothing - Register a state value change listener.\r\n* \r\n* \t\t->dispatch_action(arg_action_type, arg_options):nothing - dispatch state changes actions.\r\n* \r\n* \t\t->get_name():string - get instance name.\r\n* \r\n */\r\nexport default class Stateable extends Settingsable\r\n{\r\n\t\r\n\t/**\r\n\t * Creates an instance of Stateable: an object with an observable mutable state.\r\n\t * \r\n\t * @param {Immutable.Map|object} arg_settings - settings plain object\r\n\t * @param {object} arg_runtime - client runtime.\r\n\t * @param {object} arg_state - component state.\r\n\t * @param {string} arg_log_context - context of traces of this instance (optional).\r\n\t * @param {LoggerManager} arg_logger_manager - logger manager object (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_settings, arg_runtime, arg_state, arg_log_context, arg_logger_manager)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_settings, log_context, arg_logger_manager)\r\n\t\t\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_stateable = true\r\n\r\n\t\t// GET RUNTIME\r\n\t\t/**\r\n\t\t * Runtime isntance.\r\n\t\t * @type {Runtime}\r\n\t\t */\r\n\t\tthis._runtime = arg_runtime\r\n\t\tif ( ! arg_runtime)\r\n\t\t{\r\n\t\t\tif (arg_settings.get)\r\n\t\t\t{\r\n\t\t\t\tthis._runtime = arg_settings.get('runtime', undefined)\r\n\t\t\t} else {\r\n\t\t\t\tthis._runtime = (arg_settings && arg_settings.runtime) ? arg_settings.runtime : undefined\r\n\t\t\t}\r\n\t\t}\r\n\t\tassert( T.isObject(this._runtime) && this._runtime.is_base_runtime, context + ':constructor:bad this._runtime instance (' + log_context + ')')\r\n\r\n\t\t/**\r\n\t\t * Initial state.\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tthis._initial_state = arg_state\r\n\r\n\t\t/**\r\n\t\t * State store.\r\n\t\t * @type {StateStore}\r\n\t\t */\r\n\t\tthis._state_store = this._runtime.get_state_store()\r\n\t\tassert( T.isObject(this._state_store), context + ':constructor:bad state_store object (' + log_context + ')')\r\n\t\t\r\n\t\t// SET STATE PATH\r\n\t\t/**\r\n\t\t * State path in runtime state.\r\n\t\t * @type {array}\r\n\t\t */\r\n\t\tthis.state_path = undefined\r\n\t\tif ( arg_state && T.isFunction(arg_state.has) && T.isFunction(arg_state.get) && arg_state.has('state_path') )\r\n\t\t{\r\n\t\t\tthis.state_path = arg_state.get('state_path').toArray()\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * State changes handlers.\r\n\t\t * @type {array}\r\n\t\t */\r\n\t\tthis._state_value_listeners = []\r\n\r\n\t\t// console.info(context + ':constructor:creating component ' + this.get_name())\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get runtime instance.\r\n\t * \r\n\t * @returns {RuntimeBase}\r\n\t */\r\n\tget_runtime()\r\n\t{\r\n\t\treturn this._runtime\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get initial state, an immutable object from a Redux data store.\r\n\t * \r\n\t * @returns {Immutable.Map} - component state.\r\n\t */\r\n\tget_initial_state()\r\n\t{\r\n\t\treturn this._initial_state\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get current state, an immutable object from a Redux data store.\r\n\t * \r\n\t * @returns {Immutable.Map} - component state.\r\n\t */\r\n\tget_state()\r\n\t{\r\n\t\tconst path = this.state_path\r\n\t\t\r\n\t\t// console.log(context + ':get_state', this._state_store.get_state().toJS())\r\n\t\t// console.log(context + ':state_path', this.state_path)\r\n\t\t// console.log(context + ':state', this._state_store.get_state().getIn(path))\r\n\t\t// console.log(context + ':state js', this._state_store.get_state().getIn(path).toJS())\r\n\t\t\r\n\t\tconst current_state = this._state_store.get_state().getIn(path)\r\n\t\treturn current_state ? current_state : this._initial_state\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get current state, an immutable object from a Redux data store.\r\n\t * \r\n\t * @returns {object} - component state.\r\n\t */\r\n\tget_state_js()\r\n\t{\r\n\t\tconst state = this.get_state()\r\n\t\treturn state && state.toJS ? state.toJS() : {}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get state store.\r\n\t * \r\n\t * @returns {object} - State store.\r\n\t */\r\n\tget_state_store()\r\n\t{\r\n\t\treturn this._state_store\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get state path into a Redux data store.\r\n\t * \r\n\t * @returns {array} - component state path.\r\n\t */\r\n\tget_state_path()\r\n\t{\r\n\t\treturn this.state_path\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get a state entry.\r\n\t * \r\n\t * @param {string|array} arg_key_or_path - key string or strings path array.\r\n\t * @param {any} arg_default_value - returned value on not found value result (optional)(default:undefined). \r\n\t * \r\n\t * @returns {any} - js value (plain object, number, string, array, boolean)\r\n\t */\r\n\tget_state_value(arg_key_or_path, arg_default_value=undefined)\r\n\t{\r\n\t\tconst state = this.get_state()\r\n\r\n\t\tif ( T.isString(arg_key_or_path) )\r\n\t\t{\r\n\t\t\tconst value = state.has(arg_key_or_path) ? state.get(arg_key_or_path) : arg_default_value\r\n\t\t\treturn value && T.isFunction(value.toJS) ? value.toJS() : value\r\n\t\t}\r\n\r\n\t\tif ( T.isArray(arg_key_or_path) )\r\n\t\t{\r\n\t\t\tconst value = state.hasIn(arg_key_or_path) ? state.getIn(arg_key_or_path) : arg_default_value\r\n\t\t\treturn value && T.isFunction(value.toJS) ? value.toJS() : value\r\n\t\t}\r\n\r\n\t\treturn arg_default_value\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Handle component state changes.\r\n\t * \r\n\t * @param {Immutable.Map} arg_previous_state - previous state map.\r\n\t * @param {Immutable.Map} arg_new_state - new state map.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\thandle_state_change(arg_previous_state, arg_new_state)\r\n\t{\r\n\t\tif (! arg_previous_state)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\tif ( T.isArray(this._state_value_listeners) && this._state_value_listeners.length > 0 )\r\n\t\t{\r\n\t\t\tthis._state_value_listeners.forEach(\r\n\t\t\t\t(handle)=>{\r\n\t\t\t\t\tconst prev_value = arg_previous_state.getIn(handle.path)\r\n\t\t\t\t\tconst new_value = arg_new_state.getIn(handle.path)\r\n\r\n\t\t\t\t\t// console.log(context + ':handle_state_change', prev_value, new_value)\r\n\r\n\t\t\t\t\tif ( ! Immutable.is(prev_value, new_value) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\thandle.listener(handle.path, prev_value, new_value)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Register a state value change listener.\r\n\t * \r\n\t * @param {string|array} arg_path - component state value path array or string with a dot separator.\r\n\t * @param {string|function} arg_listener - state value change listener, function or method name.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tregister_state_value_change_handle(arg_path, arg_listener)\r\n\t{\r\n\t\t// CHECK PATH\r\n\t\tif ( T.isString(arg_path) )\r\n\t\t{\r\n\t\t\targ_path = arg_path.split('.')\r\n\t\t}\r\n\t\tassert( T.isArray(arg_path), context + ':handle_state_path_change:bad path array')\r\n\r\n\t\t// CHECK LISTENER\r\n\t\tif ( T.isString(arg_listener) )\r\n\t\t{\r\n\t\t\tassert( arg_listener in (this), context + ':handle_state_path_change:listerner method string not found')\r\n\t\t\targ_listener = this[arg_listener].bind(this)\r\n\t\t}\r\n\t\tassert( T.isFunction(arg_listener), context + ':handle_state_path_change:bad listener function')\r\n\t\t\r\n\t\tthis._state_value_listeners.push( { path:arg_path, listener:arg_listener })\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Dispatch a state action.\r\n\t * \r\n\t * @param {string|object} arg_action_type - action type string or action object.\r\n\t * @param {object|undefined} arg_options - action options object (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdispatch_action(arg_action_type, arg_options)\r\n\t{\r\n\t\tlet action = undefined\r\n\t\t\r\n\t\tif ( T.isString(arg_action_type) )\r\n\t\t{\r\n\t\t\taction = { type:arg_action_type }\r\n\t\t}\r\n\t\telse if ( T.isString(arg_action_type) && T.isString(arg_action_type.type) )\r\n\t\t{\r\n\t\t\taction = arg_action_type\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tassert(false, context + ':dispatch_action:bad action object')\r\n\t\t}\r\n\t\t\r\n\t\tif ( T.isObject(arg_options) )\r\n\t\t{\r\n\t\t\taction = Object.assign(action, arg_options)\r\n\t\t}\r\n\t\t\r\n\t\tif ( !('component' in action) )\r\n\t\t{\r\n\t\t\taction.component = this.get_name()\r\n\t\t}\r\n\t\t\r\n\t\t// console.info(context + ':dispatch_action:type=' + action.type + ' for ' + action.component, action)\r\n\t\t\r\n\t\t// assert( T.isObject(this._state_store), context + ':dispatch_action:bad state_store object')\r\n\t\tthis._state_store.dispatch_action(action)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get name.\r\n\t * \r\n\t * @returns {string} - instance name.\r\n\t */\r\n\tget_name()\r\n\t{\r\n\t\treturn this.get_state_value('name', undefined)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/base/stateable.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 374,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/stateable.js",
    "static": true,
    "longname": "js/base/stateable.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/base/stateable.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 14,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 375,
    "kind": "class",
    "name": "Stateable",
    "memberof": "js/base/stateable.js",
    "static": true,
    "longname": "js/base/stateable.js~Stateable",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/base/stateable.js",
    "importStyle": "Stateable",
    "description": "Stateable base class.",
    "examples": [
      "API:\n\t\t->get_initial_state():plain object - get state at creation.\n\t\t->get_state():plain object - get current state.\n\t\t->get_state_store():object - get state store.\n\t\t->get_state_path():array|string - get state path into store.\n\t\t->get_state_value(arg_key_or_path, arg_default_value=undefined):any - get a state value at path.\n\n\t\t->handle_state_change(arg_previous_state, arg_new_state):nothing - handle state changes (to be implemented in sub classes)\n\t\t->register_state_value_change_handle(arg_path, arg_listener):nothing - Register a state value change listener.\n\n\t\t->dispatch_action(arg_action_type, arg_options):nothing - dispatch state changes actions.\n\n\t\t->get_name():string - get instance name."
    ],
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "abstract": true,
    "interface": false,
    "extends": [
      "js/base/settingsable.js~Settingsable"
    ]
  },
  {
    "__docId__": 376,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/stateable.js~Stateable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/stateable.js~Stateable#constructor",
    "access": "public",
    "description": "Creates an instance of Stateable: an object with an observable mutable state.",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Immutable.Map",
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "settings plain object"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "context of traces of this instance (optional)."
      },
      {
        "nullable": null,
        "types": [
          "LoggerManager"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_logger_manager",
        "description": "logger manager object (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 377,
    "kind": "member",
    "name": "is_stateable",
    "memberof": "js/base/stateable.js~Stateable",
    "static": false,
    "longname": "js/base/stateable.js~Stateable#is_stateable",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 64,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 378,
    "kind": "member",
    "name": "_runtime",
    "memberof": "js/base/stateable.js~Stateable",
    "static": false,
    "longname": "js/base/stateable.js~Stateable#_runtime",
    "access": "private",
    "description": "Runtime isntance.",
    "lineNumber": 71,
    "type": {
      "nullable": null,
      "types": [
        "Runtime"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 381,
    "kind": "member",
    "name": "_initial_state",
    "memberof": "js/base/stateable.js~Stateable",
    "static": false,
    "longname": "js/base/stateable.js~Stateable#_initial_state",
    "access": "private",
    "description": "Initial state.",
    "lineNumber": 87,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 382,
    "kind": "member",
    "name": "_state_store",
    "memberof": "js/base/stateable.js~Stateable",
    "static": false,
    "longname": "js/base/stateable.js~Stateable#_state_store",
    "access": "private",
    "description": "State store.",
    "lineNumber": 93,
    "type": {
      "nullable": null,
      "types": [
        "StateStore"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 383,
    "kind": "member",
    "name": "state_path",
    "memberof": "js/base/stateable.js~Stateable",
    "static": false,
    "longname": "js/base/stateable.js~Stateable#state_path",
    "access": "public",
    "description": "State path in runtime state.",
    "lineNumber": 101,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 385,
    "kind": "member",
    "name": "_state_value_listeners",
    "memberof": "js/base/stateable.js~Stateable",
    "static": false,
    "longname": "js/base/stateable.js~Stateable#_state_value_listeners",
    "access": "private",
    "description": "State changes handlers.",
    "lineNumber": 111,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 386,
    "kind": "method",
    "name": "get_runtime",
    "memberof": "js/base/stateable.js~Stateable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/stateable.js~Stateable#get_runtime",
    "access": "public",
    "description": "Get runtime instance.",
    "lineNumber": 123,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RuntimeBase}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RuntimeBase"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 387,
    "kind": "method",
    "name": "get_initial_state",
    "memberof": "js/base/stateable.js~Stateable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/stateable.js~Stateable#get_initial_state",
    "access": "public",
    "description": "Get initial state, an immutable object from a Redux data store.",
    "lineNumber": 135,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Immutable.Map} - component state."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Immutable.Map"
      ],
      "spread": false,
      "description": "component state."
    },
    "params": []
  },
  {
    "__docId__": 388,
    "kind": "method",
    "name": "get_state",
    "memberof": "js/base/stateable.js~Stateable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/stateable.js~Stateable#get_state",
    "access": "public",
    "description": "Get current state, an immutable object from a Redux data store.",
    "lineNumber": 147,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Immutable.Map} - component state."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Immutable.Map"
      ],
      "spread": false,
      "description": "component state."
    },
    "params": []
  },
  {
    "__docId__": 389,
    "kind": "method",
    "name": "get_state_js",
    "memberof": "js/base/stateable.js~Stateable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/stateable.js~Stateable#get_state_js",
    "access": "public",
    "description": "Get current state, an immutable object from a Redux data store.",
    "lineNumber": 167,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - component state."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "component state."
    },
    "params": []
  },
  {
    "__docId__": 390,
    "kind": "method",
    "name": "get_state_store",
    "memberof": "js/base/stateable.js~Stateable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/stateable.js~Stateable#get_state_store",
    "access": "public",
    "description": "Get state store.",
    "lineNumber": 180,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - State store."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "State store."
    },
    "params": []
  },
  {
    "__docId__": 391,
    "kind": "method",
    "name": "get_state_path",
    "memberof": "js/base/stateable.js~Stateable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/stateable.js~Stateable#get_state_path",
    "access": "public",
    "description": "Get state path into a Redux data store.",
    "lineNumber": 192,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} - component state path."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "component state path."
    },
    "params": []
  },
  {
    "__docId__": 392,
    "kind": "method",
    "name": "get_state_value",
    "memberof": "js/base/stateable.js~Stateable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/stateable.js~Stateable#get_state_value",
    "access": "public",
    "description": "Get a state entry.",
    "lineNumber": 207,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{any} - js value (plain object, number, string, array, boolean)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_key_or_path",
        "description": "key string or strings path array."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_default_value",
        "description": "returned value on not found value result (optional)(default:undefined)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": "js value (plain object, number, string, array, boolean)"
    }
  },
  {
    "__docId__": 393,
    "kind": "method",
    "name": "handle_state_change",
    "memberof": "js/base/stateable.js~Stateable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/stateable.js~Stateable#handle_state_change",
    "access": "public",
    "description": "Handle component state changes.",
    "lineNumber": 236,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Immutable.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_previous_state",
        "description": "previous state map."
      },
      {
        "nullable": null,
        "types": [
          "Immutable.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_new_state",
        "description": "new state map."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 394,
    "kind": "method",
    "name": "register_state_value_change_handle",
    "memberof": "js/base/stateable.js~Stateable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/stateable.js~Stateable#register_state_value_change_handle",
    "access": "public",
    "description": "Register a state value change listener.",
    "lineNumber": 271,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_path",
        "description": "component state value path array or string with a dot separator."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_listener",
        "description": "state value change listener, function or method name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 395,
    "kind": "method",
    "name": "dispatch_action",
    "memberof": "js/base/stateable.js~Stateable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/stateable.js~Stateable#dispatch_action",
    "access": "public",
    "description": "Dispatch a state action.",
    "lineNumber": 301,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_action_type",
        "description": "action type string or action object."
      },
      {
        "nullable": null,
        "types": [
          "object",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_options",
        "description": "action options object (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 396,
    "kind": "method",
    "name": "get_name",
    "memberof": "js/base/stateable.js~Stateable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/stateable.js~Stateable#get_name",
    "access": "public",
    "description": "Get name.",
    "lineNumber": 341,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - instance name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "instance name."
    },
    "params": []
  },
  {
    "__docId__": 397,
    "kind": "file",
    "name": "js/cache/cache_adapter.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\nconst context = 'common/cache/cache_adapter'\r\n\r\n\r\n\r\n/**\r\n * CacheAdapter base class.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n * API:\r\n* \t\t->get(arg_key:string, arg_default):Promise - get a cached value with its key.\r\n* \t\t->mget(arg_keys:array, arg_default:any|array):Promise - get cached values with their keys.\r\n* \t\t->has(arg_key:string):Promise - testif a cached value exists with given key.\r\n* \t\t->set(arg_key:string, arg_value, arg_ttl=undefined):Promise - set a cached value with its key and ttl.\r\n* \t\t->set_ttl(arg_key:string, arg_ttl):Promise - set cached value ttl.\r\n* \t\t->get_ttl(arg_key:string):Promise - get cached value ttl.\r\n* \t\t->get_keys():Promise - get all cached values keys.\r\n* \t\t->remove(arg_key:string|array):Promise - remove a cached value.\r\n* \t\t->flush():nothing - delete all entries.\r\n* \t\t->close():nothing - clear interval timeout for checks.\r\n * \r\n */\r\nexport default class CacheAdapter\r\n{\r\n\t/**\r\n\t * Create CacheAdapter instance to manage cached datas.\r\n\t * \r\n\t * @param {object} arg_settings - cache engine settings.\r\n\t * \r\n     * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_settings)\r\n\t{\r\n\t\tassert( T.isObject(arg_settings), context + ':constructor:bad settigns object')\r\n\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_cache_adapter = true\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get a cached value.\r\n\t * \r\n\t * @param {string} arg_key - key string to retrieve the value.\r\n\t * @param {any} arg_default - returned default value if the key is not found (optional) (default:undefined).\r\n\t * \r\n\t * @returns {Promise} - Promise of cached value or undefined.\r\n\t */\r\n\tget(arg_key, arg_default=undefined)\r\n\t{\r\n\t\treturn Promise.resolve(arg_default)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get a cached value.\r\n\t * \r\n\t * @param {array} arg_keys - key strings to retrieve the values.\r\n\t * @param {any} arg_default - returned default value if the key is not found (optional) (default:undefined).\r\n\t * \r\n\t * @returns {Promise} - Promise of cached value or undefined array.\r\n\t */\r\n\tmget(arg_keys, arg_default=undefined)\r\n\t{\r\n\t\treturn Promise.resolve(arg_default)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Test if given key has a cached value.\r\n\t * \r\n\t * @param {string} arg_key - key string to retrieve the value.\r\n\t * \r\n\t * @returns {Promise} - Promise of cached value or undefined.\r\n\t */\r\n\thas(arg_key)\r\n\t{\r\n\t\treturn Promise.resolve(false)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Set a cached value with given key.\r\n\t * \r\n\t * @param {string} arg_key - key string to retrieve the value.\r\n\t * @param {any} arg_value - value to cache.\r\n\t * @param {integer} arg_ttl - time to leave for cached value.\r\n\t * \r\n\t * @returns {Promise} - Promise of nothing.\r\n\t */\r\n\tset(arg_key, arg_value, arg_ttl=undefined)\r\n\t{\r\n\t\treturn Promise.resolve()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Set cached value ttl.\r\n\t * \r\n\t * @param {string} arg_key - key string to retrieve the value.\r\n\t * @param {integer} arg_ttl - time to leave for cached value.\r\n\t * \r\n\t * @returns {Promise} - Promise of nothing.\r\n\t */\r\n\tset_ttl(arg_key, arg_ttl)\r\n\t{\r\n\t\treturn Promise.resolve()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get cached value ttl.\r\n\t * \r\n\t * @param {string} arg_key - key string to retrieve the value.\r\n\t * \r\n\t * @returns {Promise} - Promise of integer|undefined.\r\n\t */\r\n\tget_ttl(arg_key)\r\n\t{\r\n\t\treturn Promise.resolve(undefined)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get cached keys.\r\n\t * \r\n\t * @returns {Promise} - Promise of keys array.\r\n\t */\r\n\tget_keys()\r\n\t{\r\n\t\treturn Promise.resolve([])\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Remove a cached value.\r\n\t * \r\n\t * @param {string|array} arg_keys - value key string or array.\r\n\t * \r\n\t * @returns {Promise} - Promise of undefined.\r\n\t */\r\n\tremove(arg_keys)\r\n\t{\r\n\t\treturn Promise.resolve()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Flush all cached values (clear interval timeout for checks).\r\n\t * \r\n\t * @returns {Promise} - Promise of undefined.\r\n\t */\r\n\tflush()\r\n\t{\r\n\t\treturn Promise.resolve()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Close cache engine.\r\n\t * \r\n\t * @returns {Promise} - Promise of undefined.\r\n\t */\r\n\tclose()\r\n\t{\r\n\t\treturn Promise.resolve()\r\n\t}\r\n}\r\n\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/cache/cache_adapter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 398,
    "kind": "variable",
    "name": "context",
    "memberof": "js/cache/cache_adapter.js",
    "static": true,
    "longname": "js/cache/cache_adapter.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/cache/cache_adapter.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 12,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 399,
    "kind": "class",
    "name": "CacheAdapter",
    "memberof": "js/cache/cache_adapter.js",
    "static": true,
    "longname": "js/cache/cache_adapter.js~CacheAdapter",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/cache/cache_adapter.js",
    "importStyle": "CacheAdapter",
    "description": "CacheAdapter base class.",
    "examples": [
      "API:\n\t\t->get(arg_key:string, arg_default):Promise - get a cached value with its key.\n\t\t->mget(arg_keys:array, arg_default:any|array):Promise - get cached values with their keys.\n\t\t->has(arg_key:string):Promise - testif a cached value exists with given key.\n\t\t->set(arg_key:string, arg_value, arg_ttl=undefined):Promise - set a cached value with its key and ttl.\n\t\t->set_ttl(arg_key:string, arg_ttl):Promise - set cached value ttl.\n\t\t->get_ttl(arg_key:string):Promise - get cached value ttl.\n\t\t->get_keys():Promise - get all cached values keys.\n\t\t->remove(arg_key:string|array):Promise - remove a cached value.\n\t\t->flush():nothing - delete all entries.\n\t\t->close():nothing - clear interval timeout for checks."
    ],
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 400,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/cache/cache_adapter.js~CacheAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter.js~CacheAdapter#constructor",
    "access": "public",
    "description": "Create CacheAdapter instance to manage cached datas.",
    "lineNumber": 45,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "cache engine settings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 401,
    "kind": "member",
    "name": "is_cache_adapter",
    "memberof": "js/cache/cache_adapter.js~CacheAdapter",
    "static": false,
    "longname": "js/cache/cache_adapter.js~CacheAdapter#is_cache_adapter",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 53,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 402,
    "kind": "method",
    "name": "get",
    "memberof": "js/cache/cache_adapter.js~CacheAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter.js~CacheAdapter#get",
    "access": "public",
    "description": "Get a cached value.",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of cached value or undefined."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_key",
        "description": "key string to retrieve the value."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_default",
        "description": "returned default value if the key is not found (optional) (default:undefined)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of cached value or undefined."
    }
  },
  {
    "__docId__": 403,
    "kind": "method",
    "name": "mget",
    "memberof": "js/cache/cache_adapter.js~CacheAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter.js~CacheAdapter#mget",
    "access": "public",
    "description": "Get a cached value.",
    "lineNumber": 81,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of cached value or undefined array."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_keys",
        "description": "key strings to retrieve the values."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_default",
        "description": "returned default value if the key is not found (optional) (default:undefined)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of cached value or undefined array."
    }
  },
  {
    "__docId__": 404,
    "kind": "method",
    "name": "has",
    "memberof": "js/cache/cache_adapter.js~CacheAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter.js~CacheAdapter#has",
    "access": "public",
    "description": "Test if given key has a cached value.",
    "lineNumber": 95,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of cached value or undefined."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_key",
        "description": "key string to retrieve the value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of cached value or undefined."
    }
  },
  {
    "__docId__": 405,
    "kind": "method",
    "name": "set",
    "memberof": "js/cache/cache_adapter.js~CacheAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter.js~CacheAdapter#set",
    "access": "public",
    "description": "Set a cached value with given key.",
    "lineNumber": 111,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of nothing."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_key",
        "description": "key string to retrieve the value."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_value",
        "description": "value to cache."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_ttl",
        "description": "time to leave for cached value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of nothing."
    }
  },
  {
    "__docId__": 406,
    "kind": "method",
    "name": "set_ttl",
    "memberof": "js/cache/cache_adapter.js~CacheAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter.js~CacheAdapter#set_ttl",
    "access": "public",
    "description": "Set cached value ttl.",
    "lineNumber": 126,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of nothing."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_key",
        "description": "key string to retrieve the value."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_ttl",
        "description": "time to leave for cached value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of nothing."
    }
  },
  {
    "__docId__": 407,
    "kind": "method",
    "name": "get_ttl",
    "memberof": "js/cache/cache_adapter.js~CacheAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter.js~CacheAdapter#get_ttl",
    "access": "public",
    "description": "Get cached value ttl.",
    "lineNumber": 140,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of integer|undefined."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_key",
        "description": "key string to retrieve the value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of integer|undefined."
    }
  },
  {
    "__docId__": 408,
    "kind": "method",
    "name": "get_keys",
    "memberof": "js/cache/cache_adapter.js~CacheAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter.js~CacheAdapter#get_keys",
    "access": "public",
    "description": "Get cached keys.",
    "lineNumber": 152,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of keys array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of keys array."
    },
    "params": []
  },
  {
    "__docId__": 409,
    "kind": "method",
    "name": "remove",
    "memberof": "js/cache/cache_adapter.js~CacheAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter.js~CacheAdapter#remove",
    "access": "public",
    "description": "Remove a cached value.",
    "lineNumber": 166,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of undefined."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_keys",
        "description": "value key string or array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of undefined."
    }
  },
  {
    "__docId__": 410,
    "kind": "method",
    "name": "flush",
    "memberof": "js/cache/cache_adapter.js~CacheAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter.js~CacheAdapter#flush",
    "access": "public",
    "description": "Flush all cached values (clear interval timeout for checks).",
    "lineNumber": 178,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of undefined."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of undefined."
    },
    "params": []
  },
  {
    "__docId__": 411,
    "kind": "method",
    "name": "close",
    "memberof": "js/cache/cache_adapter.js~CacheAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter.js~CacheAdapter#close",
    "access": "public",
    "description": "Close cache engine.",
    "lineNumber": 190,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of undefined."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of undefined."
    },
    "params": []
  },
  {
    "__docId__": 412,
    "kind": "file",
    "name": "js/cache/cache_adapter_cache_manager.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport CacheManager from 'cache-manager' // https://www.npmjs.com/package/cache-manager\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport CacheAdapter from './cache_adapter'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\nconst context = 'common/cache/cache_adapter_cache_manager'\r\n\r\n\r\n/*\r\nTODO:\r\nnode-cache-manager-redis\r\n\r\nnode-cache-manager-mongodb\r\n\r\nnode-cache-manager-mongoose\r\n\r\nnode-cache-manager-fs\r\n\r\nnode-cache-manager-fs-binary\r\n\r\nnode-cache-manager-hazelcast\r\n\r\nnode-cache-manager-memcached-store\r\n*/\r\n\r\n\r\n\r\n/**\r\n * Cache base class.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n* API:\r\n* \t\t->get(arg_key:string, arg_default):Promise\r\n* \t\t->mget(arg_keys:array, arg_default:any|array):Promise\r\n* \t\t->has(arg_key:string):Promise\r\n* \t\t->set(arg_key:string, arg_value, arg_ttl=undefined):Promise\r\n* \t\t->set_ttl(arg_key:string, arg_ttl):Promise\r\n* \t\t->get_ttl(arg_key:string):Promise\r\n* \t\t->get_keys():Promise\r\n* \t\t->remove(arg_keys:string|array):Promise\r\n* \t\t->flush():nothing - delete all entries.\r\n* \t\t->close():nothing - clear interval timeout for checks.\r\n* \r\n */\r\nexport default class CacheAdapterCacheManager extends CacheAdapter\r\n{\r\n\t/**\r\n\t * Create Cache instance to manage cached datas.\r\n\t * \r\n\t * @param {object} arg_settings - cache engine settings.\r\n\t * \r\n     * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_settings)\r\n\t{\r\n\t\tsuper(arg_settings)\r\n\t\t\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_cache_adapter_cache_manager = true\r\n\r\n\t\t/**\r\n\t\t * Cache storage engines.\r\n\t\t * @type {array}\r\n\t\t */\r\n\t\tthis._engine_stores = []\r\n\r\n\t\t/**\r\n\t\t * Cache storage engine.\r\n\t\t * @type {CacheManager.engine}\r\n\t\t */\r\n\t\tthis._engine = undefined\r\n\r\n\t\tthis.init_stores(arg_settings.stores)\r\n\r\n\t\tif ( this._engine_stores.length > 1 )\r\n\t\t{\r\n\t\t\tthis._engine = CacheManager.multiCaching(this._engine_stores)\r\n\t\t} else if (this._engine_stores.length == 0)\r\n\t\t{\r\n\t\t\tconst options = {ttl: 5} // seconds\r\n\t\t\toptions.ttl = T.isNumber(arg_settings.ttl) ? arg_settings.ttl / 1000 : options.ttl\r\n\t\t\tthis._engine = CacheManager.caching({store: 'memory', max: 100, ttl: options.ttl / 1000 /*seconds*/})\r\n\t\t} else if (this._engine_stores.length == 1)\r\n\t\t{\r\n\t\t\tthis._engine = this._engine_stores[0]\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Create and configure cache stores.\r\n\t * \r\n\t * @param {object} arg_stores_settings - stores settings.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tinit_stores(arg_stores_settings)\r\n\t{\r\n\t\tassert( T.isArray(arg_stores_settings), context + ':init_stores:bad stores settings array' )\r\n\r\n\t\targ_stores_settings.forEach( (store_settings, index) => {\r\n\t\t\tassert( T.isObject(store_settings), context + ':init_stores:bad store settings object at index [' + index + ']' )\r\n\t\t\t\r\n\t\t\tconst store_type = store_settings.type\r\n\t\t\tassert( T.isString(store_type), context + ':init_stores:bad store type string at index [' + index + ']' )\r\n\r\n\t\t\tlet store = undefined\r\n\t\t\tswitch(store_type) {\r\n\t\t\t\tcase 'memory':\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst cfg_ttl = store_settings.ttl ? store_settings.ttl / 1000 : 10\r\n\t\t\t\t\t\tconst cfg_max = store_settings.max ? store_settings.max : 100\r\n\r\n\t\t\t\t\t\tstore = CacheManager.caching({store: 'memory', max: cfg_max, ttl: cfg_ttl/*seconds*/})\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\t}\r\n\t\t\t\tcase 'memcached':\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tconst memcachedStore = require('cache-manager-memcached-store')\r\n\t\t\t\t\t\t\tconst cfg_host = store_settings.host ? store_settings.host : 'localhost'\r\n\t\t\t\t\t\t\tconst cfg_port = store_settings.port ? store_settings.port : '11211'\r\n\t\t\t\t\t\t\tconst cfg_options = store_settings.options ? store_settings.options : {}\r\n\t\t\t\t\t\t\tstore = CacheManager.caching({\r\n\t\t\t\t\t\t\t\tstore: memcachedStore,\r\n\t\t\t\t\t\t\t\thost: cfg_host,\r\n\t\t\t\t\t\t\t\tport: cfg_port,\r\n\t\t\t\t\t\t\t\tmemcached: cfg_options\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} catch(e)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tconsole.error(context + ':init_stores:memcached error')\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\t}\r\n\t\t\t\tcase 'redis':\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tconst redisStore  = require('cache-manager-redis')\r\n\t\t\t\t\t\t\tconst cfg_ttl = store_settings.ttl ? store_settings.ttl/1000 : 1\r\n\t\t\t\t\t\t\tconst cfg_host = store_settings.host ? store_settings.host : 'localhost'\r\n\t\t\t\t\t\t\tconst cfg_port = store_settings.port ? store_settings.port : '6379'\r\n\t\t\t\t\t\t\tconst cfg_auth_path = store_settings.auth_path ? store_settings.auth_path : undefined\r\n\t\t\t\t\t\t\tconst cfg_db = store_settings.db ? store_settings.db : undefined\r\n\t\t\t\t\t\t\tstore = CacheManager.caching({\r\n\t\t\t\t\t\t\t\tstore: redisStore ,\r\n\t\t\t\t\t\t\t\thost: cfg_host,\r\n\t\t\t\t\t\t\t\tport: cfg_port,\r\n\t\t\t\t\t\t\t\tauth_path: cfg_auth_path,\r\n\t\t\t\t\t\t\t\tdb: cfg_db,\r\n\t\t\t\t\t\t\t\tttl:cfg_ttl\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} catch(e)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tconsole.error(context + ':init_stores:memcached error')\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (store)\r\n\t\t\t{\r\n\t\t\t\tthis._engine_stores.push(store)\r\n\t\t\t}\r\n\t\t})\r\n\t\t\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get a cached value.\r\n\t * \r\n\t * @param {string} arg_key - key string to retrieve the value.\r\n\t * @param {any} arg_default - returned default value if the key is not found (optional) (default:undefined).\r\n\t * \r\n\t * @returns {Promise} - Promise of cached value or undefined.\r\n\t */\r\n\tget(arg_key, arg_default=undefined)\r\n\t{\r\n\t\tlet promise = new Promise(\r\n\t\t\t(resolve, reject)=>{\r\n\t\t\t\tthis._engine.get(arg_key, (err, value)=> {\r\n\t\t\t\t\tif (err)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treject(err)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (value == undefined)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tresolve(arg_default)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(value)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\treturn promise\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get a cached value.\r\n\t * \r\n\t * @param {array} arg_keys - key strings to retrieve the values.\r\n\t * @param {any} arg_default - returned default value if the key is not found (optional) (default:undefined).\r\n\t * \r\n\t * @returns {Promise} - Promise of cached value or undefined array.\r\n\t */\r\n\tmget(arg_keys, arg_default=undefined)\r\n\t{\r\n\t\tif ( T.isString(arg_keys) )\r\n\t\t{\r\n\t\t\treturn this.get(arg_keys, arg_default)\r\n\t\t}\r\n\r\n\t\tif ( ! T.isArray(arg_keys) )\r\n\t\t{\r\n\t\t\treturn Promise.reject('bad keys array')\r\n\t\t}\r\n\r\n\t\tlet promises = []\r\n\t\tthis.arg_keys.forEach(\r\n\t\t\t(arg_key)=>{\r\n\t\t\t\tconst promise = new Promise(\r\n\t\t\t\t\t(resolve, reject)=>{\r\n\t\t\t\t\t\tthis._engine.get(arg_key, (err, value)=> {\r\n\t\t\t\t\t\t\tif (err)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\treject(err)\r\n\t\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (value == undefined)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tresolve(arg_default)\r\n\t\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tresolve(value)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\tpromises.push(promise)\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\treturn promises\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Test if given key has a cached value.\r\n\t * \r\n\t * @param {string} arg_key - key string to retrieve the value.\r\n\t * \r\n\t * @returns {Promise} - Promise of cached value or undefined.\r\n\t */\r\n\thas(arg_key)\r\n\t{\r\n\t\t// let promise = new Promise(\r\n\t\t// \t(resolve, reject)=>{\r\n\t\t// \t\tthis._engine.get(arg_key, (err, value)=> {\r\n\t\t// \t\t\tif (err)\r\n\t\t// \t\t\t{\r\n\t\t// \t\t\t\treject(err)\r\n\t\t// \t\t\t\treturn\r\n\t\t// \t\t\t}\r\n\t\t// \t\t\tresolve(value == undefined ? false : true)\r\n\t\t// \t\t})\r\n\t\t\t\t\r\n\t\t// \t}\r\n\t\t// )\r\n\t\t\r\n\t\t// return promise\r\n\t\treturn this._engine.get(arg_key).then( (result)=>{ return (result == undefined ? false : true) } )\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Set a cached value with given key.\r\n\t * \r\n\t * @param {string} arg_key - key string to retrieve the value.\r\n\t * @param {any} arg_value - value to cache.\r\n\t * @param {integer} arg_ttl - time to leave for cached value.\r\n\t * \r\n\t * @returns {Promise} - Promise of nothing.\r\n\t */\r\n\tset(arg_key, arg_value, arg_ttl=undefined)\r\n\t{\r\n\t\targ_ttl = T.isNumber(arg_ttl) ? arg_ttl / 1000 : undefined\r\n\t\tlet promise = new Promise(\r\n\t\t\t(resolve, reject)=>{\r\n\t\t\t\tthis._engine.set(arg_key, arg_value, { ttl:arg_ttl }, (err, success)=> {\r\n\t\t\t\t\tif (err)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treject(err)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(success ? true : false)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\treturn promise\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Set cached value ttl.\r\n\t * \r\n\t * @param {string} arg_key - key string to retrieve the value.\r\n\t * @param {integer} arg_ttl - time to leave for cached value.\r\n\t * \r\n\t * @returns {Promise} - Promise of nothing.\r\n\t */\r\n\tset_ttl(arg_key, arg_ttl)\r\n\t{\r\n\t\tif ( T.isNumber(arg_ttl) )\r\n\t\t{\r\n\t\t\treturn this.get(arg_key).then( (value)=>{ this.set(arg_key, value, arg_ttl / 1000) } )\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get cached value ttl.\r\n\t * \r\n\t * @param {string} arg_key - key string to retrieve the value.\r\n\t * \r\n\t * @returns {Promise} - Promise of integer|undefined.\r\n\t */\r\n\tget_ttl(arg_key)\r\n\t{\r\n\t\tlet promise = new Promise(\r\n\t\t\t(resolve, reject)=>{\r\n\t\t\t\tthis._engine.ttl(arg_key, (err, value)=> {\r\n\t\t\t\t\tif (err)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treject(err)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(IDBCursorWithValue)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\treturn promise\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get cached keys.\r\n\t * \r\n\t * @returns {Promise} - Promise of keys array.\r\n\t */\r\n\tget_keys()\r\n\t{\r\n\t\tlet promise = new Promise(\r\n\t\t\t(resolve, reject)=>{\r\n\t\t\t\tthis._engine.keys( (err, keys)=> {\r\n\t\t\t\t\tif (err)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treject(err)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(keys)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\treturn promise\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Remove a cached value.\r\n\t * \r\n\t * @param {string|array} arg_keys - value key string or array.\r\n\t * \r\n\t * @returns {Promise} - Promise of undefined.\r\n\t */\r\n\tremove(arg_keys)\r\n\t{\r\n\t\tif ( T.isString(arg_keys) )\r\n\t\t{\r\n\t\t\tlet promise = new Promise(\r\n\t\t\t\t(resolve, reject)=>{\r\n\t\t\t\t\tthis._engine.del(arg_keys, (err, keys)=> {\r\n\t\t\t\t\t\tif (err)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treject(err)\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresolve(keys)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t\r\n\t\t\treturn promise\r\n\t\t}\r\n\r\n\t\tif ( ! T.isArray(arg_keys) )\r\n\t\t{\r\n\t\t\treturn Promise.reject('bad keys string or array')\r\n\t\t}\r\n\r\n\t\tlet promises = []\r\n\t\tthis.arg_keys.forEach(\r\n\t\t\t(arg_key)=>{\r\n\t\t\t\tconst promise = this.remove(arg_key)\r\n\t\t\t\tpromises.push(promise)\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\treturn promises\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Flush all cached values (clear interval timeout for checks).\r\n\t * \r\n\t * @returns {Promise} - Promise of undefined.\r\n\t */\r\n\tflush()\r\n\t{\r\n\t\tlet promise = new Promise(\r\n\t\t\t(resolve, reject)=>{\r\n\t\t\t\tthis._engine.reset( (err, undefined)=> {\r\n\t\t\t\t\tif (err)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treject(err)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve()\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\treturn promise\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Close cache engine.\r\n\t * \r\n\t * @returns {Promise} - Promise of undefined.\r\n\t */\r\n\tclose()\r\n\t{\r\n\t\treturn this.flus()\r\n\t}\r\n}\r\n\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/cache/cache_adapter_cache_manager.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 413,
    "kind": "variable",
    "name": "context",
    "memberof": "js/cache/cache_adapter_cache_manager.js",
    "static": true,
    "longname": "js/cache/cache_adapter_cache_manager.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/cache/cache_adapter_cache_manager.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 14,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 414,
    "kind": "class",
    "name": "CacheAdapterCacheManager",
    "memberof": "js/cache/cache_adapter_cache_manager.js",
    "static": true,
    "longname": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/cache/cache_adapter_cache_manager.js",
    "importStyle": "CacheAdapterCacheManager",
    "description": "Cache base class.",
    "examples": [
      "API:\n\t\t->get(arg_key:string, arg_default):Promise\n\t\t->mget(arg_keys:array, arg_default:any|array):Promise\n\t\t->has(arg_key:string):Promise\n\t\t->set(arg_key:string, arg_value, arg_ttl=undefined):Promise\n\t\t->set_ttl(arg_key:string, arg_ttl):Promise\n\t\t->get_ttl(arg_key:string):Promise\n\t\t->get_keys():Promise\n\t\t->remove(arg_keys:string|array):Promise\n\t\t->flush():nothing - delete all entries.\n\t\t->close():nothing - clear interval timeout for checks."
    ],
    "lineNumber": 56,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/cache/cache_adapter.js~CacheAdapter"
    ]
  },
  {
    "__docId__": 415,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager#constructor",
    "access": "public",
    "description": "Create Cache instance to manage cached datas.",
    "lineNumber": 65,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "cache engine settings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 416,
    "kind": "member",
    "name": "is_cache_adapter_cache_manager",
    "memberof": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager",
    "static": false,
    "longname": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager#is_cache_adapter_cache_manager",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 73,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 417,
    "kind": "member",
    "name": "_engine_stores",
    "memberof": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager",
    "static": false,
    "longname": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager#_engine_stores",
    "access": "private",
    "description": "Cache storage engines.",
    "lineNumber": 79,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 418,
    "kind": "member",
    "name": "_engine",
    "memberof": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager",
    "static": false,
    "longname": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager#_engine",
    "access": "private",
    "description": "Cache storage engine.",
    "lineNumber": 85,
    "type": {
      "nullable": null,
      "types": [
        "CacheManager.engine"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 422,
    "kind": "method",
    "name": "init_stores",
    "memberof": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager#init_stores",
    "access": "public",
    "description": "Create and configure cache stores.",
    "lineNumber": 112,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_stores_settings",
        "description": "stores settings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 423,
    "kind": "method",
    "name": "get",
    "memberof": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager#get",
    "access": "public",
    "description": "Get a cached value.",
    "lineNumber": 193,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of cached value or undefined."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_key",
        "description": "key string to retrieve the value."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_default",
        "description": "returned default value if the key is not found (optional) (default:undefined)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of cached value or undefined."
    }
  },
  {
    "__docId__": 424,
    "kind": "method",
    "name": "mget",
    "memberof": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager#mget",
    "access": "public",
    "description": "Get a cached value.",
    "lineNumber": 226,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of cached value or undefined array."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_keys",
        "description": "key strings to retrieve the values."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_default",
        "description": "returned default value if the key is not found (optional) (default:undefined)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of cached value or undefined array."
    }
  },
  {
    "__docId__": 425,
    "kind": "method",
    "name": "has",
    "memberof": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager#has",
    "access": "public",
    "description": "Test if given key has a cached value.",
    "lineNumber": 274,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of cached value or undefined."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_key",
        "description": "key string to retrieve the value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of cached value or undefined."
    }
  },
  {
    "__docId__": 426,
    "kind": "method",
    "name": "set",
    "memberof": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager#set",
    "access": "public",
    "description": "Set a cached value with given key.",
    "lineNumber": 305,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of nothing."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_key",
        "description": "key string to retrieve the value."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_value",
        "description": "value to cache."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_ttl",
        "description": "time to leave for cached value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of nothing."
    }
  },
  {
    "__docId__": 427,
    "kind": "method",
    "name": "set_ttl",
    "memberof": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager#set_ttl",
    "access": "public",
    "description": "Set cached value ttl.",
    "lineNumber": 334,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of nothing."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_key",
        "description": "key string to retrieve the value."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_ttl",
        "description": "time to leave for cached value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of nothing."
    }
  },
  {
    "__docId__": 428,
    "kind": "method",
    "name": "get_ttl",
    "memberof": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager#get_ttl",
    "access": "public",
    "description": "Get cached value ttl.",
    "lineNumber": 351,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of integer|undefined."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_key",
        "description": "key string to retrieve the value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of integer|undefined."
    }
  },
  {
    "__docId__": 429,
    "kind": "method",
    "name": "get_keys",
    "memberof": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager#get_keys",
    "access": "public",
    "description": "Get cached keys.",
    "lineNumber": 376,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of keys array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of keys array."
    },
    "params": []
  },
  {
    "__docId__": 430,
    "kind": "method",
    "name": "remove",
    "memberof": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager#remove",
    "access": "public",
    "description": "Remove a cached value.",
    "lineNumber": 403,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of undefined."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_keys",
        "description": "value key string or array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of undefined."
    }
  },
  {
    "__docId__": 431,
    "kind": "method",
    "name": "flush",
    "memberof": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager#flush",
    "access": "public",
    "description": "Flush all cached values (clear interval timeout for checks).",
    "lineNumber": 446,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of undefined."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of undefined."
    },
    "params": []
  },
  {
    "__docId__": 432,
    "kind": "method",
    "name": "close",
    "memberof": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter_cache_manager.js~CacheAdapterCacheManager#close",
    "access": "public",
    "description": "Close cache engine.",
    "lineNumber": 471,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of undefined."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of undefined."
    },
    "params": []
  },
  {
    "__docId__": 433,
    "kind": "file",
    "name": "js/cache/cache_adapter_node_cache.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\nimport NodeCache from 'node-cache' // https://www.npmjs.com/package/node-cache\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport CacheAdapter from './cache_adapter'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\n// let context = 'common/cache/cache_adapter_node_cache'\r\n\r\n\r\n\r\n/**\r\n * Cache adapter for node-cache.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n* API:\r\n* \t\t->constructor(arg_settings={ttl:5000, check_period:1000}) - time unit is milliseconds\r\n* \r\n* \t\t->get(arg_key:string, arg_default):Promise\r\n* \t\t->mget(arg_keys:array, arg_default:any|array):Promise\r\n* \t\t->has(arg_key:string):Promise\r\n* \t\t->set(arg_key:string, arg_value, arg_ttl=undefined):Promise\r\n* \r\n* \t\t->set_ttl(arg_key:string, arg_ttl):Promise\r\n* \t\t->get_ttl(arg_key:string):Promise\r\n* \r\n* \t\t->get_keys():Promise\r\n* \t\t->remove(arg_keys:string|array):Promise\r\n* \r\n* \t\t->flush():nothing - delete all entries.\r\n* \t\t->close():nothing - clear interval timeout for checks.\r\n* \r\n */\r\nexport default class CacheAdapterNodecache extends CacheAdapter\r\n{\r\n\t/**\r\n\t * Create Cache instance to manage cached datas.\r\n\t * \r\n\t * @param {object} arg_settings - cache engine settings.\r\n\t * \r\n     * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_settings={ttl:5000, check_period:1000})\r\n\t{\r\n\t\tsuper(arg_settings)\r\n\t\t\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_cache_adapter_node_cache = true\r\n\r\n\t\tconst options = {stdTTL: 1, checkperiod: 5} // in seconds\r\n\t\toptions.stdTTL = T.isNumber(arg_settings.ttl) ? arg_settings.ttl / 1000 : options.stdTTL\r\n\t\toptions.checkperiod = T.isNumber(arg_settings.check_period) ? arg_settings.check_period / 1000 : options.checkperiod\r\n\r\n\t\t/**\r\n\t\t * Cache storage engine.\r\n\t\t * @type {NodeCache}\r\n\t\t */\r\n\t\tthis._engine = new NodeCache(options)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get a cached value.\r\n\t * \r\n\t * @param {string} arg_key - key string to retrieve the value.\r\n\t * @param {any} arg_default - returned default value if the key is not found (optional) (default:undefined).\r\n\t * \r\n\t * @returns {Promise} - Promise of cached value or undefined.\r\n\t */\r\n\tget(arg_key, arg_default=undefined)\r\n\t{\r\n\t\tlet promise = new Promise(\r\n\t\t\t(resolve, reject)=>{\r\n\t\t\t\tthis._engine.get(arg_key, (err, value)=> {\r\n\t\t\t\t\tif (err)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treject(err)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (value == undefined)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tresolve(arg_default)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(value)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\treturn promise\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get a cached value.\r\n\t * \r\n\t * @param {array} arg_keys - key strings to retrieve the values.\r\n\t * @param {any} arg_default - returned default value if the key is not found (optional) (default:undefined).\r\n\t * \r\n\t * @returns {Promise} - Promise of cached value or undefined array.\r\n\t */\r\n\tmget(arg_keys, arg_default=undefined)\r\n\t{\r\n\t\tlet promise = new Promise(\r\n\t\t\t(resolve, reject)=>{\r\n\t\t\t\tthis._engine.mget(arg_keys, (err, value)=> {\r\n\t\t\t\t\tif (err)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treject(err)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (value == undefined)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tresolve(arg_default)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(value)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\treturn promise\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Test if given key has a cached value.\r\n\t * \r\n\t * @param {string} arg_key - key string to retrieve the value.\r\n\t * \r\n\t * @returns {Promise} - Promise of cached value or undefined.\r\n\t */\r\n\thas(arg_key)\r\n\t{\r\n\t\tlet promise = new Promise(\r\n\t\t\t(resolve, reject)=>{\r\n\t\t\t\tthis._engine.get(arg_key, (err, value)=> {\r\n\t\t\t\t\tif (err)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treject(err)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(value == undefined ? false : true)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\treturn promise\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Set a cached value with given key.\r\n\t * \r\n\t * @param {string} arg_key - key string to retrieve the value.\r\n\t * @param {any} arg_value - value to cache.\r\n\t * @param {integer} arg_ttl - time to leave for cached value.\r\n\t * \r\n\t * @returns {Promise} - Promise of nothing.\r\n\t */\r\n\tset(arg_key, arg_value, arg_ttl=undefined)\r\n\t{\r\n\t\tlet promise = new Promise(\r\n\t\t\t(resolve, reject)=>{\r\n\t\t\t\tthis._engine.set(arg_key, arg_value, arg_ttl / 1000, (err, success)=> {\r\n\t\t\t\t\tif (err)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treject(err)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(success)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\treturn promise\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Set cached value ttl.\r\n\t * \r\n\t * @param {string} arg_key - key string to retrieve the value.\r\n\t * @param {integer} arg_ttl - time to leave for cached value in milliseconds.\r\n\t * \r\n\t * @returns {Promise} - Promise of nothing.\r\n\t */\r\n\tset_ttl(arg_key, arg_ttl)\r\n\t{\r\n\t\tlet promise = new Promise(\r\n\t\t\t(resolve, reject)=>{\r\n\t\t\t\tthis._engine.ttl(arg_key, arg_ttl / 1000, (err, success)=> {\r\n\t\t\t\t\tif (err)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treject(err)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(success)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\treturn promise\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get cached value ttl.\r\n\t * \r\n\t * @param {string} arg_key - key string to retrieve the value.\r\n\t * \r\n\t * @returns {Promise} - Promise of integer|undefined:ttl in milliseconds.\r\n\t */\r\n\tget_ttl(arg_key)\r\n\t{\r\n\t\tlet promise = new Promise(\r\n\t\t\t(resolve, reject)=>{\r\n\t\t\t\tthis._engine.getTtl(arg_key, (err, ttl)=> {\r\n\t\t\t\t\tif (err)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treject(err)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(ttl * 1000)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\treturn promise\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get cached keys.\r\n\t * \r\n\t * @returns {Promise} - Promise of keys array.\r\n\t */\r\n\tget_keys()\r\n\t{\r\n\t\tlet promise = new Promise(\r\n\t\t\t(resolve, reject)=>{\r\n\t\t\t\tthis._engine.get_keys( (err, keys)=> {\r\n\t\t\t\t\tif (err)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treject(err)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(keys)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\treturn promise\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Remove a cached value.\r\n\t * \r\n\t * @param {string|array} arg_keys - value key string or array.\r\n\t * \r\n\t * @returns {Promise} - Promise of undefined.\r\n\t */\r\n\tremove(arg_keys)\r\n\t{\r\n\t\tlet promise = new Promise(\r\n\t\t\t(resolve, reject)=>{\r\n\t\t\t\tthis._engine.del(arg_keys, (err, success)=> {\r\n\t\t\t\t\tif (err)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treject(err)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(success)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\treturn promise\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Flush all cached values (clear interval timeout for checks).\r\n\t * \r\n\t * @returns {Promise} - Promise of undefined.\r\n\t */\r\n\tflush()\r\n\t{\r\n\t\tlet promise = new Promise(\r\n\t\t\t(resolve, reject)=>{\r\n\t\t\t\tthis._engine.flushAll()\r\n\t\t\t\tresolve()\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\treturn promise\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Close cache engine.\r\n\t * \r\n\t * @returns {Promise} - Promise of undefined.\r\n\t */\r\n\tclose()\r\n\t{\r\n\t\tlet promise = new Promise(\r\n\t\t\t(resolve, reject)=>{\r\n\t\t\t\tthis._engine.close()\r\n\t\t\t\tresolve()\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\treturn promise\r\n\t}\r\n}\r\n\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/cache/cache_adapter_node_cache.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 434,
    "kind": "class",
    "name": "CacheAdapterNodecache",
    "memberof": "js/cache/cache_adapter_node_cache.js",
    "static": true,
    "longname": "js/cache/cache_adapter_node_cache.js~CacheAdapterNodecache",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/cache/cache_adapter_node_cache.js",
    "importStyle": "CacheAdapterNodecache",
    "description": "Cache adapter for node-cache.",
    "examples": [
      "API:\n\t\t->constructor(arg_settings={ttl:5000, check_period:1000}) - time unit is milliseconds\n\n\t\t->get(arg_key:string, arg_default):Promise\n\t\t->mget(arg_keys:array, arg_default:any|array):Promise\n\t\t->has(arg_key:string):Promise\n\t\t->set(arg_key:string, arg_value, arg_ttl=undefined):Promise\n\n\t\t->set_ttl(arg_key:string, arg_ttl):Promise\n\t\t->get_ttl(arg_key:string):Promise\n\n\t\t->get_keys():Promise\n\t\t->remove(arg_keys:string|array):Promise\n\n\t\t->flush():nothing - delete all entries.\n\t\t->close():nothing - clear interval timeout for checks."
    ],
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/cache/cache_adapter.js~CacheAdapter"
    ]
  },
  {
    "__docId__": 435,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/cache/cache_adapter_node_cache.js~CacheAdapterNodecache",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter_node_cache.js~CacheAdapterNodecache#constructor",
    "access": "public",
    "description": "Create Cache instance to manage cached datas.",
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "cache engine settings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 436,
    "kind": "member",
    "name": "is_cache_adapter_node_cache",
    "memberof": "js/cache/cache_adapter_node_cache.js~CacheAdapterNodecache",
    "static": false,
    "longname": "js/cache/cache_adapter_node_cache.js~CacheAdapterNodecache#is_cache_adapter_node_cache",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 60,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 437,
    "kind": "member",
    "name": "_engine",
    "memberof": "js/cache/cache_adapter_node_cache.js~CacheAdapterNodecache",
    "static": false,
    "longname": "js/cache/cache_adapter_node_cache.js~CacheAdapterNodecache#_engine",
    "access": "private",
    "description": "Cache storage engine.",
    "lineNumber": 70,
    "type": {
      "nullable": null,
      "types": [
        "NodeCache"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 438,
    "kind": "method",
    "name": "get",
    "memberof": "js/cache/cache_adapter_node_cache.js~CacheAdapterNodecache",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter_node_cache.js~CacheAdapterNodecache#get",
    "access": "public",
    "description": "Get a cached value.",
    "lineNumber": 83,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of cached value or undefined."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_key",
        "description": "key string to retrieve the value."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_default",
        "description": "returned default value if the key is not found (optional) (default:undefined)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of cached value or undefined."
    }
  },
  {
    "__docId__": 439,
    "kind": "method",
    "name": "mget",
    "memberof": "js/cache/cache_adapter_node_cache.js~CacheAdapterNodecache",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter_node_cache.js~CacheAdapterNodecache#mget",
    "access": "public",
    "description": "Get a cached value.",
    "lineNumber": 116,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of cached value or undefined array."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_keys",
        "description": "key strings to retrieve the values."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_default",
        "description": "returned default value if the key is not found (optional) (default:undefined)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of cached value or undefined array."
    }
  },
  {
    "__docId__": 440,
    "kind": "method",
    "name": "has",
    "memberof": "js/cache/cache_adapter_node_cache.js~CacheAdapterNodecache",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter_node_cache.js~CacheAdapterNodecache#has",
    "access": "public",
    "description": "Test if given key has a cached value.",
    "lineNumber": 148,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of cached value or undefined."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_key",
        "description": "key string to retrieve the value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of cached value or undefined."
    }
  },
  {
    "__docId__": 441,
    "kind": "method",
    "name": "set",
    "memberof": "js/cache/cache_adapter_node_cache.js~CacheAdapterNodecache",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter_node_cache.js~CacheAdapterNodecache#set",
    "access": "public",
    "description": "Set a cached value with given key.",
    "lineNumber": 177,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of nothing."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_key",
        "description": "key string to retrieve the value."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_value",
        "description": "value to cache."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_ttl",
        "description": "time to leave for cached value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of nothing."
    }
  },
  {
    "__docId__": 442,
    "kind": "method",
    "name": "set_ttl",
    "memberof": "js/cache/cache_adapter_node_cache.js~CacheAdapterNodecache",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter_node_cache.js~CacheAdapterNodecache#set_ttl",
    "access": "public",
    "description": "Set cached value ttl.",
    "lineNumber": 205,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of nothing."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_key",
        "description": "key string to retrieve the value."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_ttl",
        "description": "time to leave for cached value in milliseconds."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of nothing."
    }
  },
  {
    "__docId__": 443,
    "kind": "method",
    "name": "get_ttl",
    "memberof": "js/cache/cache_adapter_node_cache.js~CacheAdapterNodecache",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter_node_cache.js~CacheAdapterNodecache#get_ttl",
    "access": "public",
    "description": "Get cached value ttl.",
    "lineNumber": 232,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of integer|undefined:ttl in milliseconds."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_key",
        "description": "key string to retrieve the value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of integer|undefined:ttl in milliseconds."
    }
  },
  {
    "__docId__": 444,
    "kind": "method",
    "name": "get_keys",
    "memberof": "js/cache/cache_adapter_node_cache.js~CacheAdapterNodecache",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter_node_cache.js~CacheAdapterNodecache#get_keys",
    "access": "public",
    "description": "Get cached keys.",
    "lineNumber": 257,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of keys array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of keys array."
    },
    "params": []
  },
  {
    "__docId__": 445,
    "kind": "method",
    "name": "remove",
    "memberof": "js/cache/cache_adapter_node_cache.js~CacheAdapterNodecache",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter_node_cache.js~CacheAdapterNodecache#remove",
    "access": "public",
    "description": "Remove a cached value.",
    "lineNumber": 284,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of undefined."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_keys",
        "description": "value key string or array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of undefined."
    }
  },
  {
    "__docId__": 446,
    "kind": "method",
    "name": "flush",
    "memberof": "js/cache/cache_adapter_node_cache.js~CacheAdapterNodecache",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter_node_cache.js~CacheAdapterNodecache#flush",
    "access": "public",
    "description": "Flush all cached values (clear interval timeout for checks).",
    "lineNumber": 309,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of undefined."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of undefined."
    },
    "params": []
  },
  {
    "__docId__": 447,
    "kind": "method",
    "name": "close",
    "memberof": "js/cache/cache_adapter_node_cache.js~CacheAdapterNodecache",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_adapter_node_cache.js~CacheAdapterNodecache#close",
    "access": "public",
    "description": "Close cache engine.",
    "lineNumber": 328,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of undefined."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of undefined."
    },
    "params": []
  },
  {
    "__docId__": 448,
    "kind": "file",
    "name": "js/cache/cache_manager.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\nconst context = 'common/cache/cache_manager'\r\n\r\n\r\n\r\n/**\r\n * Cache manager class.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n\t * API:\r\n\t * \t\tget(arg_key:string, arg_default):Promise\r\n\t * \t\tmget(arg_keys:array, arg_default:any|array):Promise\r\n\t * \t\thas(arg_key:string):Promise\r\n\t * \t\tset(arg_key:string, arg_value, arg_ttl=undefined):Promise\r\n\t * \t\tset_ttl(arg_key:string, arg_ttl):Promise\r\n\t * \t\tget_ttl(arg_key:string):Promise\r\n\t * \t\tget_keys():Promise\r\n\t * \t\tremove(arg_key:string|array):Promise\r\n\t * \t\tflush():nothing - delete all entries.\r\n\t * \t\tclose():nothing - clear interval timeout for checks.\r\n\t * \r\n\t * \t\tadd_adapter(arg_cache_adapter):nothing - add a cache adapters.\r\n\t * \r\n */\r\nexport default class CacheManager\r\n{\r\n\t/**\r\n\t * Create Cache instance to manage cached datas.\r\n\t * \r\n\t * @param {array} arg_cache_adapters - cache adapters.\r\n\t * \r\n     * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_cache_adapters=[])\r\n\t{\r\n\t\tassert( T.isArray(arg_cache_adapters), context + ':constructor:bad cache adapters array')\r\n\t\t\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_cache_manager = true\r\n\r\n\t\t\r\n\t\t/**\r\n\t\t * Cache adapters array.\r\n\t\t * @type {array}\r\n\t\t */\r\n\t\tthis._cache_adapters = arg_cache_adapters\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get a cached value.\r\n\t * \r\n\t * @param {string} arg_key - key string to retrieve the value.\r\n\t * @param {any} arg_default - returned default value if the key is not found (optional) (default:undefined).\r\n\t * \r\n\t * @returns {Promise} - Promise of cached value or undefined.\r\n\t */\r\n\tget(arg_key, arg_default=undefined)\r\n\t{\r\n\t\tif (this._cache_adapters.length == 0)\r\n\t\t{\r\n\t\t\treturn Promise.resolve(arg_default)\r\n\t\t}\r\n\t\tif (this._cache_adapters.length == 1)\r\n\t\t{\r\n\t\t\treturn this._cache_adapters[0].get(arg_key, arg_default)\r\n\t\t}\r\n\r\n\t\tlet promises = []\r\n\t\tthis._cache_adapters.forEach(\r\n\t\t\t(adapter)=>{\r\n\t\t\t\treturn adapter.get(arg_key, arg_default)\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn Promise.race(promises)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get a cached value.\r\n\t * \r\n\t * @param {array} arg_keys - key strings to retrieve the values.\r\n\t * @param {any} arg_default - returned default value if the key is not found (optional) (default:undefined).\r\n\t * \r\n\t * @returns {Promise} - Promise of cached value or undefined array.\r\n\t */\r\n\tmget(arg_keys, arg_default=undefined)\r\n\t{\r\n\t\tif (this._cache_adapters.length == 0)\r\n\t\t{\r\n\t\t\treturn Promise.resolve([arg_default])\r\n\t\t}\r\n\t\tif (this._cache_adapters.length == 1)\r\n\t\t{\r\n\t\t\treturn this._cache_adapters[0].mget(arg_keys, arg_default)\r\n\t\t}\r\n\r\n\t\tlet promises = []\r\n\t\tthis._cache_adapters.forEach(\r\n\t\t\t(adapter)=>{\r\n\t\t\t\tpromises.push( adapter.mget(arg_keys, arg_default) )\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn Promise.race(promises)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Test if given key has a cached value.\r\n\t * \r\n\t * @param {string} arg_key - key string to retrieve the value.\r\n\t * \r\n\t * @returns {Promise} - Promise of cached value or undefined.\r\n\t */\r\n\thas(arg_key)\r\n\t{\r\n\t\tif (this._cache_adapters.length == 0)\r\n\t\t{\r\n\t\t\treturn Promise.resolve(false)\r\n\t\t}\r\n\t\tif (this._cache_adapters.length == 1)\r\n\t\t{\r\n\t\t\treturn this._cache_adapters[0].has(arg_key)\r\n\t\t}\r\n\r\n\t\tlet promises = []\r\n\t\tthis._cache_adapters.forEach(\r\n\t\t\t(adapter)=>{\r\n\t\t\t\tpromises.push( adapter.has(arg_key) )\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn Promise.race(promises)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Set a cached value with given key.\r\n\t * \r\n\t * @param {string} arg_key - key string to retrieve the value.\r\n\t * @param {any} arg_value - value to cache.\r\n\t * @param {integer} arg_ttl - time to leave for cached value.\r\n\t * \r\n\t * @returns {Promise} - Promise of nothing.\r\n\t */\r\n\tset(arg_key, arg_value, arg_ttl=undefined)\r\n\t{\r\n\t\tif (this._cache_adapters.length == 0)\r\n\t\t{\r\n\t\t\treturn Promise.resolve()\r\n\t\t}\r\n\t\tif (this._cache_adapters.length == 1)\r\n\t\t{\r\n\t\t\treturn this._cache_adapters[0].set(arg_key, arg_value, arg_ttl)\r\n\t\t}\r\n\r\n\t\tlet promises = []\r\n\t\tthis._cache_adapters.forEach(\r\n\t\t\t(adapter)=>{\r\n\t\t\t\tpromises.push( adapter.set(arg_key, arg_value, arg_ttl) )\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn Promise.all(promises)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Set cached value ttl.\r\n\t * \r\n\t * @param {string} arg_key - key string to retrieve the value.\r\n\t * @param {integer} arg_ttl - time to leave for cached value.\r\n\t * \r\n\t * @returns {Promise} - Promise of nothing.\r\n\t */\r\n\tset_ttl(arg_key, arg_ttl)\r\n\t{\r\n\t\tif (this._cache_adapters.length == 0)\r\n\t\t{\r\n\t\t\treturn Promise.resolve()\r\n\t\t}\r\n\t\tif (this._cache_adapters.length == 1)\r\n\t\t{\r\n\t\t\treturn this._cache_adapters[0].set_ttl(arg_key, arg_ttl)\r\n\t\t}\r\n\r\n\t\tlet promises = []\r\n\t\tthis._cache_adapters.forEach(\r\n\t\t\t(adapter)=>{\r\n\t\t\t\tpromises.push( adapter.set_ttl(arg_key, arg_ttl) )\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn Promise.all(promises)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get cached value ttl.\r\n\t * \r\n\t * @param {string} arg_key - key string to retrieve the value.\r\n\t * \r\n\t * @returns {Promise} - Promise of integer|undefined.\r\n\t */\r\n\tget_ttl(arg_key)\r\n\t{\r\n\t\tif (this._cache_adapters.length == 0)\r\n\t\t{\r\n\t\t\treturn Promise.resolve()\r\n\t\t}\r\n\t\tif (this._cache_adapters.length == 1)\r\n\t\t{\r\n\t\t\treturn this._cache_adapters[0].get_ttl(arg_key)\r\n\t\t}\r\n\r\n\t\tlet promises = []\r\n\t\tthis._cache_adapters.forEach(\r\n\t\t\t(adapter)=>{\r\n\t\t\t\tpromises.push( adapter.get_ttl(arg_key) )\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn Promise.race(promises)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get cached keys.\r\n\t * \r\n\t * @returns {Promise} - Promise of keys array.\r\n\t */\r\n\tget_keys()\r\n\t{\r\n\t\tif (this._cache_adapters.length == 0)\r\n\t\t{\r\n\t\t\treturn Promise.resolve([])\r\n\t\t}\r\n\t\tif (this._cache_adapters.length == 1)\r\n\t\t{\r\n\t\t\treturn this._cache_adapters[0].get_keys()\r\n\t\t}\r\n\t\tlet promises = []\r\n\t\tthis._cache_adapters.forEach(\r\n\t\t\t(adapter)=>{\r\n\t\t\t\tpromises.push( adapter.get_keys() )\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn Promise.race(promises)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Remove a cached value.\r\n\t * \r\n\t * @param {string|array} arg_keys - value key string or array.\r\n\t * \r\n\t * @returns {Promise} - Promise of undefined.\r\n\t */\r\n\tremove(arg_keys)\r\n\t{\r\n\t\tif (this._cache_adapters.length == 0)\r\n\t\t{\r\n\t\t\treturn Promise.resolve()\r\n\t\t}\r\n\t\tif (this._cache_adapters.length == 1)\r\n\t\t{\r\n\t\t\treturn this._cache_adapters[0].remove(arg_keys)\r\n\t\t}\r\n\r\n\t\tlet promises = []\r\n\t\tthis._cache_adapters.forEach(\r\n\t\t\t(adapter)=>{\r\n\t\t\t\tpromises.push( adapter.remove(arg_keys) )\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn Promise.all(promises)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Flush all cached values (clear interval timeout for checks).\r\n\t * \r\n\t * @returns {Promise} - Promise of undefined.\r\n\t */\r\n\tflush()\r\n\t{\r\n\t\tif (this._cache_adapters.length == 0)\r\n\t\t{\r\n\t\t\treturn Promise.resolve()\r\n\t\t}\r\n\t\tif (this._cache_adapters.length == 1)\r\n\t\t{\r\n\t\t\treturn this._cache_adapters[0].flush()\r\n\t\t}\r\n\r\n\t\tlet promises = []\r\n\t\tthis._cache_adapters.forEach(\r\n\t\t\t(adapter)=>{\r\n\t\t\t\tpromises.push( adapter.flush() )\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn Promise.all(promises)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Close cache engine.\r\n\t * \r\n\t * @returns {Promise} - Promise of undefined.\r\n\t */\r\n\tclose()\r\n\t{\r\n\t\tif (this._cache_adapters.length == 0)\r\n\t\t{\r\n\t\t\treturn Promise.resolve()\r\n\t\t}\r\n\t\tif (this._cache_adapters.length == 1)\r\n\t\t{\r\n\t\t\treturn this._cache_adapters[0].close()\r\n\t\t}\r\n\r\n\t\tlet promises = []\r\n\t\tthis._cache_adapters.forEach(\r\n\t\t\t(adapter)=>{\r\n\t\t\t\tpromises.push( adapter.close() )\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn Promise.all(promises)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Add a cache adapter.\r\n\t * \r\n\t * @param{DataCacheAdapter} arg_cache_adapter - cache adapter.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tadd_adapter(arg_cache_adapter)\r\n\t{\r\n\t\tassert( T.isObject(arg_cache_adapter) && arg_cache_adapter.is_cache_adapter, context + ':add_adapter:bad cache adapters array')\r\n\r\n\t\tthis._cache_adapters.push(arg_cache_adapter)\r\n\t}\r\n}\r\n\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/cache/cache_manager.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 449,
    "kind": "variable",
    "name": "context",
    "memberof": "js/cache/cache_manager.js",
    "static": true,
    "longname": "js/cache/cache_manager.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/cache/cache_manager.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 12,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 450,
    "kind": "class",
    "name": "CacheManager",
    "memberof": "js/cache/cache_manager.js",
    "static": true,
    "longname": "js/cache/cache_manager.js~CacheManager",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/cache/cache_manager.js",
    "importStyle": "CacheManager",
    "description": "Cache manager class.",
    "examples": [
      "API:\n\t\tget(arg_key:string, arg_default):Promise\n\t\tmget(arg_keys:array, arg_default:any|array):Promise\n\t\thas(arg_key:string):Promise\n\t\tset(arg_key:string, arg_value, arg_ttl=undefined):Promise\n\t\tset_ttl(arg_key:string, arg_ttl):Promise\n\t\tget_ttl(arg_key:string):Promise\n\t\tget_keys():Promise\n\t\tremove(arg_key:string|array):Promise\n\t\tflush():nothing - delete all entries.\n\t\tclose():nothing - clear interval timeout for checks.\n\n\t\tadd_adapter(arg_cache_adapter):nothing - add a cache adapters."
    ],
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 451,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/cache/cache_manager.js~CacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_manager.js~CacheManager#constructor",
    "access": "public",
    "description": "Create Cache instance to manage cached datas.",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_cache_adapters",
        "description": "cache adapters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 452,
    "kind": "member",
    "name": "is_cache_manager",
    "memberof": "js/cache/cache_manager.js~CacheManager",
    "static": false,
    "longname": "js/cache/cache_manager.js~CacheManager#is_cache_manager",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 55,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 453,
    "kind": "member",
    "name": "_cache_adapters",
    "memberof": "js/cache/cache_manager.js~CacheManager",
    "static": false,
    "longname": "js/cache/cache_manager.js~CacheManager#_cache_adapters",
    "access": "private",
    "description": "Cache adapters array.",
    "lineNumber": 62,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 454,
    "kind": "method",
    "name": "get",
    "memberof": "js/cache/cache_manager.js~CacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_manager.js~CacheManager#get",
    "access": "public",
    "description": "Get a cached value.",
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of cached value or undefined."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_key",
        "description": "key string to retrieve the value."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_default",
        "description": "returned default value if the key is not found (optional) (default:undefined)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of cached value or undefined."
    }
  },
  {
    "__docId__": 455,
    "kind": "method",
    "name": "mget",
    "memberof": "js/cache/cache_manager.js~CacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_manager.js~CacheManager#mget",
    "access": "public",
    "description": "Get a cached value.",
    "lineNumber": 105,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of cached value or undefined array."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_keys",
        "description": "key strings to retrieve the values."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_default",
        "description": "returned default value if the key is not found (optional) (default:undefined)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of cached value or undefined array."
    }
  },
  {
    "__docId__": 456,
    "kind": "method",
    "name": "has",
    "memberof": "js/cache/cache_manager.js~CacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_manager.js~CacheManager#has",
    "access": "public",
    "description": "Test if given key has a cached value.",
    "lineNumber": 134,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of cached value or undefined."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_key",
        "description": "key string to retrieve the value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of cached value or undefined."
    }
  },
  {
    "__docId__": 457,
    "kind": "method",
    "name": "set",
    "memberof": "js/cache/cache_manager.js~CacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_manager.js~CacheManager#set",
    "access": "public",
    "description": "Set a cached value with given key.",
    "lineNumber": 165,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of nothing."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_key",
        "description": "key string to retrieve the value."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_value",
        "description": "value to cache."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_ttl",
        "description": "time to leave for cached value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of nothing."
    }
  },
  {
    "__docId__": 458,
    "kind": "method",
    "name": "set_ttl",
    "memberof": "js/cache/cache_manager.js~CacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_manager.js~CacheManager#set_ttl",
    "access": "public",
    "description": "Set cached value ttl.",
    "lineNumber": 195,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of nothing."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_key",
        "description": "key string to retrieve the value."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_ttl",
        "description": "time to leave for cached value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of nothing."
    }
  },
  {
    "__docId__": 459,
    "kind": "method",
    "name": "get_ttl",
    "memberof": "js/cache/cache_manager.js~CacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_manager.js~CacheManager#get_ttl",
    "access": "public",
    "description": "Get cached value ttl.",
    "lineNumber": 224,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of integer|undefined."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_key",
        "description": "key string to retrieve the value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of integer|undefined."
    }
  },
  {
    "__docId__": 460,
    "kind": "method",
    "name": "get_keys",
    "memberof": "js/cache/cache_manager.js~CacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_manager.js~CacheManager#get_keys",
    "access": "public",
    "description": "Get cached keys.",
    "lineNumber": 251,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of keys array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of keys array."
    },
    "params": []
  },
  {
    "__docId__": 461,
    "kind": "method",
    "name": "remove",
    "memberof": "js/cache/cache_manager.js~CacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_manager.js~CacheManager#remove",
    "access": "public",
    "description": "Remove a cached value.",
    "lineNumber": 279,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of undefined."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_keys",
        "description": "value key string or array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of undefined."
    }
  },
  {
    "__docId__": 462,
    "kind": "method",
    "name": "flush",
    "memberof": "js/cache/cache_manager.js~CacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_manager.js~CacheManager#flush",
    "access": "public",
    "description": "Flush all cached values (clear interval timeout for checks).",
    "lineNumber": 306,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of undefined."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of undefined."
    },
    "params": []
  },
  {
    "__docId__": 463,
    "kind": "method",
    "name": "close",
    "memberof": "js/cache/cache_manager.js~CacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_manager.js~CacheManager#close",
    "access": "public",
    "description": "Close cache engine.",
    "lineNumber": 333,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of undefined."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of undefined."
    },
    "params": []
  },
  {
    "__docId__": 464,
    "kind": "method",
    "name": "add_adapter",
    "memberof": "js/cache/cache_manager.js~CacheManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/cache/cache_manager.js~CacheManager#add_adapter",
    "access": "public",
    "description": "Add a cache adapter.\n\n@param{DataCacheAdapter} arg_cache_adapter - cache adapter.",
    "lineNumber": 362,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "arg_cache_adapter",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 465,
    "kind": "file",
    "name": "js/datas/data_adapter.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport Loggable from '../base/loggable'\r\nimport DataCollection from './data_collection'\r\nimport DataRecord from './data_record'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\nlet context = 'common/data/data_adapter'\r\n\r\n\r\n\r\n/**\r\n * DataAdapter class.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n* \tAPI:\r\n* \t\t->constructor(arg_database, arg_models_schemas)\r\n* \t\t\r\n* \t\t->suspend()\r\n* \t\t->resume()\r\n* \r\n* \t\t->add_model_schema(arg_model_schema)\r\n* \t\t->remove_model_schema(arg_model_name)\r\n* \t\t->get_model_schema(arg_model_name):TopologyRuntimeModelSchema\r\n* \r\n* \t\t->get_collection(arg_model_name):DataCollection\r\n* \r\n* \t\t->load_database(arg_topology_database)\r\n* \t\t->load_model(arg_model_schema)\r\n* \t\t->unload_model(arg_model_name)\r\n* \t\t->load_associations()\r\n* \r\n*\t \t->new_record(arg_model_name, arg_record_datas, arg_record_id):DataRecord - create a new data record instance, not saved.\r\n*\t \t->delete_record(arg_model_name, arg_record_id):Promise(boolean) - delete an existing data record.\r\n* \t\t->update_record(arg_model_name, arg_record_datas, arg_record_id):Promise(DataRecord) - update an existing data record.\r\n* \t\t->has_record(arg_model_name, arg_record_id):Promise(boolean) - test if a data record exists with an id.\r\n* \t\t\r\n* \t\t->find_one_record(arg_model_name, arg_record_id):Promise(DataRecord) - find an existing data record with an id.\r\n* \t\t->find_or_create_record(arg_model_name, arg_record_id):Promise(DataRecord) - find an existing data record with an id.\r\n* \t\t->find_records(arg_model_name, arg_query):Promise(DataRecordArray) - find existing data records with a query.\r\n* \t\t->find_all_records(arg_model_name):Promise(DataRecordArray) - find all xisting data records.\r\n* \r\n* \tPRIVATE:\r\n* \t\t->_emit(arg_event, arg_datas=undefined):nothing\r\n* \r\n* \r\n* \tUSAGE ON BROWSER:\r\n* \t\tsee DataStore\r\n* \r\n* \r\n */\r\nexport default class DataAdapter extends Loggable\r\n{\r\n\t/**\r\n\t * DataAdapter class is responsible to manage one source of records for many model.\r\n\t * DataAdapter instances are managed by a DataStore instance.\r\n\t * \r\n\t * @param {CacheManager} arg_cache_manager - cache manager instance.\r\n\t * @param {TopologyRuntimeDatabase} arg_database - topology database.\r\n\t * @param {object} arg_models_schemas - topology models schemas array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_cache_manager, arg_database, arg_models_schemas=[])\r\n\t{\r\n\t\tassert( T.isObject(arg_cache_manager) && arg_cache_manager.is_cache_manager, context + ':constructor:bad cache manager object')\r\n\t\tassert( T.isObject(arg_database) && arg_database.is_topology_database, context + ':constructor:bad topology database object')\r\n\t\tassert( T.isArray(arg_models_schemas), context + ':constructor:bad topology models schema array')\r\n\r\n\t\tsuper(context)\r\n\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_data_adapter = true\r\n\t\t\r\n\t\t/**\r\n\t\t * CacheManager instance.\r\n\t\t * @type {CacheManager}\r\n\t\t */\r\n\t\tthis._cache_manager = arg_cache_manager\r\n\r\n\r\n\t\t// TOPOLOGY ITEMS\r\n\t\t\r\n\t\t/**\r\n\t\t * Topology database instance.\r\n\t\t * @type {TopologyRuntimeDatabase}\r\n\t\t */\r\n\t\tthis._topology_database = undefined\r\n\t\t\r\n\t\t/**\r\n\t\t * Topology models array.\r\n\t\t * @type {array}\r\n\t\t */\r\n\t\tthis._topology_models_array = []\r\n\t\t\r\n\t\t/**\r\n\t\t * Topology models map.\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tthis._topology_models_map = {}\r\n\t\t\r\n\t\t\r\n\t\t// ADAPTER ATTRIBUTES\r\n\t\t\r\n\t\t/**\r\n\t\t * Adapter collections map.\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tthis._collections = {}\r\n\r\n\t\t/**\r\n\t\t * Adapter roles map.\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tthis._roles = {}\r\n\t\t\r\n\t\t/**\r\n\t\t * Adapter includes map.\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tthis._includes = {}\r\n\r\n\r\n\t\t// LOAD DATABASE AND MODEL\r\n\t\t/**\r\n\t\t * Database promise.\r\n\t\t * @type {Promise}\r\n\t\t */\r\n\t\tthis.database_promise = this.load_database(arg_database).then(\r\n\t\t\t(result)=>{\r\n\t\t\t\tif (result)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis._topology_database = arg_database\r\n\t\t\t\t\tconst promises = []\r\n\t\t\t\t\targ_models_schemas.forEach(\r\n\t\t\t\t\t\t(model_schema)=>{\r\n\t\t\t\t\t\t\tpromises.push( this.add_model_schema(model_schema) )\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\r\n\t\t\t\t\treturn Promise.all(promises).then(\r\n\t\t\t\t\t\t(results)=>{\r\n\t\t\t\t\t\t\t// console.log(results, 'results')\r\n\t\t\t\t\t\t\tlet all_result = true\r\n\t\t\t\t\t\t\tresults.forEach( (result)=>{ all_result = all_result && result} )\r\n\t\t\t\t\t\t\treturn all_result\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Emit on event.\r\n\t * @private\r\n\t * \r\n\t * @param {string} arg_event - event name.\r\n\t * @param {any} arg_datas - event datas (optional, default:undefined).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t/* eslint no-unused-vars: \"off\" */\r\n\t_emit(arg_event, arg_datas=undefined) // TODO\r\n\t{\r\n\t\tthis.debug(context + ':emit:' + arg_event)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Suspend adapter work.\r\n\t * \r\n\t * @returns {Promise} - Promise(boolean) with true: suspend is success, false for failure\r\n\t */\r\n\tsuspend()\r\n\t{\r\n\t\treturn Promise.resolve(false)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Resume adapter work.\r\n\t * \r\n\t * @returns {Promise} - Promise(boolean) with true: resume is success, false for failure\r\n\t */\r\n\tresume()\r\n\t{\r\n\t\treturn Promise.resolve(false)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Add a model schema.\r\n\t * \r\n\t * @param {TopologyRuntimeModelSchema} arg_model_schema - topology model schema.\r\n\t * \r\n\t * @returns {Promise} - Promise(boolean)\r\n\t */\r\n\tadd_model_schema(arg_model_schema)\r\n\t{\r\n\t\treturn this.load_model(arg_model_schema).then(\r\n\t\t\t(result)=>{\r\n\t\t\t\tif (result)\r\n\t\t\t\t{\r\n\t\t\t\t\tconst model_name = arg_model_schema.get_plural_name()\r\n\t\t\t\t\tthis._topology_models_array.push(arg_model_schema)\r\n\t\t\t\t\tthis._topology_models_map[model_name] = arg_model_schema\r\n\t\t\t\t\targ_model_schema.index_in_array = this._topology_models_array.length - 1\r\n\t\t\t\t}\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Remove a model schema.\r\n\t * \r\n\t * @param {string} arg_model_name - topology model name.\r\n\t * \r\n\t * @returns {Promise} - Promise(boolean)\r\n\t */\r\n\tremove_model_schema(arg_model_name)\r\n\t{\r\n\t\treturn this.unload_model(arg_model_name).then(\r\n\t\t\t(result)=>{\r\n\t\t\t\tif (result)\r\n\t\t\t\t{\r\n\t\t\t\t\tconst index = this._topology_models_map[arg_model_name].index_in_array\r\n\t\t\t\t\tdelete this._topology_models_array[index] // TODO CLEAN ARRAY\r\n\t\t\t\t\tdelete this._topology_models_map[arg_model_name]\r\n\t\t\t\t}\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get a registered model schema.\r\n\t * \r\n\t * @param {string} arg_model_name - topology model name.\r\n\t * \r\n\t * @returns {TopologyRuntimeModelSchema} - model schema.\r\n\t */\r\n\tget_model_schema(arg_model_name)\r\n\t{\r\n\t\treturn (arg_model_name in this._topology_models_map) ? this._topology_models_map[arg_model_name] : undefined\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get a collection for a registered model schema.\r\n\t * \r\n\t * @param {string} arg_model_name - topology model name.\r\n\t * \r\n\t * @returns {DataCollection} - model collection instance.\r\n\t */\r\n\tget_collection(arg_model_name)\r\n\t{\r\n\t\t// console.log(context + ':get_collection:model=', arg_model_name, Object.keys(this._topology_models_map))\r\n\r\n\t\tif (! (arg_model_name in this._topology_models_map) )\r\n\t\t{\r\n\t\t\t// console.log(context + ':get_collection:bad model name')\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\tconst found_collection = (arg_model_name in this._collections) ? this._collections[arg_model_name] : undefined\r\n\t\tif (found_collection)\r\n\t\t{\r\n\t\t\t// console.log(context + ':get_collection:collection found')\r\n\t\t\treturn found_collection\r\n\t\t}\r\n\t\t\r\n\t\t// console.log(context + ':get_collection:create collection')\r\n\r\n\t\tconst model_schema = this._topology_models_map[arg_model_name]\r\n\t\tlet collection = new DataCollection(this._cache_manager, this, model_schema)\r\n\t\tthis._collections[arg_model_name] = collection\r\n\t\treturn collection\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Load adapter topology database.\r\n\t * \r\n\t * @param {TopologyRuntimeDatabase} arg_topology_database - topology database.\r\n\t * \r\n\t * @returns {Promise} - Promise(boolean)\r\n\t */\r\n\tload_database(arg_topology_database)\r\n\t{\r\n\t\treturn Promise.resolve(false)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Load model.\r\n\t * \r\n\t * @param {TopologyRuntimeModelSchema} arg_model_schema - topology model schema.\r\n\t * \r\n\t * @returns {Promise} - Promise(boolean)\r\n\t */\r\n\tload_model(arg_model_schema)\r\n\t{\r\n\t\treturn Promise.resolve(false)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Unload model.\r\n\t * \r\n\t * @param {string} arg_model_name - model name.\r\n\t * \r\n\t * @returns {Promise} - Promise(boolean)\r\n\t */\r\n\tunload_model(arg_model_name)\r\n\t{\r\n\t\treturn Promise.resolve(false)\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Load associations between models.\r\n\t * \r\n\t * @returns {Promise} - Promise(boolean)\r\n\t */\r\n\tload_associations()\r\n\t{\r\n\t\treturn Promise.resolve(false)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Create a new data record instance, not saved.\r\n\t * \r\n\t * @param {string} arg_model_name - topology model name.\r\n\t * @param {object} arg_record_datas - new record attributes.\r\n\t * @param {string} arg_record_id - new record unique id (optional).\r\n\t * \r\n\t * @returns {Promise} - Promise(DataRecord)\r\n\t */\r\n\tnew_record(arg_model_name, arg_record_datas, arg_record_id)\r\n\t{\r\n\t\t// CHECK ARGS\r\n\t\tif (! T.isString(arg_model_name))\r\n\t\t{\r\n\t\t\treturn Promise.reject('bad model name string')\r\n\t\t}\r\n\t\t// if (! ( T.isString(arg_record_id) || T.isNumber(arg_record_id) ) )\r\n\t\t// {\r\n\t\t// \treturn Promise.reject('bad record id integer or string')\r\n\t\t// }\r\n\r\n\t\t// GET COLLECTION\r\n\t\tconst collection = this.get_collection(arg_model_name)\r\n\t\tif (!collection)\r\n\t\t{\r\n\t\t\treturn Promise.reject('collection not found')\r\n\t\t}\r\n\r\n\t\t// GET TOPOLOGY MODEL\r\n\t\tconst topology_model = this.get_model_schema(arg_model_name)\r\n\t\tif (!topology_model)\r\n\t\t{\r\n\t\t\treturn Promise.reject('bad topology model')\r\n\t\t}\r\n\t\t\r\n\t\t// GET SEQUELIZE MODEL\r\n\t\tconst sequelize_model = this.get_sequelize_model(arg_model_name)\r\n\t\tif (!sequelize_model)\r\n\t\t{\r\n\t\t\treturn Promise.reject('bad sequelize model')\r\n\t\t}\r\n\t\t\r\n\t\t// GET PRIMARY KEY FIELD NAME\r\n\t\tconst pk_name = topology_model.get_id_field_name()\r\n\t\tif (!pk_name)\r\n\t\t{\r\n\t\t\treturn Promise.reject('bad pk name')\r\n\t\t}\r\n\r\n\t\t// CHECK ID\r\n\t\tif (! T.isString(arg_record_id) )\r\n\t\t{\r\n\t\t\targ_record_id = arg_record_datas[pk_name]\r\n\t\t}\r\n\t\tif (! ( T.isString(arg_record_id) || T.isNumber(arg_record_id) ) )\r\n\t\t{\r\n\t\t\treturn Promise.reject('id value not found')\r\n\t\t}\r\n\r\n\t\t// CHECK ATTRIBUTES\r\n\t\tif ( ! topology_model.validate() )\r\n\t\t{\r\n\t\t\treturn Promise.reject('model attributes are not valid')\r\n\t\t}\r\n\r\n\t\tconst record = new DataRecord(collection, arg_record_id, arg_record_datas)\r\n\t\trecord._is_new = true\r\n\r\n\t\treturn collection._set_cached_record_by_id(record)\r\n\t\t.then(\r\n\t\t\t(/*result*/)=>{\r\n\t\t\t\t// console.log('_set_cached_record_by_id result', result)\r\n\t\t\t\treturn record\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Create a new data record.\r\n\t * \r\n\t * @param {string} arg_model_name - topology model name.\r\n\t * @param {object} arg_record_datas - new record attributes.\r\n\t * \r\n\t * @returns {Promise} - Promise(boolean)\r\n\t */\r\n\t/* eslint no-unused-vars: \"off\" */\r\n\tcreate_record(arg_model_name, arg_record_datas)\r\n\t{\r\n\t\treturn Promise.resolve(false)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Delete an existing data record.\r\n\t * \r\n\t * @param {string} arg_model_name - topology model name.\r\n\t * @param {string} arg_record_id - new record unique id (optional).\r\n\t * \r\n\t * @returns {Promise} - Promise(boolean)\r\n\t */\r\n\t/* eslint no-unused-vars: \"off\" */\r\n\tdelete_record(arg_model_name, arg_record_id)\r\n\t{\r\n\t\treturn Promise.resolve(false)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Update an existing data record.\r\n\t * \r\n\t * @param {string} arg_model_name - topology model name.\r\n\t * @param {object} arg_record_datas - new record attributes.\r\n\t * \r\n\t * @returns {Promise} - Promise(boolean)\r\n\t */\r\n\t/* eslint no-unused-vars: \"off\" */\r\n\tupdate_record(arg_model_name, arg_record_datas)\r\n\t{\r\n\t\treturn Promise.resolve(false)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Test if a data record exists with an id.\r\n\t * \r\n\t * @param {string} arg_model_name - topology model name.\r\n\t * @param {string} arg_record_id - new record unique id.\r\n\t * \r\n\t * @returns {Promise} - Promise(boolean)\r\n\t */\r\n\t/* eslint no-unused-vars: \"off\" */\r\n\thas_record(arg_model_name, arg_record_id)\r\n\t{\r\n\t\treturn Promise.resolve(false)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Find an existing data record with an id.\r\n\t * \r\n\t * @param {string} arg_model_name - topology model name.\r\n\t * @param {string} arg_record_id - new record unique id.\r\n\t * \r\n\t * @returns {Promise} - Promise(DataRecord)\r\n\t */\r\n\t/* eslint no-unused-vars: \"off\" */\r\n\tfind_one_record(arg_model_name, arg_record_id)\r\n\t{\r\n\t\treturn Promise.resolve(undefined)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Find an existing data record with an id or create it with given datas.\r\n\t * \r\n\t * @param {string} arg_model_name - topology model name.\r\n\t * @param {object} arg_record_datas - new record attributes.\r\n\t * @param {string} arg_record_id - new record unique id.\r\n\t * \r\n\t * @returns {Promise} - Promise(DataRecord)\r\n\t */\r\n\t/* eslint no-unused-vars: \"off\" */\r\n\tfind_or_create_record(arg_model_name, arg_record_datas, arg_record_id)\r\n\t{\r\n\t\treturn Promise.resolve(undefined)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Find existing data records corresponding to the given query.\r\n\t * \r\n\t * @param {string} arg_model_name - topology model name.\r\n\t * @param {DataQuery} arg_query - data query instance.\r\n\t * \r\n\t * @returns {Promise} - Promise(DataRecordArray)\r\n\t */\r\n\t/* eslint no-unused-vars: \"off\" */\r\n\tfind_records(arg_model_name, arg_query)\r\n\t{\r\n\t\treturn Promise.resolve(undefined)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Find all existing data records.\r\n\t * \r\n\t * @param {string} arg_model_name - topology model name.\r\n\t * \r\n\t * @returns {Promise} - Promise(DataRecordArray)\r\n\t */\r\n\t/* eslint no-unused-vars: \"off\" */\r\n\tfind_all_records(arg_model_name)\r\n\t{\r\n\t\treturn Promise.resolve(undefined)\r\n\t}\r\n}\r\n\r\n\r\n\r\n/*\r\n\r\nPubsub (interface)\r\n\r\nStability: 1 - Experimental\r\nAdapters implementing the pubsub interface report changes from the service/database back up to the app.\r\n\r\nThey should emit an event on the sails object.\r\n\r\n\r\n\r\nOne-Way (interface)\r\n\r\nStability: 1 - Experimental\r\nAdapters which implement one-way messages should do so using send() or a suffixed send*() method. This lets developers know that it's not safe to assume that these operations are reversible. An example of one such adapter is SMTP, for sending email, or APNS for sending Apple push notifications.\r\n\r\nClass methods\r\n\r\nsend()\r\n\r\n\r\n\r\n\r\nBlob (interface)\r\n\r\nStability: 1 - Experimental\r\ne.g. sails-local-fs, sails-s3\r\n\r\nImplementing the Blob interface allows you to upload and download binary data (aka files) to the service/database. These \"blobs\" might be MP3 music files (~5MB) but they could also be data-center backups (~50TB). Because of this, it's crucial that adapters which implement this interface use streams for uploads (incoming, into data source from Sails) and downloads (outgoing, from data source to Sails).\r\n\r\nClass methods\r\n\r\nwrite()\r\nread()\r\n\r\n*/\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/datas/data_adapter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 466,
    "kind": "variable",
    "name": "context",
    "memberof": "js/datas/data_adapter.js",
    "static": true,
    "longname": "js/datas/data_adapter.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/datas/data_adapter.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 15,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 467,
    "kind": "class",
    "name": "DataAdapter",
    "memberof": "js/datas/data_adapter.js",
    "static": true,
    "longname": "js/datas/data_adapter.js~DataAdapter",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/datas/data_adapter.js",
    "importStyle": "DataAdapter",
    "description": "DataAdapter class.",
    "examples": [
      "\tAPI:\n\t\t->constructor(arg_database, arg_models_schemas)\n\t\t\n\t\t->suspend()\n\t\t->resume()\n\n\t\t->add_model_schema(arg_model_schema)\n\t\t->remove_model_schema(arg_model_name)\n\t\t->get_model_schema(arg_model_name):TopologyRuntimeModelSchema\n\n\t\t->get_collection(arg_model_name):DataCollection\n\n\t\t->load_database(arg_topology_database)\n\t\t->load_model(arg_model_schema)\n\t\t->unload_model(arg_model_name)\n\t\t->load_associations()\n\n \t->new_record(arg_model_name, arg_record_datas, arg_record_id):DataRecord - create a new data record instance, not saved.\n \t->delete_record(arg_model_name, arg_record_id):Promise(boolean) - delete an existing data record.\n\t\t->update_record(arg_model_name, arg_record_datas, arg_record_id):Promise(DataRecord) - update an existing data record.\n\t\t->has_record(arg_model_name, arg_record_id):Promise(boolean) - test if a data record exists with an id.\n\t\t\n\t\t->find_one_record(arg_model_name, arg_record_id):Promise(DataRecord) - find an existing data record with an id.\n\t\t->find_or_create_record(arg_model_name, arg_record_id):Promise(DataRecord) - find an existing data record with an id.\n\t\t->find_records(arg_model_name, arg_query):Promise(DataRecordArray) - find existing data records with a query.\n\t\t->find_all_records(arg_model_name):Promise(DataRecordArray) - find all xisting data records.\n\n\tPRIVATE:\n\t\t->_emit(arg_event, arg_datas=undefined):nothing\n\n\n\tUSAGE ON BROWSER:\n\t\tsee DataStore"
    ],
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/loggable.js~Loggable"
    ]
  },
  {
    "__docId__": 468,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#constructor",
    "access": "public",
    "description": "DataAdapter class is responsible to manage one source of records for many model.\nDataAdapter instances are managed by a DataStore instance.",
    "lineNumber": 74,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "CacheManager"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_cache_manager",
        "description": "cache manager instance."
      },
      {
        "nullable": null,
        "types": [
          "TopologyRuntimeDatabase"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_database",
        "description": "topology database."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_models_schemas",
        "description": "topology models schemas array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 469,
    "kind": "member",
    "name": "is_data_adapter",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#is_data_adapter",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 86,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 470,
    "kind": "member",
    "name": "_cache_manager",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#_cache_manager",
    "access": "private",
    "description": "CacheManager instance.",
    "lineNumber": 92,
    "type": {
      "nullable": null,
      "types": [
        "CacheManager"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 471,
    "kind": "member",
    "name": "_topology_database",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#_topology_database",
    "access": "private",
    "description": "Topology database instance.",
    "lineNumber": 101,
    "type": {
      "nullable": null,
      "types": [
        "TopologyRuntimeDatabase"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 472,
    "kind": "member",
    "name": "_topology_models_array",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#_topology_models_array",
    "access": "private",
    "description": "Topology models array.",
    "lineNumber": 107,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 473,
    "kind": "member",
    "name": "_topology_models_map",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#_topology_models_map",
    "access": "private",
    "description": "Topology models map.",
    "lineNumber": 113,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 474,
    "kind": "member",
    "name": "_collections",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#_collections",
    "access": "private",
    "description": "Adapter collections map.",
    "lineNumber": 122,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 475,
    "kind": "member",
    "name": "_roles",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#_roles",
    "access": "private",
    "description": "Adapter roles map.",
    "lineNumber": 128,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 476,
    "kind": "member",
    "name": "_includes",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#_includes",
    "access": "private",
    "description": "Adapter includes map.",
    "lineNumber": 134,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 477,
    "kind": "member",
    "name": "database_promise",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#database_promise",
    "access": "public",
    "description": "Database promise.",
    "lineNumber": 142,
    "type": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 479,
    "kind": "method",
    "name": "_emit",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#_emit",
    "access": "private",
    "description": "Emit on event.",
    "lineNumber": 180,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_event",
        "description": "event name."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_datas",
        "description": "event datas (optional, default:undefined)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 480,
    "kind": "method",
    "name": "suspend",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#suspend",
    "access": "public",
    "description": "Suspend adapter work.",
    "lineNumber": 192,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise(boolean) with true: suspend is success, false for failure"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise(boolean) with true: suspend is success, false for failure"
    },
    "params": []
  },
  {
    "__docId__": 481,
    "kind": "method",
    "name": "resume",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#resume",
    "access": "public",
    "description": "Resume adapter work.",
    "lineNumber": 204,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise(boolean) with true: resume is success, false for failure"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise(boolean) with true: resume is success, false for failure"
    },
    "params": []
  },
  {
    "__docId__": 482,
    "kind": "method",
    "name": "add_model_schema",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#add_model_schema",
    "access": "public",
    "description": "Add a model schema.",
    "lineNumber": 218,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise(boolean)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "TopologyRuntimeModelSchema"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_model_schema",
        "description": "topology model schema."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise(boolean)"
    }
  },
  {
    "__docId__": 483,
    "kind": "method",
    "name": "remove_model_schema",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#remove_model_schema",
    "access": "public",
    "description": "Remove a model schema.",
    "lineNumber": 243,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise(boolean)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_model_name",
        "description": "topology model name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise(boolean)"
    }
  },
  {
    "__docId__": 484,
    "kind": "method",
    "name": "get_model_schema",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#get_model_schema",
    "access": "public",
    "description": "Get a registered model schema.",
    "lineNumber": 267,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{TopologyRuntimeModelSchema} - model schema."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_model_name",
        "description": "topology model name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TopologyRuntimeModelSchema"
      ],
      "spread": false,
      "description": "model schema."
    }
  },
  {
    "__docId__": 485,
    "kind": "method",
    "name": "get_collection",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#get_collection",
    "access": "public",
    "description": "Get a collection for a registered model schema.",
    "lineNumber": 281,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DataCollection} - model collection instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_model_name",
        "description": "topology model name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DataCollection"
      ],
      "spread": false,
      "description": "model collection instance."
    }
  },
  {
    "__docId__": 486,
    "kind": "method",
    "name": "load_database",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#load_database",
    "access": "public",
    "description": "Load adapter topology database.",
    "lineNumber": 315,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise(boolean)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "TopologyRuntimeDatabase"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_topology_database",
        "description": "topology database."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise(boolean)"
    }
  },
  {
    "__docId__": 487,
    "kind": "method",
    "name": "load_model",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#load_model",
    "access": "public",
    "description": "Load model.",
    "lineNumber": 329,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise(boolean)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "TopologyRuntimeModelSchema"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_model_schema",
        "description": "topology model schema."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise(boolean)"
    }
  },
  {
    "__docId__": 488,
    "kind": "method",
    "name": "unload_model",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#unload_model",
    "access": "public",
    "description": "Unload model.",
    "lineNumber": 343,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise(boolean)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_model_name",
        "description": "model name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise(boolean)"
    }
  },
  {
    "__docId__": 489,
    "kind": "method",
    "name": "load_associations",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#load_associations",
    "access": "public",
    "description": "Load associations between models.",
    "lineNumber": 355,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise(boolean)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise(boolean)"
    },
    "params": []
  },
  {
    "__docId__": 490,
    "kind": "method",
    "name": "new_record",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#new_record",
    "access": "public",
    "description": "Create a new data record instance, not saved.",
    "lineNumber": 371,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise(DataRecord)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_model_name",
        "description": "topology model name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record_datas",
        "description": "new record attributes."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record_id",
        "description": "new record unique id (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise(DataRecord)"
    }
  },
  {
    "__docId__": 491,
    "kind": "method",
    "name": "create_record",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#create_record",
    "access": "public",
    "description": "Create a new data record.",
    "lineNumber": 450,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise(boolean)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_model_name",
        "description": "topology model name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record_datas",
        "description": "new record attributes."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise(boolean)"
    }
  },
  {
    "__docId__": 492,
    "kind": "method",
    "name": "delete_record",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#delete_record",
    "access": "public",
    "description": "Delete an existing data record.",
    "lineNumber": 466,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise(boolean)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_model_name",
        "description": "topology model name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record_id",
        "description": "new record unique id (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise(boolean)"
    }
  },
  {
    "__docId__": 493,
    "kind": "method",
    "name": "update_record",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#update_record",
    "access": "public",
    "description": "Update an existing data record.",
    "lineNumber": 482,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise(boolean)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_model_name",
        "description": "topology model name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record_datas",
        "description": "new record attributes."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise(boolean)"
    }
  },
  {
    "__docId__": 494,
    "kind": "method",
    "name": "has_record",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#has_record",
    "access": "public",
    "description": "Test if a data record exists with an id.",
    "lineNumber": 498,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise(boolean)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_model_name",
        "description": "topology model name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record_id",
        "description": "new record unique id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise(boolean)"
    }
  },
  {
    "__docId__": 495,
    "kind": "method",
    "name": "find_one_record",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#find_one_record",
    "access": "public",
    "description": "Find an existing data record with an id.",
    "lineNumber": 514,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise(DataRecord)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_model_name",
        "description": "topology model name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record_id",
        "description": "new record unique id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise(DataRecord)"
    }
  },
  {
    "__docId__": 496,
    "kind": "method",
    "name": "find_or_create_record",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#find_or_create_record",
    "access": "public",
    "description": "Find an existing data record with an id or create it with given datas.",
    "lineNumber": 531,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise(DataRecord)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_model_name",
        "description": "topology model name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record_datas",
        "description": "new record attributes."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record_id",
        "description": "new record unique id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise(DataRecord)"
    }
  },
  {
    "__docId__": 497,
    "kind": "method",
    "name": "find_records",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#find_records",
    "access": "public",
    "description": "Find existing data records corresponding to the given query.",
    "lineNumber": 547,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise(DataRecordArray)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_model_name",
        "description": "topology model name."
      },
      {
        "nullable": null,
        "types": [
          "DataQuery"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_query",
        "description": "data query instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise(DataRecordArray)"
    }
  },
  {
    "__docId__": 498,
    "kind": "method",
    "name": "find_all_records",
    "memberof": "js/datas/data_adapter.js~DataAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_adapter.js~DataAdapter#find_all_records",
    "access": "public",
    "description": "Find all existing data records.",
    "lineNumber": 562,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise(DataRecordArray)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_model_name",
        "description": "topology model name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise(DataRecordArray)"
    }
  },
  {
    "__docId__": 499,
    "kind": "file",
    "name": "js/datas/data_collection.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport Loggable from '../base/loggable'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\nlet context = 'common/data/data_collection'\r\n\r\n\r\n\r\n/**\r\n * DataCollection class.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n* \tAPI:\r\n* \t\t->constructor(arg_cache_manager,arg_data_adapter,arg_model_schema)\r\n* \t\t\r\n* \t\t->get_name():string - get tenant to use inside this datastore.\r\n* \t\t->get_cache_manager():CacheManager - get cache manager instance.\r\n* \t\t->get_adapter():DataAdapter - get data adapter instance.\r\n* \t\t->get_model():DataModel - get collection model instance.\r\n* \r\n*\t\t->validate_record(arg_record):Promise(boolean) - test if given datas are valid for collection model.\r\n*\t\t->new_record(arg_record_datas, arg_record_id) - create a new record instance.\r\n* \t\t->create_record(arg_record):Promise(DataRecord) - create an existing unsaved data record.\r\n* \t\t->delete_record(arg_record):Promise(boolean) - delete an existing data record.\r\n* \t\t->update_record(arg_record):Promise(DataRecord) - update an existing data record.\r\n* \t\t->reload_record(arg_record):Promise(DataRecord) - reload an existing data record.\r\n* \t\t->has_record(arg_record_id):Promise(boolean) - test if a data record exists with an id.\r\n* \t\t\r\n* \t\t->find_one_record(arg_record_id):Promise(DataRecord) - find an existing data record with an id.\r\n* \t\t->find_records(arg_query):Promise(DataRecordArray) - find existing data records with a query.\r\n* \t\t->find_all_records():Promise(DataRecordArray) - find all xisting data records.\r\n* \r\n* \tPRIVATE:\r\n* \t\t->_emit(arg_event, arg_datas=undefined):nothing\r\n* \t\t->_trigger(arg_event, arg_datas):nothing\r\n* \t\t->_has_cached_record_by_id(arg_id):Promise(boolean)\r\n* \t\t->_get_cached_record_by_id(arg_id):Promise(DataRecord)\r\n* \t\t->_set_cached_record_by_id(arg_record):Promise(boolean)\r\n* \t\t->_remove_cached_record_by_id(arg_id):Promise(boolean)\r\n* \r\n* \r\n* \tUSAGE ON BROWSER:\r\n* \t\t// ds is a DataStore instance\r\n* \t\tvar cars = ds.get_collection('cars')\r\n* \t\tvar car_12 = cars.find_one_record('12')\r\n* \r\n* \r\n */\r\nexport default class DataCollection extends Loggable\r\n{\r\n\t/**\r\n\t * DataCollection class is responsible to manage one model records from one adapter:\r\n\t *  all records operations, cached records, model logic (field value validation, triggers).\r\n\t * DataCollection instances are managed by a DataStore instance.\r\n\t * \r\n\t * @param {CacheManager} arg_cache_manager - cache manager instance.\r\n\t * @param {DataAdapter} arg_data_adapter - collection data adapter.\r\n\t * @param {array} arg_model_schema - topology model schema.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_cache_manager, arg_data_adapter, arg_model_schema)\r\n\t{\r\n\t\tassert( T.isObject(arg_cache_manager) && arg_cache_manager.is_cache_manager, context + ':constructor:bad cache manager object')\r\n\t\tassert( T.isObject(arg_data_adapter) && arg_data_adapter.is_data_adapter, context + ':constructor:bad data adapter object')\r\n\t\tassert( T.isObject(arg_model_schema) && arg_model_schema.is_topology_model, context + ':constructor:bad model schema object')\r\n\t\t\r\n\t\tconst model_plural_name = arg_model_schema.get_plural_name()\r\n\t\tassert( T.isString(model_plural_name) && model_plural_name.length > 0, context + ':constructor:bad collection name string')\r\n\r\n\t\tsuper(context)\r\n\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_data_collection = true\r\n\t\t\r\n\t\t/**\r\n\t\t * CacheManager instance.\r\n\t\t * @type {CacheManager}\r\n\t\t */\r\n\t\tthis._cache_manager = arg_cache_manager\r\n\t\t\r\n\t\t/**\r\n\t\t * Datas adapter instance.\r\n\t\t * @type {DataAdapter}\r\n\t\t */\r\n\t\tthis._adapter = arg_data_adapter\r\n\t\t\r\n\t\t/**\r\n\t\t * Topology model schema instance.\r\n\t\t * @type {array}\r\n\t\t */\r\n\t\tthis._schema = arg_model_schema\r\n\t\t\r\n\t\t/**\r\n\t\t * Datas collection prefix.\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis._cache_prefix = model_plural_name\r\n\t\t\r\n\t\t/**\r\n\t\t * Datas collection name.\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis._name = model_plural_name\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Emit on event.\r\n\t * @private\r\n\t * \r\n\t * @param {string} arg_event - event name.\r\n\t * @param {any} arg_datas - event datas (optional, default:undefined).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t_emit(arg_event, arg_datas=undefined) // TODO\r\n\t{\r\n\t\tthis.debug(context + ':emit:' + arg_event)\r\n\r\n\t\t// if ( this._schema.has_rules_agenda() )\r\n\t\t// {\r\n\t\t// \tthis._schema.push_on_rule_agenda(arg_event, arg_datas)\r\n\t\t// }\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Call event triggers.\r\n\t * @private\r\n\t * \r\n\t * @param {string} arg_event - event name.\r\n\t * @param {any} arg_datas - event datas (optional, default:undefined).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t_trigger(arg_event, arg_datas=undefined) // TODO\r\n\t{\r\n\t\tthis.debug(context + ':trigger:' + arg_event)\r\n\r\n\t\t// this._schema._trigger(arg_event, arg_datas)\r\n\t\tthis._emit(arg_event, arg_datas)\r\n\r\n\t\t// TODO: UPDATE METRICS\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Test if a record is cached.\r\n\t * @private\r\n\t * \r\n\t * @param {string} arg_id - record id.\r\n\t * \r\n\t * @returns {Promise} - Promise of boolean value: found (true) or not found (false).\r\n\t */\r\n\t_has_cached_record_by_id(arg_id)\r\n\t{\r\n\t\tconst key = this._cache_prefix + ':' + arg_id\r\n\t\treturn this._cache_manager.has(key)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Test if a record array is cached.\r\n\t * @private\r\n\t * \r\n\t * @param {DataQuery} arg_query - data query.\r\n\t * \r\n\t * @returns {Promise} - Promise of boolean value: found (true) or not found (false).\r\n\t */\r\n\t_has_cached_record_by_query(arg_query)\r\n\t{\r\n\t\tconst key = this._cache_prefix + ':query:' + arg_query.hash()\r\n\t\treturn this._cache_manager.has(key)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get a cached record.\r\n\t * @private\r\n\t * \r\n\t * @param {string} arg_id - record id.\r\n\t * \r\n\t * @returns {Promise} - Promise of a DataRecord instance.\r\n\t */\r\n\t_get_cached_record_by_id(arg_id)\r\n\t{\r\n\t\tconst key = this._cache_prefix + ':' + arg_id\r\n\t\treturn this._cache_manager.get(key, undefined)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get a cached record array.\r\n\t * @private\r\n\t * \r\n\t * @param {DataQuery} arg_query - data query.\r\n\t * \r\n\t * @returns {Promise} - Promise of a DataRecordArray instance.\r\n\t */\r\n\t_get_cached_record_by_query(arg_query)\r\n\t{\r\n\t\tconst key = this._cache_prefix + ':query:' + arg_query.hash()\r\n\t\treturn this._cache_manager.get(key, undefined)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Add a record to cache.\r\n\t * @private\r\n\t * \r\n\t * @param {DataRecord} arg_record - record\r\n\t * \r\n\t * @returns {Promise} - Promise of boolean value: success (true) or failure (false).\r\n\t */\r\n\t_set_cached_record_by_id(arg_record)\r\n\t{\r\n\t\tassert( T.isObject(arg_record) && arg_record.is_data_record, context + ':_set_cached_record_by_id:bad data record object')\r\n\t\t\r\n\t\tconst key = this._cache_prefix + ':' + arg_record.get_id()\r\n\t\treturn this._cache_manager.set(key, arg_record, this._schema.get_ttl())\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Add a record array to cache.\r\n\t * @private\r\n\t * \r\n\t * @param {DataQuery} arg_query - data query.\r\n\t * @param {DataRecordArray} arg_record_array - record array.\r\n\t * \r\n\t * @returns {Promise} - Promise of boolean value: success (true) or failure (false).\r\n\t */\r\n\t_set_cached_record_by_query(arg_query, arg_record_array)\r\n\t{\r\n\t\tassert( T.isObject(arg_query) && arg_query.is_data_query, context + ':_set_cached_record_by_query:bad data query object')\r\n\t\tassert( T.isObject(arg_record_array) && arg_record_array.is_data_record_array, context + ':_set_cached_record_by_query:bad data record object')\r\n\t\t\r\n\t\tconst promises = []\r\n\r\n\t\t// CACHE RECORD ARRAY\r\n\t\tconst key = this._cache_prefix + ':query:' + arg_query.hash()\r\n\t\tpromises.push( this._cache_manager.set(key, arg_record_array, this._schema.get_ttl()) )\r\n\r\n\t\t// CACHE ALL ARRAY RECORDS\r\n\t\targ_record_array._records.forEach(\r\n\t\t\t(record)=>{\r\n\t\t\t\tpromises.push( this._set_cached_record_by_id(record) )\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\treturn Promise.all(promises)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Remove a cached record.\r\n\t * @private\r\n\t * \r\n\t * @param {string} arg_id - record id.\r\n\t * \r\n\t * @returns {Promise} - Promise of boolean value: success (true) or failure (false).\r\n\t */\r\n\t_remove_cached_record_by_id(arg_id)\r\n\t{\r\n\t\tconst key = this._cache_prefix + ':' + arg_id\r\n\t\t\r\n\t\treturn this._cache_manager.remove(key)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get collection name.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_name()\r\n\t{\r\n\t\treturn this._name\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get cache manager.\r\n\t * \r\n\t * @returns {DataAdapter}\r\n\t */\r\n\tget_cache_manager()\r\n\t{\r\n\t\tassert( T.isObject(this._cache_manager) && this._cache_manager.is_cache_manager, context + ':get_cache_manager:bad cache manager object')\r\n\t\t\r\n\t\treturn this._cache_manager\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get data adapter.\r\n\t * \r\n\t * @returns {DataAdapter}\r\n\t */\r\n\tget_adapter()\r\n\t{\r\n\t\tassert( T.isObject(this._adapter) && this._adapter.is_data_adapter, context + ':get_adapter:bad data adapter object')\r\n\t\t\r\n\t\treturn this._adapter\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get data model.\r\n\t * \r\n\t * @returns {DataModel}\r\n\t */\r\n\tget_model()\r\n\t{\r\n\t\tassert( T.isObject(this._schema) && this._schema.is_topology_model, context + ':get_model:bad data model object')\r\n\t\t\r\n\t\treturn this._schema\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get data model.\r\n\t * \r\n\t * @returns {DataModel}\r\n\t */\r\n\tget_schema()\r\n\t{\r\n\t\tassert( T.isObject(this._schema) && this._schema.is_topology_model, context + ':get_model:bad data model object')\r\n\t\t\r\n\t\treturn this._schema\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Validate data record values.\r\n\t * 1-Call 'before_validate' triggers.\r\n\t * 2-Check all fields values.\r\n\t * 3-Call 'after_validate_ok' triggers on success.\r\n\t *   Call 'after_validate_ko' triggers on failure.\r\n\t * 4-Return success (true) or failure (false)\r\n\t * \r\n\t * @param {DataRecord} arg_record - data record instance.\r\n\t * \r\n\t * @returns {Promise} - Promise of a boolean.\r\n\t */\r\n\tvalidate_record(arg_record) // TODO\r\n\t{\r\n\t\tassert( T.isObject(arg_record) && arg_record.is_data_record, context + ':validate_record:bad data record object')\r\n\t\t\r\n\t\tthis._trigger('before_validate', { record:arg_record })\r\n\t\tconst result = this._schema.validate(arg_record.get_attributes_object())\r\n\t\tthis._trigger(result.is_valid ? 'after_validate_ok' : 'after_validate_ko', { record:arg_record })\r\n\r\n\t\treturn Promise.resolve(result)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Create a new data record instance, not saved.\r\n\t * \r\n\t * @param {object} arg_record_datas - new record attributes.\r\n\t * @param {string} arg_record_id - new record unique id (optional).\r\n\t * \r\n\t * @returns {Promise} - Promise(DataRecord)\r\n\t */\r\n\tnew_record(arg_record_datas, arg_record_id)\r\n\t{\r\n\t\t// const is_cached_promise = this._has_cached_record_by_id(arg_record_id)\r\n\t\t// if (is_cached)\r\n\t\t// {\r\n\t\t// \tconsole.log('collection:is cached')\r\n\t\t// \treturn this._get_cached_record_by_id(arg_record_id)\r\n\t\t// }\r\n\t\treturn this._adapter.new_record(this._schema.get_name(), arg_record_datas, arg_record_id)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Create a data collection record.\r\n\t * 1-Call 'before_create' triggers.\r\n\t * 2-Check existing record id within cached records.\r\n\t * 3-Validate record datas: reject on failure\r\n\t * 4-Create a DataRecord instance with adapter.new_record.\r\n\t * 5-Add record to cache.\r\n\t * 6-Call record.save()\r\n\t * 7-Call 'after_create' triggers.\r\n\t * \r\n\t * @param {DataRecord} arg_record - data record instance.\r\n\t * \r\n\t * @returns {Promise} - Promise of a DataRecord object.\r\n\t */\r\n\tcreate_record(arg_record)\r\n\t{\r\n\t\tassert( T.isObject(arg_record) && arg_record.is_data_record, context + ':create_record:bad data record object')\r\n\t\t\r\n\t\tthis._trigger('before_create', { has_error:false, error_msg:undefined, record:arg_record})\r\n\t\t\r\n\t\treturn this._has_cached_record_by_id(arg_record.get_id())\r\n\t\t.then(\r\n\t\t\t(is_cached)=>{\r\n\t\t\t\tif (is_cached)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis._trigger('after_create', { has_error:true, error_msg:'already_exists', record:arg_record })\r\n\t\t\t\t\treturn Promise.reject('already_exists')\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t\t.then(\r\n\t\t\t()=>{\r\n\t\t\t\tconst is_valid = this.validate_record(arg_record)\r\n\t\t\t\tif ( ! is_valid)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis._trigger('after_create', { has_error:true, error_msg:'not_valid', record:arg_record })\r\n\t\t\t\t\treturn Promise.reject('not_valid')\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t\t.then(\r\n\t\t\t()=>{\r\n\t\t\t\treturn this._adapter.create_record(this._schema.get_name(), arg_record.get_attributes_object())\r\n\t\t\t}\r\n\t\t)\r\n\t\t.then(\r\n\t\t\t(record)=>{\r\n\t\t\t\tthis._trigger('after_create', { has_error:false, error_msg:undefined, record:record})\r\n\t\t\t\treturn record\r\n\t\t\t}\r\n\t\t)\r\n\t\t.catch(\r\n\t\t\t(e)=>{\r\n\t\t\t\tthis._trigger('after_create', { has_error:true, error_msg:e, record:arg_record})\r\n\t\t\t\tconsole.error(context + ':create_record:', e)\r\n\t\t\t\treturn undefined\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Delete a data collection record.\r\n\t * 1-Call 'before_delete' triggers.\r\n\t * 2-Remove cached record.\r\n\t * 3-Call record.delete()\r\n\t * 4-Call 'after_delete' triggers.\r\n\t * \r\n\t * @param {DataRecord} arg_record - data record instance.\r\n\t * \r\n\t * @returns {Promise} - Promise of boolean success.\r\n\t */\r\n\tdelete_record(arg_record)\r\n\t{\r\n\t\tassert( T.isObject(arg_record) && arg_record.is_data_record, context + ':delete_record:bad data record object')\r\n\r\n\t\tthis._trigger('before_delete', { has_error:false, error_msg:undefined, record:arg_record})\r\n\t\t\r\n\t\treturn this._remove_cached_record_by_id(arg_record.get_id())\r\n\t\t.then(\r\n\t\t\t()=>{\r\n\t\t\t\treturn this._adapter.delete_record(this._schema.get_name(), arg_record.get_id())\r\n\t\t\t\t.then( (record)=> { return record.set_removed() } )\r\n\t\t\t}\r\n\t\t).then(\r\n\t\t\t()=>{\r\n\t\t\t\tthis._trigger('after_delete', { has_error:false, error_msg:undefined, record:arg_record})\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t).catch(\r\n\t\t\t(e)=>{\r\n\t\t\t\tthis._trigger('after_delete', { has_error:true, error_msg:e, record:arg_record})\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Update a data collection record.\r\n\t * 1-Call 'before_update' triggers.\r\n\t * 2-Update cached record.\r\n\t * 3-Call record.update()\r\n\t * 4-Call 'after_update' triggers.\r\n\t * \r\n\t * @param {DataRecord} arg_record - data record instance.\r\n\t * \r\n\t * @returns {Promise} - Promise of boolean success.\r\n\t */\r\n\tupdate_record(arg_record)\r\n\t{\r\n\t\tassert( T.isObject(arg_record) && arg_record.is_data_record, context + ':update_record:bad data record object')\r\n\t\t\r\n\t\tthis._trigger('before_update', { has_error:false, error_msg:undefined, record:arg_record})\r\n\t\t\r\n\t\treturn this._adapter.update_record(this._schema.get_name(), arg_record)\r\n\t\t.then(\r\n\t\t\t(record)=>{\r\n\t\t\t\tconsole.log(context + ':update_record:record', record)\r\n\t\t\t\treturn this._set_cached_record_by_id(arg_record.get_id(), record)\r\n\t\t\t}\r\n\t\t)\r\n\t\t.then(\r\n\t\t\t()=>{\r\n\t\t\t\tthis._trigger('after_update', { has_error:false, error_msg:undefined, record:arg_record})\r\n\t\t\t\tconsole.log(context + ':update_record:true')\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t)\r\n\t\t.catch(\r\n\t\t\t(e)=>{\r\n\t\t\t\tthis._trigger('after_update', { has_error:true, error_msg:e, record:arg_record})\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Update a data collection record.\r\n\t * 1-Search record into cache\r\n\t * 2-Search record into adapter\r\n\t * \r\n\t * @param {string} arg_record_id - data record id.\r\n\t * \r\n\t * @returns {Promise} - Promise of boolean found:true, not found:false.\r\n\t */\r\n\thas_record(arg_record_id)\r\n\t{\r\n\t\tassert( T.isString(arg_record_id) && arg_record_id.length > 0, context + ':has_record:bad record id string')\r\n\t\t\r\n\t\treturn this._has_cached_record_by_id(arg_record_id)\r\n\t\t.then(\r\n\t\t\t(found)=>{\r\n\t\t\t\tif (found)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t\treturn this._adapter.has_record(this._schema.get_name(), arg_record_id)\r\n\t\t\t}\r\n\t\t).catch(\r\n\t\t\t(e)=>{\r\n\t\t\t\tthis._trigger('has_record', { has_error:true, error_msg:e, id:arg_record_id} )\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Find an existing data record with an id.\r\n\t * 1-Search record into cache\r\n\t * 2-Search record into adapter\r\n\t * 3-Save record into cache\r\n\t * \r\n\t * @param {string} arg_record_id - data record id.\r\n\t * \r\n\t * @returns {Promise} - Promise of DataRecord.\r\n\t */\r\n\tfind_one_record(arg_record_id)\r\n\t{\r\n\t\tassert( T.isString(arg_record_id) && arg_record_id.length > 0, context + ':find_one_record:bad record id string')\r\n\t\t\r\n\t\treturn this._get_cached_record_by_id(arg_record_id)\r\n\t\t.then(\r\n\t\t\t(record)=>{\r\n\t\t\t\tif ( T.isObject(record) && record.is_data_record )\r\n\t\t\t\t{\r\n\t\t\t\t\tthis._trigger('find_one_record', { has_error:false, error_msg:undefined, id:arg_record_id, from:'cache'})\r\n\t\t\t\t\treturn record\r\n\t\t\t\t}\r\n\t\t\t\treturn this._adapter.find_one_record(this._schema.get_name(), arg_record_id)\r\n\t\t\t\t.then(\r\n\t\t\t\t\t(attributes)=>{\r\n\t\t\t\t\t\t// console.log(context + ':find_one_record:adapter:attributes', attributes)\r\n\t\t\t\t\t\treturn this.new_record(attributes, arg_record_id)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\t.then(\r\n\t\t\t\t\t(record)=>{\r\n\t\t\t\t\t\tif ( T.isObject(record) && record.is_data_record )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis._trigger('find_one_record', { has_error:false, error_msg:undefined, id:arg_record_id, record:record, from:'adapter'})\r\n\t\t\t\t\t\t\t// console.log(context + ':find_one_record:adapter:good record', record)\r\n\t\t\t\t\t\t\treturn record\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconsole.error(context + ':find_one_record:adapter:bad record', record)\r\n\t\t\t\t\t\tthis._trigger('find_one_record', { has_error:false, error_msg:undefined, id:arg_record_id, from:'notfound'})\r\n\t\t\t\t\t\treturn undefined\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t)\r\n\t\t.catch(\r\n\t\t\t(e)=>{\r\n\t\t\t\tthis._trigger('find_one_record', { has_error:true, error_msg:e, id:arg_record_id} )\r\n\t\t\t\tconsole.error(context + ':find_one_record:error', e)\r\n\t\t\t\treturn undefined\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Find existing data records with a query.\r\n\t * 1-Search records into cache\r\n\t * 2-Search records into adapter\r\n\t * 3-Save records into cache\r\n\t * \r\n\t * @param {DataQuery} arg_query - data query.\r\n\t * \r\n\t * @returns {Promise} - Promise of DataRecordArray.\r\n\t */\r\n\tfind_records(arg_query)\r\n\t{\r\n\t\tassert( T.isObject(arg_query) && arg_query.is_data_query, context + ':find_records:bad query object')\r\n\t\t\r\n\t\treturn this._get_cached_record_by_query(arg_query)\r\n\t\t.then(\r\n\t\t\t(record_array)=>{\r\n\t\t\t\tif ( T.isObject(record_array) && record_array.is_data_record_array )\r\n\t\t\t\t{\r\n\t\t\t\t\tthis._trigger('find_records', { has_error:false, error_msg:undefined, query:arg_query, from:'cache'})\r\n\t\t\t\t\treturn record_array\r\n\t\t\t\t}\r\n\t\t\t\treturn this._adapter.find_records(this._schema.get_name(), arg_query)\r\n\t\t\t\t.then(\r\n\t\t\t\t\t(attributes_array)=>{\r\n\t\t\t\t\t\tif ( T.isArray(attributes_array) )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn this.new_record_array(attributes_array)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._trigger('find_records', { has_error:true, error_msg:'bad attributes array', query:arg_query, from:'notfound'})\r\n\t\t\t\t\t\treturn undefined\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\t.then(\r\n\t\t\t\t\t(record_array)=>{\r\n\t\t\t\t\t\tif ( T.isObject(record_array) && record_array.is_data_record_array )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn this._set_cached_record_by_query(arg_query, record_array).then(\r\n\t\t\t\t\t\t\t\t()=>{\r\n\t\t\t\t\t\t\t\t\tthis._trigger('find_records', { has_error:false, error_msg:undefined, query:arg_query, records:record_array, from:'adapter'})\r\n\t\t\t\t\t\t\t\t\treturn record_array\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._trigger('find_records', { has_error:false, error_msg:'bad DataRecordArray', query:arg_query, from:'notfound'})\r\n\t\t\t\t\t\treturn undefined\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t).catch(\r\n\t\t\t(e)=>{\r\n\t\t\t\tthis._trigger('find_one_record', { has_error:true, error_msg:e, query:arg_query} )\r\n\t\t\t\treturn undefined\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Find all existing data records from adapter.\r\n\t * \r\n\t * @returns {Promise} - Promise of DataRecordArray.\r\n\t */\r\n\tfind_all_records() // TODO use a query and cache: calling find_records(query) with query.select_all()\r\n\t{\r\n\t\treturn this._adapter.find_all_records(this._schema.get_name())\r\n\t\t.then(\r\n\t\t\t(record_array)=>{\r\n\t\t\t\tif ( T.isObject(record_array) && record_array.is_data_record_array )\r\n\t\t\t\t{\r\n\t\t\t\t\tthis._trigger('find_all_records', { has_error:false, error_msg:undefined, from:'adapter'})\r\n\t\t\t\t\treturn record_array\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._trigger('find_all_records', { has_error:true, error_msg:'bad DataRecordArray'} )\r\n\t\t\t\treturn undefined\r\n\t\t\t}\r\n\t\t)\r\n\t\t.catch(\r\n\t\t\t(e)=>{\r\n\t\t\t\tthis._trigger('find_all_records', { has_error:true, error_msg:e } )\r\n\t\t\t\treturn undefined\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/datas/data_collection.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 500,
    "kind": "variable",
    "name": "context",
    "memberof": "js/datas/data_collection.js",
    "static": true,
    "longname": "js/datas/data_collection.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/datas/data_collection.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 13,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 501,
    "kind": "class",
    "name": "DataCollection",
    "memberof": "js/datas/data_collection.js",
    "static": true,
    "longname": "js/datas/data_collection.js~DataCollection",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/datas/data_collection.js",
    "importStyle": "DataCollection",
    "description": "DataCollection class.",
    "examples": [
      "\tAPI:\n\t\t->constructor(arg_cache_manager,arg_data_adapter,arg_model_schema)\n\t\t\n\t\t->get_name():string - get tenant to use inside this datastore.\n\t\t->get_cache_manager():CacheManager - get cache manager instance.\n\t\t->get_adapter():DataAdapter - get data adapter instance.\n\t\t->get_model():DataModel - get collection model instance.\n\n\t->validate_record(arg_record):Promise(boolean) - test if given datas are valid for collection model.\n\t->new_record(arg_record_datas, arg_record_id) - create a new record instance.\n\t\t->create_record(arg_record):Promise(DataRecord) - create an existing unsaved data record.\n\t\t->delete_record(arg_record):Promise(boolean) - delete an existing data record.\n\t\t->update_record(arg_record):Promise(DataRecord) - update an existing data record.\n\t\t->reload_record(arg_record):Promise(DataRecord) - reload an existing data record.\n\t\t->has_record(arg_record_id):Promise(boolean) - test if a data record exists with an id.\n\t\t\n\t\t->find_one_record(arg_record_id):Promise(DataRecord) - find an existing data record with an id.\n\t\t->find_records(arg_query):Promise(DataRecordArray) - find existing data records with a query.\n\t\t->find_all_records():Promise(DataRecordArray) - find all xisting data records.\n\n\tPRIVATE:\n\t\t->_emit(arg_event, arg_datas=undefined):nothing\n\t\t->_trigger(arg_event, arg_datas):nothing\n\t\t->_has_cached_record_by_id(arg_id):Promise(boolean)\n\t\t->_get_cached_record_by_id(arg_id):Promise(DataRecord)\n\t\t->_set_cached_record_by_id(arg_record):Promise(boolean)\n\t\t->_remove_cached_record_by_id(arg_id):Promise(boolean)\n\n\n\tUSAGE ON BROWSER:\n\t\t// ds is a DataStore instance\n\t\tvar cars = ds.get_collection('cars')\n\t\tvar car_12 = cars.find_one_record('12')"
    ],
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/loggable.js~Loggable"
    ]
  },
  {
    "__docId__": 502,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#constructor",
    "access": "public",
    "description": "DataCollection class is responsible to manage one model records from one adapter:\n all records operations, cached records, model logic (field value validation, triggers).\nDataCollection instances are managed by a DataStore instance.",
    "lineNumber": 73,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "CacheManager"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_cache_manager",
        "description": "cache manager instance."
      },
      {
        "nullable": null,
        "types": [
          "DataAdapter"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_data_adapter",
        "description": "collection data adapter."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_model_schema",
        "description": "topology model schema."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 503,
    "kind": "member",
    "name": "is_data_collection",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#is_data_collection",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 88,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 504,
    "kind": "member",
    "name": "_cache_manager",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#_cache_manager",
    "access": "private",
    "description": "CacheManager instance.",
    "lineNumber": 94,
    "type": {
      "nullable": null,
      "types": [
        "CacheManager"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 505,
    "kind": "member",
    "name": "_adapter",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#_adapter",
    "access": "private",
    "description": "Datas adapter instance.",
    "lineNumber": 100,
    "type": {
      "nullable": null,
      "types": [
        "DataAdapter"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 506,
    "kind": "member",
    "name": "_schema",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#_schema",
    "access": "private",
    "description": "Topology model schema instance.",
    "lineNumber": 106,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 507,
    "kind": "member",
    "name": "_cache_prefix",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#_cache_prefix",
    "access": "private",
    "description": "Datas collection prefix.",
    "lineNumber": 112,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 508,
    "kind": "member",
    "name": "_name",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#_name",
    "access": "private",
    "description": "Datas collection name.",
    "lineNumber": 118,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 509,
    "kind": "method",
    "name": "_emit",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#_emit",
    "access": "private",
    "description": "Emit on event.",
    "lineNumber": 132,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_event",
        "description": "event name."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_datas",
        "description": "event datas (optional, default:undefined)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 510,
    "kind": "method",
    "name": "_trigger",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#_trigger",
    "access": "private",
    "description": "Call event triggers.",
    "lineNumber": 153,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_event",
        "description": "event name."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_datas",
        "description": "event datas (optional, default:undefined)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 511,
    "kind": "method",
    "name": "_has_cached_record_by_id",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#_has_cached_record_by_id",
    "access": "private",
    "description": "Test if a record is cached.",
    "lineNumber": 173,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of boolean value: found (true) or not found (false)."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_id",
        "description": "record id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of boolean value: found (true) or not found (false)."
    }
  },
  {
    "__docId__": 512,
    "kind": "method",
    "name": "_has_cached_record_by_query",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#_has_cached_record_by_query",
    "access": "private",
    "description": "Test if a record array is cached.",
    "lineNumber": 189,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of boolean value: found (true) or not found (false)."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DataQuery"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_query",
        "description": "data query."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of boolean value: found (true) or not found (false)."
    }
  },
  {
    "__docId__": 513,
    "kind": "method",
    "name": "_get_cached_record_by_id",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#_get_cached_record_by_id",
    "access": "private",
    "description": "Get a cached record.",
    "lineNumber": 205,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of a DataRecord instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_id",
        "description": "record id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of a DataRecord instance."
    }
  },
  {
    "__docId__": 514,
    "kind": "method",
    "name": "_get_cached_record_by_query",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#_get_cached_record_by_query",
    "access": "private",
    "description": "Get a cached record array.",
    "lineNumber": 221,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of a DataRecordArray instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DataQuery"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_query",
        "description": "data query."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of a DataRecordArray instance."
    }
  },
  {
    "__docId__": 515,
    "kind": "method",
    "name": "_set_cached_record_by_id",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#_set_cached_record_by_id",
    "access": "private",
    "description": "Add a record to cache.",
    "lineNumber": 237,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of boolean value: success (true) or failure (false)."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DataRecord"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record",
        "description": "record"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of boolean value: success (true) or failure (false)."
    }
  },
  {
    "__docId__": 516,
    "kind": "method",
    "name": "_set_cached_record_by_query",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#_set_cached_record_by_query",
    "access": "private",
    "description": "Add a record array to cache.",
    "lineNumber": 256,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of boolean value: success (true) or failure (false)."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DataQuery"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_query",
        "description": "data query."
      },
      {
        "nullable": null,
        "types": [
          "DataRecordArray"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record_array",
        "description": "record array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of boolean value: success (true) or failure (false)."
    }
  },
  {
    "__docId__": 517,
    "kind": "method",
    "name": "_remove_cached_record_by_id",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#_remove_cached_record_by_id",
    "access": "private",
    "description": "Remove a cached record.",
    "lineNumber": 287,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of boolean value: success (true) or failure (false)."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_id",
        "description": "record id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of boolean value: success (true) or failure (false)."
    }
  },
  {
    "__docId__": 518,
    "kind": "method",
    "name": "get_name",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#get_name",
    "access": "public",
    "description": "Get collection name.",
    "lineNumber": 301,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 519,
    "kind": "method",
    "name": "get_cache_manager",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#get_cache_manager",
    "access": "public",
    "description": "Get cache manager.",
    "lineNumber": 313,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DataAdapter}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DataAdapter"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 520,
    "kind": "method",
    "name": "get_adapter",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#get_adapter",
    "access": "public",
    "description": "Get data adapter.",
    "lineNumber": 327,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DataAdapter}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DataAdapter"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 521,
    "kind": "method",
    "name": "get_model",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#get_model",
    "access": "public",
    "description": "Get data model.",
    "lineNumber": 341,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DataModel}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DataModel"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 522,
    "kind": "method",
    "name": "get_schema",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#get_schema",
    "access": "public",
    "description": "Get data model.",
    "lineNumber": 355,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DataModel}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DataModel"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 523,
    "kind": "method",
    "name": "validate_record",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#validate_record",
    "access": "public",
    "description": "Validate data record values.\n1-Call 'before_validate' triggers.\n2-Check all fields values.\n3-Call 'after_validate_ok' triggers on success.\n  Call 'after_validate_ko' triggers on failure.\n4-Return success (true) or failure (false)",
    "lineNumber": 376,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of a boolean."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DataRecord"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record",
        "description": "data record instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of a boolean."
    }
  },
  {
    "__docId__": 524,
    "kind": "method",
    "name": "new_record",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#new_record",
    "access": "public",
    "description": "Create a new data record instance, not saved.",
    "lineNumber": 397,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise(DataRecord)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record_datas",
        "description": "new record attributes."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record_id",
        "description": "new record unique id (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise(DataRecord)"
    }
  },
  {
    "__docId__": 525,
    "kind": "method",
    "name": "create_record",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#create_record",
    "access": "public",
    "description": "Create a data collection record.\n1-Call 'before_create' triggers.\n2-Check existing record id within cached records.\n3-Validate record datas: reject on failure\n4-Create a DataRecord instance with adapter.new_record.\n5-Add record to cache.\n6-Call record.save()\n7-Call 'after_create' triggers.",
    "lineNumber": 424,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of a DataRecord object."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DataRecord"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record",
        "description": "data record instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of a DataRecord object."
    }
  },
  {
    "__docId__": 526,
    "kind": "method",
    "name": "delete_record",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#delete_record",
    "access": "public",
    "description": "Delete a data collection record.\n1-Call 'before_delete' triggers.\n2-Remove cached record.\n3-Call record.delete()\n4-Call 'after_delete' triggers.",
    "lineNumber": 483,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of boolean success."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DataRecord"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record",
        "description": "data record instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of boolean success."
    }
  },
  {
    "__docId__": 527,
    "kind": "method",
    "name": "update_record",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#update_record",
    "access": "public",
    "description": "Update a data collection record.\n1-Call 'before_update' triggers.\n2-Update cached record.\n3-Call record.update()\n4-Call 'after_update' triggers.",
    "lineNumber": 521,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of boolean success."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DataRecord"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record",
        "description": "data record instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of boolean success."
    }
  },
  {
    "__docId__": 528,
    "kind": "method",
    "name": "has_record",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#has_record",
    "access": "public",
    "description": "Update a data collection record.\n1-Search record into cache\n2-Search record into adapter",
    "lineNumber": 560,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of boolean found:true, not found:false."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record_id",
        "description": "data record id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of boolean found:true, not found:false."
    }
  },
  {
    "__docId__": 529,
    "kind": "method",
    "name": "find_one_record",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#find_one_record",
    "access": "public",
    "description": "Find an existing data record with an id.\n1-Search record into cache\n2-Search record into adapter\n3-Save record into cache",
    "lineNumber": 593,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of DataRecord."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record_id",
        "description": "data record id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of DataRecord."
    }
  },
  {
    "__docId__": 530,
    "kind": "method",
    "name": "find_records",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#find_records",
    "access": "public",
    "description": "Find existing data records with a query.\n1-Search records into cache\n2-Search records into adapter\n3-Save records into cache",
    "lineNumber": 649,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of DataRecordArray."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DataQuery"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_query",
        "description": "data query."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of DataRecordArray."
    }
  },
  {
    "__docId__": 531,
    "kind": "method",
    "name": "find_all_records",
    "memberof": "js/datas/data_collection.js~DataCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_collection.js~DataCollection#find_all_records",
    "access": "public",
    "description": "Find all existing data records from adapter.",
    "lineNumber": 705,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of DataRecordArray."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of DataRecordArray."
    },
    "params": []
  },
  {
    "__docId__": 532,
    "kind": "file",
    "name": "js/datas/data_model.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport DataRecord from './data_record'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\nlet context = 'common/data/data_model'\r\n\r\n\r\n\r\n/**\r\n * DataModel class.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n* \tAPI:\r\n* \t\t->constructor(arg_attributes)\r\n* \r\n* \t\t->get_collection():DataCollection\r\n* \t\t\r\n* \t\t->set(arg_attribute_name, arg_attribute_value):boolean - set an attribute value.\r\n* \t\t->get(arg_attribute_name):any - get an attribute value.\r\n* \t\t->get_id():string - get id attribute value.\r\n* \r\n* \t\t->save():Promise - save all changed attributes to the collection store.\r\n* \t\t->rollback():boolean - disguard any unsaved changed attributes.\r\n* \t\t->remove():Promise - remove record from collection store.\r\n* \t\t->reload():Promise - restore attributes from collection store.\r\n* \r\n* \r\n* \tUSAGE ON BROWSER:\r\n* \t\tclass Cars extends DataModel {\r\n* \t\t\tconstructor(arg_attributes) {\r\n* \t\t\t\tconst ds = ... // get data store\r\n* \t\t\t\tsuper(ds.get_collection('cars'), undefined, arg_attributes)\r\n* \t\t\t}\r\n* \t\t}\r\n* \t\tvar cars = new Cars( { engine:\"fuel\", color:\"blue\"} )\r\n* \r\n* \r\n */\r\nexport default class DataModel extends DataRecord\r\n{\r\n\t/**\r\n\t * DataModel class inherits from DataRecord and aims to provide a high level API for sub-classes.\r\n\t * \r\n\t * @param {DataCollection} arg_data_collection - data collection: contains schema (mandatory).\r\n\t * @param {string|undefined} arg_id - data id, unique in collection (optional).\r\n\t * @param {object|Immutable.Map|undefined} arg_attributes - initial datas values (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_collection, arg_id, arg_attributes)\r\n\t{\r\n\t\tassert( T.isUndefined(arg_attributes) || T.isObject(arg_attributes), context + ':constructor:bad attributes object or undefined')\r\n\r\n\t\tif( T.isObject(arg_id) && T.isUndefined(arg_attributes) )\r\n\t\t{\r\n\t\t\targ_attributes = arg_id\r\n\t\t\targ_id = undefined\r\n\t\t}\r\n\r\n\t\tif ( T.isUndefined(arg_id) && T.isObject(arg_attributes) )\r\n\t\t{\r\n\t\t\tconst id_field_name = arg_collection.get_id_field_name()\r\n\t\t\tif (id_field_name in arg_attributes)\r\n\t\t\t{\r\n\t\t\t\targ_id = arg_attributes[id_field_name]\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper(arg_collection, arg_id, arg_attributes)\r\n\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_data_model = true\r\n\t}\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/datas/data_model.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 533,
    "kind": "variable",
    "name": "context",
    "memberof": "js/datas/data_model.js",
    "static": true,
    "longname": "js/datas/data_model.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/datas/data_model.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 13,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 534,
    "kind": "class",
    "name": "DataModel",
    "memberof": "js/datas/data_model.js",
    "static": true,
    "longname": "js/datas/data_model.js~DataModel",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/datas/data_model.js",
    "importStyle": "DataModel",
    "description": "DataModel class.",
    "examples": [
      "\tAPI:\n\t\t->constructor(arg_attributes)\n\n\t\t->get_collection():DataCollection\n\t\t\n\t\t->set(arg_attribute_name, arg_attribute_value):boolean - set an attribute value.\n\t\t->get(arg_attribute_name):any - get an attribute value.\n\t\t->get_id():string - get id attribute value.\n\n\t\t->save():Promise - save all changed attributes to the collection store.\n\t\t->rollback():boolean - disguard any unsaved changed attributes.\n\t\t->remove():Promise - remove record from collection store.\n\t\t->reload():Promise - restore attributes from collection store.\n\n\n\tUSAGE ON BROWSER:\n\t\tclass Cars extends DataModel {\n\t\t\tconstructor(arg_attributes) {\n\t\t\t\tconst ds = ... // get data store\n\t\t\t\tsuper(ds.get_collection('cars'), undefined, arg_attributes)\n\t\t\t}\n\t\t}\n\t\tvar cars = new Cars( { engine:\"fuel\", color:\"blue\"} )"
    ],
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/datas/data_record.js~DataRecord"
    ]
  },
  {
    "__docId__": 535,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/datas/data_model.js~DataModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_model.js~DataModel#constructor",
    "access": "public",
    "description": "DataModel class inherits from DataRecord and aims to provide a high level API for sub-classes.",
    "lineNumber": 61,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DataCollection"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_data_collection",
        "description": "data collection: contains schema (mandatory)."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_id",
        "description": "data id, unique in collection (optional)."
      },
      {
        "nullable": null,
        "types": [
          "object",
          "Immutable.Map",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_attributes",
        "description": "initial datas values (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 536,
    "kind": "member",
    "name": "is_data_model",
    "memberof": "js/datas/data_model.js~DataModel",
    "static": false,
    "longname": "js/datas/data_model.js~DataModel#is_data_model",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 86,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 537,
    "kind": "file",
    "name": "js/datas/data_record.js",
    "content": "\r\n// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport {Map} from 'immutable'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\nlet context = 'common/data/data_record'\r\n\r\n\r\n\r\n/**\r\n * DataRecord class.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n* \r\n* \tAPI:\r\n* \t\t->constructor(arg_collection, arg_id, arg_attributes)\r\n* \r\n* \t\t->get_collection():DataCollection - get record collection.\r\n* \r\n* \t\t->get_type():string - get record type.\r\n* \t\t->get_id():string - get record id.\r\n* \t\t->get_id_field_name():string - get record id.\r\n* \t\t->get_attributes():Immutable.Map - get record attributes.\r\n* \r\n* \t\t->set(arg_attribute_name, arg_attribute_value):boolean - set an attribute value.\r\n* \t\t->get(arg_attribute_name):any - get an attribute value.\r\n* \r\n* \t\t->save():Promise - save all changed attributes to the collection store.\r\n* \t\t->rollback():boolean - disguard any unsaved changed attributes.\r\n* \t\t->remove():Promise - remove record from collection store.\r\n* \t\t->reload():Promise - restore attributes from collection store.\r\n* \r\n* \t\t->serialize():string - transform attributes map to a string.\r\n* \t\t->deserialize(string):boolean - load attributes from a string.\r\n* \r\n* \t\t->fill(arg_datas):boolean - fill attributes with given datas.\r\n* \t\t->clear():boolean - fill attributes with default datas.\r\n* \r\n* \r\n */\r\nexport default class DataRecord\r\n{\r\n\t/**\r\n\t * Data record class, contains one collection item attributes.\r\n\t * \r\n\t * @param {DataCollection} arg_data_collection - data collection: contains schema.\r\n\t * @param {string} arg_id - data id, unique in collection.\r\n\t * @param {object|Immutable.Map} arg_attributes - initial datas values.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_data_collection, arg_id, arg_attributes)\r\n\t{\r\n\t\tassert( T.isObject(arg_data_collection) && arg_data_collection.is_data_collection, context + ':constructor:bad model object')\r\n\t\tassert( T.isString(arg_id) && arg_id.length > 0, context + ':constructor:bad id string')\r\n\t\tassert( T.isObject(arg_attributes), context + ':constructor:bad attributes object')\r\n\t\t\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_data_record = true\r\n\r\n\t\t/**\r\n\t\t * Datas collection instance.\r\n\t\t * @type {DataCollection}\r\n\t\t */\r\n\t\tthis._collection = arg_data_collection\r\n\r\n\t\t/**\r\n\t\t * Record is a new created record flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis._is_new = false\r\n\r\n\t\t/**\r\n\t\t * Record unique identifier.\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis._id = arg_id\r\n\t\t\r\n\t\t/**\r\n\t\t * Record identifier field name.\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis._id_field_name = this._collection.get_schema().get_id_field_name()\r\n\r\n\t\t/**\r\n\t\t * Record attributes map.\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tthis._attributes = new Map()\r\n\r\n\t\tthis.set_attributes(arg_attributes)\r\n\t\tif (this._id)\r\n\t\t{\r\n\t\t\tthis.set(this._id_field_name, this._id)\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * Record has dirty attributes values flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis._has_dirty_attributes = false\r\n\r\n\t\t/**\r\n\t\t * Record dirty attributes names.\r\n\t\t * @type {array}\r\n\t\t */\r\n\t\tthis._dirty_attributes = []\r\n\t\t\r\n\t\t/**\r\n\t\t * Record dirty attributes map.\r\n\t\t * @type {Map}\r\n\t\t */\r\n\t\tthis._previous_attributes = this._attributes\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Emit on event.\r\n\t * @private\r\n\t * \r\n\t * @param {string} arg_event - event name.\r\n\t * @param {any} arg_datas - event datas (optional, default:undefined).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t/* eslint no-unused-vars: \"off\" */\r\n\t_emit(arg_event, arg_datas=undefined) // TODO\r\n\t{\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Check attribute name and value against model schema.\r\n\t * \r\n\t * @param {string} arg_attribute_name - attribute name.\r\n\t * @param {any} arg_attribute_value - attribute value.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\t_check_attribute(arg_attribute_name, arg_attribute_value) // TODO\r\n\t{\r\n\t\treturn true\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get record model.\r\n\t * \r\n\t * @returns {DataModel}\r\n\t */\r\n\tget_model()\r\n\t{\r\n\t\treturn this._model\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get record collection.\r\n\t * \r\n\t * @returns {DataCollection}\r\n\t */\r\n\tget_collection()\r\n\t{\r\n\t\treturn this._collection\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get record type.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_type()\r\n\t{\r\n\t\treturn this._model.get_name()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get record id.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_id()\r\n\t{\r\n\t\treturn this._id\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get record id field name.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_id_field_name()\r\n\t{\r\n\t\treturn this.get_collection().get_schema().get_id_field_name()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get record fields names.\r\n\t * \r\n\t * @returns {array} - array of all schema fields names strings.\r\n\t */\r\n\tget_fields_names()\r\n\t{\r\n\t\treturn this.get_collection().get_schema().get_fields_names()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get record attributes.\r\n\t * \r\n\t * @returns {Immutable.Map}\r\n\t */\r\n\tget_attributes()\r\n\t{\r\n\t\treturn this._attributes\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Get record attributes.\r\n\t * \r\n\t * @returns {object}\r\n\t */\r\n\tget_attributes_object()\r\n\t{\r\n\t\treturn this._attributes.toJS()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Set record attributes and normalize with schema.\r\n\t * \r\n\t * @param {object|Immutable.Map} arg_attributes - attributes map.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tset_attributes(arg_attributes)\r\n\t{\r\n\t\tthis._previous_attributes = this._attributes\r\n\t\tthis._attributes = (arg_attributes.has && arg_attributes.get && arg_attributes.getIn) ? arg_attributes : new Map(arg_attributes)\r\n\t\t// console.log('record._attributes 1', this._attributes)\r\n\r\n\t\tconst fields_names = this.get_fields_names()\r\n\t\tconst defaults_values = this.get_collection().get_schema().get_defaults()\r\n\r\n\t\tfields_names.forEach(\r\n\t\t\t(field_name)=>{\r\n\t\t\t\tif(this._attributes.has(field_name) || this._id_field_name == field_name)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis._attributes.set(field_name, defaults_values[field_name])\r\n\t\t\t}\r\n\t\t)\r\n\t\t// console.log('record._attributes 2', this._attributes)\r\n\r\n\t\tthis._has_dirty_attributes = true\r\n\t\tthis._dirty_attributes = Object.keys( this._attributes.toJS() )\r\n\t}\r\n\t\r\n\r\n\r\n\r\n\t/**\r\n\t * Set an attribute value.\r\n\t * \r\n\t * @param {string|array} arg_attribute_path - attribute name or path.\r\n\t * @param {any} arg_attribute_value - attribute value.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tset(arg_attribute_path, arg_attribute_value)\r\n\t{\r\n\t\tconst check = this._check_attribute(arg_attribute_path, arg_attribute_value)\r\n\t\tif (!check)\r\n\t\t{\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\tthis._has_dirty_attributes = true\r\n\t\tif ( this._dirty_attributes.indexOf(arg_attribute_path) == -1 )\r\n\t\t{\r\n\t\t\tthis._dirty_attributes.push(arg_attribute_path)\r\n\t\t}\r\n\t\tthis._attributes = this._attributes.set(arg_attribute_path, arg_attribute_value)\r\n\t\tthis._emit('changed', {path:arg_attribute_path, value:arg_attribute_value})\r\n\r\n\t\treturn true\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get an attribute value.\r\n\t * \r\n\t * @param {string|array} arg_attribute_path - attribute name or path.\r\n\t * \r\n\t * @returns {any|undefined}\r\n\t */\r\n\tget(arg_attribute_path)\r\n\t{\r\n\t\treturn this._attributes.get(arg_attribute_path, undefined)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Save all attributes values to the collection store.\r\n\t * \r\n\t * @returns {Promise} - promise of success (boolean)\r\n\t */\r\n\tsave()\r\n\t{\r\n\t\tlet promise = undefined\r\n\t\tif (this._is_new)\r\n\t\t{\r\n\t\t\tpromise = this.get_collection().create_record(this)\r\n\t\t} else {\r\n\t\t\tpromise = this.get_collection().update_record(this)\r\n\t\t}\r\n\t\t\r\n\t\treturn promise.then(\r\n\t\t\t(success)=>{\r\n\t\t\t\tif (success)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis._is_new = false\r\n\t\t\t\t\tthis._emit('saved')\r\n\t\t\t\t\tthis._has_dirty_attributes = false\r\n\t\t\t\t\tthis._dirty_attributes = []\r\n\t\t\t\t\tthis._previous_attributes = this._attributes\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(context + ':save:success', success)\r\n\t\t\t\treturn success\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Disguard all dirty attributes values.\r\n\t * \r\n\t * @returns {Promise} - promise of success (boolean)\r\n\t */\r\n\trollback()\r\n\t{\r\n\t\tthis._emit('rollbacked')\r\n\t\tthis._has_dirty_attributes = false\r\n\t\tthis._dirty_attributes = []\r\n\t\tthis._attributes = this._previous_attributes\r\n\t\treturn Promise.resolve(true)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Delete record from collection store.\r\n\t * \r\n\t * @returns {Promise} - promise of success (boolean)\r\n\t */\r\n\tremove()\r\n\t{\r\n\t\treturn this.get_collection().delete_record(this).then(\r\n\t\t\t(success)=>{\r\n\t\t\t\tif (success)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis._emit('removed')\r\n\t\t\t\t\tthis._has_dirty_attributes = false\r\n\t\t\t\t\tthis._dirty_attributes = []\r\n\t\t\t\t\tthis._previous_attributes = this._attributes = new Map()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Set record as removed.\r\n\t * \r\n\t * @return {nothing}\r\n\t */\r\n\tset_removed()\r\n\t{\r\n\t\t// TODO\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Reload record from collection store.\r\n\t * \r\n\t * @returns {Promise} - promise of success (boolean)\r\n\t */\r\n\treload()\r\n\t{\r\n\t\treturn this.get_collection().reload_record(this).then(\r\n\t\t\t(success)=>{\r\n\t\t\t\tif (success)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis._emit('reloaded')\r\n\t\t\t\t\tthis._has_dirty_attributes = false\r\n\t\t\t\t\tthis._dirty_attributes = []\r\n\t\t\t\t\tthis._previous_attributes = this._attributes\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Transform attributes to a string.\r\n\t * \r\n\t * @returns {string} - serialized attributes.\r\n\t */\r\n\tserialize() // TODO\r\n\t{\r\n\t\treturn ''\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Transform attributes string to an object.\r\n\t * \r\n\t * @param {stirng} arg_serialized - serialized attributes.\r\n\t *  \r\n\t * @returns {boolean} - success.\r\n\t */\r\n\t/* eslint no-unused-vars: \"off\" */\r\n\tdeserialize(arg_serialized) // TODO\r\n\t{\r\n\t\treturn false\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Fill all attributes values with given datas.\r\n\t * \r\n\t * @param {arg_datas} - new attribute values.\r\n\t * \r\n\t * @returns {boolean} - success.\r\n\t */\r\n\tfill(arg_datas)\r\n\t{\r\n\t\tif ( ! T.isObject(arg_datas) )\r\n\t\t{\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\tconst backup = this._attributes\r\n\t\tlet result = true\r\n\t\tObject.keys(arg_datas).forEach(\r\n\t\t\t(attribute_name)=>{\r\n\t\t\t\tconst value = arg_datas[attribute_name]\r\n\t\t\t\tif ( ! this.set(attribute_name, value) )\r\n\t\t\t\t{\r\n\t\t\t\t\tresult = false\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tif ( this._dirty_attributes.indexOf(attribute_name) == -1 )\r\n\t\t\t\t{\r\n\t\t\t\t\tthis._dirty_attributes.push(attribute_name)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tif (! result)\r\n\t\t{\r\n\t\t\tthis._attributes = backup\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\tthis._emit('filled')\r\n\t\tthis._has_dirty_attributes = true\r\n\t\treturn true\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Clear all attributes values with default values.\r\n\t * \r\n\t * @returns {boolean} - success.\r\n\t */\r\n\tclear()\r\n\t{\r\n\t\tconst backup = this._attributes\r\n\t\tlet result = true\r\n\t\tthis._dirty_attributes = []\r\n\t\tthis._model.get_fields().forEach(\r\n\t\t\t(field)=>{\r\n\t\t\t\tresult = result && this.set(field.get_name(), field.get_default())\r\n\t\t\t\tthis._dirty_attributes.push(field.get_name())\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tif (!result)\r\n\t\t{\r\n\t\t\tthis._attributes = backup\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\tthis._has_dirty_attributes = true\r\n\t\tthis._emit('cleared')\r\n\t\treturn true\r\n\t}\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/datas/data_record.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 538,
    "kind": "variable",
    "name": "context",
    "memberof": "js/datas/data_record.js",
    "static": true,
    "longname": "js/datas/data_record.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/datas/data_record.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 14,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 539,
    "kind": "class",
    "name": "DataRecord",
    "memberof": "js/datas/data_record.js",
    "static": true,
    "longname": "js/datas/data_record.js~DataRecord",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/datas/data_record.js",
    "importStyle": "DataRecord",
    "description": "DataRecord class.",
    "examples": [
      "\n\tAPI:\n\t\t->constructor(arg_collection, arg_id, arg_attributes)\n\n\t\t->get_collection():DataCollection - get record collection.\n\n\t\t->get_type():string - get record type.\n\t\t->get_id():string - get record id.\n\t\t->get_id_field_name():string - get record id.\n\t\t->get_attributes():Immutable.Map - get record attributes.\n\n\t\t->set(arg_attribute_name, arg_attribute_value):boolean - set an attribute value.\n\t\t->get(arg_attribute_name):any - get an attribute value.\n\n\t\t->save():Promise - save all changed attributes to the collection store.\n\t\t->rollback():boolean - disguard any unsaved changed attributes.\n\t\t->remove():Promise - remove record from collection store.\n\t\t->reload():Promise - restore attributes from collection store.\n\n\t\t->serialize():string - transform attributes map to a string.\n\t\t->deserialize(string):boolean - load attributes from a string.\n\n\t\t->fill(arg_datas):boolean - fill attributes with given datas.\n\t\t->clear():boolean - fill attributes with default datas."
    ],
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 540,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/datas/data_record.js~DataRecord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#constructor",
    "access": "public",
    "description": "Data record class, contains one collection item attributes.",
    "lineNumber": 63,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DataCollection"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_data_collection",
        "description": "data collection: contains schema."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_id",
        "description": "data id, unique in collection."
      },
      {
        "nullable": null,
        "types": [
          "object",
          "Immutable.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_attributes",
        "description": "initial datas values."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 541,
    "kind": "member",
    "name": "is_data_record",
    "memberof": "js/datas/data_record.js~DataRecord",
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#is_data_record",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 73,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 542,
    "kind": "member",
    "name": "_collection",
    "memberof": "js/datas/data_record.js~DataRecord",
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#_collection",
    "access": "private",
    "description": "Datas collection instance.",
    "lineNumber": 79,
    "type": {
      "nullable": null,
      "types": [
        "DataCollection"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 543,
    "kind": "member",
    "name": "_is_new",
    "memberof": "js/datas/data_record.js~DataRecord",
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#_is_new",
    "access": "private",
    "description": "Record is a new created record flag.",
    "lineNumber": 85,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 544,
    "kind": "member",
    "name": "_id",
    "memberof": "js/datas/data_record.js~DataRecord",
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#_id",
    "access": "private",
    "description": "Record unique identifier.",
    "lineNumber": 91,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 545,
    "kind": "member",
    "name": "_id_field_name",
    "memberof": "js/datas/data_record.js~DataRecord",
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#_id_field_name",
    "access": "private",
    "description": "Record identifier field name.",
    "lineNumber": 97,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 546,
    "kind": "member",
    "name": "_attributes",
    "memberof": "js/datas/data_record.js~DataRecord",
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#_attributes",
    "access": "private",
    "description": "Record attributes map.",
    "lineNumber": 103,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 547,
    "kind": "member",
    "name": "_has_dirty_attributes",
    "memberof": "js/datas/data_record.js~DataRecord",
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#_has_dirty_attributes",
    "access": "private",
    "description": "Record has dirty attributes values flag.",
    "lineNumber": 116,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 548,
    "kind": "member",
    "name": "_dirty_attributes",
    "memberof": "js/datas/data_record.js~DataRecord",
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#_dirty_attributes",
    "access": "private",
    "description": "Record dirty attributes names.",
    "lineNumber": 122,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 549,
    "kind": "member",
    "name": "_previous_attributes",
    "memberof": "js/datas/data_record.js~DataRecord",
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#_previous_attributes",
    "access": "private",
    "description": "Record dirty attributes map.",
    "lineNumber": 128,
    "type": {
      "nullable": null,
      "types": [
        "Map"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 550,
    "kind": "method",
    "name": "_emit",
    "memberof": "js/datas/data_record.js~DataRecord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#_emit",
    "access": "private",
    "description": "Emit on event.",
    "lineNumber": 143,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_event",
        "description": "event name."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_datas",
        "description": "event datas (optional, default:undefined)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 551,
    "kind": "method",
    "name": "_check_attribute",
    "memberof": "js/datas/data_record.js~DataRecord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#_check_attribute",
    "access": "private",
    "description": "Check attribute name and value against model schema.",
    "lineNumber": 157,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_attribute_name",
        "description": "attribute name."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_attribute_value",
        "description": "attribute value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 552,
    "kind": "method",
    "name": "get_model",
    "memberof": "js/datas/data_record.js~DataRecord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#get_model",
    "access": "public",
    "description": "Get record model.",
    "lineNumber": 169,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DataModel}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DataModel"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 553,
    "kind": "method",
    "name": "get_collection",
    "memberof": "js/datas/data_record.js~DataRecord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#get_collection",
    "access": "public",
    "description": "Get record collection.",
    "lineNumber": 181,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DataCollection}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DataCollection"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 554,
    "kind": "method",
    "name": "get_type",
    "memberof": "js/datas/data_record.js~DataRecord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#get_type",
    "access": "public",
    "description": "Get record type.",
    "lineNumber": 193,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 555,
    "kind": "method",
    "name": "get_id",
    "memberof": "js/datas/data_record.js~DataRecord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#get_id",
    "access": "public",
    "description": "Get record id.",
    "lineNumber": 205,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 556,
    "kind": "method",
    "name": "get_id_field_name",
    "memberof": "js/datas/data_record.js~DataRecord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#get_id_field_name",
    "access": "public",
    "description": "Get record id field name.",
    "lineNumber": 217,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 557,
    "kind": "method",
    "name": "get_fields_names",
    "memberof": "js/datas/data_record.js~DataRecord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#get_fields_names",
    "access": "public",
    "description": "Get record fields names.",
    "lineNumber": 229,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} - array of all schema fields names strings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "array of all schema fields names strings."
    },
    "params": []
  },
  {
    "__docId__": 558,
    "kind": "method",
    "name": "get_attributes",
    "memberof": "js/datas/data_record.js~DataRecord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#get_attributes",
    "access": "public",
    "description": "Get record attributes.",
    "lineNumber": 241,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Immutable.Map}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Immutable.Map"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 559,
    "kind": "method",
    "name": "get_attributes_object",
    "memberof": "js/datas/data_record.js~DataRecord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#get_attributes_object",
    "access": "public",
    "description": "Get record attributes.",
    "lineNumber": 252,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 560,
    "kind": "method",
    "name": "set_attributes",
    "memberof": "js/datas/data_record.js~DataRecord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#set_attributes",
    "access": "public",
    "description": "Set record attributes and normalize with schema.",
    "lineNumber": 266,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object",
          "Immutable.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_attributes",
        "description": "attributes map."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 565,
    "kind": "method",
    "name": "set",
    "memberof": "js/datas/data_record.js~DataRecord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#set",
    "access": "public",
    "description": "Set an attribute value.",
    "lineNumber": 302,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_attribute_path",
        "description": "attribute name or path."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_attribute_value",
        "description": "attribute value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 568,
    "kind": "method",
    "name": "get",
    "memberof": "js/datas/data_record.js~DataRecord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#get",
    "access": "public",
    "description": "Get an attribute value.",
    "lineNumber": 330,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{any|undefined}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_attribute_path",
        "description": "attribute name or path."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any",
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 569,
    "kind": "method",
    "name": "save",
    "memberof": "js/datas/data_record.js~DataRecord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#save",
    "access": "public",
    "description": "Save all attributes values to the collection store.",
    "lineNumber": 342,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of success (boolean)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of success (boolean)"
    },
    "params": []
  },
  {
    "__docId__": 574,
    "kind": "method",
    "name": "rollback",
    "memberof": "js/datas/data_record.js~DataRecord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#rollback",
    "access": "public",
    "description": "Disguard all dirty attributes values.",
    "lineNumber": 375,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of success (boolean)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of success (boolean)"
    },
    "params": []
  },
  {
    "__docId__": 578,
    "kind": "method",
    "name": "remove",
    "memberof": "js/datas/data_record.js~DataRecord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#remove",
    "access": "public",
    "description": "Delete record from collection store.",
    "lineNumber": 391,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of success (boolean)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of success (boolean)"
    },
    "params": []
  },
  {
    "__docId__": 582,
    "kind": "method",
    "name": "set_removed",
    "memberof": "js/datas/data_record.js~DataRecord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#set_removed",
    "access": "public",
    "description": "Set record as removed.",
    "lineNumber": 413,
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 583,
    "kind": "method",
    "name": "reload",
    "memberof": "js/datas/data_record.js~DataRecord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#reload",
    "access": "public",
    "description": "Reload record from collection store.",
    "lineNumber": 425,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of success (boolean)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of success (boolean)"
    },
    "params": []
  },
  {
    "__docId__": 587,
    "kind": "method",
    "name": "serialize",
    "memberof": "js/datas/data_record.js~DataRecord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#serialize",
    "access": "public",
    "description": "Transform attributes to a string.",
    "lineNumber": 447,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - serialized attributes."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "serialized attributes."
    },
    "params": []
  },
  {
    "__docId__": 588,
    "kind": "method",
    "name": "deserialize",
    "memberof": "js/datas/data_record.js~DataRecord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#deserialize",
    "access": "public",
    "description": "Transform attributes string to an object.",
    "lineNumber": 462,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - success."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "stirng"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_serialized",
        "description": "serialized attributes."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "success."
    }
  },
  {
    "__docId__": 589,
    "kind": "method",
    "name": "fill",
    "memberof": "js/datas/data_record.js~DataRecord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#fill",
    "access": "public",
    "description": "Fill all attributes values with given datas.",
    "lineNumber": 476,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - success."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "arg_datas"
        ],
        "spread": false,
        "optional": false,
        "name": "-",
        "description": "new attribute values."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "success."
    }
  },
  {
    "__docId__": 592,
    "kind": "method",
    "name": "clear",
    "memberof": "js/datas/data_record.js~DataRecord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_record.js~DataRecord#clear",
    "access": "public",
    "description": "Clear all attributes values with default values.",
    "lineNumber": 518,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - success."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "success."
    },
    "params": []
  },
  {
    "__docId__": 596,
    "kind": "file",
    "name": "js/datas/data_store.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport Loggable from '../base/loggable'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\nconst context = 'common/data/data_store'\r\n\r\n/*\r\ncreateRecord is used for creating new records on the client side. This will return a new record in the created.uncommitted state.\r\nIn order to persist this record to the backend you will need to call record.save().\r\n\r\npush is used to notify Ember Data's store of new or updated records that exist in the backend. This will return a record in the loaded.saved state. The primary use-case for store#push is to notify Ember Data about record updates (full or partial) that happen outside of the normal adapter methods (for example SSE or Web Sockets).\r\n\r\npushPayload is a convenience wrapper for store#push that will deserialize payloads if the Serializer implements a pushPayload method.\r\n\r\n\r\n\r\nMETHODS\r\n\r\nadapterFor\r\nmodelFor\r\nnormalize\r\npeekAll\r\npeekRecord\r\npush\r\npushPayload\r\nquery\r\nrecordIsLoaded\r\nserializerFor\r\nunloadAll\r\nunloadRecord\r\n*/\r\n\r\n/**\r\n * DataStore class.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n* \tAPI:\r\n* \t\t->constructor()\r\n* \t\t\r\n* \t\t// DATA ADAPTERS MANAGEMENT\r\n* \t\t->add_adapter(arg_adapter):boolean\r\n* \t\t->remove_adapter(arg_adapter):boolean\r\n* \t\t->suspend_adapter(arg_adapter):boolean\r\n* \t\t->resume_adapter(arg_adapter):boolean\r\n* \t\t\r\n* \t\t// DATA COLLECTIONS MANAGEMENT\r\n* \t\t->get_collection(arg_model_name):DataCollection - get a data collection for a model.\r\n* \t\t->add_collection(arg_collection):boolean - add a data collection.\r\n* \t\t->remove_collection(arg_collection):boolean - remove a data collection.\r\n* \r\n* \t\t// WRAPPERS FOR DATA COLLECTIONS OPERATIONS\r\n* \t\t->create_record(arg_collection_name, arg_record_id, arg_record_datas):Promise(DataRecord) - create a new data record.\r\n* \t\t->delete_record(arg_collection_name, arg_record_id):Promise(boolean) - delete an existing data record.\r\n* \t\t->update_record(arg_collection_name, arg_record_id, arg_record_datas):Promise(DataRecord) - update an existing data record.\r\n* \t\t->has_record(arg_collection_name, arg_record_id):Promise(boolean) - test if a data record exists with an id.\r\n* \t\t\r\n* \t\t->find_one_record(arg_collection_name, arg_record_id):Promise(DataRecord) - find an existing data record with an id.\r\n* \t\t->find_records(arg_collection_name, arg_query):Promise(DataRecordArray) - find existing data records with a query.\r\n* \t\t->find_all_records(arg_collection_name):Promise(DataRecordArray) - find all xisting data records.\r\n* \r\n* \r\n* \tUSAGE ON BROWSER:\r\n* \t\tvar memory_cache = new CacheAdapterNodeCache( {ttl:5000, check_period:2000} )\r\n* \t\tvar cache_manager = new CacheManager([memory_cache])\r\n* \r\n* \t\tvar rest_settings = {...}\r\n* \t\tvar models_settings = {...}\r\n* \t\tvar rest_adapter = new DataAdapterRest(rest_settings, models_settings)\r\n* \t\tvar ds = new DataStore(cache_manager, [rest_adapter])\r\n* \t\tds.set_tenant('my tenant')\r\n* \t\tds.set_credentials('*', app.get_credentials())\r\n* \t\tds.set_credentials('cars', {token:'...'} )\r\n* \t\t\r\n* \t\tvar cars = ds.get_collection('cars')\r\n* \t\tvar car_12 = cars.find_one_record('12')\r\n* \r\n* \t\tor\r\n* \r\n* \t\tvar car_13 = ds.find_one_record('cars', '13')\r\n* \t\t\r\n* \t\tvar car_14 = ds.create_record('cars', '14', { engine:'gazol', color:'red' } )\r\n* Each application on the browser has credentials for one tenant.\r\n * \r\n */\r\nexport default class DataStore extends Loggable\r\n{\r\n\t/**\r\n\t * Data store class is the main interface between datas consumers (views) and producers (adapters).\r\n\t * \r\n\t * @param {CacheManager} arg_cache_manager - cache manager instance.\r\n\t * @param {array} arg_data_adapters - data adapters array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_cache_manager, arg_data_adapters=[])\r\n\t{\r\n\t\tassert( T.isObject(arg_cache_manager) && arg_cache_manager.is_cache_manager, context + ':constructor:bad cache manager object')\r\n\t\tassert( T.isArray(arg_data_adapters), context + ':constructor:bad data adapters array')\r\n\r\n\t\tsuper(context)\r\n\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_data_store = true\r\n\t\t\r\n\t\t/**\r\n\t\t * CacheManager instance.\r\n\t\t * @type {CacheManager}\r\n\t\t */\r\n\t\tthis._cache_manager = arg_cache_manager\r\n\t\t\r\n\t\t/**\r\n\t\t * Datas adapters array.\r\n\t\t * @type {array}\r\n\t\t */\r\n\t\tthis._adapters = arg_data_adapters\r\n\t\t\r\n\t\t/**\r\n\t\t * Adapter collections map.\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tthis._collections = {}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Emit on event.\r\n\t * @private\r\n\t * \r\n\t * @param {string} arg_event - event name.\r\n\t * @param {any} arg_datas - event datas (optional, default:undefined).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t/* eslint no-unused-vars: \"off\" */\r\n\t_emit(arg_event, arg_datas=undefined) // TODO\r\n\t{\r\n\t\tthis.debug(context + ':emit:' + arg_event)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Add a data adapter.\r\n\t * \r\n\t * @param {DataAdapter} arg_adapter - data adapter.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tadd_adapter(arg_adapter)\r\n\t{\r\n\t\tassert( T.isObject(arg_adapter) && arg_adapter.is_data_adapter, context + ':add_adapter:bad data adapter object')\r\n\t\t\r\n\t\tconst adapter_name = arg_adapter.get_name()\r\n\t\tif (adapter_name in this._adapters)\r\n\t\t{\r\n\t\t\tthis.warn('add_adapter:adapter exist [' + adapter_name + ']')\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\tthis._adapters[adapter_name] = arg_adapter\r\n\r\n\t\tthis._emit('adapter.added', adapter_name)\r\n\t\treturn true\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Remove a data adapter.\r\n\t * \r\n\t * @param {DataAdapter} arg_adapter - data adapter.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tremove_adapter(arg_adapter)\r\n\t{\r\n\t\tassert( T.isObject(arg_adapter) && arg_adapter.is_data_adapter, context + ':remove_adapter:bad data adapter object')\r\n\t\t\r\n\t\tconst adapter_name = arg_adapter.get_name()\r\n\t\tif ( ! (adapter_name in this._adapters) )\r\n\t\t{\r\n\t\t\tthis.warn('remove_adapter:adapter does\\'t exist [' + adapter_name + ']')\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\targ_adapter.destroy()\r\n\t\tdelete this._adapters[adapter_name]\r\n\t\tthis._emit('adapter.removed', adapter_name)\r\n\t\treturn true\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Suspend a data adapter.\r\n\t * \r\n\t * @param {DataAdapter} arg_adapter - data adapter.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tsuspend_adapter(arg_adapter)\r\n\t{\r\n\t\tassert( T.isObject(arg_adapter) && arg_adapter.is_data_adapter, context + ':suspend_adapter:bad data adapter object')\r\n\t\t\r\n\t\targ_adapter.suspend()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Resume a data adapter.\r\n\t * \r\n\t * @param {DataAdapter} arg_adapter - data adapter.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tresume_adapter(arg_adapter)\r\n\t{\r\n\t\tassert( T.isObject(arg_adapter) && arg_adapter.is_data_adapter, context + ':resume_adapter:bad data adapter object')\r\n\t\t\r\n\t\targ_adapter.resume()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get a data collection for a model.\r\n\t * \r\n\t * @param {string} arg_model_name - data collection model name.\r\n\t * \r\n\t * @returns {DataCollection|undefined}\r\n\t */\r\n\tget_collection(arg_model_name)\r\n\t{\r\n\t\tassert( T.isOString(arg_model_name), context + ':get_collection:bad data collection model name string')\r\n\t\t\r\n\t\tif (arg_model_name in this._collections)\r\n\t\t{\r\n\t\t\t\r\n\t\t\treturn this._collections[arg_model_name]\r\n\t\t}\r\n\r\n\t\tthis.warn('get_collection:collection doesn\\'t exist')\r\n\t\treturn undefined\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Add a data collection.\r\n\t * \r\n\t * @param {DataCollection} arg_collection - data collection.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tadd_collection(arg_collection)\r\n\t{\r\n\t\tassert( T.isObject(arg_collection) && arg_collection.is_data_collection, context + ':add_collection:bad data collection object')\r\n\t\t\r\n\t\tconst collection_name = arg_collection.get_name()\r\n\t\tif (collection_name in this._collections)\r\n\t\t{\r\n\t\t\tthis.warn('add_collection:collection exist')\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\tthis._collections[collection_name] = arg_collection\r\n\t\tthis._emit('collection.added', collection_name)\r\n\t\treturn true\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Remove a data collection.\r\n\t * \r\n\t * @param {DataCollection} arg_collection - data collection.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tremove_collection(arg_collection)\r\n\t{\r\n\t\tassert( T.isObject(arg_collection) && arg_collection.is_data_collection, context + ':remove_collection:bad data collection object')\r\n\t\t\r\n\t\tconst collection_name = arg_collection.get_name()\r\n\t\tif ( !(collection_name in this._collections) )\r\n\t\t{\r\n\t\t\tthis.warn('remove_collection:collection doesn\\'t exist [' + collection_name + ']')\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\targ_collection.destroy()\r\n\r\n\t\tdelete this._collections[collection_name]\r\n\t\tthis._emit('collection.removed', collection_name)\r\n\t\treturn true\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Create a data collection record.\r\n\t * \r\n\t * @param {string} arg_collection_name - data collection name.\r\n\t * @param {string} arg_record_id - data record id.\r\n\t * @param {object} arg_record_datas - data record datas.\r\n\t * \r\n\t * @returns {Promise} - Promise of a DataRecord object.\r\n\t */\r\n\tcreate_record(arg_collection_name, arg_record_id, arg_record_datas)\r\n\t{\r\n\t\tassert( T.isString(arg_collection_name), context + ':create_record:bad data collection string')\r\n\t\tassert( T.isString(arg_record_id) && arg_record_id.length > 0, context + ':create_record:bad record id string')\r\n\t\tassert( T.isObject(arg_record_datas), context + ':create_record:bad record datas object')\r\n\t\t\r\n\t\t// CHECK COLLECTION NAME\r\n\t\tif (! (arg_collection_name in this._collections) )\r\n\t\t{\r\n\t\t\tthis.warn('create_record:collection doesn\\'t exist [' + arg_collection_name + ']')\r\n\t\t\treturn Promise.reject('create_record:bad collection name [' + arg_collection_name + ']')\r\n\t\t}\r\n\r\n\t\t// GET COLLECTION\r\n\t\tconst collection = this._collections[arg_collection_name]\r\n\t\tassert( T.isObject(collection) && collection.is_data_collection, context + ':create_record:bad data collection object')\r\n\t\t\r\n\t\t// CHECK EXISTING RECORD\r\n\t\tconst check_record_promise = collection.has_record_by_id(arg_record_id)\r\n\t\treturn check_record_promise.then(\r\n\t\t\t(found)=>{\r\n\t\t\t\tif (! found)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.warn('create_record:collection record id already exists collection=[' + arg_collection_name + '] id=[' + arg_record_id + ']')\r\n\t\t\t\t\treturn Promise.reject('create_record:bad collection [' + arg_collection_name + '] id [' + arg_record_id + ']')\r\n\t\t\t\t}\r\n\t\t\t\treturn collection.create_record(arg_record_id, arg_record_datas)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Delete a data collection record.\r\n\t * \r\n\t * @param {string} arg_collection_name - data collection name.\r\n\t * @param {string} arg_record_id - data record id.\r\n\t * \r\n\t * @returns {Promise} - Promise of boolean success.\r\n\t */\r\n\tdelete_record(arg_collection_name, arg_record_id)\r\n\t{\r\n\t\tassert( T.isString(arg_collection_name), context + ':delete_record:bad data collection string')\r\n\t\tassert( T.isString(arg_record_id) && arg_record_id.length > 0, context + ':delete_record:bad record id string')\r\n\t\t\r\n\t\t// CHECK COLLECTION NAME\r\n\t\tif (! (arg_collection_name in this._collections) )\r\n\t\t{\r\n\t\t\tthis.warn('delete_record:collection doesn\\'t exist [' + arg_collection_name + ']')\r\n\t\t\treturn Promise.reject('delete_record:bad collection name [' + arg_collection_name + ']')\r\n\t\t}\r\n\r\n\t\t// GET COLLECTION\r\n\t\tconst collection = this._collections[arg_collection_name]\r\n\t\tassert( T.isObject(collection) && collection.is_data_collection, context + ':delete_record:bad data collection object')\r\n\t\t\r\n\t\treturn collection.delete_record(arg_record_id)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Update a data collection record.\r\n\t * \r\n\t * @param {string} arg_collection_name - data collection name.\r\n\t * @param {string} arg_record_id - data record id.\r\n\t * @param {object} arg_record_datas - data record datas.\r\n\t * \r\n\t * @returns {Promise} - Promise of boolean success.\r\n\t */\r\n\tupdate_record(arg_collection_name, arg_record_id, arg_record_datas)\r\n\t{\r\n\t\tassert( T.isString(arg_collection_name), context + ':update_record:bad data collection string')\r\n\t\tassert( T.isString(arg_record_id) && arg_record_id.length > 0, context + ':update_record:bad record id string')\r\n\t\tassert( T.isObject(arg_record_datas), context + ':update_record:bad record datas object')\r\n\t\t\r\n\t\t// CHECK COLLECTION NAME\r\n\t\tif (! (arg_collection_name in this._collections) )\r\n\t\t{\r\n\t\t\tthis.warn('update_record:collection doesn\\'t exist [' + arg_collection_name + ']')\r\n\t\t\treturn Promise.reject('update_record:bad collection name [' + arg_collection_name + ']')\r\n\t\t}\r\n\r\n\t\t// GET COLLECTION\r\n\t\tconst collection = this._collections[arg_collection_name]\r\n\t\tassert( T.isObject(collection) && collection.is_data_collection, context + ':update_record:bad data collection object')\r\n\t\t\r\n\t\treturn collection.update_record(arg_record_id, arg_record_datas)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Update a data collection record.\r\n\t * \r\n\t * @param {string} arg_collection_name - data collection name.\r\n\t * @param {string} arg_record_id - data record id.\r\n\t * \r\n\t * @returns {Promise} - Promise of boolean found:true, not found:false.\r\n\t */\r\n\thas_record(arg_collection_name, arg_record_id)\r\n\t{\r\n\t\tassert( T.isString(arg_collection_name), context + ':has_record:bad data collection string')\r\n\t\tassert( T.isString(arg_record_id) && arg_record_id.length > 0, context + ':has_record:bad record id string')\r\n\t\t\r\n\t\t// CHECK COLLECTION NAME\r\n\t\tif (! (arg_collection_name in this._collections) )\r\n\t\t{\r\n\t\t\tthis.warn('update_record:collection doesn\\'t exist [' + arg_collection_name + ']')\r\n\t\t\treturn Promise.reject('update_record:bad collection name [' + arg_collection_name + ']')\r\n\t\t}\r\n\r\n\t\t// GET COLLECTION\r\n\t\tconst collection = this._collections[arg_collection_name]\r\n\t\tassert( T.isObject(collection) && collection.is_data_collection, context + ':update_record:bad data collection object')\r\n\t\t\r\n\t\t// CHECK EXISTING RECORD\r\n\t\treturn collection.has_record_by_id(arg_record_id)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Find an existing data record with an id.\r\n\t * \r\n\t * @param {string} arg_collection_name - data collection name.\r\n\t * @param {string} arg_record_id - data record id.\r\n\t * \r\n\t * @returns {Promise} - Promise of DataRecord.\r\n\t */\r\n\tfind_one_record(arg_collection_name, arg_record_id)\r\n\t{\r\n\t\tassert( T.isString(arg_collection_name), context + ':find_one_record:bad data collection string')\r\n\t\tassert( T.isString(arg_record_id) && arg_record_id.length > 0, context + ':find_one_record:bad record id string')\r\n\t\t\r\n\t\t// CHECK COLLECTION NAME\r\n\t\tif (! (arg_collection_name in this._collections) )\r\n\t\t{\r\n\t\t\tthis.warn('find_one_record:collection doesn\\'t exist [' + arg_collection_name + ']')\r\n\t\t\treturn Promise.reject('find_one_record:bad collection name [' + arg_collection_name + ']')\r\n\t\t}\r\n\r\n\t\t// GET COLLECTION\r\n\t\tconst collection = this._collections[arg_collection_name]\r\n\t\tassert( T.isObject(collection) && collection.is_data_collection, context + ':find_one_record:bad data collection object')\r\n\t\t\r\n\t\treturn collection.find_one_record(arg_record_id)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Find existing data records with a query.\r\n\t * \r\n\t * @param {string} arg_collection_name - data collection name.\r\n\t * @param {DataQuery} arg_query - data query.\r\n\t * \r\n\t * @returns {Promise} - Promise of DataRecordArray.\r\n\t */\r\n\tfind_records(arg_collection_name, arg_query)\r\n\t{\r\n\t\tassert( T.isString(arg_collection_name), context + ':find_records:bad data collection string')\r\n\t\tassert( T.isObject(arg_query) && arg_query.is_data_query, context + ':find_records:bad query object')\r\n\t\t\r\n\t\t// CHECK COLLECTION NAME\r\n\t\tif (! (arg_collection_name in this._collections) )\r\n\t\t{\r\n\t\t\tthis.warn('find_records:collection doesn\\'t exist [' + arg_collection_name + ']')\r\n\t\t\treturn Promise.reject('find_records:bad collection name [' + arg_collection_name + ']')\r\n\t\t}\r\n\r\n\t\t// GET COLLECTION\r\n\t\tconst collection = this._collections[arg_collection_name]\r\n\t\tassert( T.isObject(collection) && collection.is_data_collection, context + ':find_records:bad data collection object')\r\n\t\t\r\n\t\treturn collection.find_records(arg_query)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Find all existing data records.\r\n\t * \r\n\t * @param {string} arg_collection_name - data collection name.\r\n\t * \r\n\t * @returns {Promise} - Promise of DataRecordArray.\r\n\t */\r\n\tfind_all_records(arg_collection_name)\r\n\t{\r\n\t\tassert( T.isString(arg_collection_name), context + ':find_all_records:bad data collection string')\r\n\t\t\r\n\t\t// CHECK COLLECTION NAME\r\n\t\tif (! (arg_collection_name in this._collections) )\r\n\t\t{\r\n\t\t\tthis.warn('find_all_records:collection doesn\\'t exist [' + arg_collection_name + ']')\r\n\t\t\treturn Promise.reject('find_all_records:bad collection name [' + arg_collection_name + ']')\r\n\t\t}\r\n\r\n\t\t// GET COLLECTION\r\n\t\tconst collection = this._collections[arg_collection_name]\r\n\t\tassert( T.isObject(collection) && collection.is_data_collection, context + ':find_all_records:bad data collection object')\r\n\t\t\r\n\t\treturn collection.find_all_records()\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/datas/data_store.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 597,
    "kind": "variable",
    "name": "context",
    "memberof": "js/datas/data_store.js",
    "static": true,
    "longname": "js/datas/data_store.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/datas/data_store.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 13,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 598,
    "kind": "class",
    "name": "DataStore",
    "memberof": "js/datas/data_store.js",
    "static": true,
    "longname": "js/datas/data_store.js~DataStore",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/datas/data_store.js",
    "importStyle": "DataStore",
    "description": "DataStore class.",
    "examples": [
      "\tAPI:\n\t\t->constructor()\n\t\t\n\t\t// DATA ADAPTERS MANAGEMENT\n\t\t->add_adapter(arg_adapter):boolean\n\t\t->remove_adapter(arg_adapter):boolean\n\t\t->suspend_adapter(arg_adapter):boolean\n\t\t->resume_adapter(arg_adapter):boolean\n\t\t\n\t\t// DATA COLLECTIONS MANAGEMENT\n\t\t->get_collection(arg_model_name):DataCollection - get a data collection for a model.\n\t\t->add_collection(arg_collection):boolean - add a data collection.\n\t\t->remove_collection(arg_collection):boolean - remove a data collection.\n\n\t\t// WRAPPERS FOR DATA COLLECTIONS OPERATIONS\n\t\t->create_record(arg_collection_name, arg_record_id, arg_record_datas):Promise(DataRecord) - create a new data record.\n\t\t->delete_record(arg_collection_name, arg_record_id):Promise(boolean) - delete an existing data record.\n\t\t->update_record(arg_collection_name, arg_record_id, arg_record_datas):Promise(DataRecord) - update an existing data record.\n\t\t->has_record(arg_collection_name, arg_record_id):Promise(boolean) - test if a data record exists with an id.\n\t\t\n\t\t->find_one_record(arg_collection_name, arg_record_id):Promise(DataRecord) - find an existing data record with an id.\n\t\t->find_records(arg_collection_name, arg_query):Promise(DataRecordArray) - find existing data records with a query.\n\t\t->find_all_records(arg_collection_name):Promise(DataRecordArray) - find all xisting data records.\n\n\n\tUSAGE ON BROWSER:\n\t\tvar memory_cache = new CacheAdapterNodeCache( {ttl:5000, check_period:2000} )\n\t\tvar cache_manager = new CacheManager([memory_cache])\n\n\t\tvar rest_settings = {...}\n\t\tvar models_settings = {...}\n\t\tvar rest_adapter = new DataAdapterRest(rest_settings, models_settings)\n\t\tvar ds = new DataStore(cache_manager, [rest_adapter])\n\t\tds.set_tenant('my tenant')\n\t\tds.set_credentials('*', app.get_credentials())\n\t\tds.set_credentials('cars', {token:'...'} )\n\t\t\n\t\tvar cars = ds.get_collection('cars')\n\t\tvar car_12 = cars.find_one_record('12')\n\n\t\tor\n\n\t\tvar car_13 = ds.find_one_record('cars', '13')\n\t\t\n\t\tvar car_14 = ds.create_record('cars', '14', { engine:'gazol', color:'red' } )\nEach application on the browser has credentials for one tenant."
    ],
    "lineNumber": 96,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/loggable.js~Loggable"
    ]
  },
  {
    "__docId__": 599,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/datas/data_store.js~DataStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_store.js~DataStore#constructor",
    "access": "public",
    "description": "Data store class is the main interface between datas consumers (views) and producers (adapters).",
    "lineNumber": 106,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "CacheManager"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_cache_manager",
        "description": "cache manager instance."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_data_adapters",
        "description": "data adapters array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 600,
    "kind": "member",
    "name": "is_data_store",
    "memberof": "js/datas/data_store.js~DataStore",
    "static": false,
    "longname": "js/datas/data_store.js~DataStore#is_data_store",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 117,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 601,
    "kind": "member",
    "name": "_cache_manager",
    "memberof": "js/datas/data_store.js~DataStore",
    "static": false,
    "longname": "js/datas/data_store.js~DataStore#_cache_manager",
    "access": "private",
    "description": "CacheManager instance.",
    "lineNumber": 123,
    "type": {
      "nullable": null,
      "types": [
        "CacheManager"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 602,
    "kind": "member",
    "name": "_adapters",
    "memberof": "js/datas/data_store.js~DataStore",
    "static": false,
    "longname": "js/datas/data_store.js~DataStore#_adapters",
    "access": "private",
    "description": "Datas adapters array.",
    "lineNumber": 129,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 603,
    "kind": "member",
    "name": "_collections",
    "memberof": "js/datas/data_store.js~DataStore",
    "static": false,
    "longname": "js/datas/data_store.js~DataStore#_collections",
    "access": "private",
    "description": "Adapter collections map.",
    "lineNumber": 135,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 604,
    "kind": "method",
    "name": "_emit",
    "memberof": "js/datas/data_store.js~DataStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_store.js~DataStore#_emit",
    "access": "private",
    "description": "Emit on event.",
    "lineNumber": 150,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_event",
        "description": "event name."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_datas",
        "description": "event datas (optional, default:undefined)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 605,
    "kind": "method",
    "name": "add_adapter",
    "memberof": "js/datas/data_store.js~DataStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_store.js~DataStore#add_adapter",
    "access": "public",
    "description": "Add a data adapter.",
    "lineNumber": 164,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DataAdapter"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_adapter",
        "description": "data adapter."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 606,
    "kind": "method",
    "name": "remove_adapter",
    "memberof": "js/datas/data_store.js~DataStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_store.js~DataStore#remove_adapter",
    "access": "public",
    "description": "Remove a data adapter.",
    "lineNumber": 190,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DataAdapter"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_adapter",
        "description": "data adapter."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 607,
    "kind": "method",
    "name": "suspend_adapter",
    "memberof": "js/datas/data_store.js~DataStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_store.js~DataStore#suspend_adapter",
    "access": "public",
    "description": "Suspend a data adapter.",
    "lineNumber": 216,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DataAdapter"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_adapter",
        "description": "data adapter."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 608,
    "kind": "method",
    "name": "resume_adapter",
    "memberof": "js/datas/data_store.js~DataStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_store.js~DataStore#resume_adapter",
    "access": "public",
    "description": "Resume a data adapter.",
    "lineNumber": 232,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DataAdapter"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_adapter",
        "description": "data adapter."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 609,
    "kind": "method",
    "name": "get_collection",
    "memberof": "js/datas/data_store.js~DataStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_store.js~DataStore#get_collection",
    "access": "public",
    "description": "Get a data collection for a model.",
    "lineNumber": 248,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DataCollection|undefined}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_model_name",
        "description": "data collection model name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DataCollection",
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 610,
    "kind": "method",
    "name": "add_collection",
    "memberof": "js/datas/data_store.js~DataStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_store.js~DataStore#add_collection",
    "access": "public",
    "description": "Add a data collection.",
    "lineNumber": 271,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DataCollection"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_collection",
        "description": "data collection."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 611,
    "kind": "method",
    "name": "remove_collection",
    "memberof": "js/datas/data_store.js~DataStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_store.js~DataStore#remove_collection",
    "access": "public",
    "description": "Remove a data collection.",
    "lineNumber": 296,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DataCollection"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_collection",
        "description": "data collection."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 612,
    "kind": "method",
    "name": "create_record",
    "memberof": "js/datas/data_store.js~DataStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_store.js~DataStore#create_record",
    "access": "public",
    "description": "Create a data collection record.",
    "lineNumber": 325,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of a DataRecord object."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_collection_name",
        "description": "data collection name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record_id",
        "description": "data record id."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record_datas",
        "description": "data record datas."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of a DataRecord object."
    }
  },
  {
    "__docId__": 613,
    "kind": "method",
    "name": "delete_record",
    "memberof": "js/datas/data_store.js~DataStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_store.js~DataStore#delete_record",
    "access": "public",
    "description": "Delete a data collection record.",
    "lineNumber": 366,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of boolean success."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_collection_name",
        "description": "data collection name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record_id",
        "description": "data record id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of boolean success."
    }
  },
  {
    "__docId__": 614,
    "kind": "method",
    "name": "update_record",
    "memberof": "js/datas/data_store.js~DataStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_store.js~DataStore#update_record",
    "access": "public",
    "description": "Update a data collection record.",
    "lineNumber": 396,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of boolean success."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_collection_name",
        "description": "data collection name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record_id",
        "description": "data record id."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record_datas",
        "description": "data record datas."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of boolean success."
    }
  },
  {
    "__docId__": 615,
    "kind": "method",
    "name": "has_record",
    "memberof": "js/datas/data_store.js~DataStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_store.js~DataStore#has_record",
    "access": "public",
    "description": "Update a data collection record.",
    "lineNumber": 426,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of boolean found:true, not found:false."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_collection_name",
        "description": "data collection name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record_id",
        "description": "data record id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of boolean found:true, not found:false."
    }
  },
  {
    "__docId__": 616,
    "kind": "method",
    "name": "find_one_record",
    "memberof": "js/datas/data_store.js~DataStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_store.js~DataStore#find_one_record",
    "access": "public",
    "description": "Find an existing data record with an id.",
    "lineNumber": 456,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of DataRecord."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_collection_name",
        "description": "data collection name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record_id",
        "description": "data record id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of DataRecord."
    }
  },
  {
    "__docId__": 617,
    "kind": "method",
    "name": "find_records",
    "memberof": "js/datas/data_store.js~DataStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_store.js~DataStore#find_records",
    "access": "public",
    "description": "Find existing data records with a query.",
    "lineNumber": 485,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of DataRecordArray."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_collection_name",
        "description": "data collection name."
      },
      {
        "nullable": null,
        "types": [
          "DataQuery"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_query",
        "description": "data query."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of DataRecordArray."
    }
  },
  {
    "__docId__": 618,
    "kind": "method",
    "name": "find_all_records",
    "memberof": "js/datas/data_store.js~DataStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/data_store.js~DataStore#find_all_records",
    "access": "public",
    "description": "Find all existing data records.",
    "lineNumber": 513,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of DataRecordArray."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_collection_name",
        "description": "data collection name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of DataRecordArray."
    }
  },
  {
    "__docId__": 619,
    "kind": "file",
    "name": "js/datas/index.js",
    "content": "import DataStore from './data_store'\r\nimport DataAdapter from './data_adapter'\r\nimport DataCollection from './data_collection'\r\nimport DataModel from './data_model'\r\nimport DataQuery from './data_query'\r\nimport DataRecord from './data_record'\r\nimport DataRecordArray from './data_record_array'\r\n\r\nexport default { DataStore,DataAdapter,  DataCollection, DataModel, DataQuery, DataRecord, DataRecordArray }",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/datas/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 620,
    "kind": "file",
    "name": "js/datas/providers/jsonfile_record_provider.js",
    "content": "\r\n// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport lowdb from 'lowdb'\r\nimport FileAsync from 'lowdb/adapters/FileSync'\r\n\r\n// COMMON IMPORTS\r\nimport T              from '../../utils/types'\r\nimport RecordProvider from './record_provider'\r\nimport runtime        from '../../base/runtime'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\nconst context = 'common/datas/providers/jsonfile_record_provider'\r\n\r\n\r\n\r\n/**\r\n * Json File record provider class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class JsonFileRecordProvider extends RecordProvider\r\n{\r\n    /**\r\n     * Create a record provider instance\r\n     */\r\n\tconstructor(arg_settings)\r\n\t{\r\n\t\tsuper(arg_settings)\r\n\r\n\t\t// GET FILE NAME\r\n\t\tassert( T.isString(arg_settings.filename), context + ':bad settings.filename object')\r\n\t\t/**\r\n\t\t * Json file provider file name.\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis.filename = arg_settings.filename\r\n\r\n\t\t// GET MODEL NAME\r\n\t\tassert( T.isString(arg_settings.modelname), context + ':bad settings.modelname object')\r\n\t\t/**\r\n\t\t * Json file provider model name.\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis.modelname = arg_settings.modelname\r\n\r\n\t\t// GET PRIMARY KEY NAME\r\n\t\tassert( T.isString(arg_settings.pkname), context + ':bad settings.pkname object')\r\n\t\t/**\r\n\t\t * Json file provider primary key name.\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis.pkname = arg_settings.pkname\r\n\r\n\r\n\t\t// LOAD FILE DB\r\n\r\n\t\t/**\r\n\t\t * Json file provider low db instance.\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tthis.file_db = null\r\n\r\n\t\t/**\r\n\t\t * Json file provider is ready flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_ready = false\r\n\r\n\t\tif ( T.isString(this.filename) )\r\n\t\t{\r\n\t\t\tassert(runtime, context + ':bad runtime instance')\r\n\t\t\tconst json_full_path = runtime.get_absolute_resources_path(this.filename)\r\n\t\t\tassert( T.isString(json_full_path), context + ':constructor:bad file path string')\r\n\r\n\t\t\t// OPEN DATABASE\r\n\t\t\tconst db_settings = {\r\n\t\t\t\tautosave:true\r\n\t\t\t}\r\n\t\t\tthis.file_adapter = new FileAsync(json_full_path, db_settings)\r\n\t\t\tthis.file_db = lowdb(this.file_adapter)\r\n\r\n\t\t\tthis.is_ready = T.isFunction(this.file_db)\r\n\t\t}\r\n\t}\r\n    \r\n    \r\n    /**\r\n     * Build a query to fetch datas.\r\n     * @param {object|undefined} arg_query - optional query context\r\n     * @returns {Promise} datas record promise\r\n     */\r\n\tbuild_query(arg_query)\r\n\t{\r\n\t\t// logs.debug(context, 'build_query:enter')\r\n\t\tassert(this.is_ready, context + ':build_query:db not ready')\r\n\r\n\r\n\t\t// logs.debug(context, 'build_query:leave')\r\n\t\treturn arg_query\r\n\t}\r\n\r\n\r\n    /**\r\n     * Provide all datas records\r\n     * @param {object|undefined} arg_query - optional query context\r\n     * @returns {Promise} datas record promise\r\n     */\r\n\tfind_all_records(arg_query)\r\n\t{\r\n\t\t// logs.debug(context, 'find_all_records:enter')\r\n\t\tassert(this.is_ready, context + ':find_all_records:db not ready')\r\n\r\n\t\tconst query = this.build_query(arg_query)\r\n\r\n\t\t\t// EXECUTE QUERY\r\n\t\ttry{\r\n\t\t\tconst records = this.file_db(this.modelname).find(query)\r\n\t\t\tif (records)\r\n\t\t\t{\r\n\t\t\t\t// logs.debug(context, 'find_all_records:leave')\r\n\t\t\t\treturn Promise.resolve(records)\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(e)\r\n\t\t{\r\n\t\t\t//  console.log('authenticate user error', e)\r\n\t\t}\r\n\r\n\t\t// logs.debug(context, 'find_all_records:leave not found')\r\n\t\treturn Promise.resolve(null)\r\n\t}\r\n    \r\n    \r\n    /**\r\n     * Find a record by its id.\r\n     * @param {string|number} arg_id - record id\r\n     * @returns {Promise} - promise of found record or null\r\n     */\r\n\tfind_records_by_id(arg_id)\r\n\t{\r\n\t\t// logs.debug(context, 'find_record_by_id:enter')\r\n\t\tassert(this.is_ready, context + ':find_records_by_id:db not ready')\r\n\t\tassert( T.isString(arg_id) || T.isNumber(arg_id), context + ':find_record_by_id:bad id string or number')\r\n\r\n\t\tlet query = {}\r\n\t\tquery[this.pkname] = arg_id\r\n\t\tconst records_promise = this.find_record_by_values(query)\r\n\r\n\t\t// logs.debug(context, 'find_record_by_id:leave')\r\n\t\treturn records_promise\r\n\t}\r\n    \r\n    \r\n    /**\r\n     * Find a record with a set of values.\r\n     * @param {object} arg_values_map - values map\r\n     * @param {object|undefined} arg_query - optional query context\r\n     * @returns {Promise} - promise of found records or null value\r\n     */\r\n\tfind_records_by_values(arg_values_map, arg_query)\r\n\t{\r\n\t\t// logs.debug(context, 'find_records_by_values:enter')\r\n\t\tassert(this.is_ready, context + ':build_query:db not ready')\r\n\t\tassert( T.isObject(arg_values_map), context + ':find_record_by_values:bad values object')\r\n\r\n\t\t// UPDATE QUERY WITH VALUES\r\n\t\targ_query = T.isObject(arg_query) ? arg_query : {}\r\n\t\tObject.keys(arg_values_map).forEach(\r\n\t\t\t(value) => {\r\n\t\t\t\targ_query[value] = arg_values_map[value]\r\n\t\t\t}\r\n\t\t)\r\n\t\tconst query = this.build_query(arg_query)\r\n\r\n\t\t// EXECUTE QUERY\r\n\t\ttry{\r\n\t\t\tconst records = this.file_db(this.modelname).find(query)\r\n\t\t\tif (records)\r\n\t\t\t{\r\n\t\t\t\t// logs.debug(context, 'find_record_by_values:leave')\r\n\t\t\t\t// console.debug(context, 'find_record_by_values:leave')\r\n\t\t\t\treturn Promise.resolve(records)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconsole.error( this.file_db(this.modelname) )\r\n\t\t}\r\n\t\tcatch(e)\r\n\t\t{\r\n\t\t\t//  console.log('authenticate user error', e)\r\n\t\t}\r\n\r\n\t\t// logs.debug(context, 'find_record_by_values:leave not found')\r\n\t\t// console.debug(context, 'find_record_by_values:leave not found', arg_values_map)\r\n\t\treturn Promise.resolve(null)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/datas/providers/jsonfile_record_provider.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 621,
    "kind": "variable",
    "name": "context",
    "memberof": "js/datas/providers/jsonfile_record_provider.js",
    "static": true,
    "longname": "js/datas/providers/jsonfile_record_provider.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/datas/providers/jsonfile_record_provider.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 17,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 622,
    "kind": "class",
    "name": "JsonFileRecordProvider",
    "memberof": "js/datas/providers/jsonfile_record_provider.js",
    "static": true,
    "longname": "js/datas/providers/jsonfile_record_provider.js~JsonFileRecordProvider",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/datas/providers/jsonfile_record_provider.js",
    "importStyle": "JsonFileRecordProvider",
    "description": "Json File record provider class.",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/datas/providers/record_provider.js~RecordProvider"
    ]
  },
  {
    "__docId__": 623,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/datas/providers/jsonfile_record_provider.js~JsonFileRecordProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/providers/jsonfile_record_provider.js~JsonFileRecordProvider#constructor",
    "access": "public",
    "description": "Create a record provider instance",
    "lineNumber": 31
  },
  {
    "__docId__": 624,
    "kind": "member",
    "name": "filename",
    "memberof": "js/datas/providers/jsonfile_record_provider.js~JsonFileRecordProvider",
    "static": false,
    "longname": "js/datas/providers/jsonfile_record_provider.js~JsonFileRecordProvider#filename",
    "access": "public",
    "description": "Json file provider file name.",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 625,
    "kind": "member",
    "name": "modelname",
    "memberof": "js/datas/providers/jsonfile_record_provider.js~JsonFileRecordProvider",
    "static": false,
    "longname": "js/datas/providers/jsonfile_record_provider.js~JsonFileRecordProvider#modelname",
    "access": "public",
    "description": "Json file provider model name.",
    "lineNumber": 49,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 626,
    "kind": "member",
    "name": "pkname",
    "memberof": "js/datas/providers/jsonfile_record_provider.js~JsonFileRecordProvider",
    "static": false,
    "longname": "js/datas/providers/jsonfile_record_provider.js~JsonFileRecordProvider#pkname",
    "access": "public",
    "description": "Json file provider primary key name.",
    "lineNumber": 57,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 627,
    "kind": "member",
    "name": "file_db",
    "memberof": "js/datas/providers/jsonfile_record_provider.js~JsonFileRecordProvider",
    "static": false,
    "longname": "js/datas/providers/jsonfile_record_provider.js~JsonFileRecordProvider#file_db",
    "access": "public",
    "description": "Json file provider low db instance.",
    "lineNumber": 66,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 628,
    "kind": "member",
    "name": "is_ready",
    "memberof": "js/datas/providers/jsonfile_record_provider.js~JsonFileRecordProvider",
    "static": false,
    "longname": "js/datas/providers/jsonfile_record_provider.js~JsonFileRecordProvider#is_ready",
    "access": "public",
    "description": "Json file provider is ready flag.",
    "lineNumber": 72,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 629,
    "kind": "member",
    "name": "file_adapter",
    "memberof": "js/datas/providers/jsonfile_record_provider.js~JsonFileRecordProvider",
    "static": false,
    "longname": "js/datas/providers/jsonfile_record_provider.js~JsonFileRecordProvider#file_adapter",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 632,
    "kind": "method",
    "name": "build_query",
    "memberof": "js/datas/providers/jsonfile_record_provider.js~JsonFileRecordProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/providers/jsonfile_record_provider.js~JsonFileRecordProvider#build_query",
    "access": "public",
    "description": "Build a query to fetch datas.",
    "lineNumber": 97,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} datas record promise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_query",
        "description": "optional query context"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "datas record promise"
    }
  },
  {
    "__docId__": 633,
    "kind": "method",
    "name": "find_all_records",
    "memberof": "js/datas/providers/jsonfile_record_provider.js~JsonFileRecordProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/providers/jsonfile_record_provider.js~JsonFileRecordProvider#find_all_records",
    "access": "public",
    "description": "Provide all datas records",
    "lineNumber": 113,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} datas record promise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_query",
        "description": "optional query context"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "datas record promise"
    }
  },
  {
    "__docId__": 634,
    "kind": "method",
    "name": "find_records_by_id",
    "memberof": "js/datas/providers/jsonfile_record_provider.js~JsonFileRecordProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/providers/jsonfile_record_provider.js~JsonFileRecordProvider#find_records_by_id",
    "access": "public",
    "description": "Find a record by its id.",
    "lineNumber": 144,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of found record or null"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_id",
        "description": "record id"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of found record or null"
    }
  },
  {
    "__docId__": 635,
    "kind": "method",
    "name": "find_records_by_values",
    "memberof": "js/datas/providers/jsonfile_record_provider.js~JsonFileRecordProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/providers/jsonfile_record_provider.js~JsonFileRecordProvider#find_records_by_values",
    "access": "public",
    "description": "Find a record with a set of values.",
    "lineNumber": 165,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of found records or null value"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_values_map",
        "description": "values map"
      },
      {
        "nullable": null,
        "types": [
          "object",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_query",
        "description": "optional query context"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of found records or null value"
    }
  },
  {
    "__docId__": 636,
    "kind": "file",
    "name": "js/datas/providers/json_provider.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T                       from '../../utils/types'\r\nimport {is_browser, is_server} from '../../utils/is_browser'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\nconst context = 'common/datas/providers/provider'\r\n\r\n\r\n\r\n/**\r\n * Local file source.\r\n * @private\r\n */\r\nexport const SOURCE_LOCAL_FILE = 'local_file'\r\n\r\n/**\r\n * master node source.\r\n * @private\r\n */\r\nexport const SOURCE_MASTER = 'master'\r\n\r\n/**\r\n * Message bus source.\r\n * @private\r\n */\r\nexport const SOURCE_MSG_BUS = 'message_bus'\r\n\r\n/**\r\n * Remote url source.\r\n * @private\r\n */\r\nexport const SOURCE_REMOTE_URL = 'remote_url'\r\n\r\n/**\r\n * Sql database source.\r\n * @private\r\n */\r\nexport const SOURCE_SQL_DATABASE = 'sql_database'\r\n\r\n/**\r\n * NoSql database source.\r\n * @private\r\n */\r\nexport const SOURCE_NOSQL_DATABASE = 'nosql_database'\r\n\r\n/**\r\n * All sources.\r\n * @private\r\n */\r\nconst SOURCES = [SOURCE_LOCAL_FILE, SOURCE_MASTER, SOURCE_MSG_BUS, SOURCE_REMOTE_URL, SOURCE_SQL_DATABASE, SOURCE_NOSQL_DATABASE]\r\n\r\n\r\n\r\n// GET RUNTIME\r\n/**\r\n * Runtime source file on server.\r\n * @private\r\n */\r\nconst server_runtime_file = '../../base/runtime'\r\n\r\n/**\r\n * Runtime instance.\r\n * @private\r\n */\r\nlet runtime = undefined\r\n\r\nif (is_server())\r\n{\r\n\truntime = require(server_runtime_file).default\r\n}\r\n\r\nelse if (is_browser())\r\n{\r\n\truntime = window.devapt().runtime()\r\n}\r\n\r\n\r\n\r\n/**\r\n * Json providier class.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n */\r\nexport default class JsonProvider\r\n{\r\n    /**\r\n     * Create a Provider instance.\r\n\t * \r\n\t * @param {object} arg_settings - provider config.\r\n\t * \r\n\t * @returns {nothing}\r\n     */\r\n\tconstructor(arg_settings)\r\n    {\r\n\t\t// CHECK SETTINGS\r\n\t\tassert( T.isObject(arg_settings), context + ':bad settings object')\r\n\t\t/**\r\n\t\t * Json provider settings.\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tthis.$settings = arg_settings.toJS()\r\n\r\n\t\t// GET PROVIDER SOURCE\r\n\t\tassert( T.isString(this.$settings.source), context + ':bad settings.source string')\r\n\t\t/**\r\n\t\t * Json provider source.\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis.source = this.$settings.source\r\n\t\tassert( SOURCES.indexOf(this.source) > -1, context + ':bad source string, should be part of [' + SOURCES + ']')\r\n\t}\r\n\r\n    \r\n    \r\n    /**\r\n     * Provide JSON datas.\r\n\t * \r\n     * @returns {object} JSON datas Promise.\r\n     */\r\n\tprovide_json()\r\n\t{\r\n\t\tconst self = this\r\n\t\t// logs.debug(context, 'enter')\r\n\r\n\t\tlet promise = new Promise(\r\n\t\t\tfunction(resolve, reject)\r\n\t\t\t{\r\n\t\t\t\tself.provide_json_self(resolve, reject)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\t// logs.debug(context, 'leave')\r\n\t\treturn promise\r\n\t}\r\n\r\n    \r\n    \r\n    /**\r\n     * Provide JSON datas inside a promise.\r\n\t * \r\n     * @param {function} resolve - a promise should be resolved.\r\n     * @param {function} reject - a promise should be rejected.\r\n\t * \r\n     * @returns {nothing}\r\n     */\r\n\tprovide_json_self(resolve, reject)\r\n\t{\r\n\t\t// logs.debug(context + ':provide_json_self', this.source)\r\n\r\n\t\tswitch(this.source)\r\n\t\t{\r\n\t\t\tcase SOURCE_LOCAL_FILE: {\r\n\t\t\t\tassert( T.isString(this.$settings.relative_path), context + ':bad settings.relative_path string')\r\n\r\n\t\t\t\tconst file_path = this.$settings.relative_path\r\n\t\t\t\t// logs.debug('file_path', file_path)\r\n\r\n\t\t\t\tif ( T.isString(file_path) )\r\n\t\t\t\t{\r\n\t\t\t\t\t// logs.debug('Node is master: load settings file', file_path)\r\n\r\n\t\t\t\t\tconst absolute_file_path = runtime.context.get_absolute_path(file_path)\r\n\t\t\t\t\tconst json = require(absolute_file_path)\r\n\r\n\t\t\t\t\t// console.log(context + '.json', json)\r\n\r\n\t\t\t\t\t// logs.debug(context, 'leave')\r\n\t\t\t\t\tresolve(json)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// logs.debug('file_path', file_path)\r\n\t\t\t\t// logs.error(context + ':bad file path string')\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase SOURCE_MASTER: {\r\n\t\t\t\tconsole.log(context + ':provide_json_self:SOURCE_MASTER begin')\r\n\t\t\t\tconst node = runtime.node\r\n\t\t\t\tconst master_name = node.master_name\r\n\t\t\t\tassert( T.isString(master_name), context + ':provide_json_self:bad master name string')\r\n\t\t\t\tconst delay = T.isNumber(this.$settings.delay) ? this.$settings.delay : 0\r\n\r\n\t\t\t\t// WAIT FOR BUS GATEWAY IS STARTED AND CONNECTED TO THE LOCAL BUS\r\n\t\t\t\tconst do_cb = () => {\r\n\t\t\t\t\tnode.on_registering_callback = resolve\r\n\t\t\t\t\tnode.register_to_master()\r\n\t\t\t\t\tconsole.log(context + ':provide_json_self:SOURCE_MASTER end')\r\n\t\t\t\t}\r\n\t\t\t\tsetTimeout(do_cb, delay)\r\n\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase SOURCE_MSG_BUS: {\r\n\t\t\t\t// TODO\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\r\n\t\t\tcase SOURCE_REMOTE_URL: {\r\n\t\t\t\t// TODO\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\r\n\t\t\tcase SOURCE_SQL_DATABASE: {\r\n\t\t\t\t// TODO\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\r\n\t\t\tcase SOURCE_NOSQL_DATABASE: {\r\n\t\t\t\t// TODO\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\r\n\t\t\tdefault:{\r\n\t\t\t\tconsole.error(context + ':bad provider source string [' + this.source + ']')\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treject('bad source')\r\n\t\t// logs.debug(context + ':leave')\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/datas/providers/json_provider.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 637,
    "kind": "variable",
    "name": "context",
    "memberof": "js/datas/providers/json_provider.js",
    "static": true,
    "longname": "js/datas/providers/json_provider.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/datas/providers/json_provider.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 13,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 638,
    "kind": "variable",
    "name": "SOURCE_LOCAL_FILE",
    "memberof": "js/datas/providers/json_provider.js",
    "static": true,
    "longname": "js/datas/providers/json_provider.js~SOURCE_LOCAL_FILE",
    "access": "private",
    "export": true,
    "importPath": "devapt-core-common/js/datas/providers/json_provider.js",
    "importStyle": "{SOURCE_LOCAL_FILE}",
    "description": "Local file source.",
    "lineNumber": 21,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 639,
    "kind": "variable",
    "name": "SOURCE_MASTER",
    "memberof": "js/datas/providers/json_provider.js",
    "static": true,
    "longname": "js/datas/providers/json_provider.js~SOURCE_MASTER",
    "access": "private",
    "export": true,
    "importPath": "devapt-core-common/js/datas/providers/json_provider.js",
    "importStyle": "{SOURCE_MASTER}",
    "description": "master node source.",
    "lineNumber": 27,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 640,
    "kind": "variable",
    "name": "SOURCE_MSG_BUS",
    "memberof": "js/datas/providers/json_provider.js",
    "static": true,
    "longname": "js/datas/providers/json_provider.js~SOURCE_MSG_BUS",
    "access": "private",
    "export": true,
    "importPath": "devapt-core-common/js/datas/providers/json_provider.js",
    "importStyle": "{SOURCE_MSG_BUS}",
    "description": "Message bus source.",
    "lineNumber": 33,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 641,
    "kind": "variable",
    "name": "SOURCE_REMOTE_URL",
    "memberof": "js/datas/providers/json_provider.js",
    "static": true,
    "longname": "js/datas/providers/json_provider.js~SOURCE_REMOTE_URL",
    "access": "private",
    "export": true,
    "importPath": "devapt-core-common/js/datas/providers/json_provider.js",
    "importStyle": "{SOURCE_REMOTE_URL}",
    "description": "Remote url source.",
    "lineNumber": 39,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 642,
    "kind": "variable",
    "name": "SOURCE_SQL_DATABASE",
    "memberof": "js/datas/providers/json_provider.js",
    "static": true,
    "longname": "js/datas/providers/json_provider.js~SOURCE_SQL_DATABASE",
    "access": "private",
    "export": true,
    "importPath": "devapt-core-common/js/datas/providers/json_provider.js",
    "importStyle": "{SOURCE_SQL_DATABASE}",
    "description": "Sql database source.",
    "lineNumber": 45,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 643,
    "kind": "variable",
    "name": "SOURCE_NOSQL_DATABASE",
    "memberof": "js/datas/providers/json_provider.js",
    "static": true,
    "longname": "js/datas/providers/json_provider.js~SOURCE_NOSQL_DATABASE",
    "access": "private",
    "export": true,
    "importPath": "devapt-core-common/js/datas/providers/json_provider.js",
    "importStyle": "{SOURCE_NOSQL_DATABASE}",
    "description": "NoSql database source.",
    "lineNumber": 51,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 644,
    "kind": "variable",
    "name": "SOURCES",
    "memberof": "js/datas/providers/json_provider.js",
    "static": true,
    "longname": "js/datas/providers/json_provider.js~SOURCES",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/datas/providers/json_provider.js",
    "importStyle": null,
    "description": "All sources.",
    "lineNumber": 57,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 645,
    "kind": "variable",
    "name": "server_runtime_file",
    "memberof": "js/datas/providers/json_provider.js",
    "static": true,
    "longname": "js/datas/providers/json_provider.js~server_runtime_file",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/datas/providers/json_provider.js",
    "importStyle": null,
    "description": "Runtime source file on server.",
    "lineNumber": 66,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 646,
    "kind": "variable",
    "name": "runtime",
    "memberof": "js/datas/providers/json_provider.js",
    "static": true,
    "longname": "js/datas/providers/json_provider.js~runtime",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/datas/providers/json_provider.js",
    "importStyle": null,
    "description": "Runtime instance.",
    "lineNumber": 72,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 647,
    "kind": "class",
    "name": "JsonProvider",
    "memberof": "js/datas/providers/json_provider.js",
    "static": true,
    "longname": "js/datas/providers/json_provider.js~JsonProvider",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/datas/providers/json_provider.js",
    "importStyle": "JsonProvider",
    "description": "Json providier class.",
    "lineNumber": 93,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 648,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/datas/providers/json_provider.js~JsonProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/providers/json_provider.js~JsonProvider#constructor",
    "access": "public",
    "description": "Create a Provider instance.",
    "lineNumber": 102,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "provider config."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 649,
    "kind": "member",
    "name": "$settings",
    "memberof": "js/datas/providers/json_provider.js~JsonProvider",
    "static": false,
    "longname": "js/datas/providers/json_provider.js~JsonProvider#$settings",
    "access": "public",
    "description": "Json provider settings.",
    "lineNumber": 110,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 650,
    "kind": "member",
    "name": "source",
    "memberof": "js/datas/providers/json_provider.js~JsonProvider",
    "static": false,
    "longname": "js/datas/providers/json_provider.js~JsonProvider#source",
    "access": "public",
    "description": "Json provider source.",
    "lineNumber": 118,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 651,
    "kind": "method",
    "name": "provide_json",
    "memberof": "js/datas/providers/json_provider.js~JsonProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/providers/json_provider.js~JsonProvider#provide_json",
    "access": "public",
    "description": "Provide JSON datas.",
    "lineNumber": 129,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} JSON datas Promise."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "JSON datas Promise."
    },
    "params": []
  },
  {
    "__docId__": 652,
    "kind": "method",
    "name": "provide_json_self",
    "memberof": "js/datas/providers/json_provider.js~JsonProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/providers/json_provider.js~JsonProvider#provide_json_self",
    "access": "public",
    "description": "Provide JSON datas inside a promise.",
    "lineNumber": 155,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "resolve",
        "description": "a promise should be resolved."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "reject",
        "description": "a promise should be rejected."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 653,
    "kind": "file",
    "name": "js/datas/providers/record_provider.js",
    "content": "\r\n// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../../utils/types'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\nconst context = 'common/datas/providers/record_provider'\r\n\r\n\r\n\r\n/**\r\n * Record provider base class.\r\n * @abstract\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class RecordProvider\r\n{\r\n    /**\r\n     * Create a record provider instance\r\n     */\r\n\tconstructor(arg_settings)\r\n\t{\r\n\t\tassert( T.isObject(arg_settings), context + ':bad settings object')\r\n\t\t/**\r\n\t\t * Record provider settings.\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tthis.$settings = T.isFunction(arg_settings.toJS) ? arg_settings.toJS() : arg_settings\r\n\t}\r\n    \r\n    \r\n    /**\r\n     * Build a query to fetch datas.\r\n     * @param {object|undefined} arg_query - optional query context\r\n     * @returns {Promise} datas record promise\r\n     */\r\n\tbuild_query(arg_query)\r\n\t{\r\n\t\t// logs.debug(context, 'build_query:not implemented')\r\n\r\n\t\treturn arg_query\r\n\t}\r\n    \r\n    \r\n    /**\r\n     * Provide all datas records\r\n     * @abstract\r\n     * @param {object|undefined} arg_query - optional query context\r\n     * @returns {Promise} datas record promise\r\n     */\r\n\tfind_all_records(/*arg_query*/)\r\n\t{\r\n\t\t// logs.debug(context, 'find_all_records:not implemented')\r\n\t\treturn Promise.resolve(null)\r\n\t}\r\n    \r\n    \r\n    /**\r\n     * Find a record by its id.\r\n     * @abstract\r\n     * @param {string|number} arg_id - record id\r\n     * @param {object|undefined} arg_query - optional query context\r\n     * @returns {Promise} - promise of found record or null\r\n     */\r\n\tfind_records_by_id(arg_id, arg_query)\r\n\t{\r\n\t\t// logs.debug(context, 'find_records_by_id:not implemented')\r\n\t\tassert( T.isString(arg_id) || T.isNumber(arg_id), context + ':find_records_by_id:bad id string or number')\r\n\r\n\t\t// TO IMPLEMENT IN SUBCLASSES\r\n\r\n\t\treturn Promise.resolve(null)\r\n\t}\r\n    \r\n    \r\n    /**\r\n     * Find a record with a set of values.\r\n     * @abstract\r\n     * @param {object} arg_values_map - values map\r\n     * @param {object|undefined} arg_query - optional query context\r\n     * @returns {Promise} - promise of found record or null\r\n     */\r\n\tfind_records_by_values(arg_values_map/*, arg_query*/)\r\n\t{\r\n\t\t// logs.debug(context, 'find_records_by_values:not implemented')\r\n\t\tassert( T.isObject(arg_values_map), context + ':find_records_by_id:bad values object')\r\n\r\n\t\t// TO IMPLEMENT IN SUBCLASSES\r\n\r\n\t\treturn Promise.resolve(null)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/datas/providers/record_provider.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 654,
    "kind": "variable",
    "name": "context",
    "memberof": "js/datas/providers/record_provider.js",
    "static": true,
    "longname": "js/datas/providers/record_provider.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/datas/providers/record_provider.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 13,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 655,
    "kind": "class",
    "name": "RecordProvider",
    "memberof": "js/datas/providers/record_provider.js",
    "static": true,
    "longname": "js/datas/providers/record_provider.js~RecordProvider",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/datas/providers/record_provider.js",
    "importStyle": "RecordProvider",
    "description": "Record provider base class.",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "abstract": true,
    "interface": false
  },
  {
    "__docId__": 656,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/datas/providers/record_provider.js~RecordProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/providers/record_provider.js~RecordProvider#constructor",
    "access": "public",
    "description": "Create a record provider instance",
    "lineNumber": 28
  },
  {
    "__docId__": 657,
    "kind": "member",
    "name": "$settings",
    "memberof": "js/datas/providers/record_provider.js~RecordProvider",
    "static": false,
    "longname": "js/datas/providers/record_provider.js~RecordProvider#$settings",
    "access": "public",
    "description": "Record provider settings.",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 658,
    "kind": "method",
    "name": "build_query",
    "memberof": "js/datas/providers/record_provider.js~RecordProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/providers/record_provider.js~RecordProvider#build_query",
    "access": "public",
    "description": "Build a query to fetch datas.",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} datas record promise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_query",
        "description": "optional query context"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "datas record promise"
    }
  },
  {
    "__docId__": 659,
    "kind": "method",
    "name": "find_all_records",
    "memberof": "js/datas/providers/record_provider.js~RecordProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/providers/record_provider.js~RecordProvider#find_all_records",
    "access": "public",
    "description": "Provide all datas records",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} datas record promise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_query",
        "description": "optional query context"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "datas record promise"
    },
    "abstract": true
  },
  {
    "__docId__": 660,
    "kind": "method",
    "name": "find_records_by_id",
    "memberof": "js/datas/providers/record_provider.js~RecordProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/providers/record_provider.js~RecordProvider#find_records_by_id",
    "access": "public",
    "description": "Find a record by its id.",
    "lineNumber": 72,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of found record or null"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_id",
        "description": "record id"
      },
      {
        "nullable": null,
        "types": [
          "object",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_query",
        "description": "optional query context"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of found record or null"
    },
    "abstract": true
  },
  {
    "__docId__": 661,
    "kind": "method",
    "name": "find_records_by_values",
    "memberof": "js/datas/providers/record_provider.js~RecordProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/providers/record_provider.js~RecordProvider#find_records_by_values",
    "access": "public",
    "description": "Find a record with a set of values.",
    "lineNumber": 90,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of found record or null"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_values_map",
        "description": "values map"
      },
      {
        "nullable": null,
        "types": [
          "object",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_query",
        "description": "optional query context"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of found record or null"
    },
    "abstract": true
  },
  {
    "__docId__": 662,
    "kind": "file",
    "name": "js/datas/providers/sequelize_record_provider.js",
    "content": "\r\n// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T              from '../../utils/types'\r\nimport RecordProvider from './record_provider'\r\n\r\n// import runtime from '../../base/runtime'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n */\r\nconst context = 'common/datas/providers/sequelize_record_provider'\r\n\r\n\r\n\r\n/**\r\n * Sequelize record provider class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class SequelizeRecordProvider extends RecordProvider\r\n{\r\n    /**\r\n     * Create a record provider instance\r\n     */\r\n\tconstructor(arg_settings)\r\n\t{\r\n\t\tsuper(arg_settings)\r\n\r\n\t\tassert( T.isObject(arg_settings.model), context + ':bad settings.model object')\r\n\t\t/**\r\n\t\t * Sequelize record provider model instance.\r\n\t\t * @type {object}\r\n\t\t */\r\n\t\tthis.sequelize_model = arg_settings.model\r\n\r\n\t\t/**\r\n\t\t * Sequelize record provider fields array.\r\n\t\t * @type {array}\r\n\t\t */\r\n\t\tthis.fields_list = undefined\r\n\t\tif ( T.isArray(arg_settings.fields_list) )\r\n\t\t{\r\n\t\t\tthis.fields_list = arg_settings.fields_list\r\n\t\t}\r\n\t}\r\n    \r\n    \r\n    /**\r\n     * Build a query to fetch datas.\r\n     * @param {object|undefined} arg_query - optional query context\r\n     * @returns {Promise} datas record promise\r\n     */\r\n\tbuild_query(arg_query)\r\n\t{\r\n\t\t// logs.debug(context, 'build_query:enter')\r\n\r\n\t\tlet query = {}\r\n\r\n\t\t// SET FIELDS LIST\r\n\t\tif ( T.isObject(arg_query) && T.isArray(arg_query.fields_list) )\r\n\t\t{\r\n\t\t\tquery.attributes = arg_query.fields_list\r\n\t\t}\r\n\t\telse if (this.fields_list)\r\n\t\t{\r\n\t\t\tquery.attributes = this.fields_list\r\n\t\t}\r\n\r\n\t\t// logs.debug(context, 'build_query:leave')\r\n\t\treturn query\r\n\t}\r\n    \r\n    \r\n    /**\r\n     * Provide all datas records\r\n     * @param {object|undefined} arg_query - optional query context\r\n     * @returns {Promise} datas record promise\r\n     */\r\n\tfind_all_records(arg_query)\r\n\t{\r\n\t\t// logs.debug(context, 'find_all_records:enter')\r\n\r\n\t\tconst query = this.build_query(arg_query)\r\n\t\tconst records_promise = this.sequelize_model.findAll(query)\r\n\r\n\t\t// logs.debug(context, 'find_all_records:leave')\r\n\t\treturn records_promise\r\n\t}\r\n    \r\n    \r\n    /**\r\n     * Find a record by its id.\r\n     * @param {string|number} arg_id - record id\r\n     * @returns {Promise} - promise of found record or null\r\n     */\r\n\tfind_records_by_id(arg_id)\r\n\t{\r\n\t\t// logs.debug(context, 'find_record_by_id:enter')\r\n\t\tassert( T.isString(arg_id) || T.isNumber(arg_id), context + ':find_record_by_id:bad id string or number')\r\n\r\n\t\tconst records_promise = this.sequelize_model.findById()\r\n\r\n\t\t// logs.debug(context, 'find_record_by_id:leave')\r\n\t\treturn records_promise\r\n\t}\r\n    \r\n    \r\n    /**\r\n     * Find a record with a set of values.\r\n     * @param {object} arg_values_map - values map\r\n     * @param {object|undefined} arg_query - optional query context\r\n     * @returns {Promise} - promise of found records or null value\r\n     */\r\n\tfind_records_by_values(arg_values_map, arg_query)\r\n\t{\r\n\t\t// logs.debug(context, 'find_record_by_values:enter')\r\n\t\tassert( T.isObject(arg_values_map), context + ':find_record_by_values:bad values object')\r\n\r\n\t\t// UPDATE QUERY WITH VALUES\r\n\t\targ_query = T.isObject(arg_query) ? arg_query : {}\r\n\t\targ_query.where = T.isObject(arg_query.where) ? arg_query.where : {}\r\n\t\tObject.keys(arg_values_map).forEach(\r\n\t\t\t(value) => {\r\n\t\t\t\targ_query.where[value] = arg_values_map[value]\r\n\t\t\t}\r\n\t\t)\r\n\t\tconst query = this.build_query(arg_query)\r\n\t\tconst records_promise = this.sequelize_model.findAll(query)\r\n\r\n\t\t// logs.debug(context, 'find_record_by_values:leave')\r\n\t\treturn records_promise\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/datas/providers/sequelize_record_provider.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 663,
    "kind": "variable",
    "name": "context",
    "memberof": "js/datas/providers/sequelize_record_provider.js",
    "static": true,
    "longname": "js/datas/providers/sequelize_record_provider.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/datas/providers/sequelize_record_provider.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 16,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 664,
    "kind": "class",
    "name": "SequelizeRecordProvider",
    "memberof": "js/datas/providers/sequelize_record_provider.js",
    "static": true,
    "longname": "js/datas/providers/sequelize_record_provider.js~SequelizeRecordProvider",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/datas/providers/sequelize_record_provider.js",
    "importStyle": "SequelizeRecordProvider",
    "description": "Sequelize record provider class.",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/datas/providers/record_provider.js~RecordProvider"
    ]
  },
  {
    "__docId__": 665,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/datas/providers/sequelize_record_provider.js~SequelizeRecordProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/providers/sequelize_record_provider.js~SequelizeRecordProvider#constructor",
    "access": "public",
    "description": "Create a record provider instance",
    "lineNumber": 30
  },
  {
    "__docId__": 666,
    "kind": "member",
    "name": "sequelize_model",
    "memberof": "js/datas/providers/sequelize_record_provider.js~SequelizeRecordProvider",
    "static": false,
    "longname": "js/datas/providers/sequelize_record_provider.js~SequelizeRecordProvider#sequelize_model",
    "access": "public",
    "description": "Sequelize record provider model instance.",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 667,
    "kind": "member",
    "name": "fields_list",
    "memberof": "js/datas/providers/sequelize_record_provider.js~SequelizeRecordProvider",
    "static": false,
    "longname": "js/datas/providers/sequelize_record_provider.js~SequelizeRecordProvider#fields_list",
    "access": "public",
    "description": "Sequelize record provider fields array.",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 669,
    "kind": "method",
    "name": "build_query",
    "memberof": "js/datas/providers/sequelize_record_provider.js~SequelizeRecordProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/providers/sequelize_record_provider.js~SequelizeRecordProvider#build_query",
    "access": "public",
    "description": "Build a query to fetch datas.",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} datas record promise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_query",
        "description": "optional query context"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "datas record promise"
    }
  },
  {
    "__docId__": 670,
    "kind": "method",
    "name": "find_all_records",
    "memberof": "js/datas/providers/sequelize_record_provider.js~SequelizeRecordProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/providers/sequelize_record_provider.js~SequelizeRecordProvider#find_all_records",
    "access": "public",
    "description": "Provide all datas records",
    "lineNumber": 84,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} datas record promise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_query",
        "description": "optional query context"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "datas record promise"
    }
  },
  {
    "__docId__": 671,
    "kind": "method",
    "name": "find_records_by_id",
    "memberof": "js/datas/providers/sequelize_record_provider.js~SequelizeRecordProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/providers/sequelize_record_provider.js~SequelizeRecordProvider#find_records_by_id",
    "access": "public",
    "description": "Find a record by its id.",
    "lineNumber": 101,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of found record or null"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_id",
        "description": "record id"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of found record or null"
    }
  },
  {
    "__docId__": 672,
    "kind": "method",
    "name": "find_records_by_values",
    "memberof": "js/datas/providers/sequelize_record_provider.js~SequelizeRecordProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/providers/sequelize_record_provider.js~SequelizeRecordProvider#find_records_by_values",
    "access": "public",
    "description": "Find a record with a set of values.",
    "lineNumber": 119,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of found records or null value"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_values_map",
        "description": "values map"
      },
      {
        "nullable": null,
        "types": [
          "object",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_query",
        "description": "optional query context"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of found records or null value"
    }
  },
  {
    "__docId__": 673,
    "kind": "file",
    "name": "js/datas/todo/data_query.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n// import {Map} from 'immutable'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\n\r\nlet context = 'common/data/data_record'\r\n\r\n\r\n\r\n/**\r\n * @file DataRecord class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class DataQuery\r\n{\r\n\t/**\r\n\t * Data record class, contains one collection item attributes.\r\n\t * \r\n\t * \tAPI:\r\n\t * \t\t->constructor(arg_model)\r\n\t * \r\n\t * \t\t->get_model():DataModel - get record model.\r\n\t * \t\t->hash():string - get query hash string.\r\n\t * \r\n\t * \t\t->set_fields(arg_fields_names:array):nothing - set query fields.\r\n\t * \t\t->get_fields():array - get query fields names.\r\n\t * \r\n\t * \t\t->set_limit(arg_offset:integer, arg_length:integer):nothing - set query limit with offset and length.\r\n\t * \t\t->set_range(arg_first:integer, arg_last:integer):nothing - set query limit with first and last index.\r\n\t * \t\t->get_limit():object - get query limit as { offset:..., length:..., first:..., last:...}\r\n\t * \t\t->set_page(arg_page_size, arg_page_index):nothing - set query limit with a page index.\r\n\t * \t\t->get_page(arg_page_size):integer - get query page.\r\n\t * \r\n\t * \t\t->set_where(arg_where:object):nothing - set query where clause.\r\n\t * \t\t->get_where():object - get query where clause.\r\n\t * \t\t->and():this\r\n\t * \t\t->or():this\r\n\t * \t\t->not():this\r\n\t * \t\t->field(arg_field_name):this\r\n\t * \t\t->lt():this\r\n\t * \t\t->gt():this\r\n\t * \t\t->lte():this\r\n\t * \t\t->gte():this\r\n\t * \t\t->equal():this\r\n\t * \t\t->notequal():this\r\n\t * \t\t->like():this\r\n\t * \t\t->value(arg_string):this\r\n\t * \r\n\t * \t\t->set_orderby(arg_orderby:array):nothing - set query orderby clause.\r\n\t * \t\t->get_orderby():array - get query orderby clause.\r\n\t * \r\n\t * \t\t->set_groupby(arg_groupby:array):nothing - set query groupby clause.\r\n\t * \t\t->get_groupby():array - get query groupby clause.\r\n\t * \r\n\t * @param {DataModel} arg_model - data model: contains schema.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_model)\r\n\t{\r\n\t\tassert( T.isObject(arg_model) && arg_model.is_data_model, context + ':constructor:bad model object')\r\n\r\n\t\tthis.is_data_query = true\r\n\r\n\t\tthis._model = arg_model\r\n\t\tthis._hash = undefined\r\n\t\tthis._hash_is_dirty = true\r\n\r\n\t\tthis._fields = []\r\n\t\tthis._limit = { offset:0, length:1000, first:0, last:999 }\r\n\t\tthis._where = {}\r\n\t\tthis._where_cursor = undefined\r\n\t\tthis._orderby = []\r\n\t\tthis._groupby = []\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Emit on event.\r\n\t * @private\r\n\t * \r\n\t * @param {string} arg_event - event name.\r\n\t * @param {any} arg_datas - event datas (optional, default:undefined).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t/* eslint no-unused-vars: \"off\" */\r\n\t_emit(arg_event, arg_datas=undefined) // TODO\r\n\t{\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get record model.\r\n\t * \r\n\t * @returns {DataModel}\r\n\t */\r\n\tget_model()\r\n\t{\r\n\t\treturn this._model\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Calculate query hash string.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\t_calculate_hash()\r\n\t{\r\n\t\tconst model = this._model.get_name()\r\n\t\tconst fields = this.fields.joins(',')\r\n\t\tconst limit = this._limit.offset + ',' + this._limit.length\r\n\t\tconst where = this._where.hash// TODO\r\n\t\tconst groupby = this._groupby.hash // TODO\r\n\t\tconst orderby = this._orderby.hash // TODO\r\n\t\t\r\n\t\tthis._hash = 'QUERY[' + model + ':' + fields + ':' + limit + ':' + where + ':' + groupby + ':' + orderby + ']'\r\n\t\tthis._hash_is_dirty = false\r\n\r\n\t\treturn this._hash\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get hash string.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\thash()\r\n\t{\r\n\t\treturn this._hash_is_dirty ? this._calculate_hash() : this._hash\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Set query fields.\r\n\t * \r\n\t * @param {array} arg_fields_names - query fields names\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tset_fields(arg_fields_names)\r\n\t{\r\n\t\tassert( T.isArray(arg_fields_names), context + ':set_fields:bad fields array')\r\n\t\targ_fields_names.forEach(\r\n\t\t\t(field_name, index)=>{\r\n\t\t\t\tassert( T.isString(field_name), context + ':set_fields:bad field string at [' + index + '] for [' + field_name + ']')\r\n\t\t\t\tassert( this._model.check_field_name(field_name), context + ':set_fields:bad field name at [' + index + '] for [' + field_name + ']')\r\n\t\t\t}\r\n\t\t)\r\n\t\tthis._fields = arg_fields_names\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get query fields.\r\n\t * \r\n\t * @returns {array}\r\n\t */\r\n\tget_fields()\r\n\t{\r\n\t\treturn this._fields\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get query limit as { offset:..., length:..., first:..., last:...}.\r\n\t * \r\n\t * @returns {object}\r\n\t */\r\n\tget_limit()\r\n\t{\r\n\t\treturn this._limit\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Set query limit with offset and count.\r\n\t * \r\n\t * @param {integer} arg_offset - query limit offset.\r\n\t * @param {integer} arg_length - query limit length.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tset_limit(arg_offset, arg_length)\r\n\t{\r\n\t\tassert( T.isNumber(arg_offset) && arg_offset >= 0, context + ':set_limit:bad offset number [' + arg_offset + ']')\r\n\t\tassert( T.isNumber(arg_length) && arg_length > 0, context + ':set_limit:bad length number [' + arg_length + ']')\r\n\r\n\t\tthis._limit = {\r\n\t\t\toffset:arg_offset,\r\n\t\t\tlength:arg_length,\r\n\t\t\tfirst: arg_offset,\r\n\t\t\tlast: arg_offset + arg_offset - 1,\r\n\t\t\thash:'LIMIT[' + this._limit.offset + ':' + this._limit.length + ']'\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Set query limit with first and last indices.\r\n\t * \r\n\t * @param {integer} arg_first - query limit first index.\r\n\t * @param {integer} arg_last - query limit last index.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tset_range(arg_first, arg_last)\r\n\t{\r\n\t\tassert( T.isNumber(arg_first) && arg_first >= 0, context + ':set_limit:bad first index number [' + arg_first + ']')\r\n\t\tassert( T.isNumber(arg_last) && arg_last > 0 && arg_last >= arg_first, context + ':set_limit:bad last index number [' + arg_last + ']')\r\n\r\n\t\tthis._limit = {\r\n\t\t\toffset:arg_first,\r\n\t\t\tlength:arg_last - arg_first + 1,\r\n\t\t\tfirst: arg_first,\r\n\t\t\tlast: arg_last,\r\n\t\t\thash:'LIMIT[' + this._limit.offset + ':' + this._limit.length + ']'\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Set query limit with page size and page index.\r\n\t * \r\n\t * @param {integer} arg_page_size - query page size.\r\n\t * @param {integer} arg_page_index - query page index.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tset_page(arg_page_size, arg_page_index)\r\n\t{\r\n\t\tassert( T.isNumber(arg_page_size) && arg_page_size > 0, context + ':set_limit:bad page size number [' + arg_page_size + ']')\r\n\t\tassert( T.isNumber(arg_page_index) && arg_page_index >= 0, context + ':set_limit:bad page index number [' + arg_page_index + ']')\r\n\r\n\t\tthis._limit = {\r\n\t\t\toffset:arg_page_size * (arg_page_index == 0 ? 0 : (arg_page_index - 1) ),\r\n\t\t\tlength:arg_page_size,\r\n\t\t\tfirst: arg_page_size * (arg_page_index == 0 ? 0 : (arg_page_index - 1) ),\r\n\t\t\tlast: arg_page_size * arg_page_index,\r\n\t\t\thash:'LIMIT[' + this._limit.offset + ':' + this._limit.length + ']'\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get query limit page index.\r\n\t * \r\n\t * @param {integer} arg_page_size - query page size.\r\n\t * \r\n\t * @returns {integer}\r\n\t */\r\n\tget_page(arg_page_size)\r\n\t{\r\n\t\tassert( T.isNumber(arg_page_size) && arg_page_size > 0, context + ':set_limit:bad page size number [' + arg_page_size + ']')\r\n\t\t\r\n\t\tconst size = this._limit.offset + this._limit.length\r\n\t\tconst rest = size % arg_page_size\r\n\t\tconst pages = ( size - rest ) / arg_page_size\r\n\t\treturn pages + (rest > 0 ? 1 : 0)\r\n\t}\r\n\t\r\n}\r\n/*\r\n\r\n\t * \t\t->set_where(arg_where:object):nothing - set query where clause.\r\n\t * \t\t->get_where():object - get query where clause.\r\n\t * \t\t->and():this\r\n\t * \t\t->or():this\r\n\t * \t\t->not():this\r\n\t * \t\t->field(arg_field_name):this\r\n\t * \t\t->lt():this\r\n\t * \t\t->gt():this\r\n\t * \t\t->lte():this\r\n\t * \t\t->gte():this\r\n\t * \t\t->equal():this\r\n\t * \t\t->notequal():this\r\n\t * \t\t->like():this\r\n\t * \t\t->value(arg_string):this\r\n\t * \r\n\t * \t\t->set_orderby(arg_orderby:array):nothing - set query orderby clause.\r\n\t * \t\t->get_orderby():array - get query orderby clause.\r\n\t * \r\n\t * \t\t->set_groupby(arg_groupby:array):nothing - set query groupby clause.\r\n\t * \t\t->get_groupby():array - get query groupby clause.\r\n\r\n\r\n\t * \t\t->set_credentials(arg_crentials:object) - set credentials to use with some adapters.\r\n\t * \t\t->get_credentials():object - get credentials to use with some adapters.\r\n\r\n\r\nQuery modifiers include filters:\r\n\r\nwhere\r\nlimit\r\nskip\r\nsort\r\nselect\r\ndistinct\r\nBoolean logic:\r\n\r\nand\r\nor\r\nnot\r\nAs well as groupBy and the aggregators:\r\n\r\ncount\r\nsum\r\nmin\r\nmax\r\naverage\r\nIN queries: Adapters which implement where should recognize a list of values (e.g. name: ['Gandalf', 'Merlin']) as an IN query. In other words, if name is either of those values, a match occured.\r\n\r\nSub-attribute modifiers: You are also responsible for sub-attribute modifiers, (e.g. { age: { '>=' : 65 } }) with the notable exception of contains, startsWith, and endsWith, since support for those modifiers can be derived programatically by leveraging your definition of like.\r\n\r\nlike (SQL-style, with % wildcards)\r\n'>' (you can also opt to use the more verbose .greaterThan(), etc.)\r\n'<'\r\n'>='\r\n'<='\r\nTODO: range queries (e.g. { '<':4, >= 2 })\r\n\r\n\r\n*/",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/datas/todo/data_query.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 674,
    "kind": "variable",
    "name": "context",
    "memberof": "js/datas/todo/data_query.js",
    "static": true,
    "longname": "js/datas/todo/data_query.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/datas/todo/data_query.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 675,
    "kind": "class",
    "name": "DataQuery",
    "memberof": "js/datas/todo/data_query.js",
    "static": true,
    "longname": "js/datas/todo/data_query.js~DataQuery",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/datas/todo/data_query.js",
    "importStyle": "DataQuery",
    "description": "",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "DataRecord class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 676,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/datas/todo/data_query.js~DataQuery",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/todo/data_query.js~DataQuery#constructor",
    "access": "public",
    "description": "Data record class, contains one collection item attributes.\n\n\tAPI:\n\t\t->constructor(arg_model)\n\n\t\t->get_model():DataModel - get record model.\n\t\t->hash():string - get query hash string.\n\n\t\t->set_fields(arg_fields_names:array):nothing - set query fields.\n\t\t->get_fields():array - get query fields names.\n\n\t\t->set_limit(arg_offset:integer, arg_length:integer):nothing - set query limit with offset and length.\n\t\t->set_range(arg_first:integer, arg_last:integer):nothing - set query limit with first and last index.\n\t\t->get_limit():object - get query limit as { offset:..., length:..., first:..., last:...}\n\t\t->set_page(arg_page_size, arg_page_index):nothing - set query limit with a page index.\n\t\t->get_page(arg_page_size):integer - get query page.\n\n\t\t->set_where(arg_where:object):nothing - set query where clause.\n\t\t->get_where():object - get query where clause.\n\t\t->and():this\n\t\t->or():this\n\t\t->not():this\n\t\t->field(arg_field_name):this\n\t\t->lt():this\n\t\t->gt():this\n\t\t->lte():this\n\t\t->gte():this\n\t\t->equal():this\n\t\t->notequal():this\n\t\t->like():this\n\t\t->value(arg_string):this\n\n\t\t->set_orderby(arg_orderby:array):nothing - set query orderby clause.\n\t\t->get_orderby():array - get query orderby clause.\n\n\t\t->set_groupby(arg_groupby:array):nothing - set query groupby clause.\n\t\t->get_groupby():array - get query groupby clause.",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DataModel"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_model",
        "description": "data model: contains schema."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 677,
    "kind": "member",
    "name": "is_data_query",
    "memberof": "js/datas/todo/data_query.js~DataQuery",
    "static": false,
    "longname": "js/datas/todo/data_query.js~DataQuery#is_data_query",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 678,
    "kind": "member",
    "name": "_model",
    "memberof": "js/datas/todo/data_query.js~DataQuery",
    "static": false,
    "longname": "js/datas/todo/data_query.js~DataQuery#_model",
    "access": "private",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 679,
    "kind": "member",
    "name": "_hash",
    "memberof": "js/datas/todo/data_query.js~DataQuery",
    "static": false,
    "longname": "js/datas/todo/data_query.js~DataQuery#_hash",
    "access": "private",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 680,
    "kind": "member",
    "name": "_hash_is_dirty",
    "memberof": "js/datas/todo/data_query.js~DataQuery",
    "static": false,
    "longname": "js/datas/todo/data_query.js~DataQuery#_hash_is_dirty",
    "access": "private",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 681,
    "kind": "member",
    "name": "_fields",
    "memberof": "js/datas/todo/data_query.js~DataQuery",
    "static": false,
    "longname": "js/datas/todo/data_query.js~DataQuery#_fields",
    "access": "private",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 682,
    "kind": "member",
    "name": "_limit",
    "memberof": "js/datas/todo/data_query.js~DataQuery",
    "static": false,
    "longname": "js/datas/todo/data_query.js~DataQuery#_limit",
    "access": "private",
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "type": {
      "types": [
        "{\"offset\": *, \"length\": number, \"first\": *, \"last\": number}"
      ]
    }
  },
  {
    "__docId__": 683,
    "kind": "member",
    "name": "_where",
    "memberof": "js/datas/todo/data_query.js~DataQuery",
    "static": false,
    "longname": "js/datas/todo/data_query.js~DataQuery#_where",
    "access": "private",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 684,
    "kind": "member",
    "name": "_where_cursor",
    "memberof": "js/datas/todo/data_query.js~DataQuery",
    "static": false,
    "longname": "js/datas/todo/data_query.js~DataQuery#_where_cursor",
    "access": "private",
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 685,
    "kind": "member",
    "name": "_orderby",
    "memberof": "js/datas/todo/data_query.js~DataQuery",
    "static": false,
    "longname": "js/datas/todo/data_query.js~DataQuery#_orderby",
    "access": "private",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 686,
    "kind": "member",
    "name": "_groupby",
    "memberof": "js/datas/todo/data_query.js~DataQuery",
    "static": false,
    "longname": "js/datas/todo/data_query.js~DataQuery#_groupby",
    "access": "private",
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 687,
    "kind": "method",
    "name": "_emit",
    "memberof": "js/datas/todo/data_query.js~DataQuery",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/todo/data_query.js~DataQuery#_emit",
    "access": "private",
    "description": "Emit on event.",
    "lineNumber": 94,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_event",
        "description": "event name."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_datas",
        "description": "event datas (optional, default:undefined)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 688,
    "kind": "method",
    "name": "get_model",
    "memberof": "js/datas/todo/data_query.js~DataQuery",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/todo/data_query.js~DataQuery#get_model",
    "access": "public",
    "description": "Get record model.",
    "lineNumber": 105,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DataModel}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DataModel"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 689,
    "kind": "method",
    "name": "_calculate_hash",
    "memberof": "js/datas/todo/data_query.js~DataQuery",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/todo/data_query.js~DataQuery#_calculate_hash",
    "access": "private",
    "description": "Calculate query hash string.",
    "lineNumber": 117,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 692,
    "kind": "method",
    "name": "hash",
    "memberof": "js/datas/todo/data_query.js~DataQuery",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/todo/data_query.js~DataQuery#hash",
    "access": "public",
    "description": "Get hash string.",
    "lineNumber": 139,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 693,
    "kind": "method",
    "name": "set_fields",
    "memberof": "js/datas/todo/data_query.js~DataQuery",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/todo/data_query.js~DataQuery#set_fields",
    "access": "public",
    "description": "Set query fields.",
    "lineNumber": 153,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_fields_names",
        "description": "query fields names"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 695,
    "kind": "method",
    "name": "get_fields",
    "memberof": "js/datas/todo/data_query.js~DataQuery",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/todo/data_query.js~DataQuery#get_fields",
    "access": "public",
    "description": "Get query fields.",
    "lineNumber": 172,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 696,
    "kind": "method",
    "name": "get_limit",
    "memberof": "js/datas/todo/data_query.js~DataQuery",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/todo/data_query.js~DataQuery#get_limit",
    "access": "public",
    "description": "Get query limit as { offset:..., length:..., first:..., last:...}.",
    "lineNumber": 184,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 697,
    "kind": "method",
    "name": "set_limit",
    "memberof": "js/datas/todo/data_query.js~DataQuery",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/todo/data_query.js~DataQuery#set_limit",
    "access": "public",
    "description": "Set query limit with offset and count.",
    "lineNumber": 199,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_offset",
        "description": "query limit offset."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_length",
        "description": "query limit length."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 699,
    "kind": "method",
    "name": "set_range",
    "memberof": "js/datas/todo/data_query.js~DataQuery",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/todo/data_query.js~DataQuery#set_range",
    "access": "public",
    "description": "Set query limit with first and last indices.",
    "lineNumber": 223,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_first",
        "description": "query limit first index."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_last",
        "description": "query limit last index."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 701,
    "kind": "method",
    "name": "set_page",
    "memberof": "js/datas/todo/data_query.js~DataQuery",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/todo/data_query.js~DataQuery#set_page",
    "access": "public",
    "description": "Set query limit with page size and page index.",
    "lineNumber": 247,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_page_size",
        "description": "query page size."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_page_index",
        "description": "query page index."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 703,
    "kind": "method",
    "name": "get_page",
    "memberof": "js/datas/todo/data_query.js~DataQuery",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/datas/todo/data_query.js~DataQuery#get_page",
    "access": "public",
    "description": "Get query limit page index.",
    "lineNumber": 270,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{integer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_page_size",
        "description": "query page size."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "integer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 704,
    "kind": "file",
    "name": "js/datas/todo/data_record_array.js",
    "content": "/*save\r\nupdate()\r\n\r\n\r\nAPI:\r\n *                  ->constructor(object)     : nothing\r\n *  \r\n *                  ->get_records()   \t\t  : array of Records objects\r\n *                  ->get_count()             : integer (records count)\r\n *  \r\n *                  ->new_record()            : \r\n *                  ->free_record()           : \r\n *                  \r\n *                  ->update_records_map()    : Reload all query model records\r\n *                  ->get_record_by_id(id)    : Lookup a record with its id\r\n *                  ->get_first_record_by_field(n,v): Lookup a record with a field name and a field value\r\n *                  ->get_first_record_by_object(o) : Lookup a record with its values\r\n *                  \r\n *                  ->load(datas)             : Fill the Recordset with given datas records\r\n *                  ->read()                  : Read records from the model with the owned query\r\n *                  ->read_all()              : Read all available records from the model\r\n *  \r\n *                  ->save()                  : Save all dirty records into the model\r\n *                  ->erase()                 : Remove all records and update the model\r\n * \r\n\r\n\r\n\r\nResultSet\r\n\r\n API:\r\n *                  ->constructor(object)     : nothing\r\n *  \t\t\t\t\r\n *                  ->get_records()     \t  : array\r\n *                  ->get_count()             : integer\r\n\r\n\r\n\r\n\r\nDS.RECORDARRAYMANAGER CLASS ADDON/-PRIVATE/SYSTEM/RECORD-ARRAY-MANAGER.JS:15\r\nPRIVATE\r\n\r\nEXTENDS: EMBER.OBJECT\r\nDEFINED IN: addon/-private/system/record-array-manager.js:15\r\nMODULE: ember-data\r\nIndex\r\nMethods\r\nShow:   Inherited   Protected   Private   Deprecated\r\nMETHODS\r\n\r\ncreateAdapterPopulatedRecordArray\r\ncreateFilteredRecordArray\r\ncreateRecordArray\r\nliveRecordArrayFor\r\nregisterFilteredRecordArray\r\nunregisterRecordArray\r\nupdateFilter\r\nupdateFilterRecordArray\r\nupdateRecordArrays\r\n\r\n*/",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/datas/todo/data_record_array.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 705,
    "kind": "file",
    "name": "js/default_plugins/rendering_default_plugin.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport path from 'path'\r\n\r\n// COMMON IMPORTS\r\nimport T                     from '../utils/types'\r\nimport RenderingPlugin       from '../plugins/rendering_plugin'\r\nimport * as DefaultRendering from '../rendering/index'\r\n\r\n/**\r\n * Plugin file name.\r\n * @private\r\n * @type {string}\r\n */\r\nconst plugin_name = 'DefaultRendering'\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n * @type {string}\r\n */\r\nconst context = 'common/' + plugin_name + '/rendering_default_plugin'\r\n\r\n\r\n\r\n/**\r\n * Plugin class for default rendering plugin.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class DefaultDefaultRendering extends RenderingPlugin\r\n{\r\n\tconstructor(arg_runtime, arg_manager)\r\n\t{\r\n\t\tassert( T.isObject(arg_runtime) && arg_runtime.is_base_runtime, context + ':constructor:bad runtime instance' )\r\n\t\tassert( T.isObject(arg_manager), context + ':constructor:bad plugins manager instance' )\r\n\r\n\t\tsuper(arg_runtime, arg_manager, 'DefaultRendering', '1.0.0')\r\n\r\n\t\tconst assets_dir = '../../../public/'\r\n\t\tthis.add_public_asset('css', '/' + plugin_name + '/normalize.css',       path.join(__dirname, assets_dir, 'css/normalize.css') )\r\n\t\tthis.add_public_asset('img', '/' + plugin_name + '/favico.png',          path.join(__dirname, assets_dir, 'img/favico.png') )\r\n\t\tthis.add_public_asset('js',  '/' + plugin_name + '/browser.min.js',      path.join(__dirname, assets_dir, 'js/vendor/browser.min.js') )\r\n\t\tthis.add_public_asset('js',  '/' + plugin_name + '/devapt-bootstrap.js', path.join(__dirname, assets_dir, 'js/devapt-bootstrap.js') )\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get plugin js asset files for browser loading.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_browser_plugin_file_url()\r\n\t{\r\n\t\t// return plugin_name + '/devapt-default-rendering.js'\r\n\t\treturn undefined\r\n\t}\r\n\r\n\t\r\n    \r\n\t/**\r\n     * Get a feature class.\r\n\t * \r\n     * @param {string} arg_class_name - feature class name.\r\n     * \r\n\t * @returns {object|undefined} feature class.\r\n     */\r\n\tget_feature_class(arg_class_name)\r\n\t{\r\n\t\tassert( T.isString(arg_class_name), context + ':get_feature_class:bad class string')\r\n\t\t\r\n\t\treturn undefined\r\n\t}\r\n\r\n\t\r\n\t\r\n\thas(arg_class_name)\r\n\t{\r\n\t\tassert( T.isString(arg_class_name), context + ':has:bad class string')\r\n\t\t\r\n\t\tswitch(arg_class_name.toLocaleLowerCase())\r\n\t\t{\r\n\t\t\t// SPECIAL CASE, NOT RENDERING FUNCTIONS\r\n\t\t\tcase 'rendering_normalize':\r\n\t\t\tcase 'renderingresult':\r\n\t\t\tcase 'rendering_factory':\r\n\t\t\t\treturn true\r\n\t\t\t\r\n\t\t\t// RENDERING FUNCTIONS\r\n\t\t\tcase 'component':\r\n\t\t\tcase 'container':\r\n\t\t\tcase 'button':\r\n\t\t\tcase 'canvas':\r\n\t\t\tcase 'label':\r\n\t\t\tcase 'anchor':\r\n\t\t\tcase 'image':\r\n\t\t\tcase 'inputfield':\r\n\t\t\tcase 'input':\r\n\t\t\tcase 'input-field':\r\n\t\t\tcase 'list':\r\n\t\t\tcase 'table':\r\n\t\t\tcase 'recordstable':\r\n\t\t\tcase 'script':\r\n\t\t\tcase 'menubar':\r\n\t\t\tcase 'page':\r\n\t\t\tcase 'page_content':\r\n\t\t\tcase 'tabs':\r\n\t\t\tcase 'tree':\r\n\t\t\tcase 'tabletree':\r\n\t\t\tcase 'hbox':\r\n\t\t\tcase 'vbox':\r\n\t\t\tcase 'textarea':\r\n\t\t\tcase 'dock':\r\n\t\t\t\treturn true\r\n\t\t}\r\n\t\t\r\n\t\treturn false\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * Find a rendering function.\r\n\t * @static\r\n\t * \r\n\t * @param {string} arg_type - rendering item type.\r\n\t * \r\n\t * @returns {Function} - rendering function.\r\n\t */\r\n\tstatic find_rendering_function(arg_type)\r\n\t{\r\n\t\tif ( ! T.isString(arg_type) )\r\n\t\t{\r\n\t\t\treturn undefined\r\n\t\t}\r\n\t\t\r\n\t\tswitch(arg_type.toLocaleLowerCase())\r\n\t\t{\r\n\t\t\t// SPECIAL CASE, NOT RENDERING FUNCTIONS\r\n\t\t\tcase 'rendering_normalize':\r\n\t\t\t\treturn DefaultRendering.rendering_normalize\r\n\r\n\t\t\tcase 'renderingresult':\r\n\t\t\t\treturn DefaultRendering.RenderingResult\r\n\r\n\t\t\tcase 'rendering_factory':\r\n\t\t\t\treturn DefaultRendering.rendering_factory\r\n\t\t\t\r\n\t\t\t// RENDERING FUNCTIONS\r\n\t\t\tcase 'component':\r\n\t\t\t\treturn DefaultRendering.component\r\n\t\t\t\r\n\t\t\tcase 'container':\r\n\t\t\t\treturn DefaultRendering.container\r\n\r\n\t\t\tcase 'button':\r\n\t\t\t\treturn DefaultRendering.button\r\n\r\n\t\t\tcase 'canvas':\r\n\t\t\t\treturn DefaultRendering.canvas\r\n\t\t\t\r\n\t\t\tcase 'label':\r\n\t\t\t\treturn DefaultRendering.label\r\n\t\t\t\r\n\t\t\tcase 'anchor':\r\n\t\t\t\treturn DefaultRendering.anchor\r\n\t\t\t\r\n\t\t\tcase 'image':\r\n\t\t\t\treturn DefaultRendering.image\r\n\t\t\t\r\n\t\t\tcase 'inputfield':\r\n\t\t\tcase 'input':\r\n\t\t\tcase 'input-field':\r\n\t\t\t\treturn DefaultRendering.input_field\r\n\r\n\t\t\tcase 'list':\r\n\t\t\t\treturn DefaultRendering.list\r\n\t\t\t\r\n\t\t\tcase 'table':\r\n\t\t\tcase 'recordstable':\r\n\t\t\t\treturn DefaultRendering.table\r\n\t\t\t\r\n\t\t\tcase 'script':\r\n\t\t\t\treturn DefaultRendering.script\r\n\t\t\t\r\n\t\t\tcase 'menubar':\r\n\t\t\t\treturn DefaultRendering.menubar\r\n\t\t\t\r\n\t\t\tcase 'page':\r\n\t\t\t\treturn DefaultRendering.page\r\n\t\t\t\r\n\t\t\tcase 'page_content':\r\n\t\t\t\treturn DefaultRendering.page_content\r\n\t\t\t\r\n\t\t\tcase 'tabs':\r\n\t\t\t\treturn DefaultRendering.tabs\r\n\t\t\t\r\n\t\t\tcase 'tree':\r\n\t\t\t\treturn DefaultRendering.tree\r\n\r\n\t\t\tcase 'tabletree':\r\n\t\t\t\treturn DefaultRendering.tabletree\r\n\r\n\t\t\tcase 'hbox':\r\n\t\t\t\treturn DefaultRendering.hbox\r\n\t\t\t\r\n\t\t\tcase 'vbox':\r\n\t\t\t\treturn DefaultRendering.vbox\r\n\r\n\t\t\tcase 'textarea':\r\n\t\t\t\treturn DefaultRendering.textarea\r\n\r\n\t\t\tcase 'dock':\r\n\t\t\t\treturn DefaultRendering.dock\r\n\t\t}\r\n\r\n\t\treturn undefined\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/default_plugins/rendering_default_plugin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 706,
    "kind": "variable",
    "name": "plugin_name",
    "memberof": "js/default_plugins/rendering_default_plugin.js",
    "static": true,
    "longname": "js/default_plugins/rendering_default_plugin.js~plugin_name",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/default_plugins/rendering_default_plugin.js",
    "importStyle": null,
    "description": "Plugin file name.",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 707,
    "kind": "variable",
    "name": "context",
    "memberof": "js/default_plugins/rendering_default_plugin.js",
    "static": true,
    "longname": "js/default_plugins/rendering_default_plugin.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/default_plugins/rendering_default_plugin.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 708,
    "kind": "class",
    "name": "DefaultDefaultRendering",
    "memberof": "js/default_plugins/rendering_default_plugin.js",
    "static": true,
    "longname": "js/default_plugins/rendering_default_plugin.js~DefaultDefaultRendering",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/default_plugins/rendering_default_plugin.js",
    "importStyle": "DefaultDefaultRendering",
    "description": "Plugin class for default rendering plugin.",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/plugins/rendering_plugin.js~RenderingPlugin"
    ]
  },
  {
    "__docId__": 709,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/default_plugins/rendering_default_plugin.js~DefaultDefaultRendering",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/default_plugins/rendering_default_plugin.js~DefaultDefaultRendering#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 710,
    "kind": "method",
    "name": "get_browser_plugin_file_url",
    "memberof": "js/default_plugins/rendering_default_plugin.js~DefaultDefaultRendering",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/default_plugins/rendering_default_plugin.js~DefaultDefaultRendering#get_browser_plugin_file_url",
    "access": "public",
    "description": "Get plugin js asset files for browser loading.",
    "lineNumber": 56,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 711,
    "kind": "method",
    "name": "get_feature_class",
    "memberof": "js/default_plugins/rendering_default_plugin.js~DefaultDefaultRendering",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/default_plugins/rendering_default_plugin.js~DefaultDefaultRendering#get_feature_class",
    "access": "public",
    "description": "Get a feature class.",
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object|undefined} feature class."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_class_name",
        "description": "feature class name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object",
        "undefined"
      ],
      "spread": false,
      "description": "feature class."
    }
  },
  {
    "__docId__": 712,
    "kind": "method",
    "name": "has",
    "memberof": "js/default_plugins/rendering_default_plugin.js~DefaultDefaultRendering",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/default_plugins/rendering_default_plugin.js~DefaultDefaultRendering#has",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "params": [
      {
        "name": "arg_class_name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 713,
    "kind": "method",
    "name": "find_rendering_function",
    "memberof": "js/default_plugins/rendering_default_plugin.js~DefaultDefaultRendering",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/default_plugins/rendering_default_plugin.js~DefaultDefaultRendering.find_rendering_function",
    "access": "public",
    "description": "Find a rendering function.",
    "lineNumber": 133,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} - rendering function."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_type",
        "description": "rendering item type."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "rendering function."
    }
  },
  {
    "__docId__": 714,
    "kind": "file",
    "name": "js/json_provider/file_json_provider.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport Context from '../base/context'\r\nimport JsonProvider from './json_provider'\r\nimport { SOURCE_LOCAL_FILE } from './json_provider_sources'\r\n\r\n\r\nconst context = 'common/json_provider/file_json_provider'\r\n\r\n\r\n\r\n/**\r\n * Json providier class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class FileJsonProvider extends JsonProvider\r\n{\r\n    /**\r\n     * Create a FileJsonProvider instance.\r\n\t * \r\n\t * @param {object} arg_settings - provider settings.\r\n\t * \r\n\t * @returns {nothing}\r\n     */\r\n\tconstructor(arg_settings)\r\n    {\r\n\t\tsuper(arg_settings)\r\n\t}\r\n    \r\n    \r\n    \r\n    /**\r\n     * Provide JSON datas inside a promise.\r\n\t * \r\n     * @param {function} resolve - a promise should be resolved.\r\n     * @param {function} reject - a promise should be rejected.\r\n\t * \r\n     * @returns {nothing}\r\n     */\r\n\tprovide_json_self(resolve, reject)\r\n\t{\r\n\t\tassert( this.source == SOURCE_LOCAL_FILE, context + ':provide_json_self:bad source')\r\n\t\tassert( T.isString(this.$settings.relative_path), context + ':provide_json_self:bad settings.relative_path string')\r\n\r\n\t\tconst file_path = this.$settings.relative_path\r\n\t\tconst absolute_file_path = new Context(this.$settings.runtime).get_absolute_path(file_path)\r\n\t\tconst json = require(absolute_file_path)\r\n\t\t\r\n\t\tif ( T.isObject(json) )\r\n\t\t{\r\n\t\t\tresolve(json)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\treject('bad json result for absolute file path [' + absolute_file_path + ']')\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/json_provider/file_json_provider.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 715,
    "kind": "variable",
    "name": "context",
    "memberof": "js/json_provider/file_json_provider.js",
    "static": true,
    "longname": "js/json_provider/file_json_provider.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/json_provider/file_json_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 716,
    "kind": "class",
    "name": "FileJsonProvider",
    "memberof": "js/json_provider/file_json_provider.js",
    "static": true,
    "longname": "js/json_provider/file_json_provider.js~FileJsonProvider",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/json_provider/file_json_provider.js",
    "importStyle": "FileJsonProvider",
    "description": "Json providier class.",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/json_provider/json_provider.js~JsonProvider"
    ]
  },
  {
    "__docId__": 717,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/json_provider/file_json_provider.js~FileJsonProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/json_provider/file_json_provider.js~FileJsonProvider#constructor",
    "access": "public",
    "description": "Create a FileJsonProvider instance.",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "provider settings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 718,
    "kind": "method",
    "name": "provide_json_self",
    "memberof": "js/json_provider/file_json_provider.js~FileJsonProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/json_provider/file_json_provider.js~FileJsonProvider#provide_json_self",
    "access": "public",
    "description": "Provide JSON datas inside a promise.",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "resolve",
        "description": "a promise should be resolved."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "reject",
        "description": "a promise should be rejected."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 719,
    "kind": "file",
    "name": "js/json_provider/json_provider.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport SOURCES from './json_provider_sources'\r\n\r\n\r\nconst context = 'common/json_provider/json_provider'\r\n\r\n\r\n\r\n/**\r\n * Json providier class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class JsonProvider\r\n{\r\n    /**\r\n     * Create a Json Provider instance.\r\n\t * @abstract\r\n\t * \r\n\t * @param {object} arg_settings - provider settings.\r\n\t * \r\n\t * @returns {nothing}\r\n     */\r\n\tconstructor(arg_settings)\r\n    {\r\n\t\t// CHECK SETTINGS\r\n\t\tassert( T.isObject(arg_settings), context + ':bad settings object')\r\n\t\tif ( T.isFunction(arg_settings.toJS) )\r\n\t\t{\r\n\t\t\targ_settings = arg_settings.toJS()\r\n\t\t}\r\n\t\tthis.$settings = arg_settings\r\n\r\n\t\t// GET PROVIDER SOURCE\r\n\t\tassert( T.isString(this.$settings.source), context + ':bad settings.source string')\r\n\t\tthis.source = this.$settings.source\r\n\t\tassert( SOURCES.indexOf(this.source) > -1, context + ':bad source string, should be part of [' + SOURCES + ']')\r\n\t}\r\n    \r\n    \r\n\r\n    /**\r\n     * Provide JSON datas.\r\n\t * \r\n     * @returns {object} JSON datas Promise\r\n     */\r\n\tprovide_json()\r\n\t{\r\n\t\tconst self = this\r\n\r\n\t\tlet promise = new Promise(\r\n\t\t\tfunction(resolve, reject)\r\n\t\t\t{\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tself.provide_json_self(resolve, reject)\r\n\t\t\t\t}\r\n\t\t\t\tcatch(e)\r\n\t\t\t\t{\r\n\t\t\t\t\treject(e)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\treturn promise\r\n\t}\r\n    \r\n    \r\n\r\n    /**\r\n     * Provide JSON datas inside a promise\r\n\t * @abstract\r\n\t * \r\n     * @param {function} resolve - a promise should be resolved.\r\n     * @param {function} reject - a promise should be rejected.\r\n\t * \r\n     * @returns {nothing}\r\n     */\r\n\tprovide_json_self(resolve, reject)\r\n\t{\r\n\t\treject(context + ':provide_json_self:should be implemented in sub classes.')\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/json_provider/json_provider.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 720,
    "kind": "variable",
    "name": "context",
    "memberof": "js/json_provider/json_provider.js",
    "static": true,
    "longname": "js/json_provider/json_provider.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/json_provider/json_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 721,
    "kind": "class",
    "name": "JsonProvider",
    "memberof": "js/json_provider/json_provider.js",
    "static": true,
    "longname": "js/json_provider/json_provider.js~JsonProvider",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/json_provider/json_provider.js",
    "importStyle": "JsonProvider",
    "description": "Json providier class.",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 722,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/json_provider/json_provider.js~JsonProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/json_provider/json_provider.js~JsonProvider#constructor",
    "access": "public",
    "description": "Create a Json Provider instance.",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "provider settings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true
  },
  {
    "__docId__": 723,
    "kind": "member",
    "name": "$settings",
    "memberof": "js/json_provider/json_provider.js~JsonProvider",
    "static": false,
    "longname": "js/json_provider/json_provider.js~JsonProvider#$settings",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 724,
    "kind": "member",
    "name": "source",
    "memberof": "js/json_provider/json_provider.js~JsonProvider",
    "static": false,
    "longname": "js/json_provider/json_provider.js~JsonProvider#source",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 725,
    "kind": "method",
    "name": "provide_json",
    "memberof": "js/json_provider/json_provider.js~JsonProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/json_provider/json_provider.js~JsonProvider#provide_json",
    "access": "public",
    "description": "Provide JSON datas.",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} JSON datas Promise"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "JSON datas Promise"
    },
    "params": []
  },
  {
    "__docId__": 726,
    "kind": "method",
    "name": "provide_json_self",
    "memberof": "js/json_provider/json_provider.js~JsonProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/json_provider/json_provider.js~JsonProvider#provide_json_self",
    "access": "public",
    "description": "Provide JSON datas inside a promise",
    "lineNumber": 85,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "resolve",
        "description": "a promise should be resolved."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "reject",
        "description": "a promise should be rejected."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true
  },
  {
    "__docId__": 727,
    "kind": "file",
    "name": "js/json_provider/json_provider_factory.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport FileJsonProvider from './file_json_provider'\r\nimport MasterJsonProvider from './master_json_provider'\r\nimport { SOURCE_LOCAL_FILE, SOURCE_MASTER, SOURCE_MSG_BUS, SOURCE_REMOTE_URL,\r\n\tSOURCE_SQL_DATABASE, SOURCE_REDIS_DATABASE, SOURCE_MONGODB_DATABASE } from './json_provider_sources'\r\n\r\n\r\nconst context = 'common/json_provider/json_provider_factory'\r\n\r\n\r\n\r\n/**\r\n * Json providier class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class JsonProviderFactory\r\n{\r\n    /**\r\n     * Create JsonProviderFactory instance.\r\n\t * \r\n\t * @returns {nothing}\r\n     */\r\n\tconstructor()\r\n    {\r\n\t}\r\n    \r\n    \r\n    /**\r\n     * Create a JsonProvider instance.\r\n\t * \r\n\t * @param {object} arg_settings - provider settings.\r\n\t * \r\n     * @returns {object} JSON datas Promise\r\n     */\r\n\tstatic create(arg_settings)\r\n\t{\r\n\t\tif ( T.isFunction(arg_settings.toJS) )\r\n\t\t{\r\n\t\t\targ_settings = arg_settings.toJS()\r\n\t\t}\r\n\t\tassert( T.isObject(arg_settings), context + ':create:bad settings object')\r\n\t\tassert( T.isString(arg_settings.source), context + ':create:bad settings.source string')\r\n\t\t\r\n\t\tconst source = arg_settings.source\r\n\t\t\r\n\t\tswitch(source)\r\n\t\t{\r\n\t\t\tcase SOURCE_LOCAL_FILE: return new FileJsonProvider(arg_settings)\r\n\t\t\tcase SOURCE_MASTER:     return new MasterJsonProvider(arg_settings)\r\n\t\t\t\r\n\t\t\tcase SOURCE_MSG_BUS:\r\n\t\t\tcase SOURCE_REMOTE_URL:\r\n\t\t\tcase SOURCE_SQL_DATABASE:\r\n\t\t\tcase SOURCE_REDIS_DATABASE:\r\n\t\t\tcase SOURCE_MONGODB_DATABASE:\r\n\t\t\tdefault:{\r\n\t\t\t\tconsole.error(context + ':bad provider source string [' + this.source + ']')\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn undefined\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/json_provider/json_provider_factory.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 728,
    "kind": "variable",
    "name": "context",
    "memberof": "js/json_provider/json_provider_factory.js",
    "static": true,
    "longname": "js/json_provider/json_provider_factory.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/json_provider/json_provider_factory.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 729,
    "kind": "class",
    "name": "JsonProviderFactory",
    "memberof": "js/json_provider/json_provider_factory.js",
    "static": true,
    "longname": "js/json_provider/json_provider_factory.js~JsonProviderFactory",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/json_provider/json_provider_factory.js",
    "importStyle": "JsonProviderFactory",
    "description": "Json providier class.",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 730,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/json_provider/json_provider_factory.js~JsonProviderFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/json_provider/json_provider_factory.js~JsonProviderFactory#constructor",
    "access": "public",
    "description": "Create JsonProviderFactory instance.",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 731,
    "kind": "method",
    "name": "create",
    "memberof": "js/json_provider/json_provider_factory.js~JsonProviderFactory",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/json_provider/json_provider_factory.js~JsonProviderFactory.create",
    "access": "public",
    "description": "Create a JsonProvider instance.",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} JSON datas Promise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "provider settings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "JSON datas Promise"
    }
  },
  {
    "__docId__": 732,
    "kind": "file",
    "name": "js/json_provider/json_provider_sources.js",
    "content": "\r\nexport const SOURCE_LOCAL_FILE = 'local_file'\r\nexport const SOURCE_MASTER = 'master'\r\nexport const SOURCE_MSG_BUS = 'message_bus'\r\nexport const SOURCE_REMOTE_URL = 'remote_url'\r\nexport const SOURCE_SQL_DATABASE = 'sql_database'\r\nexport const SOURCE_REDIS_DATABASE = 'redis_database'\r\nexport const SOURCE_MONGODB_DATABASE = 'redis_database'\r\n\r\nconst SOURCES = [SOURCE_LOCAL_FILE, SOURCE_MASTER, SOURCE_MSG_BUS,\r\n\tSOURCE_REMOTE_URL, SOURCE_SQL_DATABASE, SOURCE_REDIS_DATABASE, SOURCE_MONGODB_DATABASE]\r\n\r\n\r\nexport default SOURCES\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/json_provider/json_provider_sources.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 733,
    "kind": "variable",
    "name": "SOURCE_LOCAL_FILE",
    "memberof": "js/json_provider/json_provider_sources.js",
    "static": true,
    "longname": "js/json_provider/json_provider_sources.js~SOURCE_LOCAL_FILE",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/json_provider/json_provider_sources.js",
    "importStyle": "{SOURCE_LOCAL_FILE}",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 734,
    "kind": "variable",
    "name": "SOURCE_MASTER",
    "memberof": "js/json_provider/json_provider_sources.js",
    "static": true,
    "longname": "js/json_provider/json_provider_sources.js~SOURCE_MASTER",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/json_provider/json_provider_sources.js",
    "importStyle": "{SOURCE_MASTER}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 735,
    "kind": "variable",
    "name": "SOURCE_MSG_BUS",
    "memberof": "js/json_provider/json_provider_sources.js",
    "static": true,
    "longname": "js/json_provider/json_provider_sources.js~SOURCE_MSG_BUS",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/json_provider/json_provider_sources.js",
    "importStyle": "{SOURCE_MSG_BUS}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 736,
    "kind": "variable",
    "name": "SOURCE_REMOTE_URL",
    "memberof": "js/json_provider/json_provider_sources.js",
    "static": true,
    "longname": "js/json_provider/json_provider_sources.js~SOURCE_REMOTE_URL",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/json_provider/json_provider_sources.js",
    "importStyle": "{SOURCE_REMOTE_URL}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 737,
    "kind": "variable",
    "name": "SOURCE_SQL_DATABASE",
    "memberof": "js/json_provider/json_provider_sources.js",
    "static": true,
    "longname": "js/json_provider/json_provider_sources.js~SOURCE_SQL_DATABASE",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/json_provider/json_provider_sources.js",
    "importStyle": "{SOURCE_SQL_DATABASE}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 738,
    "kind": "variable",
    "name": "SOURCE_REDIS_DATABASE",
    "memberof": "js/json_provider/json_provider_sources.js",
    "static": true,
    "longname": "js/json_provider/json_provider_sources.js~SOURCE_REDIS_DATABASE",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/json_provider/json_provider_sources.js",
    "importStyle": "{SOURCE_REDIS_DATABASE}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 739,
    "kind": "variable",
    "name": "SOURCE_MONGODB_DATABASE",
    "memberof": "js/json_provider/json_provider_sources.js",
    "static": true,
    "longname": "js/json_provider/json_provider_sources.js~SOURCE_MONGODB_DATABASE",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/json_provider/json_provider_sources.js",
    "importStyle": "{SOURCE_MONGODB_DATABASE}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 740,
    "kind": "variable",
    "name": "SOURCES",
    "memberof": "js/json_provider/json_provider_sources.js",
    "static": true,
    "longname": "js/json_provider/json_provider_sources.js~SOURCES",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/json_provider/json_provider_sources.js",
    "importStyle": "SOURCES",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 741,
    "kind": "file",
    "name": "js/json_provider/master_json_provider.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport JsonProvider from './json_provider'\r\nimport { SOURCE_MASTER } from './json_provider_sources'\r\n\r\n\r\nconst context = 'common/json_provider/master_json_provider'\r\n\r\n\r\n\r\n/**\r\n * Json providier class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class MasterJsonProvider extends JsonProvider\r\n{\r\n    /**\r\n     * Create a MasterJsonProvider instance.\r\n\t * \r\n\t * @param {object} arg_settings - provider settings.\r\n\t * \r\n\t * @returns {nothing}\r\n     */\r\n\tconstructor(arg_settings)\r\n    {\r\n\t\tsuper(arg_settings)\r\n\t}\r\n    \r\n    \r\n    \r\n    /**\r\n     * Provide JSON datas inside a promise.\r\n\t * \r\n     * @param {function} resolve - a promise should be resolved.\r\n     * @param {function} reject - a promise should be rejected.\r\n\t * \r\n     * @returns {nothing}\r\n     */\r\n\tprovide_json_self(resolve/*, reject*/)\r\n\t{\r\n\t\tassert( this.source == SOURCE_MASTER, context + ':provide_json_self:bad source')\r\n\t\t// assert( T.isString(this.$settings.relative_path), context + ':provide_json_self:bad settings.relative_path string')\r\n\t\t\r\n\t\tconst node = this.$settings.runtime.node\r\n\t\tassert( T.isObject(node) && node.is_node, context + ':provide_json_self:bad node object')\r\n\r\n\t\tconst master_name = node.master_name\r\n\t\tassert( T.isString(master_name), context + ':provide_json_self:bad master name string')\r\n\r\n\t\tconst delay = T.isNumber(this.$settings.delay) ? this.$settings.delay : 0\r\n\r\n\t\t// WAIT FOR BUS GATEWAY IS STARTED AND CONNECTED TO THE LOCAL BUS\r\n\t\tconst do_cb = () => {\r\n\t\t\tnode.on_registering_callback = resolve\r\n\t\t\tnode.register_to_master()\r\n\t\t\tconsole.log(context + ':provide_json_self:SOURCE_MASTER end')\r\n\t\t}\r\n\t\tsetTimeout(do_cb, delay)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/json_provider/master_json_provider.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 742,
    "kind": "variable",
    "name": "context",
    "memberof": "js/json_provider/master_json_provider.js",
    "static": true,
    "longname": "js/json_provider/master_json_provider.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/json_provider/master_json_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 743,
    "kind": "class",
    "name": "MasterJsonProvider",
    "memberof": "js/json_provider/master_json_provider.js",
    "static": true,
    "longname": "js/json_provider/master_json_provider.js~MasterJsonProvider",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/json_provider/master_json_provider.js",
    "importStyle": "MasterJsonProvider",
    "description": "Json providier class.",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/json_provider/json_provider.js~JsonProvider"
    ]
  },
  {
    "__docId__": 744,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/json_provider/master_json_provider.js~MasterJsonProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/json_provider/master_json_provider.js~MasterJsonProvider#constructor",
    "access": "public",
    "description": "Create a MasterJsonProvider instance.",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "provider settings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 745,
    "kind": "method",
    "name": "provide_json_self",
    "memberof": "js/json_provider/master_json_provider.js~MasterJsonProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/json_provider/master_json_provider.js~MasterJsonProvider#provide_json_self",
    "access": "public",
    "description": "Provide JSON datas inside a promise.",
    "lineNumber": 45,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "resolve",
        "description": "a promise should be resolved."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "reject",
        "description": "a promise should be rejected."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 746,
    "kind": "file",
    "name": "js/json_provider/redis_json_provider.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport redis from 'redis'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport JsonProvider from './json_provider'\r\nimport { SOURCE_REDIS_DATABASE } from './json_provider_sources'\r\n\r\n\r\nconst context = 'common/json_provider/redis_json_provider'\r\n\r\n\r\n\r\n/**\r\n * Redis Json provider class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class RedisJsonProvider extends JsonProvider\r\n{\r\n    /**\r\n     * Create a RedisJsonProvider instance.\r\n\t * \r\n\t * @param {object} arg_settings - provider settings.\r\n\t * \r\n\t * @returns {nothing}\r\n     */\r\n\tconstructor(arg_settings)\r\n    {\r\n\t\tsuper(arg_settings)\r\n\t}\r\n    \r\n    \r\n    \r\n    /**\r\n     * Provide JSON datas inside a promise.\r\n\t * \r\n     * @param {function} resolve - a promise should be resolved.\r\n     * @param {function} reject - a promise should be rejected.\r\n\t * \r\n     * @returns {nothing}\r\n     */\r\n\tprovide_json_self(resolve, reject)\r\n\t{\r\n\t\tassert( this.source == SOURCE_REDIS_DATABASE, context + ':provide_json_self:bad source')\r\n\t\t\r\n\t\t// CHECK SETTINGS VALUES\r\n\t\tassert( T.isString(this.$settings.host), context + ':provide_json_self:bad settings.host string')\r\n\t\tassert( T.isString(this.$settings.port), context + ':provide_json_self:bad settings.port string')\r\n\t\tassert( T.isString(this.$settings.db), context + ':provide_json_self:bad settings.db string')\r\n\t\tassert( T.isString(this.$settings.password), context + ':provide_json_self:bad settings.password string')\r\n\t\tassert( T.isString(this.$settings.json_key), context + ':provide_json_self:bad settings.json_key string')\r\n\r\n\t\t// GET SETTINGS VALUES\r\n\t\tconst host_value = this.$settings.host\r\n\t\tconst port_value = this.$settings.port\r\n\t\tconst db_value = this.$settings.db\r\n\t\tconst password_value = this.$settings.password\r\n\t\tconst json_key = this.$settings.json_key\r\n\r\n\t\t// CONNECT TO REDIS\r\n\t\tconst redis_options = {\r\n\t\t\thost:host_value,\r\n\t\t\tport:port_value,\r\n\t\t\tdb:db_value,\r\n\t\t\tpassword:password_value,\r\n\t\t\t\r\n\t\t\tstring_numbers:true,\r\n\t\t\treturn_buffers:false\r\n\t\t}\r\n\t\tconst retry_options = {\r\n\t\t\tretry_strategy: (options) => {\r\n\t\t\t\tif (options.error.code === 'ECONNREFUSED')\r\n\t\t\t\t{\r\n\t\t\t\t\t// End reconnecting on a specific error and flush all commands with a individual error\r\n\t\t\t\t\treject('The server refused the connection')\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tif (options.total_retry_time > 1000 * 60 * 60)\r\n\t\t\t\t{\r\n\t\t\t\t\t// End reconnecting after a specific timeout and flush all commands with a individual error\r\n\t\t\t\t\treject('Retry time exhausted')\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tif (options.times_connected > 10)\r\n\t\t\t\t{\r\n\t\t\t\t\t// End reconnecting with built in error\r\n\t\t\t\t\treturn undefined\r\n\t\t\t\t}\r\n\t\t\t\t// reconnect after\r\n\t\t\t\treturn Math.max(options.attempt * 100, 3000)\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.client = redis.createClient(redis_options.attempt ? retry_options : redis_options)\r\n\r\n\t\t// HANDLE ERROR\r\n\t\tthis.client.on(\"error\",\r\n\t\t\t(err) => {\r\n\t\t\t\treject(context + ':' + err)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\t// PROCESS REQUEST ON READY\r\n\t\tthis.client.get(json_key,\r\n\t\t\t(err, reply) => {\r\n\t\t\t\tif (err)\r\n\t\t\t\t{\r\n\t\t\t\t\treject(err)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tresolve(reply)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tthis.client.quit()\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/json_provider/redis_json_provider.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 747,
    "kind": "variable",
    "name": "context",
    "memberof": "js/json_provider/redis_json_provider.js",
    "static": true,
    "longname": "js/json_provider/redis_json_provider.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/json_provider/redis_json_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 748,
    "kind": "class",
    "name": "RedisJsonProvider",
    "memberof": "js/json_provider/redis_json_provider.js",
    "static": true,
    "longname": "js/json_provider/redis_json_provider.js~RedisJsonProvider",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/json_provider/redis_json_provider.js",
    "importStyle": "RedisJsonProvider",
    "description": "Redis Json provider class.",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/json_provider/json_provider.js~JsonProvider"
    ]
  },
  {
    "__docId__": 749,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/json_provider/redis_json_provider.js~RedisJsonProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/json_provider/redis_json_provider.js~RedisJsonProvider#constructor",
    "access": "public",
    "description": "Create a RedisJsonProvider instance.",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "provider settings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 750,
    "kind": "method",
    "name": "provide_json_self",
    "memberof": "js/json_provider/redis_json_provider.js~RedisJsonProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/json_provider/redis_json_provider.js~RedisJsonProvider#provide_json_self",
    "access": "public",
    "description": "Provide JSON datas inside a promise.",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "resolve",
        "description": "a promise should be resolved."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "reject",
        "description": "a promise should be rejected."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 751,
    "kind": "member",
    "name": "client",
    "memberof": "js/json_provider/redis_json_provider.js~RedisJsonProvider",
    "static": false,
    "longname": "js/json_provider/redis_json_provider.js~RedisJsonProvider#client",
    "access": "public",
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 752,
    "kind": "file",
    "name": "js/loggers/logger.js",
    "content": "// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport uid from '../utils/uid'\r\n\r\n\r\n\r\n/**\r\n * @file Logger base class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class Logger\r\n{\r\n\t/**\r\n\t * Create a Logger instance.\r\n\t * \r\n\t * @param {string} arg_context - trace context.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_enabled)\r\n\t{\r\n\t\tthis.is_logger = true\r\n\t\t\r\n\t\tthis.is_trace_enabled = false\r\n\t\tthis.is_trace_enabled_debug = true\r\n\t\tthis.is_trace_enabled_info = true\r\n\t\tthis.is_trace_enabled_warn = true\r\n\t\tthis.is_trace_enabled_bt = true\r\n\t\tthis.is_trace_enabled_error = true\r\n\t\t\r\n\t\tthis.set_trace(arg_enabled)\r\n\r\n\t\tthis.uid = uid()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get logger uid.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_uid()\r\n\t{\r\n\t\treturn this.uid\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Enable traces.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tenable_trace()\r\n\t{\r\n\t\tthis.is_trace_enabled = true\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Disable traces.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdisable_trace()\r\n\t{\r\n\t\tthis.is_trace_enabled = false\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get trace flag.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tget_trace()\r\n\t{\r\n\t\treturn this.is_trace_enabled\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Set trace flag.\r\n\t * \r\n\t * @param {boolean} arg_enabled - trace flag.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tset_trace(arg_enabled)\r\n\t{\r\n\t\tthis.is_trace_enabled = T.isBoolean(arg_enabled) ? arg_enabled : false\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Toggle trace flag.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\ttoggle_trace()\r\n\t{\r\n\t\tthis.is_trace_enabled = ! this.is_trace_enabled\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get formatted trace message.\r\n\t * @static\r\n\t * \r\n\t * @param {string|array} args - messages to format.\r\n\t * \r\n\t * @returns {string} - formatted trace message.\r\n\t */\r\n\tstatic format(args)\r\n\t{\r\n\t\tif (args == undefined)\r\n\t\t{\r\n\t\t\treturn ''\r\n\t\t}\r\n\r\n\t\tif (args == null)\r\n\t\t{\r\n\t\t\treturn 'null'\r\n\t\t}\r\n\r\n\t\tif ( T.isString(args) )\r\n\t\t{\r\n\t\t\treturn args\r\n\t\t}\r\n\r\n\t\t// console.log('Logger.format:args', typeof args, args)\r\n\t\tif (args.length && args.length > 0)\r\n\t\t{\r\n\t\t\tlet str = ''\r\n\r\n\t\t\tconst arg_0 = args[0] ? args[0].toString() : ''\r\n\t\t\tconst parts = arg_0.split('%s', args.length)\r\n\t\t\tlet arg_index = 0\r\n\r\n\t\t\tif (parts.length > 1 && args.length > 1)\r\n\t\t\t{\r\n\t\t\t\twhile(arg_index < parts.length && (arg_index + 1) < args.length)\r\n\t\t\t\t{\r\n\t\t\t\t\t// console.log(str, 'i:' + i)\r\n\t\t\t\t\tstr += parts[arg_index]\r\n\t\t\t\t\tstr += args[arg_index + 1]\r\n\t\t\t\t\targ_index++\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( arg_index < parts.length )\r\n\t\t\t\t{\r\n\t\t\t\t\tstr += parts[arg_index]\r\n\t\t\t\t}\r\n\r\n\t\t\t\targ_index++\r\n\t\t\t}\r\n\r\n\t\t\tconst args_count = Math.min(args.length, 4)\r\n\t\t\tfor( ; arg_index < args_count ; arg_index++)\r\n\t\t\t{\r\n\t\t\t\tif ( args[arg_index] )\r\n\t\t\t\t{\r\n\t\t\t\t\tstr += (arg_index > 0 ? ':' : '') + args[arg_index].toString()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn str\r\n\t\t}\r\n\r\n\t\treturn args\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Trace DEBUG formatted message.\r\n\t * \r\n\t * @param {string|array} arg_opds - variadic messages to format.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdebug(arg_opds)\r\n\t{\r\n\t\tif (this.is_trace_enabled && this.is_trace_enabled_debug)\r\n\t\t{\r\n\t\t\tif ( T.isFunction(this.debug_self) )\r\n\t\t\t{\r\n\t\t\t\tthis.debug_self(arg_opds)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Trace INFO formatted message.\r\n\t * \r\n\t * @param {string|array} arg_opds - variadic messages to format.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tinfo(arg_opds)\r\n\t{\r\n\t\tif (this.is_trace_enabled && this.is_trace_enabled_info)\r\n\t\t{\r\n\t\t\tif ( T.isFunction(this.info_self) )\r\n\t\t\t{\r\n\t\t\t\tthis.info_self(arg_opds)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Trace WARN formatted message.\r\n\t * \r\n\t * @param {string|array} arg_opds - variadic messages to format.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\twarn(arg_opds)\r\n\t{\r\n\t\tif (this.is_trace_enabled && this.is_trace_enabled_warn)\r\n\t\t{\r\n\t\t\tif ( T.isFunction(this.warn_self) )\r\n\t\t\t{\r\n\t\t\t\tthis.warn_self(arg_opds)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Trace ERROR formatted message.\r\n\t * \r\n\t * @param {string|array} arg_opds - variadic messages to format.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\terror(arg_opds)\r\n\t{\r\n\t\tif (this.is_trace_enabled && this.is_trace_enabled_error)\r\n\t\t{\r\n\t\t\tif ( T.isFunction(this.error_self) )\r\n\t\t\t{\r\n\t\t\t\tthis.error_self(arg_opds)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger DEBUG implementation.\r\n\t * @absract\r\n\t * @class Logger\r\n\t * @method debug_self\r\n\t * \r\n\t * @param {string} arg_msg - message string.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger INFO implementation.\r\n\t * @absract\r\n\t * @class Logger\r\n\t * @method info_self\r\n\t * \r\n\t * @param {string} arg_msg - message string.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger WARN implementation.\r\n\t * @absract\r\n\t * @class Logger\r\n\t * @method warn_self\r\n\t * \r\n\t * @param {string} arg_msg - message string.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger ERROR implementation.\r\n\t * @absract\r\n\t * @class Logger\r\n\t * @method error_self\r\n\t * \r\n\t * @param {string} arg_msg - message string.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Trace INFO message on \"enter trace group\".\r\n\t * \r\n\t * @param {string} arg_context - trace context.\r\n\t * @param {string} arg_group - trace group name.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tenter_group(arg_context, arg_group)\r\n\t{\r\n\t\tif (this.is_trace_enabled && this.is_trace_enabled_bt)\r\n\t\t{\r\n\t\t\tif ( T.isFunction(this.info_self) )\r\n\t\t\t{\r\n\t\t\t\tthis.info_self(arg_context, '[' + arg_group + '] ------- ENTER -------')\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Trace INFO message on \"leave trace group\".\r\n\t * \r\n\t * @param {string} arg_context - trace context.\r\n\t * @param {string} arg_group - trace group name.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tleave_group(arg_context, arg_group)\r\n\t{\r\n\t\tif (this.is_trace_enabled && this.is_trace_enabled_bt)\r\n\t\t{\r\n\t\t\tif ( T.isFunction(this.info_self) )\r\n\t\t\t{\r\n\t\t\t\tthis.info_self(arg_context, '[' + arg_group + '] ------- LEAVE -------')\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Trace INFO trace level 1 separator.\r\n\t * \r\n\t * @param {string} arg_context - trace context.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tseparate_level_1(arg_context)\r\n\t{\r\n\t\tif (this.is_trace_enabled && this.is_trace_enabled_bt)\r\n\t\t{\r\n\t\t\tif ( T.isFunction(this.info_self) )\r\n\t\t\t{\r\n\t\t\t\tthis.info_self(arg_context, '==========================================================================================================================')\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Trace INFO trace level 2 separator.\r\n\t * \r\n\t * @param {string} arg_context - trace context.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tseparate_level_2(arg_context)\r\n\t{\r\n\t\tif (this.is_trace_enabled && this.is_trace_enabled_bt)\r\n\t\t{\r\n\t\t\tif ( T.isFunction(this.info_self) )\r\n\t\t\t{\r\n\t\t\t\tthis.info_self(arg_context, '--------------------------------------------------------------------------------------------------------------------------')\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Trace INFO trace level 3 separator.\r\n\t * \r\n\t * @param {string} arg_context - trace context.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tseparate_level_3(arg_context)\r\n\t{\r\n\t\tif (this.is_trace_enabled && this.is_trace_enabled_bt)\r\n\t\t{\r\n\t\t\tif ( T.isFunction(this.info_self) )\r\n\t\t\t{\r\n\t\t\t\tthis.info_self(arg_context, '*************************************************************************************************************************')\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/loggers/logger.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 753,
    "kind": "class",
    "name": "Logger",
    "memberof": "js/loggers/logger.js",
    "static": true,
    "longname": "js/loggers/logger.js~Logger",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/loggers/logger.js",
    "importStyle": "Logger",
    "description": "",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Logger base class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 754,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/loggers/logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger.js~Logger#constructor",
    "access": "public",
    "description": "Create a Logger instance.",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "trace context."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 755,
    "kind": "member",
    "name": "is_logger",
    "memberof": "js/loggers/logger.js~Logger",
    "static": false,
    "longname": "js/loggers/logger.js~Logger#is_logger",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 756,
    "kind": "member",
    "name": "is_trace_enabled",
    "memberof": "js/loggers/logger.js~Logger",
    "static": false,
    "longname": "js/loggers/logger.js~Logger#is_trace_enabled",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 757,
    "kind": "member",
    "name": "is_trace_enabled_debug",
    "memberof": "js/loggers/logger.js~Logger",
    "static": false,
    "longname": "js/loggers/logger.js~Logger#is_trace_enabled_debug",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 758,
    "kind": "member",
    "name": "is_trace_enabled_info",
    "memberof": "js/loggers/logger.js~Logger",
    "static": false,
    "longname": "js/loggers/logger.js~Logger#is_trace_enabled_info",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 759,
    "kind": "member",
    "name": "is_trace_enabled_warn",
    "memberof": "js/loggers/logger.js~Logger",
    "static": false,
    "longname": "js/loggers/logger.js~Logger#is_trace_enabled_warn",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 760,
    "kind": "member",
    "name": "is_trace_enabled_bt",
    "memberof": "js/loggers/logger.js~Logger",
    "static": false,
    "longname": "js/loggers/logger.js~Logger#is_trace_enabled_bt",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 761,
    "kind": "member",
    "name": "is_trace_enabled_error",
    "memberof": "js/loggers/logger.js~Logger",
    "static": false,
    "longname": "js/loggers/logger.js~Logger#is_trace_enabled_error",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 762,
    "kind": "member",
    "name": "uid",
    "memberof": "js/loggers/logger.js~Logger",
    "static": false,
    "longname": "js/loggers/logger.js~Logger#uid",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 763,
    "kind": "method",
    "name": "get_uid",
    "memberof": "js/loggers/logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger.js~Logger#get_uid",
    "access": "public",
    "description": "Get logger uid.",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 764,
    "kind": "method",
    "name": "enable_trace",
    "memberof": "js/loggers/logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger.js~Logger#enable_trace",
    "access": "public",
    "description": "Enable traces.",
    "lineNumber": 56,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 766,
    "kind": "method",
    "name": "disable_trace",
    "memberof": "js/loggers/logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger.js~Logger#disable_trace",
    "access": "public",
    "description": "Disable traces.",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 768,
    "kind": "method",
    "name": "get_trace",
    "memberof": "js/loggers/logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger.js~Logger#get_trace",
    "access": "public",
    "description": "Get trace flag.",
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 769,
    "kind": "method",
    "name": "set_trace",
    "memberof": "js/loggers/logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger.js~Logger#set_trace",
    "access": "public",
    "description": "Set trace flag.",
    "lineNumber": 94,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_enabled",
        "description": "trace flag."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 771,
    "kind": "method",
    "name": "toggle_trace",
    "memberof": "js/loggers/logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger.js~Logger#toggle_trace",
    "access": "public",
    "description": "Toggle trace flag.",
    "lineNumber": 106,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 773,
    "kind": "method",
    "name": "format",
    "memberof": "js/loggers/logger.js~Logger",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/loggers/logger.js~Logger.format",
    "access": "public",
    "description": "Get formatted trace message.",
    "lineNumber": 121,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - formatted trace message."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "messages to format."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "formatted trace message."
    }
  },
  {
    "__docId__": 774,
    "kind": "method",
    "name": "debug",
    "memberof": "js/loggers/logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger.js~Logger#debug",
    "access": "public",
    "description": "Trace DEBUG formatted message.",
    "lineNumber": 189,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "variadic messages to format."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 775,
    "kind": "method",
    "name": "info",
    "memberof": "js/loggers/logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger.js~Logger#info",
    "access": "public",
    "description": "Trace INFO formatted message.",
    "lineNumber": 209,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "variadic messages to format."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 776,
    "kind": "method",
    "name": "warn",
    "memberof": "js/loggers/logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger.js~Logger#warn",
    "access": "public",
    "description": "Trace WARN formatted message.",
    "lineNumber": 229,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "variadic messages to format."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 777,
    "kind": "method",
    "name": "error",
    "memberof": "js/loggers/logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger.js~Logger#error",
    "access": "public",
    "description": "Trace ERROR formatted message.",
    "lineNumber": 249,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "variadic messages to format."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 778,
    "kind": "method",
    "name": "enter_group",
    "memberof": "js/loggers/logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger.js~Logger#enter_group",
    "access": "public",
    "description": "Trace INFO message on \"enter trace group\".",
    "lineNumber": 319,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "trace context."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_group",
        "description": "trace group name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 779,
    "kind": "method",
    "name": "leave_group",
    "memberof": "js/loggers/logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger.js~Logger#leave_group",
    "access": "public",
    "description": "Trace INFO message on \"leave trace group\".",
    "lineNumber": 340,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "trace context."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_group",
        "description": "trace group name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 780,
    "kind": "method",
    "name": "separate_level_1",
    "memberof": "js/loggers/logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger.js~Logger#separate_level_1",
    "access": "public",
    "description": "Trace INFO trace level 1 separator.",
    "lineNumber": 360,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "trace context."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 781,
    "kind": "method",
    "name": "separate_level_2",
    "memberof": "js/loggers/logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger.js~Logger#separate_level_2",
    "access": "public",
    "description": "Trace INFO trace level 2 separator.",
    "lineNumber": 380,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "trace context."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 782,
    "kind": "method",
    "name": "separate_level_3",
    "memberof": "js/loggers/logger.js~Logger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger.js~Logger#separate_level_3",
    "access": "public",
    "description": "Trace INFO trace level 3 separator.",
    "lineNumber": 400,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "trace context."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 783,
    "kind": "file",
    "name": "js/loggers/logger_console.js",
    "content": "\r\nimport Logger from './logger'\r\n\r\n\r\n\r\n/**\r\n * @file Console logger class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class LoggerConsole extends Logger\r\n{\r\n\t/**\r\n\t * Create a Console Logger instance.\r\n\t * @param {string} arg_context - trace context.\r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_enabled)\r\n\t{\r\n\t\tsuper(arg_enabled)\r\n\t\t\r\n\t\tthis.is_logger_console = true\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger DEBUG implementation.\r\n\t * \r\n\t * @param {array} arg_opds - log record array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdebug_self(arg_opds)\r\n\t{\r\n\t\tconsole.log( Logger.format(arg_opds) )\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger INFO implementation.\r\n\t * \r\n\t * @param {array} arg_opds - log record array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tinfo_self(arg_opds)\r\n\t{\r\n\t\tconsole.info( Logger.format(arg_opds) )\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger WARN implementation.\r\n\t * \r\n\t * @param {array} arg_opds - log record array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\twarn_self(arg_opds)\r\n\t{\r\n\t\tconsole.warn( Logger.format(arg_opds) )\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger ERROR implementation.\r\n\t * \r\n\t * @param {array} arg_opds - log record array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\terror_self(arg_opds)\r\n\t{\r\n\t\tconsole.error( Logger.format(arg_opds) )\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/loggers/logger_console.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 784,
    "kind": "class",
    "name": "LoggerConsole",
    "memberof": "js/loggers/logger_console.js",
    "static": true,
    "longname": "js/loggers/logger_console.js~LoggerConsole",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/loggers/logger_console.js",
    "importStyle": "LoggerConsole",
    "description": "",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Console logger class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/loggers/logger.js~Logger"
    ]
  },
  {
    "__docId__": 785,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/loggers/logger_console.js~LoggerConsole",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_console.js~LoggerConsole#constructor",
    "access": "public",
    "description": "Create a Console Logger instance.",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "trace context."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 786,
    "kind": "member",
    "name": "is_logger_console",
    "memberof": "js/loggers/logger_console.js~LoggerConsole",
    "static": false,
    "longname": "js/loggers/logger_console.js~LoggerConsole#is_logger_console",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 787,
    "kind": "method",
    "name": "debug_self",
    "memberof": "js/loggers/logger_console.js~LoggerConsole",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_console.js~LoggerConsole#debug_self",
    "access": "public",
    "description": "Logger DEBUG implementation.",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "log record array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 788,
    "kind": "method",
    "name": "info_self",
    "memberof": "js/loggers/logger_console.js~LoggerConsole",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_console.js~LoggerConsole#info_self",
    "access": "public",
    "description": "Logger INFO implementation.",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "log record array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 789,
    "kind": "method",
    "name": "warn_self",
    "memberof": "js/loggers/logger_console.js~LoggerConsole",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_console.js~LoggerConsole#warn_self",
    "access": "public",
    "description": "Logger WARN implementation.",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "log record array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 790,
    "kind": "method",
    "name": "error_self",
    "memberof": "js/loggers/logger_console.js~LoggerConsole",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_console.js~LoggerConsole#error_self",
    "access": "public",
    "description": "Logger ERROR implementation.",
    "lineNumber": 73,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "log record array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 791,
    "kind": "file",
    "name": "js/loggers/logger_console_standalone.js",
    "content": "// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport Logger from './logger'\r\n\r\n\r\n\r\n/**\r\n * @file Console logger class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class LoggerConsoleStandalone extends Logger\r\n{\r\n\t/**\r\n\t * Create a Console Logger instance.\r\n\t * @param {string} arg_context - trace context.\r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_enabled)\r\n\t{\r\n\t\tsuper(arg_enabled)\r\n\t\t\r\n\t\tthis.is_logger_console = true\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Trace DEBUG formatted message.\r\n\t * \r\n\t * @param {string|array} arg_opds - variadic messages to format.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdebug(...arg_opds)\r\n\t{\r\n\t\tif (this.is_trace_enabled && this.is_trace_enabled_debug)\r\n\t\t{\r\n\t\t\tif ( T.isFunction(this.debug_self) )\r\n\t\t\t{\r\n\t\t\t\tthis.debug_self(arg_opds)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Trace INFO formatted message.\r\n\t * \r\n\t * @param {string|array} arg_opds - variadic messages to format.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tinfo(...arg_opds)\r\n\t{\r\n\t\tif (this.is_trace_enabled && this.is_trace_enabled_info)\r\n\t\t{\r\n\t\t\tif ( T.isFunction(this.info_self) )\r\n\t\t\t{\r\n\t\t\t\tthis.info_self(arg_opds)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Trace WARN formatted message.\r\n\t * \r\n\t * @param {string|array} arg_opds - variadic messages to format.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\twarn(...arg_opds)\r\n\t{\r\n\t\tif (this.is_trace_enabled && this.is_trace_enabled_warn)\r\n\t\t{\r\n\t\t\tif ( T.isFunction(this.warn_self) )\r\n\t\t\t{\r\n\t\t\t\tthis.warn_self(arg_opds)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Trace ERROR formatted message.\r\n\t * \r\n\t * @param {string|array} arg_opds - variadic messages to format.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\terror(...arg_opds)\r\n\t{\r\n\t\tif (this.is_trace_enabled && this.is_trace_enabled_error)\r\n\t\t{\r\n\t\t\tif ( T.isFunction(this.error_self) )\r\n\t\t\t{\r\n\t\t\t\tthis.error_self(arg_opds)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger DEBUG implementation.\r\n\t * \r\n\t * @param {array} arg_opds - log record array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdebug_self(...arg_opds)\r\n\t{\r\n\t\tconsole.log( Logger.format(arg_opds) )\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger INFO implementation.\r\n\t * \r\n\t * @param {array} arg_opds - log record array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tinfo_self(...arg_opds)\r\n\t{\r\n\t\tconsole.info( Logger.format(arg_opds) )\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger WARN implementation.\r\n\t * \r\n\t * @param {array} arg_opds - log record array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\twarn_self(...arg_opds)\r\n\t{\r\n\t\tconsole.warn( Logger.format(arg_opds) )\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger ERROR implementation.\r\n\t * \r\n\t * @param {array} arg_opds - log record array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\terror_self(...arg_opds)\r\n\t{\r\n\t\tconsole.error( Logger.format(arg_opds) )\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/loggers/logger_console_standalone.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 792,
    "kind": "class",
    "name": "LoggerConsoleStandalone",
    "memberof": "js/loggers/logger_console_standalone.js",
    "static": true,
    "longname": "js/loggers/logger_console_standalone.js~LoggerConsoleStandalone",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/loggers/logger_console_standalone.js",
    "importStyle": "LoggerConsoleStandalone",
    "description": "",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Console logger class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/loggers/logger.js~Logger"
    ]
  },
  {
    "__docId__": 793,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/loggers/logger_console_standalone.js~LoggerConsoleStandalone",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_console_standalone.js~LoggerConsoleStandalone#constructor",
    "access": "public",
    "description": "Create a Console Logger instance.",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "trace context."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 794,
    "kind": "member",
    "name": "is_logger_console",
    "memberof": "js/loggers/logger_console_standalone.js~LoggerConsoleStandalone",
    "static": false,
    "longname": "js/loggers/logger_console_standalone.js~LoggerConsoleStandalone#is_logger_console",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 795,
    "kind": "method",
    "name": "debug",
    "memberof": "js/loggers/logger_console_standalone.js~LoggerConsoleStandalone",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_console_standalone.js~LoggerConsoleStandalone#debug",
    "access": "public",
    "description": "Trace DEBUG formatted message.",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "variadic messages to format."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 796,
    "kind": "method",
    "name": "info",
    "memberof": "js/loggers/logger_console_standalone.js~LoggerConsoleStandalone",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_console_standalone.js~LoggerConsoleStandalone#info",
    "access": "public",
    "description": "Trace INFO formatted message.",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "variadic messages to format."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 797,
    "kind": "method",
    "name": "warn",
    "memberof": "js/loggers/logger_console_standalone.js~LoggerConsoleStandalone",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_console_standalone.js~LoggerConsoleStandalone#warn",
    "access": "public",
    "description": "Trace WARN formatted message.",
    "lineNumber": 74,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "variadic messages to format."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 798,
    "kind": "method",
    "name": "error",
    "memberof": "js/loggers/logger_console_standalone.js~LoggerConsoleStandalone",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_console_standalone.js~LoggerConsoleStandalone#error",
    "access": "public",
    "description": "Trace ERROR formatted message.",
    "lineNumber": 94,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "variadic messages to format."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 799,
    "kind": "method",
    "name": "debug_self",
    "memberof": "js/loggers/logger_console_standalone.js~LoggerConsoleStandalone",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_console_standalone.js~LoggerConsoleStandalone#debug_self",
    "access": "public",
    "description": "Logger DEBUG implementation.",
    "lineNumber": 114,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "log record array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 800,
    "kind": "method",
    "name": "info_self",
    "memberof": "js/loggers/logger_console_standalone.js~LoggerConsoleStandalone",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_console_standalone.js~LoggerConsoleStandalone#info_self",
    "access": "public",
    "description": "Logger INFO implementation.",
    "lineNumber": 127,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "log record array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 801,
    "kind": "method",
    "name": "warn_self",
    "memberof": "js/loggers/logger_console_standalone.js~LoggerConsoleStandalone",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_console_standalone.js~LoggerConsoleStandalone#warn_self",
    "access": "public",
    "description": "Logger WARN implementation.",
    "lineNumber": 140,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "log record array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 802,
    "kind": "method",
    "name": "error_self",
    "memberof": "js/loggers/logger_console_standalone.js~LoggerConsoleStandalone",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_console_standalone.js~LoggerConsoleStandalone#error_self",
    "access": "public",
    "description": "Logger ERROR implementation.",
    "lineNumber": 153,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "log record array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 803,
    "kind": "file",
    "name": "js/loggers/logger_manager.js",
    "content": "// NPM IMPORTS\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport LoggerMsgPost from './logger_msg_post'\r\nimport {is_server} from '../utils/is_browser'\r\n\r\n\r\n// const context = 'common/loggers/logger_manager'\r\n\r\n\r\n\r\n/**\r\n * @file Logger manager class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class LoggerManager\r\n{\r\n\t/**\r\n\t * Create a Logger manager instance.\r\n\t * @param {object} arg_settings - loggers settings\r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_settings)\r\n\t{\r\n\t\tthis.is_logger_manager = true\r\n\t\tthis.loggers = []\r\n\t\tthis._runtime = arg_runtime\r\n\t\t\r\n\t\tif (arg_settings)\r\n\t\t{\r\n\t\t\tthis.load(arg_settings)\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Load settings.\r\n\t * \r\n\t * @param {object} arg_settings - loggers settings.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tload(arg_settings)\r\n\t{\r\n\t\t// DEBUG\r\n\t\t// console.log(arg_settings, context + ':arg_settings')\r\n\t\t\r\n\t\tif (this.loggers.length > 0)\r\n\t\t{\r\n\t\t\tconst old_loggers = this.loggers\r\n\t\t\told_loggers.forEach(\r\n\t\t\t\t(logger, index) => {\r\n\t\t\t\t\tdelete this.loggers[index]\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tthis.loggers = []\r\n\t\t}\r\n\r\n\r\n\t\t// ADD LOGGER ADAPTERS\r\n\t\tif (this._runtime.node)\r\n\t\t{\r\n\t\t\t// console.log('add stream logger')\r\n\t\t\tthis.loggers.push( new LoggerMsgPost(true, this._runtime.node.get_logs_bus().get_input_stream()) )\r\n\t\t\t// this.info('msg logger created')\r\n\t\t}\r\n\r\n\t\tif ( T.isObject(arg_settings) && ('console' in arg_settings) )\r\n\t\t{\r\n\t\t\tconst LoggerConsole = require('./logger_console').default\r\n\t\t\t// console.log('add console logger')\r\n\t\t\tthis.loggers.push( new LoggerConsole(true, arg_settings['console']) )\r\n\t\t}\r\n\r\n\t\tif ( is_server() && T.isObject(arg_settings) && ('winston' in arg_settings) )\r\n\t\t{\r\n\t\t\tconst LoggerWinston = require('./logger_winston').default\r\n\t\t\t// console.log('add winston logger')\r\n\t\t\tthis.loggers.push( new LoggerWinston(true, arg_settings['winston']) )\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tthis.$settings = arg_settings\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get tracez settings for Loggable.should_trace.\r\n\t */\r\n\tget_traces_settings()\r\n\t{\r\n\t\tif ( T.isObject(this.$settings) && T.isObject(this.$settings.traces) )\r\n\t\t{\r\n\t\t\treturn this.$settings.traces\r\n\t\t}\r\n\r\n\t\treturn undefined\r\n\r\n\t\t// TODO INHERIT FROM SETTINGSABLE\r\n\t\t// return this.get_setting('traces', undefined)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Enable traces.\r\n\t * @returns {nothing}\r\n\t */\r\n\tenable_trace()\r\n\t{\r\n\t\tthis.loggers.forEach(\r\n\t\t\t(logger) => {\r\n\t\t\t\tlogger.enable_trace()\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Disable traces.\r\n\t * @returns {nothing}\r\n\t */\r\n\tdisable_trace()\r\n\t{\r\n\t\tthis.loggers.forEach(\r\n\t\t\t(logger) => {\r\n\t\t\t\tlogger.disable_trace()\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Get trace flag.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget_trace()\r\n\t{\r\n\t\tlet trace = true\r\n\t\tthis.loggers.forEach(\r\n\t\t\t(logger) => {\r\n\t\t\t\ttrace = trace && logger.get_trace()\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn trace\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Set trace flag.\r\n\t * @param {boolean} arg_value - trace flag.\r\n\t * @returns {nothing}\r\n\t */\r\n\tset_trace(arg_value)\r\n\t{\r\n\t\tthis.loggers.forEach(\r\n\t\t\t(logger) => {\r\n\t\t\t\tlogger.set_trace(arg_value)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Toggle trace flag.\r\n\t * @returns {boolean}\r\n\t */\r\n\ttoggle_trace()\r\n\t{\r\n\t\tthis.loggers.forEach(\r\n\t\t\t(logger) => {\r\n\t\t\t\tlogger.toggle_trace()\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Loggers DEBUG implementation.\r\n\t * @param {string|array} arg_opds - messages strings.\r\n\t * @returns {nothing}\r\n\t */\r\n\tdebug(...arg_opds)\r\n\t{\r\n\t\tthis.loggers.forEach(\r\n\t\t\t(logger) => {\r\n\t\t\t\tlogger.debug(arg_opds)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Loggers INFO implementation.\r\n\t * @param {string|array} arg_opds - messages strings.\r\n\t * @returns {nothing}\r\n\t */\r\n\tinfo(...arg_opds)\r\n\t{\r\n\t\tthis.loggers.forEach(\r\n\t\t\t(logger) => {\r\n\t\t\t\tlogger.info(arg_opds)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Loggers WARN implementation.\r\n\t * @param {string|array} arg_opds - messages strings.\r\n\t * @returns {nothing}\r\n\t */\r\n\twarn(...arg_opds)\r\n\t{\r\n\t\tthis.loggers.forEach(\r\n\t\t\t(logger) => {\r\n\t\t\t\tlogger.warn(arg_opds)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Loggers ERROR implementation.\r\n\t * @param {string|array} arg_opds - messages strings.\r\n\t * @returns {nothing}\r\n\t */\r\n\terror(...arg_opds)\r\n\t{\r\n\t\tthis.loggers.forEach(\r\n\t\t\t(logger) => {\r\n\t\t\t\tlogger.error(arg_opds)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/loggers/logger_manager.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 804,
    "kind": "class",
    "name": "LoggerManager",
    "memberof": "js/loggers/logger_manager.js",
    "static": true,
    "longname": "js/loggers/logger_manager.js~LoggerManager",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/loggers/logger_manager.js",
    "importStyle": "LoggerManager",
    "description": "",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Logger manager class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 805,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/loggers/logger_manager.js~LoggerManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_manager.js~LoggerManager#constructor",
    "access": "public",
    "description": "Create a Logger manager instance.",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "loggers settings"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 806,
    "kind": "member",
    "name": "is_logger_manager",
    "memberof": "js/loggers/logger_manager.js~LoggerManager",
    "static": false,
    "longname": "js/loggers/logger_manager.js~LoggerManager#is_logger_manager",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 807,
    "kind": "member",
    "name": "loggers",
    "memberof": "js/loggers/logger_manager.js~LoggerManager",
    "static": false,
    "longname": "js/loggers/logger_manager.js~LoggerManager#loggers",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 808,
    "kind": "member",
    "name": "_runtime",
    "memberof": "js/loggers/logger_manager.js~LoggerManager",
    "static": false,
    "longname": "js/loggers/logger_manager.js~LoggerManager#_runtime",
    "access": "private",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 809,
    "kind": "method",
    "name": "load",
    "memberof": "js/loggers/logger_manager.js~LoggerManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_manager.js~LoggerManager#load",
    "access": "public",
    "description": "Load settings.",
    "lineNumber": 45,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "loggers settings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 811,
    "kind": "member",
    "name": "$settings",
    "memberof": "js/loggers/logger_manager.js~LoggerManager",
    "static": false,
    "longname": "js/loggers/logger_manager.js~LoggerManager#$settings",
    "access": "public",
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 812,
    "kind": "method",
    "name": "get_traces_settings",
    "memberof": "js/loggers/logger_manager.js~LoggerManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_manager.js~LoggerManager#get_traces_settings",
    "access": "public",
    "description": "Get tracez settings for Loggable.should_trace.",
    "lineNumber": 93,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 813,
    "kind": "method",
    "name": "enable_trace",
    "memberof": "js/loggers/logger_manager.js~LoggerManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_manager.js~LoggerManager#enable_trace",
    "access": "public",
    "description": "Enable traces.",
    "lineNumber": 111,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 814,
    "kind": "method",
    "name": "disable_trace",
    "memberof": "js/loggers/logger_manager.js~LoggerManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_manager.js~LoggerManager#disable_trace",
    "access": "public",
    "description": "Disable traces.",
    "lineNumber": 125,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 815,
    "kind": "method",
    "name": "get_trace",
    "memberof": "js/loggers/logger_manager.js~LoggerManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_manager.js~LoggerManager#get_trace",
    "access": "public",
    "description": "Get trace flag.",
    "lineNumber": 139,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 816,
    "kind": "method",
    "name": "set_trace",
    "memberof": "js/loggers/logger_manager.js~LoggerManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_manager.js~LoggerManager#set_trace",
    "access": "public",
    "description": "Set trace flag.",
    "lineNumber": 156,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_value",
        "description": "trace flag."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 817,
    "kind": "method",
    "name": "toggle_trace",
    "memberof": "js/loggers/logger_manager.js~LoggerManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_manager.js~LoggerManager#toggle_trace",
    "access": "public",
    "description": "Toggle trace flag.",
    "lineNumber": 170,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 818,
    "kind": "method",
    "name": "debug",
    "memberof": "js/loggers/logger_manager.js~LoggerManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_manager.js~LoggerManager#debug",
    "access": "public",
    "description": "Loggers DEBUG implementation.",
    "lineNumber": 185,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "messages strings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 819,
    "kind": "method",
    "name": "info",
    "memberof": "js/loggers/logger_manager.js~LoggerManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_manager.js~LoggerManager#info",
    "access": "public",
    "description": "Loggers INFO implementation.",
    "lineNumber": 200,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "messages strings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 820,
    "kind": "method",
    "name": "warn",
    "memberof": "js/loggers/logger_manager.js~LoggerManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_manager.js~LoggerManager#warn",
    "access": "public",
    "description": "Loggers WARN implementation.",
    "lineNumber": 215,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "messages strings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 821,
    "kind": "method",
    "name": "error",
    "memberof": "js/loggers/logger_manager.js~LoggerManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_manager.js~LoggerManager#error",
    "access": "public",
    "description": "Loggers ERROR implementation.",
    "lineNumber": 230,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "messages strings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 822,
    "kind": "file",
    "name": "js/loggers/logger_msg_post.js",
    "content": "\r\n// NPM IMPORTS\r\n// import assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport Logger from './logger'\r\nimport DistributedLogs from '../base/distributed_logs'\r\n\r\n\r\n// const context = 'common/loggers/logger_msg_post'\r\n\r\n\r\n\r\n/**\r\n * @file Message post logger class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class LoggerMessagePost extends Logger\r\n{\r\n\t/**\r\n\t * Create a Console Logger instance.\r\n\t * @param {boolean} arg_enabled - traces are enabled.\r\n\t * @param {Stream} arg_logs_stream - output logs stream.\r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_enabled, arg_logs_stream)\r\n\t{\r\n\t\tsuper(arg_enabled)\r\n\t\t\r\n\t\tthis.is_logger_message_post = true\r\n\t\t\r\n\t\tthis.logs_stream = arg_logs_stream\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger implementation.\r\n\t * \r\n\t * @param {string} arg_level - log level string.\r\n\t * @param {string} arg_text - message string.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tprocess(arg_level, arg_text)\r\n\t{\r\n\t\tif ( this.get_trace() )\r\n\t\t{\r\n\t\t\tconst logs_record = {\r\n\t\t\t\tts:new Date().getTime().toString(),\r\n\t\t\t\tlevel:arg_level,\r\n\t\t\t\tlogs:[arg_text]\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// console.log('LoggerMessagePost.process:level=%s text=%s', arg_level, arg_text)\r\n\t\t\tconst msg = new DistributedLogs('this', 'logs_server', logs_record.ts, logs_record.level, logs_record.logs)\r\n\r\n\t\t\tthis.logs_stream.push(msg)\r\n\t\t\t// this.logs_stream.subscribe(\r\n\t\t\t// \t(logs_record) => {\r\n\t\t\t// \t\tconsole.log('LoggerMessagePost: new logs record on the bus', logs_record)\r\n\t\t\t// \t}\r\n\t\t\t// )\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger DEBUG implementation.\r\n\t * @param {string} arg_msg - message string.\r\n\t * @returns {nothing}\r\n\t */\r\n\tdebug_self(arg_msg)\r\n\t{\r\n\t\tthis.process('debug', arg_msg)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger INFO implementation.\r\n\t * @param {string} arg_msg - message string.\r\n\t * @returns {nothing}\r\n\t */\r\n\tinfo_self(arg_msg)\r\n\t{\r\n\t\tthis.process('info', arg_msg)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger WARN implementation.\r\n\t * @param {string} arg_msg - message string.\r\n\t * @returns {nothing}\r\n\t */\r\n\twarn_self(arg_msg)\r\n\t{\r\n\t\tthis.process('warn', arg_msg)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger ERROR implementation.\r\n\t * @param {string} arg_msg - message string.\r\n\t * @returns {nothing}\r\n\t */\r\n\terror_self(arg_msg)\r\n\t{\r\n\t\tthis.process('error', arg_msg)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/loggers/logger_msg_post.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 823,
    "kind": "class",
    "name": "LoggerMessagePost",
    "memberof": "js/loggers/logger_msg_post.js",
    "static": true,
    "longname": "js/loggers/logger_msg_post.js~LoggerMessagePost",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/loggers/logger_msg_post.js",
    "importStyle": "LoggerMessagePost",
    "description": "",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Message post logger class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/loggers/logger.js~Logger"
    ]
  },
  {
    "__docId__": 824,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/loggers/logger_msg_post.js~LoggerMessagePost",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_msg_post.js~LoggerMessagePost#constructor",
    "access": "public",
    "description": "Create a Console Logger instance.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_enabled",
        "description": "traces are enabled."
      },
      {
        "nullable": null,
        "types": [
          "Stream"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_logs_stream",
        "description": "output logs stream."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 825,
    "kind": "member",
    "name": "is_logger_message_post",
    "memberof": "js/loggers/logger_msg_post.js~LoggerMessagePost",
    "static": false,
    "longname": "js/loggers/logger_msg_post.js~LoggerMessagePost#is_logger_message_post",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 826,
    "kind": "member",
    "name": "logs_stream",
    "memberof": "js/loggers/logger_msg_post.js~LoggerMessagePost",
    "static": false,
    "longname": "js/loggers/logger_msg_post.js~LoggerMessagePost#logs_stream",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 827,
    "kind": "method",
    "name": "process",
    "memberof": "js/loggers/logger_msg_post.js~LoggerMessagePost",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_msg_post.js~LoggerMessagePost#process",
    "access": "public",
    "description": "Logger implementation.",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_level",
        "description": "log level string."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_text",
        "description": "message string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 828,
    "kind": "method",
    "name": "debug_self",
    "memberof": "js/loggers/logger_msg_post.js~LoggerMessagePost",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_msg_post.js~LoggerMessagePost#debug_self",
    "access": "public",
    "description": "Logger DEBUG implementation.",
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_msg",
        "description": "message string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 829,
    "kind": "method",
    "name": "info_self",
    "memberof": "js/loggers/logger_msg_post.js~LoggerMessagePost",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_msg_post.js~LoggerMessagePost#info_self",
    "access": "public",
    "description": "Logger INFO implementation.",
    "lineNumber": 86,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_msg",
        "description": "message string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 830,
    "kind": "method",
    "name": "warn_self",
    "memberof": "js/loggers/logger_msg_post.js~LoggerMessagePost",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_msg_post.js~LoggerMessagePost#warn_self",
    "access": "public",
    "description": "Logger WARN implementation.",
    "lineNumber": 97,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_msg",
        "description": "message string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 831,
    "kind": "method",
    "name": "error_self",
    "memberof": "js/loggers/logger_msg_post.js~LoggerMessagePost",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_msg_post.js~LoggerMessagePost#error_self",
    "access": "public",
    "description": "Logger ERROR implementation.",
    "lineNumber": 108,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_msg",
        "description": "message string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 832,
    "kind": "file",
    "name": "js/loggers/logger_winston.js",
    "content": "\r\n// NPM IMPORTS\r\nimport winston from 'winston'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport Logger from './logger'\r\n\r\n\r\n// const context = 'common/loggers/logger_winston'\r\n\r\n\r\n\r\nconst customLevels = {\r\n\tlevels: {\r\n\t\tdebug: 3,\r\n\t\tinfo: 2,\r\n\t\twarn: 1,\r\n\t\terror: 0\r\n\t},\r\n\tcolors: {\r\n\t\tdebug: 'blue',\r\n\t\tinfo: 'green',\r\n\t\twarn: 'yellow',\r\n\t\terror: 'red'\r\n\t}\r\n}\r\n\r\n\r\n\r\n/**\r\n * @file Winston logger class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class LoggerWinston extends Logger\r\n{\r\n\t/**\r\n\t * Create a Winston Logger instance.\r\n\t * @param {string} arg_context - trace context.\r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_enabled, arg_settings)\r\n\t{\r\n\t\tsuper(arg_enabled)\r\n\t\t\r\n\t\tthis.is_logger_winston = true\r\n\r\n\t\tlet transports = []\r\n\t\t\r\n\t\t// console.log(arg_settings, context + ':' + arg_settings)\r\n\t\tif ( T.isObject(arg_settings) )\r\n\t\t{\r\n\t\t\tif ( T.isObject(arg_settings.transports) )\r\n\t\t\t{\r\n\t\t\t\t// console.log(context + ':transport config found', arg_settings.transports)\r\n\t\t\t\tconst transports_names = Object.keys(arg_settings.transports)\r\n\t\t\t\ttransports_names.forEach(\r\n\t\t\t\t\t(transport_name) => {\r\n\t\t\t\t\t\tconst transport_cfg = arg_settings.transports[transport_name]\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttransport_cfg.name = transport_name\r\n\r\n\t\t\t\t\t\tif ( ! T.isString(transport_cfg.type) )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tswitch(transport_cfg.type)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcase 'file': {\r\n\t\t\t\t\t\t\t\tconst transport = this.create_file_transport(transport_cfg)\r\n\t\t\t\t\t\t\t\ttransports.push(transport)\r\n\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcase 'console': {\r\n\t\t\t\t\t\t\t\tconst transport = this.create_console_transport(transport_cfg)\r\n\t\t\t\t\t\t\t\ttransports.push(transport)\r\n\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif ( transports.length == 0 )\r\n\t\t{\r\n\t\t\t// console.log(context + ':no transport config found')\r\n\t\t\tconst console_transport = this.create_console_transport(undefined)\r\n\t\t\tconst file_transport = this.create_file_transport(undefined)\r\n\t\t\ttransports.push(console_transport)\r\n\t\t\ttransports.push(file_transport)\r\n\t\t}\r\n\t\t\r\n\t\tconst logger_cfg = {\r\n\t\t\tlevels: customLevels.levels,\r\n\t\t\tcolors: customLevels.colors,\r\n\t\t\ttransports: transports\r\n\t\t}\r\n\t\t\r\n\t\tthis.logger = new (winston.Logger)(logger_cfg)\r\n\r\n\t\twinston.addColors(customLevels.colors)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a console transport for Winston logger.\r\n\t * @param {object} arg_transport_cfg - console transport settings.\r\n\t * @returns {winston.transports.Console}\r\n\t */\r\n\tcreate_console_transport(arg_transport_cfg)\r\n\t{\r\n\t\targ_transport_cfg = T.isObject(arg_transport_cfg) ? arg_transport_cfg : {}\r\n\r\n\t\t// DEFAULT CONFIGURATION\r\n\t\tconst default_transport_cfg = {\r\n\t\t\tlevel: 'debug',\r\n\t\t\t\r\n\t\t\ttimestamp: false,\r\n\t\t\t\r\n\t\t\tformatter: function(options)\r\n\t\t\t{\r\n\t\t\t\tconst msg = undefined !== options.message ? options.message : ''\r\n\t\t\t\tconst meta = options.meta && Object.keys(options.meta).length ? options.meta : undefined\r\n\t\t\t\t// const payload = meta ? '\\n\\t' + JSON.stringify(meta) : '' \r\n\t\t\t\treturn /*options.timestamp().toString().substr(-6) +*/' pid='+ process.pid + ' '+ winston.config.colorize( options.level, options.level.toUpperCase() )\r\n\t\t\t\t\t+ msg\r\n\t\t\t\t\t+ '\\n\\t' + meta[0] // TS\r\n\t\t\t\t\t+ ' : ' + meta[1] // CONTEXT\r\n\t\t\t\t\t+ ' : ' + meta[2] // NAME\r\n\t\t\t\t\t+ ' : ' + meta[4] // ACTION\r\n\t\t\t\t\t+ ' : ' + meta[3] // ?\r\n\t\t\t\t\t+ '\\n\\t text = ' + meta[5] // TEXT\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tcolorize:true\r\n\t\t}\r\n\t\t\r\n\t\t// CHECK CONFIGURATION\r\n\t\tif ( ! T.isString(arg_transport_cfg.level) || ! (arg_transport_cfg.level in customLevels.levels) )\r\n\t\t{\r\n\t\t\targ_transport_cfg.level = default_transport_cfg.level\r\n\t\t}\r\n\t\tif ( ! T.isFunction(arg_transport_cfg.timestamp) )\r\n\t\t{\r\n\t\t\targ_transport_cfg.timestamp = default_transport_cfg.timestamp\r\n\t\t}\r\n\t\tif ( ! T.isFunction(arg_transport_cfg.formatter) )\r\n\t\t{\r\n\t\t\targ_transport_cfg.formatter = default_transport_cfg.formatter\r\n\t\t}\r\n\t\t\r\n\t\treturn new (winston.transports.Console)(arg_transport_cfg)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a file transport for Winston logger.\r\n\t * @param {object} arg_transport_cfg - file transport settings.\r\n\t * @returns {winston.transports.File}\r\n\t */\r\n\tcreate_file_transport(arg_transport_cfg)\r\n\t{\r\n\t\targ_transport_cfg = T.isObject(arg_transport_cfg) ? arg_transport_cfg : {}\r\n\t\t\r\n\t\t// DEFAULT CONFIGURATION\r\n\t\tconst default_transport_cfg = {\r\n\t\t\tlevel: 'debug',\r\n\t\t\t\r\n\t\t\ttimestamp: function()\r\n\t\t\t{\r\n\t\t\t\treturn Date.now()\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tformatter: function(options)\r\n\t\t\t{\r\n\t\t\t\treturn options.timestamp().toString().substr(-6) +' '+ process.pid +' '+ options.level.toUpperCase() +' '+ (undefined !== options.message ? options.message : '') +\r\n\t\t\t\t\t(options.meta && Object.keys(options.meta).length ? '\\n\\t'+ JSON.stringify(options.meta) : '' )\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tfilename: './tmp/debug.log',\r\n\t\t\tmaxsize:100000,\r\n\t\t\tmaxFiles:2\r\n\t\t}\r\n\t\tconst max_size = 100000000\r\n\t\tconst max_files = 100\r\n\t\t\r\n\t\t// CHECK CONFIGURATION\r\n\t\tif ( ! T.isString(arg_transport_cfg.level) || ! (arg_transport_cfg.level in customLevels.levels) )\r\n\t\t{\r\n\t\t\targ_transport_cfg.level = default_transport_cfg.level\r\n\t\t}\r\n\t\tif ( ! T.isFunction(arg_transport_cfg.timestamp) )\r\n\t\t{\r\n\t\t\targ_transport_cfg.timestamp = default_transport_cfg.timestamp\r\n\t\t}\r\n\t\tif ( ! T.isFunction(arg_transport_cfg.formatter) )\r\n\t\t{\r\n\t\t\targ_transport_cfg.formatter = default_transport_cfg.formatter\r\n\t\t}\r\n\t\tif ( ! T.isString(arg_transport_cfg.filename) )\r\n\t\t{\r\n\t\t\targ_transport_cfg.filename = default_transport_cfg.filename\r\n\t\t}\r\n\t\tif ( ! T.isNumber(arg_transport_cfg.maxsize) )\r\n\t\t{\r\n\t\t\targ_transport_cfg.maxsize = default_transport_cfg.maxsize\r\n\t\t}\r\n\t\tif ( ! T.isNumber(arg_transport_cfg.maxFiles) )\r\n\t\t{\r\n\t\t\targ_transport_cfg.maxFiles = default_transport_cfg.maxFiles\r\n\t\t}\r\n\t\targ_transport_cfg.maxsize = Math.min(arg_transport_cfg.maxsize, max_size)\r\n\t\targ_transport_cfg.maxFiles = Math.min(arg_transport_cfg.maxFiles, max_files)\r\n\t\t\r\n\t\treturn new (winston.transports.File)(arg_transport_cfg)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger DEBUG implementation.\r\n\t * \r\n\t * @param {array} arg_opds - log record array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdebug_self(arg_opds)\r\n\t{\r\n\t\tthis.logger.log('debug', arg_opds)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger INFO implementation.\r\n\t * \r\n\t * @param {array} arg_opds - log record array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tinfo_self(arg_opds)\r\n\t{\r\n\t\tthis.logger.log('info', arg_opds)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger WARN implementation.\r\n\t * \r\n\t * @param {array} arg_opds - log record array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\twarn_self(arg_opds)\r\n\t{\r\n\t\tthis.logger.log('warn', arg_opds)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger ERROR implementation.\r\n\t * \r\n\t * @param {array} arg_opds - log record array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\terror_self(arg_opds)\r\n\t{\r\n\t\tthis.logger.log('error', arg_opds)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/loggers/logger_winston.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 833,
    "kind": "variable",
    "name": "customLevels",
    "memberof": "js/loggers/logger_winston.js",
    "static": true,
    "longname": "js/loggers/logger_winston.js~customLevels",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/loggers/logger_winston.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "{\"levels\": *, \"colors\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 834,
    "kind": "class",
    "name": "LoggerWinston",
    "memberof": "js/loggers/logger_winston.js",
    "static": true,
    "longname": "js/loggers/logger_winston.js~LoggerWinston",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/loggers/logger_winston.js",
    "importStyle": "LoggerWinston",
    "description": "",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Winston logger class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/loggers/logger.js~Logger"
    ]
  },
  {
    "__docId__": 835,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/loggers/logger_winston.js~LoggerWinston",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_winston.js~LoggerWinston#constructor",
    "access": "public",
    "description": "Create a Winston Logger instance.",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "trace context."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 836,
    "kind": "member",
    "name": "is_logger_winston",
    "memberof": "js/loggers/logger_winston.js~LoggerWinston",
    "static": false,
    "longname": "js/loggers/logger_winston.js~LoggerWinston#is_logger_winston",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 837,
    "kind": "member",
    "name": "logger",
    "memberof": "js/loggers/logger_winston.js~LoggerWinston",
    "static": false,
    "longname": "js/loggers/logger_winston.js~LoggerWinston#logger",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 838,
    "kind": "method",
    "name": "create_console_transport",
    "memberof": "js/loggers/logger_winston.js~LoggerWinston",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_winston.js~LoggerWinston#create_console_transport",
    "access": "public",
    "description": "Create a console transport for Winston logger.",
    "lineNumber": 114,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{winston.transports.Console}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_transport_cfg",
        "description": "console transport settings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "winston.transports.Console"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 839,
    "kind": "method",
    "name": "create_file_transport",
    "memberof": "js/loggers/logger_winston.js~LoggerWinston",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_winston.js~LoggerWinston#create_file_transport",
    "access": "public",
    "description": "Create a file transport for Winston logger.",
    "lineNumber": 165,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{winston.transports.File}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_transport_cfg",
        "description": "file transport settings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "winston.transports.File"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 840,
    "kind": "method",
    "name": "debug_self",
    "memberof": "js/loggers/logger_winston.js~LoggerWinston",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_winston.js~LoggerWinston#debug_self",
    "access": "public",
    "description": "Logger DEBUG implementation.",
    "lineNumber": 231,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "log record array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 841,
    "kind": "method",
    "name": "info_self",
    "memberof": "js/loggers/logger_winston.js~LoggerWinston",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_winston.js~LoggerWinston#info_self",
    "access": "public",
    "description": "Logger INFO implementation.",
    "lineNumber": 244,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "log record array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 842,
    "kind": "method",
    "name": "warn_self",
    "memberof": "js/loggers/logger_winston.js~LoggerWinston",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_winston.js~LoggerWinston#warn_self",
    "access": "public",
    "description": "Logger WARN implementation.",
    "lineNumber": 257,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "log record array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 843,
    "kind": "method",
    "name": "error_self",
    "memberof": "js/loggers/logger_winston.js~LoggerWinston",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/logger_winston.js~LoggerWinston#error_self",
    "access": "public",
    "description": "Logger ERROR implementation.",
    "lineNumber": 270,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "log record array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 844,
    "kind": "file",
    "name": "js/messaging/bus_engine.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T        from '../utils/types'\r\nimport Instance from '../base/instance'\r\n\r\n\r\nlet context = 'common/messaging/bus_engine'\r\n\r\n\r\n\r\n/**\r\n * Interface for bus engine.\r\n * @abstract\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n* API:\r\n*   ->constructor(arg_name, arg_settings, arg_log_context).\r\n* \r\n*   ->channel_list()\r\n*   ->channel_add(arg_channel)\r\n*   ->channel_send(arg_channel, arg_payload)\r\n*   ->channel_on(arg_channel, arg_handler)\r\n*   ->channel_transform(arg_in_channel, arg_out_channel, arg_xform_handler).\r\n* \r\n */\r\nexport default class BusEngine extends Instance\r\n{\r\n\t/**\r\n\t * Create a bus.\r\n\t * \r\n\t * @param {string} arg_name - instance name.\r\n\t * @param {object} arg_settings - settings.\r\n\t * @param {string} arg_log_context - trace context.\r\n\t * @param {LoggerManager} arg_logger_manager - logger manager object (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_name, arg_settings, arg_log_context=context, arg_logger_manager=undefined)\r\n\t{\r\n\t\tsuper('buses', 'BusEngine', arg_name, arg_settings, arg_log_context, arg_logger_manager)\r\n\t\t\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_bus_engine = true\r\n\r\n\t\tthis._engine_type      = this.get_setting_js('type', 'Client')\r\n\t\tthis._engine_protocole = this.get_setting_js('protocole', 'https')\r\n\t\tthis._engine_host      = this.get_setting_js('host', 'localhost')\r\n\t\tthis._engine_port      = this.get_setting_js('port', '9999')\r\n\t\tthis._engine_url       = this._engine_protocole + '://' + this._engine_host + ':' + this._engine_port\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * List engine channels.\r\n\t * \r\n\t * @returns {array}\r\n\t */\r\n\tchannel_list()\r\n\t{\r\n\t\tthrow new Error('channel_list:Not yet implemented')\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * Add a channel.\r\n\t * \r\n\t * @param {string} arg_channel - channel name.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tchannel_add(arg_channel)\r\n\t{\r\n\t\tassert( T.isString(arg_channel), this.get_context() + ':channel_add:bad channel name')\r\n\t\tthrow new Error('channel_add:Not yet implemented')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Send a message into a channel.\r\n\t * \r\n\t * @param {string} arg_channel - channel name string.\r\n\t * @param {object} arg_payload - payload data object.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tchannel_send(arg_channel, arg_payload)\r\n\t{\r\n\t\tassert( T.isString(arg_channel), this.get_context() + ':channel_send:bad channel name')\r\n\t\tassert( arg_payload, this.get_context() + ':channel_send:bad payload data')\r\n\t\tthrow new Error('channel_send:Not yet implemented')\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Subscribe on channel inputs.\r\n\t * \r\n\t * @param {string} arg_channel - channel name string.\r\n\t * @param {function} arg_handler - f(payload):nothing.\r\n\t * @param {function} arg_predicate - p(payload):boolean (optional).\r\n\t * \r\n\t * @returns {function} - unsubscribe function.\r\n\t */\r\n\t/* eslint no-unused-vars: \"off\" */\r\n\tchannel_on(arg_channel, arg_handler, arg_predicate=undefined)\r\n\t{\r\n\t\tassert( T.isString(arg_channel), this.get_context() + ':channel_on:bad channel name')\r\n\t\tassert( T.isFunction(arg_handler), this.get_context() + ':channel_on:bad handler function')\r\n\t\tthrow new Error('channel_on:Not yet implemented')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Transform payload of input channel to output channel.\r\n\t * \r\n\t * @param {string} arg_in_channel - input channel name.\r\n\t * @param {string} arg_out_channel - output channel name.\r\n\t * @param {function} arg_handler - payload tranform function.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tchannel_transform(arg_in_channel, arg_out_channel, arg_handler)\r\n\t{\r\n\t\tassert( T.isString(arg_in_channel), this.get_context() + ':channel_transform:bad input channel name')\r\n\t\tassert( T.isString(arg_out_channel), this.get_context() + ':channel_transform:bad output channel name')\r\n\t\tassert( T.isFunction(arg_handler), this.get_context() + ':channel_transform:bad transform function')\r\n\t\tconst handler = (payload)=>{\r\n\t\t\tconst xform_payload = arg_handler(payload)\r\n\t\t\tthis.channel_send(arg_out_channel, xform_payload)\r\n\t\t}\r\n\t\tthis.channel_on(arg_in_channel, handler)\r\n\t}\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/messaging/bus_engine.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 845,
    "kind": "variable",
    "name": "context",
    "memberof": "js/messaging/bus_engine.js",
    "static": true,
    "longname": "js/messaging/bus_engine.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/messaging/bus_engine.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 846,
    "kind": "class",
    "name": "BusEngine",
    "memberof": "js/messaging/bus_engine.js",
    "static": true,
    "longname": "js/messaging/bus_engine.js~BusEngine",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/messaging/bus_engine.js",
    "importStyle": "BusEngine",
    "description": "Interface for bus engine.",
    "examples": [
      "API:\n  ->constructor(arg_name, arg_settings, arg_log_context).\n\n  ->channel_list()\n  ->channel_add(arg_channel)\n  ->channel_send(arg_channel, arg_payload)\n  ->channel_on(arg_channel, arg_handler)\n  ->channel_transform(arg_in_channel, arg_out_channel, arg_xform_handler)."
    ],
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "abstract": true,
    "interface": false,
    "extends": [
      "js/base/instance.js~Instance"
    ]
  },
  {
    "__docId__": 847,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/messaging/bus_engine.js~BusEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/bus_engine.js~BusEngine#constructor",
    "access": "public",
    "description": "Create a bus.",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "settings."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context."
      },
      {
        "nullable": null,
        "types": [
          "LoggerManager"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_logger_manager",
        "description": "logger manager object (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 848,
    "kind": "member",
    "name": "is_bus_engine",
    "memberof": "js/messaging/bus_engine.js~BusEngine",
    "static": false,
    "longname": "js/messaging/bus_engine.js~BusEngine#is_bus_engine",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 51,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 849,
    "kind": "member",
    "name": "_engine_type",
    "memberof": "js/messaging/bus_engine.js~BusEngine",
    "static": false,
    "longname": "js/messaging/bus_engine.js~BusEngine#_engine_type",
    "access": "private",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 850,
    "kind": "member",
    "name": "_engine_protocole",
    "memberof": "js/messaging/bus_engine.js~BusEngine",
    "static": false,
    "longname": "js/messaging/bus_engine.js~BusEngine#_engine_protocole",
    "access": "private",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 851,
    "kind": "member",
    "name": "_engine_host",
    "memberof": "js/messaging/bus_engine.js~BusEngine",
    "static": false,
    "longname": "js/messaging/bus_engine.js~BusEngine#_engine_host",
    "access": "private",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 852,
    "kind": "member",
    "name": "_engine_port",
    "memberof": "js/messaging/bus_engine.js~BusEngine",
    "static": false,
    "longname": "js/messaging/bus_engine.js~BusEngine#_engine_port",
    "access": "private",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 853,
    "kind": "member",
    "name": "_engine_url",
    "memberof": "js/messaging/bus_engine.js~BusEngine",
    "static": false,
    "longname": "js/messaging/bus_engine.js~BusEngine#_engine_url",
    "access": "private",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 854,
    "kind": "method",
    "name": "channel_list",
    "memberof": "js/messaging/bus_engine.js~BusEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/bus_engine.js~BusEngine#channel_list",
    "access": "public",
    "description": "List engine channels.",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 855,
    "kind": "method",
    "name": "channel_add",
    "memberof": "js/messaging/bus_engine.js~BusEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/bus_engine.js~BusEngine#channel_add",
    "access": "public",
    "description": "Add a channel.",
    "lineNumber": 81,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_channel",
        "description": "channel name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 856,
    "kind": "method",
    "name": "channel_send",
    "memberof": "js/messaging/bus_engine.js~BusEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/bus_engine.js~BusEngine#channel_send",
    "access": "public",
    "description": "Send a message into a channel.",
    "lineNumber": 97,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_channel",
        "description": "channel name string."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_payload",
        "description": "payload data object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 857,
    "kind": "method",
    "name": "channel_on",
    "memberof": "js/messaging/bus_engine.js~BusEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/bus_engine.js~BusEngine#channel_on",
    "access": "public",
    "description": "Subscribe on channel inputs.",
    "lineNumber": 116,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} - unsubscribe function."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_channel",
        "description": "channel name string."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_handler",
        "description": "f(payload):nothing."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_predicate",
        "description": "p(payload):boolean (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "unsubscribe function."
    }
  },
  {
    "__docId__": 858,
    "kind": "method",
    "name": "channel_transform",
    "memberof": "js/messaging/bus_engine.js~BusEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/bus_engine.js~BusEngine#channel_transform",
    "access": "public",
    "description": "Transform payload of input channel to output channel.",
    "lineNumber": 134,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_in_channel",
        "description": "input channel name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_out_channel",
        "description": "output channel name."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_handler",
        "description": "payload tranform function."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 859,
    "kind": "file",
    "name": "js/messaging/message_bus.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport {format} from 'util'\r\n\r\n// COMMON IMPORTS\r\nimport T                  from '../utils/types'\r\nimport Instance           from '../base/instance'\r\nimport DistributedMessage from '../base/distributed_message'\r\nimport DistributedLogs    from '../base/distributed_logs'\r\nimport DistributedMetrics from '../base/distributed_metrics'\r\nimport Stream             from './stream'\r\n\r\n\r\nconst context = 'common/messaging/message_bus'\r\nconst MAX_PAGE_SIZE = 999999\r\nconst MIN_PAGE_SIZE = 9\r\n\r\n\r\n\r\n/**\r\n * @file Message bus class.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class MessageBus extends Instance\r\n{\r\n\t/**\r\n\t * Create a bus.\r\n\t * \r\n\t * API:\r\n\t *   ->constructor(arg_name, arg_settings, arg_log_context).\r\n\t * \r\n\t * \tEngine API:\r\n\t *   ->get_bus_engine():BusEngine\r\n\t * \r\n\t *  Stream API:\t\r\n\t *   ->get_input_stream():Stream - get input stream to populate the bus.\r\n\t * \r\n\t * \tMessage API:\r\n\t * \t ->msg_recipients(arg_page_size=999999, arg_page_index=0):array - get paged recipients list.\r\n\t *   ->msg_post(arg_msg:DistributedMessage):boolean - send a DistributedMessage instance.\r\n\t * \r\n\t *   ->msg_subscribe(arg_channel:string, arg_handler:f(msg), arg_filter:string|object):unsubscribe function - subscribe to messages of the bus.\r\n\t * \r\n\t *   ->msg_register(arg_distributed_instance,arg_channel,arg_method='receive_msg'):function - register a DistributedInstance recipient.\r\n\t *   ->msg_has_recipient(arg_name):boolean - test if the bus has given named recipient.\r\n\t *   ->msg_add_recipient(arg_name, arg_instance='remote') - add a bus recipient.\r\n\t *   ->msg_remove_recipient(arg_name) - remove a bus recipient.\r\n\t * \r\n\t *   ->normalize_msg(arg_msg):DistributedMessage|undefined - Normalize given message.\r\n\t * \r\n\t * @param {string}    arg_name - instance name.\r\n\t * @param {BusEngine} arg_bus_engine - bus engine.\r\n\t * @param {object}    arg_settings - settings.\r\n\t * @param {string}    arg_log_context - trace context.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_name, arg_bus_engine, arg_settings, arg_log_context)\r\n\t{\r\n\t\tsuper('buses', 'MessageBus', arg_name, arg_settings, arg_log_context ? arg_log_context : context)\r\n\t\t\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_message_bus = true\r\n\r\n\t\tthis._bus_engine = arg_bus_engine\r\n\r\n\t\tthis._input_stream = new Stream()\r\n\r\n\t\tthis._recipients = {}\r\n\t\tthis._recipients_handlers = {}\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * Get bus engine.\r\n\t * \r\n\t * @returns {BusEngine}\r\n\t */\r\n\tget_bus_engine()\r\n\t{\r\n\t\tassert( T.isObject(this._bus_engine) && this._bus_engine.is_bus_engine, this.get_context() + ':get_bus_engine:bad bus engine instance')\r\n\t\treturn this._bus_engine\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get stream to populate the bus.\r\n\t * \r\n\t * @returns {Stream} - input bus stream.\r\n\t */\r\n\tget_input_stream()\r\n\t{\r\n\t\treturn this._input_stream\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get paged recipients list.\r\n\t * \r\n\t * @param {integer} arg_page_size  - recipients list page size.\r\n\t * @param {integer} arg_page_index - recipients list page index.\r\n\t * \r\n\t * @returns {object} - paged result { count:recipients count, page_size:..., page_count:..., page_index:..., page_values:[] }\r\n\t */\r\n\tmsg_recipients(arg_page_size=MAX_PAGE_SIZE, arg_page_index=0)\r\n\t{\r\n\t\tconst recipients = Object.keys(this._recipients)\r\n\t\tconst count = recipients.length\r\n\t\tconst page  = T.isNumber(arg_page_size) && arg_page_size > MIN_PAGE_SIZE && arg_page_size < MAX_PAGE_SIZE ? arg_page_size : MAX_PAGE_SIZE\r\n\t\tconst index = T.isNumber(arg_page_index) && arg_page_index >= 0 ? arg_page_index : 0\r\n\r\n\t\tconst values = count <= page ? recipients : recipients.slice(index * page, page)\r\n\t\treturn {\r\n\t\t\tcount:count,\r\n\t\t\tpage_size:page,\r\n\t\t\tpage_count:Math.floor(count / page) + ( (count - Math.floor(count / page)) > 0 ? 1 : 0),\r\n\t\t\tpage_index:index,\r\n\t\t\tpage_values:values\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Send a message into a channel.\r\n\t * \r\n\t * @param {DistributedMessage} arg_msg - distributed message instance.\r\n\t * \r\n\t * @returns {boolean} - success or failure.\r\n\t */\r\n\tmsg_post(arg_msg)\r\n\t{\r\n\t\ttry{\r\n\t\t\tassert( T.isObject(arg_msg) && arg_msg.is_distributed_message, this.get_context() + ':msg_post:bad message instance')\r\n\t\t\tassert( T.isObject(this._bus_engine) && this._bus_engine.is_bus_engine, this.get_context() + ':msg_post:bad message instance')\r\n\t\t\t\r\n\t\t\tconst channel = arg_msg.get_channel()\r\n\t\t\tassert( T.isString(channel), this.get_context() + ':msg_post:bad channel name')\r\n\r\n\t\t\t// ADD BUS NAME TO MESSAGE PATH\r\n\t\t\tconst step_name = this.get_name()\r\n\t\t\tif (arg_msg.has_buses_step(step_name))\r\n\t\t\t{\r\n\t\t\t\t// DEBUG\r\n\t\t\t\tconst payload_str = JSON.stringify(arg_msg.get_payload())\r\n\t\t\t\tthis.debug( format('msg_post:bus step exists:engine=[%s] step=[%s] channel=[%s] sender=[%s] target=[%s] data=[%s]', this.get_name(), step_name, arg_msg.get_channel(), arg_msg.get_sender(), arg_msg.get_target(), payload_str) )\r\n\t\t\t\t// console.log(context + ':msg_post:bus step exists:engine=[%s] step=[%s] channel=[%s] sender=[%s] target=[%s] data=[%s]', this.get_name(), step_name, arg_msg.get_channel(), arg_msg.get_sender(), arg_msg.get_target(), payload_str)\r\n\t\t\t\t\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\targ_msg.add_buses_step(step_name)\r\n\r\n\t\t\t// DEBUG\r\n\t\t\tconst payload_str = JSON.stringify(arg_msg.get_payload())\r\n\t\t\tthis.debug( format('msg_post:new bus step:engine=[%s] step=[%s] channel=[%s] sender=[%s] target=[%s] data=[%s]', this.get_name(), step_name, arg_msg.get_channel(), arg_msg.get_sender(), arg_msg.get_target(), payload_str) )\r\n\t\t\t// console.log(context + ':msg_post:new bus step:engine=[%s] step=[%s] channel=[%s] sender=[%s] target=[%s] data=[%s]', this.get_name(), step_name, arg_msg.get_channel(), arg_msg.get_sender(), arg_msg.get_target(), payload_str)\r\n\t\t\t\r\n\t\t\t// LOCAL RECIPIENT\r\n\t\t\tconst recipient_is_local = this.msg_has_recipient(arg_msg.get_target())\r\n\t\t\tif (recipient_is_local)\r\n\t\t\t{\r\n\t\t\t\tconst recipient = this._recipients[arg_msg.get_target()]\r\n\t\t\t\tif ( T.isObject(recipient) || recipient == 'browser' )\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.debug( format('msg_post:recipient is local and is an instance or browser:engine=[%s] step=[%s] channel=[%s] sender=[%s] target=[%s]', this.get_name(), step_name, arg_msg.get_channel(), arg_msg.get_sender(), arg_msg.get_target() ) )\r\n\t\t\t\t\tconst handler = this._recipients_handlers[arg_msg.get_target()]\r\n\t\t\t\t\tif ( T.isFunction(handler) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\thandler(arg_msg)\r\n\t\t\t\t\t\treturn true\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tconsole.warn(context + ':msg_post:failure with error:not or bad handler for local recipient')\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.debug( format('msg_post:recipient is local but not an instance:engine=[%s] step=[%s] channel=[%s] sender=[%s] target=[%s]', this.get_name(), step_name, arg_msg.get_channel(), arg_msg.get_sender(), arg_msg.get_target() ) )\r\n\t\t\t}\r\n\r\n\t\t\t// REMOTE RECIPIENT\r\n\t\t\tthis._bus_engine.channel_send(channel, arg_msg)\r\n\r\n\t\t\treturn true\r\n\t\t} catch(e) {\r\n\t\t\tconsole.warn(context + ':msg_post:failure with error:' + e)\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Subscribe on channel inputs.\r\n\t * \r\n\t * @param {string} arg_channel - channel name string.\r\n\t * @param {function} arg_handler - f(payload)\r\n\t * @param {string|function} arg_filter - filter string or function.\r\n\t * \r\n\t * @returns {function} - unsubscribe function.\r\n\t */\r\n\tmsg_subscribe(arg_channel, arg_handler, arg_filter=undefined)\r\n\t{\r\n\t\tassert( T.isFunction(arg_handler), this.get_context() + ':msg_subscribe:bad handler function')\r\n\t\tassert( T.isObject(this._bus_engine) && this._bus_engine.is_bus_engine, this.get_context() + ':msg_subscribe:bad bus engine instance')\r\n\t\t\r\n\t\t// DEBUG\r\n\t\t// debugger\r\n\t\tthis.debug( format('msg_subscribe:engine=[%s] filter=[%s] channel=[%s]', this.get_name(), arg_filter, arg_channel) )\r\n\t\t// console.log(context + ':msg_subscribe:same channel:engine=[%s] filter=[%s] channel=[%s]', this.get_name(), arg_filter, arg_channel)\r\n\r\n\t\t// REGISTER RECIPIENT\r\n\t\tif ( T.isString(arg_filter) )\r\n\t\t{\r\n\t\t\tthis.msg_add_recipient(arg_filter, undefined)\r\n\t\t}\r\n\t\t\r\n\t\t// MESSAGE HANDLER\r\n\t\tconst msg_handler = (arg_msg)=>{\r\n\t\t\targ_msg = this.normalize_msg(arg_msg)\r\n\r\n\t\t\t// DEBUG\r\n\t\t\t// debugger\r\n\r\n\t\t\t// CHANNEL NAME FILTERING\r\n\t\t\tconst channel = arg_msg.get_channel()\r\n\t\t\tassert( T.isNotEmptyString(channel), this.get_context() + ':msg_subscribe:msg_handler:bad channel name')\r\n\t\t\tconst same_channel = channel == arg_channel\r\n\r\n\t\t\t// DEBUG\r\n\t\t\tthis.debug( format('msg_subscribe:same channel:engine=[%s] filter=[%s] channel=[%s] handler channel=[%s] same channel[%d]', this.get_name(), arg_filter, channel, arg_channel, same_channel) )\r\n\t\t\t// console.log(context + ':msg_subscribe:same channel:engine=[%s] filter=[%s] channel=[%s] handler channel=[%s] same channel[%d]', this.get_name(), arg_filter, channel, arg_channel, same_channel)\r\n\t\t\t\t\r\n\t\t\tif (! same_channel)\r\n\t\t\t{\r\n\t\t\t\t// DEBUG\r\n\t\t\t\tthis.debug( format('msg_subscribe:skip channel:engine=[%s] filter=[%s] channel=[%s] sender=[%s] target=[%s] handler channel=[%s]', this.get_name(), arg_filter, channel, arg_msg.get_sender(), arg_msg.get_target(), arg_channel) )\r\n\t\t\t\t// console.log(context + ':msg_subscribe:skip channel:engine=[%s] filter=[%s] channel=[%s] sender=[%s] target=[%s] handler channel=[%s]', this.get_name(), arg_filter, channel, arg_msg.get_sender(), arg_msg.get_target(), arg_channel)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\t// TARGET NAME FILTERING\r\n\t\t\tif ( T.isNotEmptyString(arg_filter) && arg_filter != arg_msg.get_target() )\r\n\t\t\t{\r\n\t\t\t\t// DEBUG\r\n\t\t\t\tthis.debug( format('msg_subscribe:skip target:engine=[%s] filter=[%s] channel=[%s] sender=[%s] target=[%s] handler channel=[%s]', this.get_name(), arg_filter, channel, arg_msg.get_sender(), arg_msg.get_target(), arg_channel) )\r\n\t\t\t\t// console.log(context + ':msg_subscribe:skip target:engine=[%s] filter=[%s] channel=[%s] sender=[%s] target=[%s] handler channel=[%s]', this.get_name(), arg_filter, channel, arg_msg.get_sender(), arg_msg.get_target(), arg_channel)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tif ( this.msg_has_recipient( arg_msg.get_target() ) )\r\n\t\t\t{\r\n\t\t\t\t// DEBUG\r\n\t\t\t\tconst payload_str = JSON.stringify(arg_msg.get_payload())\r\n\t\t\t\tthis.debug( format('msg_subscribe:msg handled with filter:engine=[%s] filter=[%s] channel=[%s] sender=[%s] target=[%s] data=[%s]', this.get_name(), arg_filter, arg_msg.get_channel(), arg_msg.get_sender(), arg_msg.get_target(), payload_str) )\r\n\t\t\t\t// console.log(context + ':msg_subscribe:msg handled with filter:engine=[%s] filter=[%s] channel=[%s] sender=[%s] target=[%s] data=[%s]', this.get_name(), arg_filter, arg_msg.get_channel(), arg_msg.get_sender(), arg_msg.get_target(), payload_str)\r\n\t\t\t\t\r\n\t\t\t\targ_handler(arg_msg)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\t// NO FILTERING\r\n\t\t\t// DEBUG\r\n\t\t\tconst payload_str = JSON.stringify(arg_msg.get_payload())\r\n\t\t\tthis.debug( format('msg_subscribe:msg handled without filter:engine=[%s] filter=[%s] channel=[%s] sender=[%s] target=[%s] data=[%s]', this.get_name(), '', arg_msg.get_channel(), arg_msg.get_sender(), arg_msg.get_target(), payload_str) )\r\n\t\t\t// console.log(context + ':msg_subscribe:msg handled without filter:engine=[%s] filter=[%s] channel=[%s] sender=[%s] target=[%s] data=[%s]', this.get_name(), '', arg_msg.get_channel(), arg_msg.get_sender(), arg_msg.get_target(), payload_str)\r\n\t\t\t\r\n\t\t\targ_handler(arg_msg)\r\n\t\t}\r\n\t\t\r\n\t\tif ( T.isString(arg_filter) && arg_filter in this._recipients_handlers )\r\n\t\t{\r\n\t\t\tthis._recipients_handlers[arg_filter] = msg_handler\r\n\t\t}\r\n\r\n\t\tconst fn_filter = T.isFunction(arg_filter) ? arg_filter : undefined\r\n\t\tconst str_filter = T.isString(arg_filter) ? (msg)=>{ return arg_filter == msg._target } : undefined\r\n\t\tconst predicate = fn_filter || str_filter\r\n\t\treturn this._bus_engine.channel_on(arg_channel, msg_handler, predicate)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Register a DistributedInstance recipient.\r\n\t * \r\n\t * @param {DistributedInstance} arg_distributed_instance - distributed recipient instance.\r\n\t * @param {string} arg_channel - channel name string.\r\n\t * @param {string} arg_method  - message handler method name string.\r\n\t * @param {string} arg_alias   - instance alias name string (optional, default undefined).\r\n\t * \r\n\t * @returns {function} - unsubscribe function.\r\n\t */\r\n\tmsg_register(arg_distributed_instance, arg_channel, arg_method='receive_msg', arg_alias=undefined)\r\n\t{\r\n\t\tassert( T.isObject(arg_distributed_instance) && arg_distributed_instance.is_distributed_instance, this.get_context() + ':msg_register:bad distributed instance.')\r\n\t\tassert( T.isString(arg_method) && (arg_method in arg_distributed_instance), this.get_context() + ':msg_register:bad method name [' + arg_method + '].')\r\n\t\t\r\n\t\tconst name = T.isNotEmptyString(arg_alias) ? arg_alias : arg_distributed_instance.get_name()\r\n\t\tconst handler = arg_distributed_instance[arg_method].bind(arg_distributed_instance)\r\n\r\n\t\t// DEBUG\r\n\t\tthis.debug( format('msg_register:engine=[%s] instance=[%s] channel=[%s] method=[%s]', this.get_name(), name, arg_channel, arg_method) )\r\n\t\t// console.log(context + ':msg_register:engine=[%s] instance=[%s] channel=[%s] method=[%s]', this.get_name(), name, arg_channel, arg_method)\r\n\r\n\t\tthis.msg_add_recipient(name, arg_distributed_instance)\r\n\t\t\r\n\t\treturn this.msg_subscribe(arg_channel, handler, name)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Test if bus has given named recipient.\r\n\t * \r\n\t * @param {arg_name} arg_name - recipient name.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tmsg_has_recipient(arg_name)\r\n\t{\r\n\t\treturn T.isString(arg_name) && (arg_name in this._recipients)\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Add a recipient.\r\n\t * \r\n\t * @param {string} arg_name - recipient name.\r\n\t * @param {DistributedInstance} arg_instance - distributed recipient instance (default:'remote').\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tmsg_add_recipient(arg_name, arg_instance='remote')\r\n\t{\r\n\t\tassert( T.isNotEmptyString(arg_name), this.get_context() + ':msg_add_recipient:bad recipient name [' + arg_name + '].')\r\n\t\tassert( arg_instance=='browser' || arg_instance=='remote' || T.isObject(arg_instance) && arg_instance.is_distributed_instance, this.get_context() + ':msg_add_recipient:bad distributed instance.')\r\n\t\t\r\n\t\tif (arg_name in this._recipients)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tthis._recipients[arg_name] = arg_instance\r\n\t\tthis._recipients_handlers[arg_name] = ()=>{}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Remove a recipient.\r\n\t * \r\n\t * @param {string} arg_name - recipient name.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tmsg_remove_recipient(arg_name)\r\n\t{\r\n\t\tassert( T.isNotEmptyString(arg_name), this.get_context() + ':msg_add_recipient:bad recipient name [' + arg_name + '].')\r\n\t\t\r\n\t\tif (arg_name in this._recipients)\r\n\t\t{\r\n\t\t\tdelete this._recipients[arg_name]\r\n\t\t\tdelete this._recipients_handlers[arg_name]\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Normalize given message.\r\n\t * \r\n\t * @param {object} arg_msg - message to normalize.\r\n\t * \r\n\t * @returns {DistributedMessage|undefined} - normalized message.\r\n\t */\r\n\tnormalize_msg(arg_msg)\r\n\t{\r\n\t\tif (! T.isObject(arg_msg) || ! arg_msg.is_distributed_message)\r\n\t\t{\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\tif ( T.isFunction(arg_msg.get_channel) )\r\n\t\t{\r\n\t\t\treturn arg_msg\r\n\t\t}\r\n\r\n\t\tif ( arg_msg.is_distributed_logs)\r\n\t\t{\r\n\t\t\treturn new DistributedLogs(arg_msg)\r\n\t\t}\r\n\r\n\t\tif ( arg_msg.is_distributed_metrics)\r\n\t\t{\r\n\t\t\treturn new DistributedMetrics(arg_msg)\r\n\t\t}\r\n\r\n\t\treturn new DistributedMessage(arg_msg)\r\n\t}\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/messaging/message_bus.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 860,
    "kind": "variable",
    "name": "context",
    "memberof": "js/messaging/message_bus.js",
    "static": true,
    "longname": "js/messaging/message_bus.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/messaging/message_bus.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 861,
    "kind": "variable",
    "name": "MAX_PAGE_SIZE",
    "memberof": "js/messaging/message_bus.js",
    "static": true,
    "longname": "js/messaging/message_bus.js~MAX_PAGE_SIZE",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/messaging/message_bus.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 862,
    "kind": "variable",
    "name": "MIN_PAGE_SIZE",
    "memberof": "js/messaging/message_bus.js",
    "static": true,
    "longname": "js/messaging/message_bus.js~MIN_PAGE_SIZE",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/messaging/message_bus.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 863,
    "kind": "class",
    "name": "MessageBus",
    "memberof": "js/messaging/message_bus.js",
    "static": true,
    "longname": "js/messaging/message_bus.js~MessageBus",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/messaging/message_bus.js",
    "importStyle": "MessageBus",
    "description": "",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Message bus class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/instance.js~Instance"
    ]
  },
  {
    "__docId__": 864,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/messaging/message_bus.js~MessageBus",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/message_bus.js~MessageBus#constructor",
    "access": "public",
    "description": "Create a bus.\n\nAPI:\n  ->constructor(arg_name, arg_settings, arg_log_context).\n\n\tEngine API:\n  ->get_bus_engine():BusEngine\n\n Stream API:\t\n  ->get_input_stream():Stream - get input stream to populate the bus.\n\n\tMessage API:\n\t ->msg_recipients(arg_page_size=999999, arg_page_index=0):array - get paged recipients list.\n  ->msg_post(arg_msg:DistributedMessage):boolean - send a DistributedMessage instance.\n\n  ->msg_subscribe(arg_channel:string, arg_handler:f(msg), arg_filter:string|object):unsubscribe function - subscribe to messages of the bus.\n\n  ->msg_register(arg_distributed_instance,arg_channel,arg_method='receive_msg'):function - register a DistributedInstance recipient.\n  ->msg_has_recipient(arg_name):boolean - test if the bus has given named recipient.\n  ->msg_add_recipient(arg_name, arg_instance='remote') - add a bus recipient.\n  ->msg_remove_recipient(arg_name) - remove a bus recipient.\n\n  ->normalize_msg(arg_msg):DistributedMessage|undefined - Normalize given message.",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      },
      {
        "nullable": null,
        "types": [
          "BusEngine"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_bus_engine",
        "description": "bus engine."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "settings."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 865,
    "kind": "member",
    "name": "is_message_bus",
    "memberof": "js/messaging/message_bus.js~MessageBus",
    "static": false,
    "longname": "js/messaging/message_bus.js~MessageBus#is_message_bus",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 68,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 866,
    "kind": "member",
    "name": "_bus_engine",
    "memberof": "js/messaging/message_bus.js~MessageBus",
    "static": false,
    "longname": "js/messaging/message_bus.js~MessageBus#_bus_engine",
    "access": "private",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 867,
    "kind": "member",
    "name": "_input_stream",
    "memberof": "js/messaging/message_bus.js~MessageBus",
    "static": false,
    "longname": "js/messaging/message_bus.js~MessageBus#_input_stream",
    "access": "private",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 868,
    "kind": "member",
    "name": "_recipients",
    "memberof": "js/messaging/message_bus.js~MessageBus",
    "static": false,
    "longname": "js/messaging/message_bus.js~MessageBus#_recipients",
    "access": "private",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 869,
    "kind": "member",
    "name": "_recipients_handlers",
    "memberof": "js/messaging/message_bus.js~MessageBus",
    "static": false,
    "longname": "js/messaging/message_bus.js~MessageBus#_recipients_handlers",
    "access": "private",
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 870,
    "kind": "method",
    "name": "get_bus_engine",
    "memberof": "js/messaging/message_bus.js~MessageBus",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/message_bus.js~MessageBus#get_bus_engine",
    "access": "public",
    "description": "Get bus engine.",
    "lineNumber": 85,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{BusEngine}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BusEngine"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 871,
    "kind": "method",
    "name": "get_input_stream",
    "memberof": "js/messaging/message_bus.js~MessageBus",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/message_bus.js~MessageBus#get_input_stream",
    "access": "public",
    "description": "Get stream to populate the bus.",
    "lineNumber": 98,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Stream} - input bus stream."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Stream"
      ],
      "spread": false,
      "description": "input bus stream."
    },
    "params": []
  },
  {
    "__docId__": 872,
    "kind": "method",
    "name": "msg_recipients",
    "memberof": "js/messaging/message_bus.js~MessageBus",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/message_bus.js~MessageBus#msg_recipients",
    "access": "public",
    "description": "Get paged recipients list.",
    "lineNumber": 113,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - paged result { count:recipients count, page_size:..., page_count:..., page_index:..., page_values:[] }"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_page_size",
        "description": "recipients list page size."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_page_index",
        "description": "recipients list page index."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "paged result { count:recipients count, page_size:..., page_count:..., page_index:..., page_values:[] }"
    }
  },
  {
    "__docId__": 873,
    "kind": "method",
    "name": "msg_post",
    "memberof": "js/messaging/message_bus.js~MessageBus",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/message_bus.js~MessageBus#msg_post",
    "access": "public",
    "description": "Send a message into a channel.",
    "lineNumber": 139,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - success or failure."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DistributedMessage"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_msg",
        "description": "distributed message instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "success or failure."
    }
  },
  {
    "__docId__": 874,
    "kind": "method",
    "name": "msg_subscribe",
    "memberof": "js/messaging/message_bus.js~MessageBus",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/message_bus.js~MessageBus#msg_subscribe",
    "access": "public",
    "description": "Subscribe on channel inputs.",
    "lineNumber": 209,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} - unsubscribe function."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_channel",
        "description": "channel name string."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_handler",
        "description": "f(payload)"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_filter",
        "description": "filter string or function."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "unsubscribe function."
    }
  },
  {
    "__docId__": 875,
    "kind": "method",
    "name": "msg_register",
    "memberof": "js/messaging/message_bus.js~MessageBus",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/message_bus.js~MessageBus#msg_register",
    "access": "public",
    "description": "Register a DistributedInstance recipient.",
    "lineNumber": 300,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} - unsubscribe function."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DistributedInstance"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_distributed_instance",
        "description": "distributed recipient instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_channel",
        "description": "channel name string."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_method",
        "description": "message handler method name string."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_alias",
        "description": "instance alias name string (optional, default undefined)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "unsubscribe function."
    }
  },
  {
    "__docId__": 876,
    "kind": "method",
    "name": "msg_has_recipient",
    "memberof": "js/messaging/message_bus.js~MessageBus",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/message_bus.js~MessageBus#msg_has_recipient",
    "access": "public",
    "description": "Test if bus has given named recipient.",
    "lineNumber": 326,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "arg_name"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "recipient name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 877,
    "kind": "method",
    "name": "msg_add_recipient",
    "memberof": "js/messaging/message_bus.js~MessageBus",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/message_bus.js~MessageBus#msg_add_recipient",
    "access": "public",
    "description": "Add a recipient.",
    "lineNumber": 340,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "recipient name."
      },
      {
        "nullable": null,
        "types": [
          "DistributedInstance"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_instance",
        "description": "distributed recipient instance (default:'remote')."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 878,
    "kind": "method",
    "name": "msg_remove_recipient",
    "memberof": "js/messaging/message_bus.js~MessageBus",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/message_bus.js~MessageBus#msg_remove_recipient",
    "access": "public",
    "description": "Remove a recipient.",
    "lineNumber": 362,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "recipient name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 879,
    "kind": "method",
    "name": "normalize_msg",
    "memberof": "js/messaging/message_bus.js~MessageBus",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/message_bus.js~MessageBus#normalize_msg",
    "access": "public",
    "description": "Normalize given message.",
    "lineNumber": 381,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DistributedMessage|undefined} - normalized message."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_msg",
        "description": "message to normalize."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DistributedMessage",
        "undefined"
      ],
      "spread": false,
      "description": "normalized message."
    }
  },
  {
    "__docId__": 880,
    "kind": "file",
    "name": "js/messaging/socketio_bus_engine.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport _ from 'lodash'\r\nimport {format} from 'util'\r\nimport SocketIOServer from 'socket.io'\r\nimport SocketIOClient from 'socket.io-client'\r\n\r\n// COMMON IMPORTS\r\nimport T        from '../utils/types'\r\nimport BusEngine from './bus_engine'\r\n\r\n\r\nconst context = 'common/messaging/socketio_bus_engine'\r\n\r\n\r\n\r\n/**\r\n * SocketIO based bus engine class for message bus client or server.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n* API:\r\n*   ->constructor(arg_name,arg_settings,arg_log_context,arg_logger_manager).\r\n* \r\n*\t->channel_list():array                           - List engine channels.\r\n*   ->channel_add(arg_channel):nothing               - Add a channel.\r\n*   ->channel_send(arg_channel, arg_payload):nothing - Send a message into a channel.\r\n*   ->channel_on(arg_channel, arg_handler):nothing   - Subscribe on channel inputs.\r\n*   ->channel_transform(arg_in_channel, arg_out_channel, arg_xform_handler):nothing - Transform payload of input channel to output channel.\r\n* \r\n */\r\nexport default class SocketIOBusEngine extends BusEngine\r\n{\r\n\t/**\r\n\t * Create a bus.\r\n\t * \r\n\t * @param {string} arg_name - instance name.\r\n\t * @param {object} arg_settings - settings.\r\n\t * @param {string} arg_log_context - trace context.\r\n\t * @param {LoggerManager} arg_logger_manager - logger manager object (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_name, arg_settings, arg_log_context=context, arg_logger_manager=undefined)\r\n\t{\r\n\t\tsuper(arg_name, arg_settings, arg_log_context, arg_logger_manager)\r\n\t\t\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_socketio_bus_engine = true\r\n\t\t\r\n\t\tthis._server = undefined\r\n\r\n\t\tif (this._engine_type == 'Server')\r\n\t\t{\r\n\t\t\t// DEBUG\r\n\t\t\tthis.debug( format('constructor:create a bus server on port=[%s]', this._engine_port) )\r\n\t\t\t// console.log(context + ':constructor:create a bus server on port=[%s]', this._engine_port)\r\n\r\n\t\t\tthis._server = new SocketIOServer(this._engine_port)\r\n\t\t\tthis._server.serveClient(false)\r\n\t\t}\r\n\r\n\t\tthis._channels = {}\r\n\t\tthis._subscribers = {}\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * List engine channels.\r\n\t * \r\n\t * @returns {array}\r\n\t */\r\n\tchannel_list()\r\n\t{\r\n\t\treturn Object.keys(this._channels)\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * Add a channel.\r\n\t * \r\n\t * @param {string} arg_channel - channel name.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tchannel_add(arg_channel)\r\n\t{\r\n\t\tassert( T.isString(arg_channel), this.get_context() + ':channel_add:bad channel name')\r\n\t\t\r\n\t\t// SERVER\r\n\t\tif (this._engine_type == 'Server')\r\n\t\t{\r\n\t\t\t// INIT SERVER NSP\r\n\t\t\tthis._channels[arg_channel] = this._server.of('/' + arg_channel)\r\n\r\n\t\t\tthis._channels[arg_channel].on('connect',\r\n\t\t\t\t(socket)=>{\r\n\t\t\t\t\t// DEBUG\r\n\t\t\t\t\tthis.debug( format('channel_add:on connect:engine=[%s] channel=[%s] id=[%s]', this.get_name(), arg_channel, socket.id) )\r\n\t\t\t\t\t// console.log(context + ':channel_add:on connect:engine=[%s] channel=[%s] id=[%s]', this.get_name(), arg_channel, socket.id)\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.on_connect(socket, arg_channel)\r\n\t\t\t\t\t\r\n\t\t\t\t\tsocket.on('error',\r\n\t\t\t\t\t\t(value)=>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// DEBUG\r\n\t\t\t\t\t\t\tthis.debug( format('channel_add:on error:engine=[%s] channel=[%s] id=[%s] value=', this.get_name(), arg_channel, socket.id, value) )\r\n\t\t\t\t\t\t\t// console.log(context + ':channel_add:on error:engine=[%s] channel=[%s] id=[%s] value=', this.get_name(), arg_channel, socket.id, value)\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.on_error(socket, arg_channel, value)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\r\n\t\t\t\t\tsocket.on('bus',\r\n\t\t\t\t\t\t(value)=>{\r\n\t\t\t\t\t\t\t// DEBUG\r\n\t\t\t\t\t\t\tthis.debug( format('channel_add:on bus:engine=[%s] channel=[%s] id=[%s] value=', this.get_name(), arg_channel, socket.id, value) )\r\n\t\t\t\t\t\t\t// console.log(context + ':channel_add:on bus:engine=[%s] channel=[%s] id=[%s] value=', this.get_name(), arg_channel, socket.id, value)\r\n\r\n\t\t\t\t\t\t\tthis.on_bus(socket, arg_channel, value)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t\r\n\t\t\tthis._channels[arg_channel].on('disconnect',\r\n\t\t\t\t(socket)=>{\r\n\t\t\t\t\t// DEBUG\r\n\t\t\t\t\tthis.debug( format('channel_add:on disconnect:engine=[%s] channel=[%s] id=[%s]', this.get_name(), arg_channel, socket.id) )\r\n\t\t\t\t\t// console.log(context + ':channel_add:on disconnect:engine=[%s] channel=[%s] id=[%s]', this.get_name(), arg_channel, socket.id)\r\n\r\n\t\t\t\t\tthis.on_disconnect(socket, arg_channel)\r\n\t\t\t\t}\r\n\t\t\t)\r\n\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\r\n\t\t// CLIENT\r\n\t\tthis._channels[arg_channel] = SocketIOClient(this._engine_url + '/' + arg_channel)\r\n\r\n\t\t// CLIENT DEBUG \r\n\t\t// console.log('this._channels[%s]', arg_channel, this._channels[arg_channel])\r\n\r\n\t\tthis._channels[arg_channel].on('bus',\r\n\t\t\t(value)=>{\r\n\t\t\t\t// DEBUG\r\n\t\t\t\tthis.debug( format('channel_add:on bus:engine=[%s] channel=[%s] id=[%s]', this.get_name(), arg_channel, this._channels[arg_channel].id) )\r\n\t\t\t\t// console.log(context + ':channel_add:on bus:engine=[%s] channel=[%s] id=[%s]', this.get_name(), arg_channel, this._channels[arg_channel].id)\r\n\r\n\t\t\t\tthis.on_bus(this._channels[arg_channel], arg_channel, value)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Send a message into a channel.\r\n\t * \r\n\t * @param {string} arg_channel - channel name string.\r\n\t * @param {object} arg_payload - payload data object.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tchannel_send(arg_channel, arg_payload)\r\n\t{\r\n\t\tassert( T.isString(arg_channel), this.get_context() + ':channel_send:bad channel name')\r\n\t\tassert( arg_payload, this.get_context() + ':channel_send:bad payload data')\r\n\t\tassert( arg_channel in this._channels, this.get_context() + ':channel_send:channel [' + arg_channel + '] stream not found')\r\n\t\t\r\n\t\tthis._channels[arg_channel].emit('bus', arg_payload)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Subscribe on channel inputs.\r\n\t * \r\n\t * @param {string} arg_channel - channel name string.\r\n\t * @param {function} arg_handler - f(payload):nothing\r\n\t * @param {function} arg_predicate - p(payload):boolean\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tchannel_on(arg_channel, arg_handler, arg_predicate=undefined)\r\n\t{\r\n\t\tassert( T.isString(arg_channel), this.get_context() + ':channel_on:bad channel name on engine [' + this.get_name() + ']')\r\n\t\tassert( T.isFunction(arg_handler), this.get_context() + ':channel_on:bad handler function on engine [' + this.get_name() + '] for channel [' + arg_channel + ']')\r\n\t\tassert( arg_channel in this._channels, this.get_context() + ':channel_on:channel [' + arg_channel + '] stream not found on engine [' + this.get_name() + ']')\r\n\t\t\r\n\t\t// DEBUG\r\n\t\tthis.debug( format('channel_on:bus[' + this.get_name() + '] channel [' + arg_channel + '] predicate=[%s]', arg_predicate ? arg_predicate.toString() : '') )\r\n\t\t// console.log(context + ':channel_on:bus[' + this.get_name() + '] channel [' + arg_channel + ']')\r\n\r\n\t\tconst handler = (value) => {\r\n\t\t\t// DEBUG\r\n\t\t\tthis.debug( format('channel_on:bus=[' + this.get_name() + '] channel=[' + arg_channel + '] received value=', value) )\r\n\t\t\t// console.log(context + ':channel_on:bus=[' + this.get_name() + '] channel=[' + arg_channel + '] received value=', value)\r\n\t\t\t\r\n\t\t\t// FILTER BY PREDICATE\r\n\t\t\tif ( T.isFunction(arg_predicate) )\r\n\t\t\t{\r\n\t\t\t\tif ( arg_predicate(value) )\r\n\t\t\t\t{\r\n\t\t\t\t\targ_handler(value)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// NO VALID PREDICATE\r\n\t\t\targ_handler(value)\r\n\t\t}\r\n\t\t\r\n\t\tif (! (arg_channel in this._subscribers) )\r\n\t\t{\r\n\t\t\tthis._subscribers[arg_channel] = []\r\n\t\t}\r\n\t\tthis._subscribers[arg_channel].push(handler)\r\n\r\n\t}\r\n\r\n\ton_connect(arg_socket, arg_channel)\r\n\t{\r\n\t\t//\r\n\t}\r\n\r\n\ton_disconnect(arg_socket, arg_channel)\r\n\t{\r\n\t\t//\r\n\t}\r\n\r\n\ton_error(arg_socket, arg_channel, arg_value)\r\n\t{\r\n\t\t//\r\n\t}\r\n\r\n\ton_bus(arg_socket, arg_channel, arg_value)\r\n\t{\r\n\t\t_.forEach(\r\n\t\t\tthis._subscribers[arg_channel],\r\n\t\t\t(arg_handler)=>{\r\n\t\t\t\targ_handler(arg_value)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/messaging/socketio_bus_engine.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 881,
    "kind": "variable",
    "name": "context",
    "memberof": "js/messaging/socketio_bus_engine.js",
    "static": true,
    "longname": "js/messaging/socketio_bus_engine.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/messaging/socketio_bus_engine.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 882,
    "kind": "class",
    "name": "SocketIOBusEngine",
    "memberof": "js/messaging/socketio_bus_engine.js",
    "static": true,
    "longname": "js/messaging/socketio_bus_engine.js~SocketIOBusEngine",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/messaging/socketio_bus_engine.js",
    "importStyle": "SocketIOBusEngine",
    "description": "SocketIO based bus engine class for message bus client or server.",
    "examples": [
      "API:\n  ->constructor(arg_name,arg_settings,arg_log_context,arg_logger_manager).\n\n->channel_list():array                           - List engine channels.\n  ->channel_add(arg_channel):nothing               - Add a channel.\n  ->channel_send(arg_channel, arg_payload):nothing - Send a message into a channel.\n  ->channel_on(arg_channel, arg_handler):nothing   - Subscribe on channel inputs.\n  ->channel_transform(arg_in_channel, arg_out_channel, arg_xform_handler):nothing - Transform payload of input channel to output channel."
    ],
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/messaging/bus_engine.js~BusEngine"
    ]
  },
  {
    "__docId__": 883,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/messaging/socketio_bus_engine.js~SocketIOBusEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/socketio_bus_engine.js~SocketIOBusEngine#constructor",
    "access": "public",
    "description": "Create a bus.",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "settings."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context."
      },
      {
        "nullable": null,
        "types": [
          "LoggerManager"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_logger_manager",
        "description": "logger manager object (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 884,
    "kind": "member",
    "name": "is_socketio_bus_engine",
    "memberof": "js/messaging/socketio_bus_engine.js~SocketIOBusEngine",
    "static": false,
    "longname": "js/messaging/socketio_bus_engine.js~SocketIOBusEngine#is_socketio_bus_engine",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 885,
    "kind": "member",
    "name": "_server",
    "memberof": "js/messaging/socketio_bus_engine.js~SocketIOBusEngine",
    "static": false,
    "longname": "js/messaging/socketio_bus_engine.js~SocketIOBusEngine#_server",
    "access": "private",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 887,
    "kind": "member",
    "name": "_channels",
    "memberof": "js/messaging/socketio_bus_engine.js~SocketIOBusEngine",
    "static": false,
    "longname": "js/messaging/socketio_bus_engine.js~SocketIOBusEngine#_channels",
    "access": "private",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 888,
    "kind": "member",
    "name": "_subscribers",
    "memberof": "js/messaging/socketio_bus_engine.js~SocketIOBusEngine",
    "static": false,
    "longname": "js/messaging/socketio_bus_engine.js~SocketIOBusEngine#_subscribers",
    "access": "private",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 889,
    "kind": "method",
    "name": "channel_list",
    "memberof": "js/messaging/socketio_bus_engine.js~SocketIOBusEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/socketio_bus_engine.js~SocketIOBusEngine#channel_list",
    "access": "public",
    "description": "List engine channels.",
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 890,
    "kind": "method",
    "name": "channel_add",
    "memberof": "js/messaging/socketio_bus_engine.js~SocketIOBusEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/socketio_bus_engine.js~SocketIOBusEngine#channel_add",
    "access": "public",
    "description": "Add a channel.",
    "lineNumber": 93,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_channel",
        "description": "channel name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 891,
    "kind": "method",
    "name": "channel_send",
    "memberof": "js/messaging/socketio_bus_engine.js~SocketIOBusEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/socketio_bus_engine.js~SocketIOBusEngine#channel_send",
    "access": "public",
    "description": "Send a message into a channel.",
    "lineNumber": 175,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_channel",
        "description": "channel name string."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_payload",
        "description": "payload data object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 892,
    "kind": "method",
    "name": "channel_on",
    "memberof": "js/messaging/socketio_bus_engine.js~SocketIOBusEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/socketio_bus_engine.js~SocketIOBusEngine#channel_on",
    "access": "public",
    "description": "Subscribe on channel inputs.",
    "lineNumber": 195,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_channel",
        "description": "channel name string."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_handler",
        "description": "f(payload):nothing"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_predicate",
        "description": "p(payload):boolean"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 893,
    "kind": "method",
    "name": "on_connect",
    "memberof": "js/messaging/socketio_bus_engine.js~SocketIOBusEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/socketio_bus_engine.js~SocketIOBusEngine#on_connect",
    "access": "public",
    "description": null,
    "lineNumber": 232,
    "undocument": true,
    "params": [
      {
        "name": "arg_socket",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_channel",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 894,
    "kind": "method",
    "name": "on_disconnect",
    "memberof": "js/messaging/socketio_bus_engine.js~SocketIOBusEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/socketio_bus_engine.js~SocketIOBusEngine#on_disconnect",
    "access": "public",
    "description": null,
    "lineNumber": 237,
    "undocument": true,
    "params": [
      {
        "name": "arg_socket",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_channel",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 895,
    "kind": "method",
    "name": "on_error",
    "memberof": "js/messaging/socketio_bus_engine.js~SocketIOBusEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/socketio_bus_engine.js~SocketIOBusEngine#on_error",
    "access": "public",
    "description": null,
    "lineNumber": 242,
    "undocument": true,
    "params": [
      {
        "name": "arg_socket",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_channel",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 896,
    "kind": "method",
    "name": "on_bus",
    "memberof": "js/messaging/socketio_bus_engine.js~SocketIOBusEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/socketio_bus_engine.js~SocketIOBusEngine#on_bus",
    "access": "public",
    "description": null,
    "lineNumber": 247,
    "undocument": true,
    "params": [
      {
        "name": "arg_socket",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_channel",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 897,
    "kind": "file",
    "name": "js/messaging/stream.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport Baconjs from 'baconjs'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\n\r\nlet context = 'common/messaging/stream'\r\n\r\n\r\n\r\n/**\r\n * Stream class for BaconJS stream wrapping.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class Stream\r\n{\r\n\t/**\r\n\t * Create a stream.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_stream=undefined)\r\n\t{\r\n\t\tthis.is_stream = true\r\n\r\n\t\tthis._source_stream = arg_stream ? arg_stream : new Baconjs.Bus()\r\n\t\tthis._transformed_stream = this._source_stream\r\n\t\t\r\n\t\tthis.counters = {}\r\n\t\tthis.counters.msg_count = 0\r\n\t\tthis.counters.msg_size = 0\r\n\t\tthis.counters.errors_count = 0\r\n\t\tthis.counters.subscribers_count = 0\r\n\t\t\r\n\t\tthis._source_stream.onError(\r\n\t\t\t() => {\r\n\t\t\t\tthis.counters.errors_count += 1\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get input stream.\r\n\t * \r\n\t * @returns {Baconjs.Bus}\r\n\t */\r\n\tget_source_stream()\r\n\t{\r\n\t\treturn this._source_stream\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Create a Stream instance with a DOM event source stream.\r\n\t * \r\n\t * @param {string} arg_dom_elem - DOM element.\r\n\t * @param {string} arg_event_name - DOM event name.\r\n\t * \r\n\t * @returns {Stream}\r\n\t */\r\n\tstatic from_dom_event(arg_dom_elem, arg_event_name)\r\n\t{\r\n\t\treturn new Stream( Baconjs.fromEvent(arg_dom_elem, arg_event_name) )\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Create a Stream instance with an event emitter source stream.\r\n\t * \r\n\t * @param {object} arg_emitter - event emitter.\r\n\t * @param {string} arg_event_name - event name.\r\n\t * \r\n\t * @returns {Stream}\r\n\t */\r\n\tstatic from_emitter_event(arg_emitter, arg_event_name)\r\n\t{\r\n\t\treturn new Stream( Baconjs.fromEvent(arg_emitter, arg_event_name) )\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get output stream.\r\n\t * \r\n\t * @returns {Baconjs.Bus}\r\n\t */\r\n\tget_transformed_stream()\r\n\t{\r\n\t\treturn this._transformed_stream\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Set output stream.\r\n\t * \r\n\t * @param {Baconjs.Bus} arg_stream - transformed stream.\r\n\t * \r\n\t * @returns {Stream} - this\r\n\t */\r\n\tset_transformed_stream(arg_stream)\r\n\t{\r\n\t\tthis._transformed_stream = arg_stream\r\n\t\treturn this\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Set output stream transformation.\r\n\t * \r\n\t * @param {function} arg_stream_transformation - function (source stream)=>{ return transformed stream }.\r\n\t * \r\n\t * @returns {Stream} - this\r\n\t */\r\n\tset_transformation(arg_stream_transformation)\r\n\t{\r\n\t\tassert( T.isFunction(arg_stream_transformation), context + ':transform:bad function')\r\n\t\tconst src = this._source_stream\r\n\t\tconst tr = this._transformed_stream\r\n\r\n\t\ttry {\r\n\t\t\tthis._transformed_stream = arg_stream_transformation(src)\r\n\t\t} catch(e) {\r\n\t\t\tthis._transformed_stream = tr\r\n\t\t\tconsole.error(context + ':set_transformation', e)\r\n\t\t}\r\n\t\t\r\n\t\treturn this\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get counters snapshot.\r\n\t * \r\n\t * @returns {object} - counters.\r\n\t */\r\n\tget_counters_snapshot()\r\n\t{\r\n\t\tconst counters = Object.assign({}, this.counters)\r\n\t\t\r\n\t\treturn counters\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get counters snapshot and reset values to 0.\r\n\t */\r\n\tget_and_reset_counters_snapshot()\r\n\t{\r\n\t\tconst counters = Object.assign({}, this.counters)\r\n\t\t\r\n\t\tthis.counters.msg_count = 0\r\n\t\tthis.counters.msg_size = 0\r\n\t\tthis.counters.errors_count = 0\r\n\t\tthis.counters.subscribers_count = 0\r\n\t\t\r\n\t\treturn counters\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Push a value into the stream.\r\n\t * \r\n\t * @param {any}\r\n\t * \r\n\t * @returns {Stream} - this.\r\n\t */\r\n\tpush(arg_value)\r\n\t{\r\n\t\tthis.counters.msg_count += 1\r\n\t\t\r\n\t\t// console.log(arg_value,  context + ':push:value')\r\n\t\tthis._source_stream.push(arg_value)\r\n\t\treturn this\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Subscribe to stream values.\r\n\t * \r\n\t * @param {Function} arg_handler - value handler f(value) => nothing.\r\n\t * \r\n\t * @returns {Function} - unsubscribe function\r\n\t */\r\n\tsubscribe(arg_handler)\r\n\t{\r\n\t\tassert( T.isFunction(arg_handler), context + ':subscribe:bad handler function')\r\n\t\t\r\n\t\tthis.counters.subscribers_count += 1\r\n\t\t\r\n\t\tconst unsubscribe = this._transformed_stream.onValue(arg_handler)\r\n\t\treturn  () => {\r\n\t\t\tthis.counters.subscribers_count -= 1\r\n\t\t\tunsubscribe()\r\n\t\t}\r\n\t\t\r\n\t\t// return this._transformed_stream.onValue(\r\n\t\t// \t(value) => {\r\n\t\t// \t\tconsole.log(value,  context + ':subscribe:value')\r\n\t\t// \t}\r\n\t\t// )\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Subscribe to stream errors.\r\n\t * \r\n\t * @param {Function} arg_handler - value handler f(value) => nothing.\r\n\t * \r\n\t * @returns {Function} - unsubscribe function\r\n\t */\r\n\ton_error(arg_handler)\r\n\t{\r\n\t\tassert( T.isFunction(arg_handler), context + ':subscribe:bad handler function')\r\n\t\t\r\n\t\tthis.counters.subscribers_count += 1\r\n\t\t\r\n\t\tconst unsubscribe = this._transformed_stream.onError(arg_handler)\r\n\t\treturn  () => {\r\n\t\t\tthis.counters.subscribers_count -= 1\r\n\t\t\tunsubscribe()\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Debounce immediate.\r\n\t * \r\n\t * @param {integer} arg_milliseconds - number of milliseconds. \r\n\t */\r\n\tdebounce_immediate(arg_milliseconds)\r\n\t{\r\n\t\tthis._transformed_stream = this._transformed_stream.debounceImmediate(arg_milliseconds)\r\n\t\treturn this\r\n\t}\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/messaging/stream.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 898,
    "kind": "variable",
    "name": "context",
    "memberof": "js/messaging/stream.js",
    "static": true,
    "longname": "js/messaging/stream.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/messaging/stream.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 899,
    "kind": "class",
    "name": "Stream",
    "memberof": "js/messaging/stream.js",
    "static": true,
    "longname": "js/messaging/stream.js~Stream",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/messaging/stream.js",
    "importStyle": "Stream",
    "description": "Stream class for BaconJS stream wrapping.",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 900,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/messaging/stream.js~Stream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/stream.js~Stream#constructor",
    "access": "public",
    "description": "Create a stream.",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 901,
    "kind": "member",
    "name": "is_stream",
    "memberof": "js/messaging/stream.js~Stream",
    "static": false,
    "longname": "js/messaging/stream.js~Stream#is_stream",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 902,
    "kind": "member",
    "name": "_source_stream",
    "memberof": "js/messaging/stream.js~Stream",
    "static": false,
    "longname": "js/messaging/stream.js~Stream#_source_stream",
    "access": "private",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 903,
    "kind": "member",
    "name": "_transformed_stream",
    "memberof": "js/messaging/stream.js~Stream",
    "static": false,
    "longname": "js/messaging/stream.js~Stream#_transformed_stream",
    "access": "private",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 904,
    "kind": "member",
    "name": "counters",
    "memberof": "js/messaging/stream.js~Stream",
    "static": false,
    "longname": "js/messaging/stream.js~Stream#counters",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 905,
    "kind": "method",
    "name": "get_source_stream",
    "memberof": "js/messaging/stream.js~Stream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/stream.js~Stream#get_source_stream",
    "access": "public",
    "description": "Get input stream.",
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Baconjs.Bus}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Baconjs.Bus"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 906,
    "kind": "method",
    "name": "from_dom_event",
    "memberof": "js/messaging/stream.js~Stream",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/messaging/stream.js~Stream.from_dom_event",
    "access": "public",
    "description": "Create a Stream instance with a DOM event source stream.",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Stream}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_dom_elem",
        "description": "DOM element."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_event_name",
        "description": "DOM event name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Stream"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 907,
    "kind": "method",
    "name": "from_emitter_event",
    "memberof": "js/messaging/stream.js~Stream",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/messaging/stream.js~Stream.from_emitter_event",
    "access": "public",
    "description": "Create a Stream instance with an event emitter source stream.",
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Stream}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_emitter",
        "description": "event emitter."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_event_name",
        "description": "event name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Stream"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 908,
    "kind": "method",
    "name": "get_transformed_stream",
    "memberof": "js/messaging/stream.js~Stream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/stream.js~Stream#get_transformed_stream",
    "access": "public",
    "description": "Get output stream.",
    "lineNumber": 94,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Baconjs.Bus}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Baconjs.Bus"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 909,
    "kind": "method",
    "name": "set_transformed_stream",
    "memberof": "js/messaging/stream.js~Stream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/stream.js~Stream#set_transformed_stream",
    "access": "public",
    "description": "Set output stream.",
    "lineNumber": 108,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Stream} - this"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Baconjs.Bus"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_stream",
        "description": "transformed stream."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Stream"
      ],
      "spread": false,
      "description": "this"
    }
  },
  {
    "__docId__": 911,
    "kind": "method",
    "name": "set_transformation",
    "memberof": "js/messaging/stream.js~Stream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/stream.js~Stream#set_transformation",
    "access": "public",
    "description": "Set output stream transformation.",
    "lineNumber": 123,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Stream} - this"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_stream_transformation",
        "description": "function (source stream)=>{ return transformed stream }."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Stream"
      ],
      "spread": false,
      "description": "this"
    }
  },
  {
    "__docId__": 914,
    "kind": "method",
    "name": "get_counters_snapshot",
    "memberof": "js/messaging/stream.js~Stream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/stream.js~Stream#get_counters_snapshot",
    "access": "public",
    "description": "Get counters snapshot.",
    "lineNumber": 146,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - counters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "counters."
    },
    "params": []
  },
  {
    "__docId__": 915,
    "kind": "method",
    "name": "get_and_reset_counters_snapshot",
    "memberof": "js/messaging/stream.js~Stream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/stream.js~Stream#get_and_reset_counters_snapshot",
    "access": "public",
    "description": "Get counters snapshot and reset values to 0.",
    "lineNumber": 158,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 916,
    "kind": "method",
    "name": "push",
    "memberof": "js/messaging/stream.js~Stream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/stream.js~Stream#push",
    "access": "public",
    "description": "Push a value into the stream.",
    "lineNumber": 179,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Stream} - this."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Stream"
      ],
      "spread": false,
      "description": "this."
    }
  },
  {
    "__docId__": 917,
    "kind": "method",
    "name": "subscribe",
    "memberof": "js/messaging/stream.js~Stream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/stream.js~Stream#subscribe",
    "access": "public",
    "description": "Subscribe to stream values.",
    "lineNumber": 197,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} - unsubscribe function"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_handler",
        "description": "value handler f(value) => nothing."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "unsubscribe function"
    }
  },
  {
    "__docId__": 918,
    "kind": "method",
    "name": "on_error",
    "memberof": "js/messaging/stream.js~Stream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/stream.js~Stream#on_error",
    "access": "public",
    "description": "Subscribe to stream errors.",
    "lineNumber": 225,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} - unsubscribe function"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_handler",
        "description": "value handler f(value) => nothing."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "unsubscribe function"
    }
  },
  {
    "__docId__": 919,
    "kind": "method",
    "name": "debounce_immediate",
    "memberof": "js/messaging/stream.js~Stream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/stream.js~Stream#debounce_immediate",
    "access": "public",
    "description": "Debounce immediate.",
    "lineNumber": 245,
    "params": [
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_milliseconds",
        "description": "number of milliseconds."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 921,
    "kind": "file",
    "name": "js/messaging/streams_provider.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\nimport _ from 'lodash'\r\n\r\n// COMMON IMPORTS\r\nimport T               from '../utils/types'\r\nimport Instance        from '../base/instance'\r\nimport Stream          from '../messaging/stream'\r\n\r\n\r\nconst context = 'common/messaging/streams_provider'\r\n\r\n\r\n\r\n/**\r\n * Service provider base class.\r\n * @abstract\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n * \tAPI:\r\n * \t\t->add_stream(arg_stream_name, arg_stream=undefined):nothing - register a new stream.\r\n * \t\t->remove_stream(arg_stream_name):nothing - unregister a stream.\r\n * \t\t->get_stream(arg_stream_name):Stream - get a registered stream.\r\n * \t\t->subscribe(arg_stream_name, arg_subscriber)\r\n * \t\t->unsubscribe(arg_stream_name, arg_subscriber)\r\n * \r\n */\r\nexport default class SteamsProvider extends Instance\r\n{\r\n\t/**\r\n\t * Create a streams provider.\r\n\t * \r\n\t * @param {string} arg_collection - collection name.\r\n\t * @param {string} arg_class - class name.\r\n\t * @param {string} arg_name - instance name.\r\n\t * @param {Immutable.Map|object} arg_settings - settings plain object\r\n\t * @param {string} arg_log_context - log context.\r\n\t * @param {LoggerManager} arg_logger_manager - logger manager object (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_collection, arg_class, arg_name, arg_settings, arg_log_context, arg_logger_manager)\r\n\t{\r\n\t\tsuper(arg_collection, arg_class, arg_name, arg_settings, arg_log_context, arg_logger_manager)\r\n\t\t\r\n\t\tthis.is_streams_provider = true\r\n\r\n\t\tthis._streams = {}\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Register a new stream.\r\n\t * \r\n\t * @param {string} arg_stream_name - stream name.\r\n\t * @param {Stream} arg_stream - stream instance (optional, default undefined).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tadd_stream(arg_stream_name, arg_stream=undefined)\r\n\t{\r\n\t\tif (arg_stream_name in this._streams)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\t// INIT REGISTERING RECORD\r\n\t\tthis._streams[arg_stream_name] = {\r\n\t\t\tsubscribers:[],\r\n\t\t\tstream:undefined,\r\n\t\t\town_stream:true,\r\n\t\t\tunsubscribe:undefined\r\n\t\t}\r\n\r\n\t\t// CREATE STREAM IF NEEDED\r\n\t\tif ( ! T.isObject(arg_stream) || ! arg_stream.is_stream )\r\n\t\t{\r\n\t\t\targ_stream = new Stream()\r\n\t\t\tthis._streams[arg_stream_name].own_stream = true\r\n\t\t}\r\n\t\tthis._streams[arg_stream_name].stream = arg_stream\r\n\r\n\t\t// HANDLE POST\r\n\t\tconst post_cb = (v) => {\r\n\t\t\t// console.log(context + ':on stream value for provider %s',  arg_provider_name)\r\n\t\t\tthis.post_to_subscribers(arg_stream_name, v)\r\n\t\t}\r\n\t\tthis._streams[arg_stream_name].unsubscribe = this._streams[arg_stream_name].stream.subscribe(post_cb)\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Unregister a stream.\r\n\t * \r\n\t * @param {string} arg_stream_name - stream name.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tremove_stream(arg_stream_name)\r\n\t{\r\n\t\tif (arg_stream_name in this._streams)\r\n\t\t{\r\n\t\t\tconst record = this._streams[arg_stream_name]\r\n\r\n\t\t\trecord.unsubscribe()\r\n\r\n\t\t\t_.forEach(record.subscribers,\r\n\t\t\t\t(subscriber)=>{\r\n\t\t\t\t\tthis.unsubscribe(arg_stream_name, subscriber)\r\n\t\t\t\t}\r\n\t\t\t)\r\n\r\n\t\t\tif (record.own_stream)\r\n\t\t\t{\r\n\t\t\t\tdelete record.stream\r\n\t\t\t}\r\n\r\n\t\t\tdelete this._streams[arg_stream_name]\r\n\t\t\treturn true\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Get a stream.\r\n\t * \r\n\t * @param {string} arg_stream_name - stream name.\r\n\t * \r\n\t * @returns {Stream}\r\n\t */\r\n\tget_stream(arg_stream_name)\r\n\t{\r\n\t\tif (arg_stream_name in this._streams)\r\n\t\t{\r\n\t\t\tconst record = this._streams[arg_stream_name]\r\n\t\t\treturn record.stream\r\n\t\t}\r\n\t\treturn undefined\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Test if a stream is registered.\r\n\t * \r\n\t * @param {string} arg_stream_name - stream name.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\thas_stream(arg_stream_name)\r\n\t{\r\n\t\treturn (arg_stream_name in this._streams)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Add a subscriber socket.\r\n\t * \r\n\t * @param {string} arg_stream_name - stream name.\r\n\t * @param {object} arg_subscriber  - subscriber object.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tsubscribe(arg_stream_name, arg_subscriber)\r\n\t{\r\n\t\tif (arg_stream_name in this._streams)\r\n\t\t{\r\n\t\t\tconst record = this._streams[arg_stream_name]\r\n\t\t\trecord.subscribers.push(arg_subscriber)\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\treturn false\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove a subscriber socket.\r\n\t * \r\n\t * @param {string} arg_stream_name - stream name.\r\n\t * @param {object} arg_subscriber  - subscriber object.\r\n\t * @param {function} arg_subscriber_equal_fn - test function (default is (a,b)=>(a==b) ).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tunsubscribe(arg_stream_name, arg_subscriber, arg_subscriber_equal_fn=(a,b)=>a==b)\r\n\t{\r\n\t\tif (arg_stream_name in this._streams)\r\n\t\t{\r\n\t\t\tconst record = this._streams[arg_stream_name]\r\n\t\t\t\r\n\t\t\t_.remove(record.subscribers,\r\n\t\t\t\t(subscriber)=>{\r\n\t\t\t\t\treturn arg_subscriber_equal_fn(subscriber, arg_subscriber)\r\n\t\t\t\t}\r\n\t\t\t)\r\n\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\treturn false\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Post streams values to subscribers.\r\n\t * \r\n\t * @param {string} arg_stream_name - stream name.\r\n\t * @param {object} arg_datas - response values.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tpost_to_subscribers(arg_stream_name, arg_datas)\r\n\t{\r\n\t\tif (arg_stream_name in this._streams)\r\n\t\t{\r\n\t\t\tconst record = this._streams[arg_stream_name]\r\n\t\t\t\r\n\t\t\t_.forEach(record.subscribers,\r\n\t\t\t\t(subscriber) => {\r\n\t\t\t\t\tthis.post_to_subscriber(subscriber, arg_stream_name, arg_datas)\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Post streams values to one subscriber.\r\n\t * @abstract\r\n\t * \r\n\t * @param {object} arg_subscriber - subscriber object.\r\n\t * @param {string} arg_stream_name - stream name.\r\n\t * @param {object} arg_datas - response values.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tpost_to_subscriber(arg_subscriber, arg_stream_name, arg_datas)\r\n\t{\r\n\t\tconsole.log(context + ':post_to_subscriber:stream=[%s] subscriber=', arg_stream_name, arg_subscriber)\r\n\t\tconsole.log(context + ':post_to_subscriber:stream=[%s] datas=', arg_stream_name, arg_datas)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/messaging/streams_provider.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 922,
    "kind": "variable",
    "name": "context",
    "memberof": "js/messaging/streams_provider.js",
    "static": true,
    "longname": "js/messaging/streams_provider.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/messaging/streams_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 923,
    "kind": "class",
    "name": "SteamsProvider",
    "memberof": "js/messaging/streams_provider.js",
    "static": true,
    "longname": "js/messaging/streams_provider.js~SteamsProvider",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/messaging/streams_provider.js",
    "importStyle": "SteamsProvider",
    "description": "Service provider base class.",
    "examples": [
      "\tAPI:\n\t\t->add_stream(arg_stream_name, arg_stream=undefined):nothing - register a new stream.\n\t\t->remove_stream(arg_stream_name):nothing - unregister a stream.\n\t\t->get_stream(arg_stream_name):Stream - get a registered stream.\n\t\t->subscribe(arg_stream_name, arg_subscriber)\n\t\t->unsubscribe(arg_stream_name, arg_subscriber)"
    ],
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "abstract": true,
    "interface": false,
    "extends": [
      "js/base/instance.js~Instance"
    ]
  },
  {
    "__docId__": 924,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/messaging/streams_provider.js~SteamsProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/streams_provider.js~SteamsProvider#constructor",
    "access": "public",
    "description": "Create a streams provider.",
    "lineNumber": 45,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_collection",
        "description": "collection name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_class",
        "description": "class name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      },
      {
        "nullable": null,
        "types": [
          "Immutable.Map",
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "settings plain object"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "log context."
      },
      {
        "nullable": null,
        "types": [
          "LoggerManager"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_logger_manager",
        "description": "logger manager object (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 925,
    "kind": "member",
    "name": "is_streams_provider",
    "memberof": "js/messaging/streams_provider.js~SteamsProvider",
    "static": false,
    "longname": "js/messaging/streams_provider.js~SteamsProvider#is_streams_provider",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 926,
    "kind": "member",
    "name": "_streams",
    "memberof": "js/messaging/streams_provider.js~SteamsProvider",
    "static": false,
    "longname": "js/messaging/streams_provider.js~SteamsProvider#_streams",
    "access": "private",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 927,
    "kind": "method",
    "name": "add_stream",
    "memberof": "js/messaging/streams_provider.js~SteamsProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/streams_provider.js~SteamsProvider#add_stream",
    "access": "public",
    "description": "Register a new stream.",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_stream_name",
        "description": "stream name."
      },
      {
        "nullable": null,
        "types": [
          "Stream"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_stream",
        "description": "stream instance (optional, default undefined)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 928,
    "kind": "method",
    "name": "remove_stream",
    "memberof": "js/messaging/streams_provider.js~SteamsProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/streams_provider.js~SteamsProvider#remove_stream",
    "access": "public",
    "description": "Unregister a stream.",
    "lineNumber": 104,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_stream_name",
        "description": "stream name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 929,
    "kind": "method",
    "name": "get_stream",
    "memberof": "js/messaging/streams_provider.js~SteamsProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/streams_provider.js~SteamsProvider#get_stream",
    "access": "public",
    "description": "Get a stream.",
    "lineNumber": 138,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Stream}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_stream_name",
        "description": "stream name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Stream"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 930,
    "kind": "method",
    "name": "has_stream",
    "memberof": "js/messaging/streams_provider.js~SteamsProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/streams_provider.js~SteamsProvider#has_stream",
    "access": "public",
    "description": "Test if a stream is registered.",
    "lineNumber": 157,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_stream_name",
        "description": "stream name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 931,
    "kind": "method",
    "name": "subscribe",
    "memberof": "js/messaging/streams_provider.js~SteamsProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/streams_provider.js~SteamsProvider#subscribe",
    "access": "public",
    "description": "Add a subscriber socket.",
    "lineNumber": 172,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_stream_name",
        "description": "stream name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_subscriber",
        "description": "subscriber object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 932,
    "kind": "method",
    "name": "unsubscribe",
    "memberof": "js/messaging/streams_provider.js~SteamsProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/streams_provider.js~SteamsProvider#unsubscribe",
    "access": "public",
    "description": "Remove a subscriber socket.",
    "lineNumber": 195,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_stream_name",
        "description": "stream name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_subscriber",
        "description": "subscriber object."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_subscriber_equal_fn",
        "description": "test function (default is (a,b)=>(a==b) )."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 933,
    "kind": "method",
    "name": "post_to_subscribers",
    "memberof": "js/messaging/streams_provider.js~SteamsProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/streams_provider.js~SteamsProvider#post_to_subscribers",
    "access": "public",
    "description": "Post streams values to subscribers.",
    "lineNumber": 223,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_stream_name",
        "description": "stream name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_datas",
        "description": "response values."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 934,
    "kind": "method",
    "name": "post_to_subscriber",
    "memberof": "js/messaging/streams_provider.js~SteamsProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/streams_provider.js~SteamsProvider#post_to_subscriber",
    "access": "public",
    "description": "Post streams values to one subscriber.",
    "lineNumber": 249,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_subscriber",
        "description": "subscriber object."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_stream_name",
        "description": "stream name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_datas",
        "description": "response values."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true
  },
  {
    "__docId__": 935,
    "kind": "file",
    "name": "js/messaging/stream_bus_engine.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T        from '../utils/types'\r\nimport BusEngine from './bus_engine'\r\nimport Stream   from './stream'\r\n\r\n\r\nconst context = 'common/messaging/stream_bus_engine'\r\n\r\n\r\n\r\n/**\r\n * Stream based bus engine class for message bus client or server.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n* API:\r\n*   ->constructor(arg_name,arg_settings,arg_log_context,arg_logger_manager).\r\n* \r\n*\t->channel_list():array                           - List engine channels.\r\n*   ->channel_add(arg_channel):nothing               - Add a channel.\r\n*   ->channel_send(arg_channel, arg_payload):nothing - Send a message into a channel.\r\n*   ->channel_on(arg_channel, arg_handler):nothing   - Subscribe on channel inputs.\r\n*   ->channel_transform(arg_in_channel, arg_out_channel, arg_xform_handler):nothing - Transform payload of input channel to output channel.\r\n* \r\n */\r\nexport default class StreamBusEngine extends BusEngine\r\n{\r\n\t/**\r\n\t * Create a bus.\r\n\t * \r\n\t * @param {string} arg_name - instance name.\r\n\t * @param {object} arg_settings - settings.\r\n\t * @param {string} arg_log_context - trace context.\r\n\t * @param {LoggerManager} arg_logger_manager - logger manager object (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_name, arg_settings, arg_log_context=context, arg_logger_manager=undefined)\r\n\t{\r\n\t\tsuper(arg_name, arg_settings, arg_log_context, arg_logger_manager)\r\n\t\t\r\n\t\tthis.is_stream_bus_engine = true\r\n\t\t\r\n\t\tthis._channels = {}\r\n\t\t// this._channels['default'] = new Stream()\r\n\t\t// this.channel_add('default')\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * List engine channels.\r\n\t * \r\n\t * @returns {array}\r\n\t */\r\n\tchannel_list()\r\n\t{\r\n\t\treturn Object.keys(this._channels)\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * Add a channel.\r\n\t * \r\n\t * @param {string} arg_channel - channel name.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tchannel_add(arg_channel)\r\n\t{\r\n\t\tassert( T.isString(arg_channel), this.get_context() + ':channel_add:bad channel name')\r\n\t\tthis._channels[arg_channel] = new Stream()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Send a message into a channel.\r\n\t * \r\n\t * @param {string} arg_channel - channel name string.\r\n\t * @param {object} arg_payload - payload data object.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tchannel_send(arg_channel, arg_payload)\r\n\t{\r\n\t\tassert( T.isString(arg_channel), this.get_context() + ':channel_send:bad channel name')\r\n\t\tassert( arg_payload, this.get_context() + ':channel_send:bad payload data')\r\n\t\tassert( arg_channel in this._channels, this.get_context() + ':channel_send:channel [' + arg_channel + '] stream not found')\r\n\t\tthis._channels[arg_channel].push(arg_payload)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Subscribe on channel inputs.\r\n\t * \r\n\t * @param {string} arg_channel - channel name string.\r\n\t * @param {function} arg_handler - f(payload):nothing\r\n\t * @param {function} arg_predicate - p(payload):boolean\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tchannel_on(arg_channel, arg_handler, arg_predicate=undefined)\r\n\t{\r\n\t\tassert( T.isString(arg_channel), this.get_context() + ':channel_on:bad channel name on engine [' + this.get_name() + ']')\r\n\t\tassert( T.isFunction(arg_handler), this.get_context() + ':channel_on:bad handler function on engine [' + this.get_name() + '] for channel [' + arg_channel + ']')\r\n\t\tassert( arg_channel in this._channels, this.get_context() + ':channel_on:channel [' + arg_channel + '] stream not found on engine [' + this.get_name() + ']')\r\n\t\tthis._channels[arg_channel].subscribe(\r\n\t\t\t(value) => {\r\n\t\t\t\t// console.log(context + ':subscribe:bus[' + this.get_name() + '] channel [' + arg_channel + '] received value', value)\r\n\t\t\t\t\r\n\t\t\t\t// FILTER BY PREDICATE\r\n\t\t\t\tif ( T.isFunction(arg_predicate) )\r\n\t\t\t\t{\r\n\t\t\t\t\tif ( arg_predicate(value) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\targ_handler(value)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// NO VALID PREDICATE\r\n\t\t\t\targ_handler(value)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/messaging/stream_bus_engine.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 936,
    "kind": "variable",
    "name": "context",
    "memberof": "js/messaging/stream_bus_engine.js",
    "static": true,
    "longname": "js/messaging/stream_bus_engine.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/messaging/stream_bus_engine.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 937,
    "kind": "class",
    "name": "StreamBusEngine",
    "memberof": "js/messaging/stream_bus_engine.js",
    "static": true,
    "longname": "js/messaging/stream_bus_engine.js~StreamBusEngine",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/messaging/stream_bus_engine.js",
    "importStyle": "StreamBusEngine",
    "description": "Stream based bus engine class for message bus client or server.",
    "examples": [
      "API:\n  ->constructor(arg_name,arg_settings,arg_log_context,arg_logger_manager).\n\n->channel_list():array                           - List engine channels.\n  ->channel_add(arg_channel):nothing               - Add a channel.\n  ->channel_send(arg_channel, arg_payload):nothing - Send a message into a channel.\n  ->channel_on(arg_channel, arg_handler):nothing   - Subscribe on channel inputs.\n  ->channel_transform(arg_in_channel, arg_out_channel, arg_xform_handler):nothing - Transform payload of input channel to output channel."
    ],
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/messaging/bus_engine.js~BusEngine"
    ]
  },
  {
    "__docId__": 938,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/messaging/stream_bus_engine.js~StreamBusEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/stream_bus_engine.js~StreamBusEngine#constructor",
    "access": "public",
    "description": "Create a bus.",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "settings."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context."
      },
      {
        "nullable": null,
        "types": [
          "LoggerManager"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_logger_manager",
        "description": "logger manager object (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 939,
    "kind": "member",
    "name": "is_stream_bus_engine",
    "memberof": "js/messaging/stream_bus_engine.js~StreamBusEngine",
    "static": false,
    "longname": "js/messaging/stream_bus_engine.js~StreamBusEngine#is_stream_bus_engine",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 940,
    "kind": "member",
    "name": "_channels",
    "memberof": "js/messaging/stream_bus_engine.js~StreamBusEngine",
    "static": false,
    "longname": "js/messaging/stream_bus_engine.js~StreamBusEngine#_channels",
    "access": "private",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 941,
    "kind": "method",
    "name": "channel_list",
    "memberof": "js/messaging/stream_bus_engine.js~StreamBusEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/stream_bus_engine.js~StreamBusEngine#channel_list",
    "access": "public",
    "description": "List engine channels.",
    "lineNumber": 61,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 942,
    "kind": "method",
    "name": "channel_add",
    "memberof": "js/messaging/stream_bus_engine.js~StreamBusEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/stream_bus_engine.js~StreamBusEngine#channel_add",
    "access": "public",
    "description": "Add a channel.",
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_channel",
        "description": "channel name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 943,
    "kind": "method",
    "name": "channel_send",
    "memberof": "js/messaging/stream_bus_engine.js~StreamBusEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/stream_bus_engine.js~StreamBusEngine#channel_send",
    "access": "public",
    "description": "Send a message into a channel.",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_channel",
        "description": "channel name string."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_payload",
        "description": "payload data object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 944,
    "kind": "method",
    "name": "channel_on",
    "memberof": "js/messaging/stream_bus_engine.js~StreamBusEngine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/messaging/stream_bus_engine.js~StreamBusEngine#channel_on",
    "access": "public",
    "description": "Subscribe on channel inputs.",
    "lineNumber": 110,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_channel",
        "description": "channel name string."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_handler",
        "description": "f(payload):nothing"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_predicate",
        "description": "p(payload):boolean"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 945,
    "kind": "file",
    "name": "js/plugins/features_plugin.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T      from '../utils/types'\r\nimport Plugin from './plugin'\r\n\r\n\r\nconst context = 'common/plugins/features_plugin'\r\n\r\n\r\n\r\n/**\r\n * Plugin class for features managing.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class FeaturesPlugin extends Plugin\r\n{\r\n    /**\r\n     * Create a Featured Plugin instance.\r\n\t * @extends Instance\r\n\t * \r\n\t * STATIC API:\r\n\t * \t\t->get_class(arg_class_name):Class - get a feature class.\r\n\t * \r\n\t * \tAPI:\r\n\t * \t\t->create(arg_class_name, arg_name, arg_settings, arg_state):object - create a feature instance.\r\n\t * \t\t->get_feature_class(arg_class_name):object - get a feature class.\r\n\t * \t\t->has(arg_class_name):boolean - test if plugin has feature.\r\n\t * \t\t->load_feature_class(arg_path):Class - load a feature class from a script file.\r\n\t * \r\n\t * @param {RuntimeBase} arg_runtime - runtime instance.\r\n\t * @param {PluginsManager} arg_manager - plugins manager.\r\n\t * @param {string} arg_name - plugin name.\r\n\t * @param {string} arg_class - plugin class name.\r\n\t * @param {object} arg_settings - plugin settings map.\r\n\t * @param {string|undefined} arg_log_context - optional.\r\n\t * \r\n\t * @returns {nothing}\r\n     */\r\n\tconstructor(arg_runtime, arg_manager, arg_name, arg_class, arg_settings, arg_log_context)\r\n\t{\r\n\t\tassert( T.isObject(arg_runtime) && arg_runtime.is_base_runtime, context + ':constructor:bad runtime instance for ' + arg_name)\r\n\t\tassert( T.isObject(arg_manager) && arg_manager.is_plugins_manager, context + ':bad manager object for ' + arg_name)\r\n\r\n\t\tsuper(arg_runtime, arg_manager, arg_name, arg_class, arg_settings, arg_log_context ? arg_log_context : context)\r\n\t\t\r\n\t\tthis.is_features_plugin = true\r\n\t}\r\n\t\r\n    \r\n\t/**\r\n     * Create a component instance.\r\n\t * \r\n     * @param {string} arg_class_name - type or class feature name.\r\n     * @param {string} arg_name - feature name.\r\n     * @param {object} arg_settings - feature settings plain object.\r\n     * @param {object} arg_state - feature initial state plain object (optional).\r\n\t * \r\n     * @returns {object} feature instance.\r\n     */\r\n\tcreate(arg_class_name, arg_name, arg_settings, arg_state)\r\n\t{\r\n\t\tassert( T.isString(arg_class_name), context + ':bad class string')\r\n\t\tassert( T.isString(arg_name), context + ':bad name string')\r\n\t\tassert( T.isObject(arg_settings), context + ':bad settings object')\r\n\t\tif (arg_state)\r\n\t\t{\r\n\t\t\tassert( T.isObject(arg_state), context + ':bad state object')\r\n\t\t}\r\n\t\t\r\n\t\tconst feature_class = this.get_feature_class(arg_class_name)\r\n\t\tif (feature_class)\r\n\t\t{\r\n\t\t\treturn new feature_class(arg_name, arg_settings, arg_state)\r\n\t\t}\r\n\t\t\r\n\t\tassert(false, context + ':create:not yet implemented')\r\n\t\t\r\n\t\treturn undefined\r\n\t}\r\n\r\n\t\r\n    \r\n\t/**\r\n     * Get a feature class.\r\n\t * @abstract\r\n\t * @static\r\n\t * \r\n     * @param {string} arg_class_name - feature class name.\r\n\t * \r\n     * @returns {Class} feature class.\r\n     */\r\n\tstatic get_class(arg_class_name)\r\n\t{\r\n\t\tassert( T.isString(arg_class_name), context + ':get_class:bad class string')\r\n\t\t\r\n\t\tassert(false, context + ':get_class:not yet implemented')\r\n\t\t\r\n\t\treturn undefined\r\n\t}\r\n\t\r\n    \r\n\r\n\t/**\r\n     * Get a feature class.\r\n\t * @abstract\r\n\t * \r\n     * @param {string} arg_class_name - feature class name.\r\n\t * \r\n     * @returns {object} feature class.\r\n     */\r\n\tget_feature_class(arg_class_name)\r\n\t{\r\n\t\tassert( T.isString(arg_class_name), context + ':get_feature_class:bad class string')\r\n\t\t\r\n\t\tassert(false, context + ':get_feature_class:not yet implemented')\r\n\t\t\r\n\t\treturn false\r\n\t}\r\n\t\r\n    \r\n\r\n\t/**\r\n     * Test if a feature class is known into self contained plugins.\r\n\t * @abstract\r\n\t * \r\n     * @param {string} arg_class_name - feature class name.\r\n\t * \r\n     * @returns {boolean} feature class found or not.\r\n     */\r\n\thas(arg_class_name)\r\n\t{\r\n\t\tassert( T.isString(arg_class_name), context + ':bad class string')\r\n\t\t\r\n\t\tassert(false, context + ':has:not yet implemented')\r\n\t\t\r\n\t\treturn false\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Load a feature class from a script file.\r\n\t * \r\n\t * @param {string} arg_path - path file name\r\n\t * \r\n\t * @returns {Class|undefined} - class object.\r\n\t */\r\n\tload_feature_class(arg_path)\r\n\t{\r\n\t\tassert( T.isString(arg_path), context + ':bad path string')\r\n\t\t\r\n\t\t// console.log(context + ':load_feature_class:load package')\r\n\r\n\t\ttry\r\n\t\t{\r\n\t\t\tconst file_path_name = this._runtime.context.get_absolute_package_path(arg_path)\r\n\r\n\t\t\t// console.log(context + ':load_feature_class:load package [' + arg_path + '] file=', file_path_name)\r\n\r\n\t\t\tconst required = require(file_path_name)\r\n\t\t\tif (required)\r\n\t\t\t{\r\n\t\t\t\tconst FeatureClass = ('default' in required) ? required.default : required\r\n\t\t\t\treturn FeatureClass\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(e)\r\n\t\t{\r\n\t\t\t// NOTHING TO DO\r\n\t\t\tconsole.error(context + '.load:' + arg_path + ' failed', e)\r\n\t\t}\r\n\r\n\t\t// console.log(context + ':load_feature_class:load plugin')\r\n\t\ttry\r\n\t\t{\r\n\t\t\tconst file_path_name = this._runtime.context.get_absolute_plugin_path(arg_path)\r\n\t\t\t// console.log(context + ':load_feature_class:load package [' + arg_path + '] file=', file_path_name)\r\n\t\t\t\r\n\t\t\tconst required = require(file_path_name)\r\n\t\t\tconst FeatureClass = ('default' in required) ? required.default : required\r\n\t\t\t// console.log('loading rendering plugin class', PluginClass)\r\n\t\t\t\r\n\t\t\treturn FeatureClass\r\n\t\t}\r\n\t\tcatch(e)\r\n\t\t{\r\n\t\t\tconsole.error(context + '.load:' + arg_path + ' failed', e)\r\n\t\t}\r\n\t\t\r\n\t\treturn undefined\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/plugins/features_plugin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 946,
    "kind": "variable",
    "name": "context",
    "memberof": "js/plugins/features_plugin.js",
    "static": true,
    "longname": "js/plugins/features_plugin.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/plugins/features_plugin.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 947,
    "kind": "class",
    "name": "FeaturesPlugin",
    "memberof": "js/plugins/features_plugin.js",
    "static": true,
    "longname": "js/plugins/features_plugin.js~FeaturesPlugin",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/plugins/features_plugin.js",
    "importStyle": "FeaturesPlugin",
    "description": "Plugin class for features managing.",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/plugins/plugin.js~Plugin"
    ]
  },
  {
    "__docId__": 948,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/plugins/features_plugin.js~FeaturesPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/plugins/features_plugin.js~FeaturesPlugin#constructor",
    "access": "public",
    "description": "Create a Featured Plugin instance.",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "Instance\n\nSTATIC API:\n\t\t->get_class(arg_class_name):Class - get a feature class.\n\n\tAPI:\n\t\t->create(arg_class_name, arg_name, arg_settings, arg_state):object - create a feature instance.\n\t\t->get_feature_class(arg_class_name):object - get a feature class.\n\t\t->has(arg_class_name):boolean - test if plugin has feature.\n\t\t->load_feature_class(arg_path):Class - load a feature class from a script file."
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "RuntimeBase"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "runtime instance."
      },
      {
        "nullable": null,
        "types": [
          "PluginsManager"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_manager",
        "description": "plugins manager."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "plugin name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_class",
        "description": "plugin class name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "plugin settings map."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "optional."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 949,
    "kind": "member",
    "name": "is_features_plugin",
    "memberof": "js/plugins/features_plugin.js~FeaturesPlugin",
    "static": false,
    "longname": "js/plugins/features_plugin.js~FeaturesPlugin#is_features_plugin",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 950,
    "kind": "method",
    "name": "create",
    "memberof": "js/plugins/features_plugin.js~FeaturesPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/plugins/features_plugin.js~FeaturesPlugin#create",
    "access": "public",
    "description": "Create a component instance.",
    "lineNumber": 63,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} feature instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_class_name",
        "description": "type or class feature name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "feature name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "feature settings plain object."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "feature initial state plain object (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "feature instance."
    }
  },
  {
    "__docId__": 951,
    "kind": "method",
    "name": "get_class",
    "memberof": "js/plugins/features_plugin.js~FeaturesPlugin",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/plugins/features_plugin.js~FeaturesPlugin.get_class",
    "access": "public",
    "description": "Get a feature class.",
    "lineNumber": 95,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Class} feature class."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_class_name",
        "description": "feature class name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Class"
      ],
      "spread": false,
      "description": "feature class."
    },
    "abstract": true
  },
  {
    "__docId__": 952,
    "kind": "method",
    "name": "get_feature_class",
    "memberof": "js/plugins/features_plugin.js~FeaturesPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/plugins/features_plugin.js~FeaturesPlugin#get_feature_class",
    "access": "public",
    "description": "Get a feature class.",
    "lineNumber": 114,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} feature class."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_class_name",
        "description": "feature class name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "feature class."
    },
    "abstract": true
  },
  {
    "__docId__": 953,
    "kind": "method",
    "name": "has",
    "memberof": "js/plugins/features_plugin.js~FeaturesPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/plugins/features_plugin.js~FeaturesPlugin#has",
    "access": "public",
    "description": "Test if a feature class is known into self contained plugins.",
    "lineNumber": 133,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} feature class found or not."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_class_name",
        "description": "feature class name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "feature class found or not."
    },
    "abstract": true
  },
  {
    "__docId__": 954,
    "kind": "method",
    "name": "load_feature_class",
    "memberof": "js/plugins/features_plugin.js~FeaturesPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/plugins/features_plugin.js~FeaturesPlugin#load_feature_class",
    "access": "public",
    "description": "Load a feature class from a script file.",
    "lineNumber": 151,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Class|undefined} - class object."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_path",
        "description": "path file name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Class",
        "undefined"
      ],
      "spread": false,
      "description": "class object."
    }
  },
  {
    "__docId__": 955,
    "kind": "file",
    "name": "js/plugins/plugin.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T        from '../utils/types'\r\nimport Instance from '../base/instance'\r\n\r\n\r\nlet context = 'common/plugins/plugin'\r\n\r\n\r\n\r\n/**\r\n * Plugins base class.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class Plugin extends Instance\r\n{\r\n\t/**\r\n\t * Create a plugin instance.\r\n\t * \r\n\t * @param {PluginsManager} arg_manager - plugins manager.\r\n\t * @param {string} arg_name - plugin name.\r\n\t * @param {string} arg_class - plugin class name.\r\n\t * @param {object} arg_settings - plugin settings map.\r\n\t * @param {string|undefined} arg_log_context - optional.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_manager, arg_name, arg_class, arg_settings, arg_log_context)\r\n\t{\r\n\t\tconst create_context = T.isString(arg_log_context) ? arg_log_context : context\r\n\t\tassert( T.isObject(arg_runtime) && arg_runtime.is_base_runtime, context + ':constructor:bad runtime instance' )\r\n\t\tassert( T.isObject(arg_manager) && arg_manager.is_plugins_manager, create_context + ':bad manager object for ' + arg_name + ' - ' + arg_log_context)\r\n\t\tassert( T.isString(arg_name), create_context + ':bad name string')\r\n\t\tassert( T.isString(arg_class.toString()), create_context + ':bad class string for ' + arg_name)\r\n\t\tassert( T.isObject(arg_settings), create_context + ':bad settings object for ' + arg_name)\r\n\t\t\r\n\t\tif (arg_settings.get)\r\n\t\t{\r\n\t\t\tconst version = T.isString( arg_settings.get('version') ) ? arg_settings.get('version') : '0.0.0'\r\n\t\t\targ_settings = arg_settings.set('version', version)\r\n\t\t\targ_settings = arg_settings.set('runtime', arg_runtime)\r\n\t\t\targ_settings = arg_settings.set('logger_manager', arg_runtime.get_logger_manager())\r\n\t\t} else {\r\n\t\t\targ_settings.version = T.isString(arg_settings.version) ? arg_settings.version : '0.0.0'\r\n\t\t\targ_settings.runtime = arg_runtime\r\n\t\t\targ_settings.logger_manager = arg_runtime.get_logger_manager()\r\n\t\t}\r\n\r\n\t\tsuper('plugins', (arg_class ? arg_class.toString() : 'Plugin'), arg_name, arg_settings, arg_log_context)\r\n\t\t\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_plugin = true\r\n\t\t\r\n\t\t/**\r\n\t\t * Plugin version.\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis.$version = arg_settings.version\r\n\r\n\t\t/**\r\n\t\t * Plugins manager.\r\n\t\t * @type {PluginManager}\r\n\t\t */\r\n\t\tthis.manager = arg_manager\r\n\r\n\t\t/**\r\n\t\t * Enabled flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_enabled = false\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get plugin js asset files for browser loading.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_browser_plugin_file_url()\r\n\t{\r\n\t\treturn undefined\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Enable a plugin.\r\n\t * @abstract\r\n\t * \r\n\t * @param {object|undefined} arg_context - optional contextual map.\r\n\t * \r\n\t * @returns {object} - a promise object of a boolean result (success:true, failure:false).\r\n\t */\r\n\t/* eslint no-unused-vars: \"off\" */\r\n\tenable(arg_context)\r\n\t{\r\n\t\tthis.is_enabled = true\r\n\t\tthis.manager.enabled_plugins.add(this)\r\n\t\treturn Promise.resolve(true)\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Disable a plugin.\r\n\t * @abstract\r\n\t * \r\n\t * @param {object|undefined} arg_context - optional contextual map.\r\n\t * \r\n\t * @returns {object} - a promise object of a boolean result (success:true, failure:false).\r\n\t */\r\n\t/* eslint no-unused-vars: \"off\" */\r\n\tdisable(arg_context)\r\n\t{\r\n\t\tthis.is_enabled = false\r\n\t\tthis.manager.enabled_plugins.remove(this)\r\n\t\treturn Promise.resolve(true)\r\n\t}\r\n\r\n\t\r\n\t\r\n    /**\r\n     * Get the plugin version.\r\n\t * \r\n     * @returns {string} plugin version\r\n     */\r\n\tget_version()\r\n\t{\r\n\t\treturn this.$version\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/plugins/plugin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 956,
    "kind": "variable",
    "name": "context",
    "memberof": "js/plugins/plugin.js",
    "static": true,
    "longname": "js/plugins/plugin.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/plugins/plugin.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 957,
    "kind": "class",
    "name": "Plugin",
    "memberof": "js/plugins/plugin.js",
    "static": true,
    "longname": "js/plugins/plugin.js~Plugin",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/plugins/plugin.js",
    "importStyle": "Plugin",
    "description": "Plugins base class.",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/instance.js~Instance"
    ]
  },
  {
    "__docId__": 958,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/plugins/plugin.js~Plugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/plugins/plugin.js~Plugin#constructor",
    "access": "public",
    "description": "Create a plugin instance.",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "PluginsManager"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_manager",
        "description": "plugins manager."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "plugin name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_class",
        "description": "plugin class name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "plugin settings map."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "optional."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 959,
    "kind": "member",
    "name": "is_plugin",
    "memberof": "js/plugins/plugin.js~Plugin",
    "static": false,
    "longname": "js/plugins/plugin.js~Plugin#is_plugin",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 59,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 960,
    "kind": "member",
    "name": "$version",
    "memberof": "js/plugins/plugin.js~Plugin",
    "static": false,
    "longname": "js/plugins/plugin.js~Plugin#$version",
    "access": "public",
    "description": "Plugin version.",
    "lineNumber": 65,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 961,
    "kind": "member",
    "name": "manager",
    "memberof": "js/plugins/plugin.js~Plugin",
    "static": false,
    "longname": "js/plugins/plugin.js~Plugin#manager",
    "access": "public",
    "description": "Plugins manager.",
    "lineNumber": 71,
    "type": {
      "nullable": null,
      "types": [
        "PluginManager"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 962,
    "kind": "member",
    "name": "is_enabled",
    "memberof": "js/plugins/plugin.js~Plugin",
    "static": false,
    "longname": "js/plugins/plugin.js~Plugin#is_enabled",
    "access": "public",
    "description": "Enabled flag.",
    "lineNumber": 77,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 963,
    "kind": "method",
    "name": "get_browser_plugin_file_url",
    "memberof": "js/plugins/plugin.js~Plugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/plugins/plugin.js~Plugin#get_browser_plugin_file_url",
    "access": "public",
    "description": "Get plugin js asset files for browser loading.",
    "lineNumber": 87,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 964,
    "kind": "method",
    "name": "enable",
    "memberof": "js/plugins/plugin.js~Plugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/plugins/plugin.js~Plugin#enable",
    "access": "public",
    "description": "Enable a plugin.",
    "lineNumber": 103,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - a promise object of a boolean result (success:true, failure:false)."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "optional contextual map."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "a promise object of a boolean result (success:true, failure:false)."
    },
    "abstract": true
  },
  {
    "__docId__": 966,
    "kind": "method",
    "name": "disable",
    "memberof": "js/plugins/plugin.js~Plugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/plugins/plugin.js~Plugin#disable",
    "access": "public",
    "description": "Disable a plugin.",
    "lineNumber": 121,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - a promise object of a boolean result (success:true, failure:false)."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "optional contextual map."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "a promise object of a boolean result (success:true, failure:false)."
    },
    "abstract": true
  },
  {
    "__docId__": 968,
    "kind": "method",
    "name": "get_version",
    "memberof": "js/plugins/plugin.js~Plugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/plugins/plugin.js~Plugin#get_version",
    "access": "public",
    "description": "Get the plugin version.",
    "lineNumber": 135,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} plugin version"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "plugin version"
    },
    "params": []
  },
  {
    "__docId__": 969,
    "kind": "file",
    "name": "js/plugins/rendering_plugin.js",
    "content": "\r\n// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T              from '../utils/types'\r\nimport FeaturesPlugin from './features_plugin'\r\n\r\n\r\nconst context = 'common/plugins/rendering_plugin'\r\n\r\n\r\n\r\n/**\r\n * Plugin class for renderers plugin.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class RenderingPlugin extends FeaturesPlugin\r\n{\r\n    /**\r\n     * Create a rendering Plugin instance.\r\n\t * @extends Instance\r\n\t * \r\n\t * @param {RuntimeBase} arg_runtime - runtime instance.\r\n\t * @param {PluginsManager} arg_manager - plugins manager.\r\n\t * @param {string} arg_name - plugin name.\r\n\t * @param {string} arg_version - plugin version.\r\n\t * @returns {nothing}\r\n     */\r\n\tconstructor(arg_runtime, arg_manager, arg_name, arg_version)\r\n\t{\r\n\t\tassert( T.isObject(arg_runtime) && arg_runtime.is_base_runtime, context + ':constructor:bad runtime instance for ' + arg_name)\r\n\t\tassert( T.isObject(arg_manager) && arg_manager.is_plugins_manager, context + ':bad manager object for ' + arg_name)\r\n\t\t\r\n\t\tsuper(arg_runtime, arg_manager, arg_name, 'RenderingPlugin', { version: arg_version }, context)\r\n\t\t\r\n\t\tthis.is_rendering_plugin = true\r\n\t\t\r\n\t\t/**\r\n\t\t * A map of public assets as name : absolute file path.\r\n\t\t * @protected\r\n\t\t */\r\n\t\tthis.public_assets = {\r\n\t\t\tcss:{},\r\n\t\t\tjs:{},\r\n\t\t\timg:{},\r\n\t\t\thtml:{}\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n    \r\n\t/**\r\n     * Get a feature class.\r\n\t * @abstract\r\n     * @param {string} arg_class_name - feature class name.\r\n     * @returns {object} feature class.\r\n     */\r\n\tget_feature_class(arg_class_name)\r\n\t{\r\n\t\tassert( T.isString(arg_class_name), context + ':get_feature_class:bad class string')\r\n\t\t\r\n\t\tassert(false, context + ':get_feature_class:not yet implemented')\r\n\t\t\r\n\t\treturn undefined\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Get all plugin public assets (CSS, JS, HTML...).\r\n\t * @returns {object} - a map of assets: type => public name => absolute file path\r\n\t */\r\n\tget_public_assets()\r\n\t{\r\n\t\treturn this.public_assets\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Get all plugin public  assets.\r\n\t * @param {string} arg_type - asset type: js, css, html...\r\n\t * @returns {object} - a map of assets:public name => absolute file path\r\n\t */\r\n\tget_public_assets_of_type(arg_type)\r\n\t{\r\n\t\tassert( T.isString(arg_type), context + ':get_public_assets_of_type:bad asset type string')\r\n\t\targ_type = arg_type.toLocaleLowerCase()\r\n\t\treturn this.public_assets[arg_type] ? this.public_assets[arg_type] : {}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Get all plugin public JS assets.\r\n\t * @returns {object} - a map of assets:public name => absolute file path\r\n\t */\r\n\tget_public_js_assets()\r\n\t{\r\n\t\treturn this.public_assets['js'] ? this.public_assets['js'] : {}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Get all plugin public image assets.\r\n\t * @returns {object} - a map of assets:public name => absolute file path\r\n\t */\r\n\tget_public_img_assets()\r\n\t{\r\n\t\treturn this.public_assets['img'] ? this.public_assets['img'] : {}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Get all plugin public css assets.\r\n\t * @returns {object} - a map of assets:public name => absolute file path\r\n\t */\r\n\tget_public_css_assets()\r\n\t{\r\n\t\treturn this.public_assets['css'] ? this.public_assets['css'] : {}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Get all plugin public html assets.\r\n\t * @returns {object} - a map of assets:public name => absolute file path\r\n\t */\r\n\tget_public_html_assets()\r\n\t{\r\n\t\treturn this.public_assets['html'] ? this.public_assets['html'] : {}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Add a public asset.\r\n\t * @param {string} arg_type - asset type: js, css, html...\r\n\t * @param {string} arg_name - asset public name (for url access).\r\n\t * @param {string} arg_absolute_path - asset absolute path.\r\n\t * @returns {nothing}\r\n\t */\r\n\tadd_public_asset(arg_type, arg_name, arg_absolute_path)\r\n\t{\r\n\t\tassert( T.isString(arg_type), context + ':add_public_asset:bad asset type string')\r\n\t\tassert( T.isString(arg_name), context + ':add_public_asset:bad asset name string')\r\n\t\tassert( T.isString(arg_absolute_path), context + ':add_public_asset:bad asset path string')\r\n\t\t\r\n\t\targ_type = arg_type.toLocaleLowerCase()\r\n\t\tif ( ! T.isObject(this.public_assets[arg_type]) )\r\n\t\t{\r\n\t\t\tthis.public_assets[arg_type] = {}\r\n\t\t}\r\n\t\t\r\n\t\tthis.public_assets[arg_type][arg_name] = arg_absolute_path\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Get a public asset by its name.\r\n\t * @param {string} arg_name - asset public name (for url access).\r\n\t * @returns {string|null} - absolute file path\r\n\t */\r\n\tget_public_asset(arg_name)\r\n\t{\r\n\t\tconst types = Object.keys(this.public_assets)\r\n\t\tfor(let type of types)\r\n\t\t{\r\n\t\t\tif (arg_name in this.public_assets[type])\r\n\t\t\t{\r\n\t\t\t\treturn this.public_assets[type][arg_name]\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Find a rendering function.\r\n\t * \r\n\t * @param {string} arg_type - rendering item type.\r\n\t * \r\n\t * @returns {Function} - rendering function.\r\n\t */\r\n\tstatic find_rendering_function(/*arg_type*/)\r\n\t{\r\n\t\treturn undefined\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/plugins/rendering_plugin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 970,
    "kind": "variable",
    "name": "context",
    "memberof": "js/plugins/rendering_plugin.js",
    "static": true,
    "longname": "js/plugins/rendering_plugin.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/plugins/rendering_plugin.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 971,
    "kind": "class",
    "name": "RenderingPlugin",
    "memberof": "js/plugins/rendering_plugin.js",
    "static": true,
    "longname": "js/plugins/rendering_plugin.js~RenderingPlugin",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/plugins/rendering_plugin.js",
    "importStyle": "RenderingPlugin",
    "description": "Plugin class for renderers plugin.",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/plugins/features_plugin.js~FeaturesPlugin"
    ]
  },
  {
    "__docId__": 972,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/plugins/rendering_plugin.js~RenderingPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/plugins/rendering_plugin.js~RenderingPlugin#constructor",
    "access": "public",
    "description": "Create a rendering Plugin instance.",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "Instance"
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "RuntimeBase"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "runtime instance."
      },
      {
        "nullable": null,
        "types": [
          "PluginsManager"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_manager",
        "description": "plugins manager."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "plugin name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_version",
        "description": "plugin version."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 973,
    "kind": "member",
    "name": "is_rendering_plugin",
    "memberof": "js/plugins/rendering_plugin.js~RenderingPlugin",
    "static": false,
    "longname": "js/plugins/rendering_plugin.js~RenderingPlugin#is_rendering_plugin",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 974,
    "kind": "member",
    "name": "public_assets",
    "memberof": "js/plugins/rendering_plugin.js~RenderingPlugin",
    "static": false,
    "longname": "js/plugins/rendering_plugin.js~RenderingPlugin#public_assets",
    "access": "protected",
    "description": "A map of public assets as name : absolute file path.",
    "lineNumber": 44,
    "type": {
      "types": [
        "{\"css\": *, \"js\": *, \"img\": *, \"html\": *}"
      ]
    }
  },
  {
    "__docId__": 975,
    "kind": "method",
    "name": "get_feature_class",
    "memberof": "js/plugins/rendering_plugin.js~RenderingPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/plugins/rendering_plugin.js~RenderingPlugin#get_feature_class",
    "access": "public",
    "description": "Get a feature class.",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} feature class."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_class_name",
        "description": "feature class name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "feature class."
    },
    "abstract": true
  },
  {
    "__docId__": 976,
    "kind": "method",
    "name": "get_public_assets",
    "memberof": "js/plugins/rendering_plugin.js~RenderingPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/plugins/rendering_plugin.js~RenderingPlugin#get_public_assets",
    "access": "public",
    "description": "Get all plugin public assets (CSS, JS, HTML...).",
    "lineNumber": 74,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - a map of assets: type => public name => absolute file path"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "a map of assets: type => public name => absolute file path"
    },
    "params": []
  },
  {
    "__docId__": 977,
    "kind": "method",
    "name": "get_public_assets_of_type",
    "memberof": "js/plugins/rendering_plugin.js~RenderingPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/plugins/rendering_plugin.js~RenderingPlugin#get_public_assets_of_type",
    "access": "public",
    "description": "Get all plugin public  assets.",
    "lineNumber": 85,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - a map of assets:public name => absolute file path"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_type",
        "description": "asset type: js, css, html..."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "a map of assets:public name => absolute file path"
    }
  },
  {
    "__docId__": 978,
    "kind": "method",
    "name": "get_public_js_assets",
    "memberof": "js/plugins/rendering_plugin.js~RenderingPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/plugins/rendering_plugin.js~RenderingPlugin#get_public_js_assets",
    "access": "public",
    "description": "Get all plugin public JS assets.",
    "lineNumber": 97,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - a map of assets:public name => absolute file path"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "a map of assets:public name => absolute file path"
    },
    "params": []
  },
  {
    "__docId__": 979,
    "kind": "method",
    "name": "get_public_img_assets",
    "memberof": "js/plugins/rendering_plugin.js~RenderingPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/plugins/rendering_plugin.js~RenderingPlugin#get_public_img_assets",
    "access": "public",
    "description": "Get all plugin public image assets.",
    "lineNumber": 107,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - a map of assets:public name => absolute file path"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "a map of assets:public name => absolute file path"
    },
    "params": []
  },
  {
    "__docId__": 980,
    "kind": "method",
    "name": "get_public_css_assets",
    "memberof": "js/plugins/rendering_plugin.js~RenderingPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/plugins/rendering_plugin.js~RenderingPlugin#get_public_css_assets",
    "access": "public",
    "description": "Get all plugin public css assets.",
    "lineNumber": 117,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - a map of assets:public name => absolute file path"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "a map of assets:public name => absolute file path"
    },
    "params": []
  },
  {
    "__docId__": 981,
    "kind": "method",
    "name": "get_public_html_assets",
    "memberof": "js/plugins/rendering_plugin.js~RenderingPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/plugins/rendering_plugin.js~RenderingPlugin#get_public_html_assets",
    "access": "public",
    "description": "Get all plugin public html assets.",
    "lineNumber": 127,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - a map of assets:public name => absolute file path"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "a map of assets:public name => absolute file path"
    },
    "params": []
  },
  {
    "__docId__": 982,
    "kind": "method",
    "name": "add_public_asset",
    "memberof": "js/plugins/rendering_plugin.js~RenderingPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/plugins/rendering_plugin.js~RenderingPlugin#add_public_asset",
    "access": "public",
    "description": "Add a public asset.",
    "lineNumber": 140,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_type",
        "description": "asset type: js, css, html..."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "asset public name (for url access)."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_absolute_path",
        "description": "asset absolute path."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 983,
    "kind": "method",
    "name": "get_public_asset",
    "memberof": "js/plugins/rendering_plugin.js~RenderingPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/plugins/rendering_plugin.js~RenderingPlugin#get_public_asset",
    "access": "public",
    "description": "Get a public asset by its name.",
    "lineNumber": 161,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|null} - absolute file path"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "asset public name (for url access)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "null"
      ],
      "spread": false,
      "description": "absolute file path"
    }
  },
  {
    "__docId__": 984,
    "kind": "method",
    "name": "find_rendering_function",
    "memberof": "js/plugins/rendering_plugin.js~RenderingPlugin",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/plugins/rendering_plugin.js~RenderingPlugin.find_rendering_function",
    "access": "public",
    "description": "Find a rendering function.",
    "lineNumber": 183,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} - rendering function."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_type",
        "description": "rendering item type."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "rendering function."
    }
  },
  {
    "__docId__": 985,
    "kind": "file",
    "name": "js/plugins/services_plugin.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T              from '../utils/types'\r\nimport FeaturesPlugin from './features_plugin'\r\n\r\n\r\nconst context = 'common/plugins/services_plugin'\r\n\r\n\r\n\r\n/**\r\n * Plugin class for services plugin.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class ServicesPlugin extends FeaturesPlugin\r\n{\r\n    /**\r\n     * Create a ServicesPlugin instance.\r\n\t * @extends Instance\r\n\t * \r\n\t * @param {RuntimeBase} arg_runtime - runtime instance.\r\n\t * @param {PluginsManager} arg_manager - plugins manager\r\n\t * @param {string} arg_name - plugin name\r\n\t * @param {string} arg_version - plugin version.\r\n\t * \r\n\t * @returns {nothing}\r\n     */\r\n\tconstructor(arg_runtime, arg_manager, arg_name, arg_version)\r\n\t{\r\n\t\tassert( T.isObject(arg_runtime) && arg_runtime.is_base_runtime, context + ':constructor:bad runtime instance' )\r\n\t\tassert( T.isObject(arg_manager), context + ':constructor:bad plugins manager instance' )\r\n\r\n\t\tsuper(arg_runtime, arg_manager, arg_name, 'ServicesPlugin', { version: arg_version }, context)\r\n\t\t\r\n\t\tthis.is_services_plugin = true\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/plugins/services_plugin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 986,
    "kind": "variable",
    "name": "context",
    "memberof": "js/plugins/services_plugin.js",
    "static": true,
    "longname": "js/plugins/services_plugin.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/plugins/services_plugin.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 987,
    "kind": "class",
    "name": "ServicesPlugin",
    "memberof": "js/plugins/services_plugin.js",
    "static": true,
    "longname": "js/plugins/services_plugin.js~ServicesPlugin",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/plugins/services_plugin.js",
    "importStyle": "ServicesPlugin",
    "description": "Plugin class for services plugin.",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/plugins/features_plugin.js~FeaturesPlugin"
    ]
  },
  {
    "__docId__": 988,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/plugins/services_plugin.js~ServicesPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/plugins/services_plugin.js~ServicesPlugin#constructor",
    "access": "public",
    "description": "Create a ServicesPlugin instance.",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "Instance"
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "RuntimeBase"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "runtime instance."
      },
      {
        "nullable": null,
        "types": [
          "PluginsManager"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_manager",
        "description": "plugins manager"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "plugin name"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_version",
        "description": "plugin version."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 989,
    "kind": "member",
    "name": "is_services_plugin",
    "memberof": "js/plugins/services_plugin.js~ServicesPlugin",
    "static": false,
    "longname": "js/plugins/services_plugin.js~ServicesPlugin#is_services_plugin",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 990,
    "kind": "file",
    "name": "js/rendering/anchor.js",
    "content": "// NPM IMPORTS\r\nimport h from 'virtual-dom/h'\r\n\r\n// COMMON IMPORTS\r\nimport T                   from '../utils/types'\r\nimport uid                 from '../utils/uid'\r\nimport rendering_normalize from './rendering_normalize'\r\n\r\n\r\nlet context = 'common/rendering/anchor'\r\n\r\n\r\n\r\n// DEFAULT STATE\r\nconst default_state = {\r\n\tlabel:undefined,\r\n\tcommand:undefined\r\n}\r\n\r\n// DEFAULT SETTINGS\r\nconst default_settings = {\r\n\tclass:undefined,\r\n\tstyle:undefined,\r\n\tid:undefined,\r\n\thref:undefined,\r\n\tblank:false\r\n}\r\n\r\n\r\n\r\n/**\r\n * Anchor rendering with given state, produce a rendering result.\r\n * \r\n * @param {object} arg_settings - rendering item settings.\r\n * @param {object} arg_state - component state.\r\n * @param {object} arg_rendering_context - rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }.\r\n * @param {RenderingResult} arg_rendering_result - rendering result to update.\r\n * \r\n * @returns {RenderingResult} - updated Rendering result: VNode or Html text, headers.\r\n */\r\nexport default (arg_settings, arg_state={}, arg_rendering_context, arg_rendering_result)=>{\r\n\t// NORMALIZE ARGS\r\n\tconst { settings, state, rendering_context, rendering_result } = rendering_normalize(default_settings, default_state, arg_settings, arg_state, arg_rendering_context, arg_rendering_result, context)\r\n\t\r\n\t// GET SETTINGS ATTRIBUTES\r\n\tconst href_value = (T.isString(settings.href) && settings.href.length > 0) ? settings.href : '#'\r\n\r\n\t// GET STATE ATTRIBUTES\r\n\tconst label_value = state.label ? rendering_context.rendering_factory(state.label, arg_rendering_context, settings.children).get_final_vtree(undefined, rendering_result) : 'no label'\r\n\tconst cmd_value = (T.isString(state.command) && state.command.length > 0) ? state.command : undefined\r\n\tconst url = (T.isString(state.url) && state.url.length > 0) ? state.url : ''\r\n\tif (cmd_value)\r\n\t{\r\n\t\tsettings.class = settings.class ? settings.class + ' devapt-command' : 'devapt-command'\r\n\t}\r\n\r\n\t// BUILD TAG\r\n\tconst tag_id = settings.id ? settings.id : 'tag_' + uid()\r\n\tconst tag_children = label_value\r\n\tlet tag_props = { id:tag_id, style:settings.style, className:settings.class, href:href_value && href_value != '#' ? href_value : '#' + url, attributes:{ 'data-devapt-command':cmd_value } }\r\n\tif (settings.blank)\r\n\t{\r\n\t\ttag_props._blank = ''\r\n\t}\r\n\tconst tag = h('a', tag_props, tag_children)\r\n\t\r\n\trendering_result.add_vtree(tag_id, tag)\r\n\r\n\treturn rendering_result\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/rendering/anchor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 991,
    "kind": "variable",
    "name": "context",
    "memberof": "js/rendering/anchor.js",
    "static": true,
    "longname": "js/rendering/anchor.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/anchor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 992,
    "kind": "variable",
    "name": "default_state",
    "memberof": "js/rendering/anchor.js",
    "static": true,
    "longname": "js/rendering/anchor.js~default_state",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/anchor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "{\"label\": *, \"command\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 993,
    "kind": "variable",
    "name": "default_settings",
    "memberof": "js/rendering/anchor.js",
    "static": true,
    "longname": "js/rendering/anchor.js~default_settings",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/anchor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "{\"class\": *, \"style\": *, \"id\": *, \"href\": *, \"blank\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 994,
    "kind": "function",
    "name": "anchor",
    "memberof": "js/rendering/anchor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/anchor.js~anchor",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/rendering/anchor.js",
    "importStyle": "anchor",
    "description": "Anchor rendering with given state, produce a rendering result.",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult} - updated Rendering result: VNode or Html text, headers."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "rendering item settings."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_context",
        "description": "rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }."
      },
      {
        "nullable": null,
        "types": [
          "RenderingResult"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_result",
        "description": "rendering result to update."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": "updated Rendering result: VNode or Html text, headers."
    }
  },
  {
    "__docId__": 995,
    "kind": "file",
    "name": "js/rendering/button.js",
    "content": "// NPM IMPORTS\r\nimport h from 'virtual-dom/h'\r\n\r\n// COMMON IMPORTS\r\nimport T                   from '../utils/types'\r\nimport rendering_normalize from './rendering_normalize'\r\n\r\n\r\nlet context = 'common/rendering/button'\r\n\r\n\r\n\r\n// DEFAULT STATE\r\nconst default_state = {\r\n\tlabel:undefined\r\n}\r\n\r\n// DEFAULT SETTINGS\r\nconst default_settings = {\r\n\ttype: 'button',\r\n\tclass:undefined,\r\n\tstyle:undefined,\r\n\tid:undefined\r\n}\r\n\r\nconst types = ['button', 'submit']\r\n\r\n\r\n\r\n/**\r\n * Button rendering with given state, produce a rendering result.\r\n * \r\n * @param {object} arg_settings - rendering item settings.\r\n * @param {object} arg_state - component state.\r\n * @param {object} arg_rendering_context - rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }.\r\n * @param {RenderingResult} arg_rendering_result - rendering result to update.\r\n * \r\n * @returns {RenderingResult} - updated Rendering result: VNode or Html text, headers.\r\n */\r\nexport default (arg_settings, arg_state={}, arg_rendering_context, arg_rendering_result)=>{\r\n\t// NORMALIZE ARGS\r\n\tconst { settings, state, rendering_context, rendering_result } = rendering_normalize(default_settings, default_state, arg_settings, arg_state, arg_rendering_context, arg_rendering_result, context)\r\n\r\n\t// GET SETTINGS ATTRIBUTES\r\n\tconst type_value = (T.isString(settings.type) && types.indexOf(settings.type) > -1) ? settings.type : 'text'\r\n\t\t\r\n\t// GET STATE ATTRIBUTES\r\n\tconst label_value = T.isString(state.label) ? state.label : undefined\r\n\r\n\t// BUILD TAG\r\n\tconst tag_id = settings.id\r\n\tconst tag_children = label_value\r\n\tconst tag_props = { id:tag_id, type:type_value, style:settings.style, className:settings.class }\r\n\tconst tag = h('button', tag_props, tag_children)\r\n\t\r\n\trendering_result.add_vtree(tag_id, tag)\r\n\r\n\treturn rendering_result\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/rendering/button.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 996,
    "kind": "variable",
    "name": "context",
    "memberof": "js/rendering/button.js",
    "static": true,
    "longname": "js/rendering/button.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/button.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 997,
    "kind": "variable",
    "name": "default_state",
    "memberof": "js/rendering/button.js",
    "static": true,
    "longname": "js/rendering/button.js~default_state",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/button.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "{\"label\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 998,
    "kind": "variable",
    "name": "default_settings",
    "memberof": "js/rendering/button.js",
    "static": true,
    "longname": "js/rendering/button.js~default_settings",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/button.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"class\": *, \"style\": *, \"id\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 999,
    "kind": "variable",
    "name": "types",
    "memberof": "js/rendering/button.js",
    "static": true,
    "longname": "js/rendering/button.js~types",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/button.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1000,
    "kind": "function",
    "name": "button",
    "memberof": "js/rendering/button.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/button.js~button",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/rendering/button.js",
    "importStyle": "button",
    "description": "Button rendering with given state, produce a rendering result.",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult} - updated Rendering result: VNode or Html text, headers."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "rendering item settings."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_context",
        "description": "rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }."
      },
      {
        "nullable": null,
        "types": [
          "RenderingResult"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_result",
        "description": "rendering result to update."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": "updated Rendering result: VNode or Html text, headers."
    }
  },
  {
    "__docId__": 1001,
    "kind": "file",
    "name": "js/rendering/canvas.js",
    "content": "// NPM IMPORTS\r\nimport h from 'virtual-dom/h'\r\n\r\n// COMMON IMPORTS\r\nimport T                   from '../utils/types'\r\nimport rendering_normalize from './rendering_normalize'\r\n\r\n\r\nlet context = 'common/rendering/canvas'\r\n\r\n\r\n\r\n// DEFAULT STATE\r\nconst default_state = {\r\n\tlabel:undefined\r\n}\r\n\r\n// DEFAULT SETTINGS\r\nconst default_settings = {\r\n\tclass:undefined,\r\n\tstyle:undefined,\r\n\tid:undefined\r\n}\r\n\r\n\r\n\r\n/**\r\n * Canvas rendering with given state, produce a rendering result.\r\n * \r\n * @param {object} arg_settings - rendering item settings.\r\n * @param {object} arg_state - component state.\r\n * @param {object} arg_rendering_context - rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }.\r\n * @param {RenderingResult} arg_rendering_result - rendering result to update.\r\n * \r\n * @returns {RenderingResult} - updated Rendering result: VNode or Html text, headers.\r\n */\r\nexport default (arg_settings, arg_state={}, arg_rendering_context, arg_rendering_result)=>{\r\n\t// NORMALIZE ARGS\r\n\tconst { settings, state, rendering_context, rendering_result } = rendering_normalize(default_settings, default_state, arg_settings, arg_state, arg_rendering_context, arg_rendering_result, context)\r\n\r\n\t// GET SETTINGS ATTRIBUTES\r\n\t\t\r\n\t// GET STATE ATTRIBUTES\r\n\t// const label_value = T.isString(state.label) ? state.label : undefined\r\n\r\n\t// BUILD TAG\r\n\tconst tag_id = settings.id\r\n\tconst tag_children = undefined\r\n\tconst tag_props = { id:tag_id, style:settings.style, class:settings.class }\r\n\tconst tag = h('canvas', tag_props, tag_children)\r\n\t\r\n\trendering_result.add_vtree(tag_id, tag)\r\n\r\n\treturn rendering_result\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/rendering/canvas.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1002,
    "kind": "variable",
    "name": "context",
    "memberof": "js/rendering/canvas.js",
    "static": true,
    "longname": "js/rendering/canvas.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/canvas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1003,
    "kind": "variable",
    "name": "default_state",
    "memberof": "js/rendering/canvas.js",
    "static": true,
    "longname": "js/rendering/canvas.js~default_state",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/canvas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "{\"label\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1004,
    "kind": "variable",
    "name": "default_settings",
    "memberof": "js/rendering/canvas.js",
    "static": true,
    "longname": "js/rendering/canvas.js~default_settings",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/canvas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "{\"class\": *, \"style\": *, \"id\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1005,
    "kind": "function",
    "name": "canvas",
    "memberof": "js/rendering/canvas.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/canvas.js~canvas",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/rendering/canvas.js",
    "importStyle": "canvas",
    "description": "Canvas rendering with given state, produce a rendering result.",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult} - updated Rendering result: VNode or Html text, headers."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "rendering item settings."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_context",
        "description": "rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }."
      },
      {
        "nullable": null,
        "types": [
          "RenderingResult"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_result",
        "description": "rendering result to update."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": "updated Rendering result: VNode or Html text, headers."
    }
  },
  {
    "__docId__": 1006,
    "kind": "file",
    "name": "js/rendering/component.js",
    "content": "// NPM IMPORTS\r\nimport h from 'virtual-dom/h'\r\n\r\n// COMMON IMPORTS\r\nimport T                   from '../utils/types'\r\nimport rendering_normalize from './rendering_normalize'\r\n\r\n\r\nlet context = 'common/rendering/component'\r\n\r\n\r\n\r\n// DEFAULT STATE\r\nconst default_state = {\r\n\tlabel:undefined\r\n}\r\n\r\n// DEFAULT SETTINGS\r\nconst default_settings = {\r\n\tclass:undefined,\r\n\tstyle:undefined,\r\n\tid:undefined,\r\n\tattributes:undefined\r\n}\r\n\r\n\r\n\r\n/**\r\n * Component rendering with given state, produce a rendering result.\r\n * \r\n * @param {object} arg_settings - rendering item settings.\r\n * @param {object} arg_state - component state.\r\n * @param {object} arg_rendering_context - rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }.\r\n * @param {RenderingResult} arg_rendering_result - rendering result to update.\r\n * \r\n * @returns {RenderingResult} - updated Rendering result: VNode or Html text, headers.\r\n */\r\nexport default (arg_settings, arg_state={}, arg_rendering_context, arg_rendering_result)=>{\r\n\t// NORMALIZE ARGS\r\n\tconst { settings, state, rendering_context, rendering_result } = rendering_normalize(default_settings, default_state, arg_settings, arg_state, arg_rendering_context, arg_rendering_result, context)\r\n\r\n\t// GET SETTINGS ATTRIBUTES\r\n\t\t\r\n\t// GET STATE ATTRIBUTES\r\n\tconst label_value = T.isString(state.label) ? state.label : undefined\r\n\r\n\t// BUILD TAG\r\n\tconst tag_id = settings.id\r\n\tconst tag_children = label_value\r\n\tconst tag_props = { id:tag_id, style:settings.style, className:settings.class, attributes:settings.attributes }\r\n\tconst tag = h('div', tag_props, tag_children)\r\n\t\r\n\trendering_result.add_vtree(tag_id, tag)\r\n\r\n\treturn rendering_result\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/rendering/component.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1007,
    "kind": "variable",
    "name": "context",
    "memberof": "js/rendering/component.js",
    "static": true,
    "longname": "js/rendering/component.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/component.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1008,
    "kind": "variable",
    "name": "default_state",
    "memberof": "js/rendering/component.js",
    "static": true,
    "longname": "js/rendering/component.js~default_state",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/component.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "{\"label\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1009,
    "kind": "variable",
    "name": "default_settings",
    "memberof": "js/rendering/component.js",
    "static": true,
    "longname": "js/rendering/component.js~default_settings",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/component.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "{\"class\": *, \"style\": *, \"id\": *, \"attributes\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1010,
    "kind": "function",
    "name": "component",
    "memberof": "js/rendering/component.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/component.js~component",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/rendering/component.js",
    "importStyle": "component",
    "description": "Component rendering with given state, produce a rendering result.",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult} - updated Rendering result: VNode or Html text, headers."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "rendering item settings."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_context",
        "description": "rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }."
      },
      {
        "nullable": null,
        "types": [
          "RenderingResult"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_result",
        "description": "rendering result to update."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": "updated Rendering result: VNode or Html text, headers."
    }
  },
  {
    "__docId__": 1011,
    "kind": "file",
    "name": "js/rendering/container.js",
    "content": "// NPM IMPORTS\r\nimport h from 'virtual-dom/h'\r\n\r\n// COMMON IMPORTS\r\nimport T                   from '../utils/types'\r\nimport rendering_normalize from './rendering_normalize'\r\nimport uid                 from '../utils/uid'\r\n\r\n\r\nlet context = 'common/rendering/container'\r\n\r\n\r\n\r\n// DEFAULT STATE\r\nconst default_state = {\r\n\titems:undefined    // array (rows)\r\n}\r\n\r\n// DEFAULT SETTINGS\r\nconst default_settings = {\r\n\tclass:undefined,\r\n\tstyle:undefined,\r\n\tid:undefined\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * container rendering with given state, produce a rendering result.\r\n * \r\n * @param {object} arg_settings - rendering item settings.\r\n * @param {object} arg_state - component state.\r\n * @param {object} arg_rendering_context - rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }.\r\n * @param {RenderingResult} arg_rendering_result - rendering result to update.\r\n * \r\n * @returns {RenderingResult} - updated Rendering result: VNode or Html text, headers.\r\n */\r\nexport default (arg_settings, arg_state={}, arg_rendering_context, arg_rendering_result)=>{\r\n\t// NORMALIZE ARGS\r\n\tconst { settings, state, rendering_context, rendering_result } = rendering_normalize(default_settings, default_state, arg_settings, arg_state, arg_rendering_context, arg_rendering_result, context)\r\n\tconst rendering_factory = rendering_context ? rendering_context.rendering_factory : undefined\r\n\r\n\t// GET SETTINGS ATTRIBUTES\r\n\r\n\t// GET STATE ATTRIBUTES\r\n\tconst items_value   = T.isArray(state.items)   ? state.items : undefined\r\n\r\n\t// BUILD CELL\r\n\tconst cell_fn = (cell) => T.isFunction(rendering_factory) ? rendering_factory(cell, rendering_context, settings.children).get_final_vtree(undefined, rendering_result) : cell.toString()\r\n\tconst cell_content=(tag, cell_settings, index)=>{\r\n\t\t// CELL CONTENT SETTINGS IS AN OBJECT\r\n\t\tif ( T.isObject(cell_settings) )\r\n\t\t{\r\n\t\t\t// CELL CONTENT IS A VALUE\r\n\t\t\tif ( ! T.isString(cell_settings.type) && T.isString(cell_settings.value) )\r\n\t\t\t{\r\n\t\t\t\tif ( ! T.isString(cell_settings.key) )\r\n\t\t\t\t{\r\n\t\t\t\t\tcell_settings.key = uid()\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn h(tag, { id:settings.id + '_' + cell_settings.key }, [ cell_settings.value ])\r\n\t\t\t}\r\n\r\n\t\t\t// CELL CONTENT IS A VIEW\r\n\t\t\tif ( ! T.isString(cell_settings.type) && T.isString(cell_settings.view) )\r\n\t\t\t{\r\n\t\t\t\t// if ( ! T.isString(cell_settings.key) )\r\n\t\t\t\t// {\r\n\t\t\t\t// \tcell_settings.key = cell_settings.view\r\n\t\t\t\t// }\r\n\r\n\t\t\t\t// return h(tag, { id:settings.id + '_' + cell_settings.key }, [ cell_fn(cell_settings.view) ] )\r\n\t\t\t\treturn cell_fn(cell_settings.view)\r\n\t\t\t}\r\n\r\n\t\t\t// CELL IS A RENDERING SETTINGS\r\n\t\t\tif ( T.isString(cell_settings.type) )\r\n\t\t\t{\r\n\t\t\t\treturn h(tag, { id:settings.id + '_' + tag + '_' + index }, [ cell_fn(cell_settings) ] )\r\n\t\t\t}\r\n\r\n\t\t\tconst str_value = cell_settings.toString()\r\n\t\t\treturn h(tag, { id:settings.id + '_' + tag + '_' + index }, [ str_value ] )\r\n\t\t}\r\n\t\t\r\n\t\tconst str_value = T.isString(cell_settings) ? cell_settings : ( T.isFunction(cell_settings.toString) ? cell_settings.toString() : 'ERROR')\r\n\t\treturn h(tag, { id:settings.id + '_' + tag + '_' + index }, [ str_value ] )\r\n\t}\r\n\tconst child_content = (content, index)=>cell_content('div', content, index)\r\n\r\n\t// BUILD TAG\r\n\tconst tag_id = settings.id\r\n\tconst tag_children = items_value ? items_value.map(child_content) : undefined\r\n\tconst tag_props = { id:tag_id, style:settings.style, className:settings.class }\r\n\tconst tag = h('div', tag_props, tag_children )\r\n\t\r\n\trendering_result.add_vtree(tag_id, tag)\r\n\r\n\treturn rendering_result\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/rendering/container.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1012,
    "kind": "variable",
    "name": "context",
    "memberof": "js/rendering/container.js",
    "static": true,
    "longname": "js/rendering/container.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/container.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1013,
    "kind": "variable",
    "name": "default_state",
    "memberof": "js/rendering/container.js",
    "static": true,
    "longname": "js/rendering/container.js~default_state",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/container.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "{\"items\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1014,
    "kind": "variable",
    "name": "default_settings",
    "memberof": "js/rendering/container.js",
    "static": true,
    "longname": "js/rendering/container.js~default_settings",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/container.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "{\"class\": *, \"style\": *, \"id\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1015,
    "kind": "function",
    "name": "container",
    "memberof": "js/rendering/container.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/container.js~container",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/rendering/container.js",
    "importStyle": "container",
    "description": "container rendering with given state, produce a rendering result.",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult} - updated Rendering result: VNode or Html text, headers."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "rendering item settings."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_context",
        "description": "rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }."
      },
      {
        "nullable": null,
        "types": [
          "RenderingResult"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_result",
        "description": "rendering result to update."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": "updated Rendering result: VNode or Html text, headers."
    }
  },
  {
    "__docId__": 1016,
    "kind": "file",
    "name": "js/rendering/dock.js",
    "content": "// NPM IMPORTS\r\nimport h from 'virtual-dom/h'\r\n\r\n// COMMON IMPORTS\r\nimport T                   from '../utils/types'\r\nimport rendering_normalize from './rendering_normalize'\r\nimport container           from './container'\r\nimport RenderingBuilder    from './rendering_builder'\r\n\r\nconst context = 'common/rendering/dock'\r\n\r\n\r\n\r\n// DEFAULT STATE\r\nconst default_state = {\r\n\tlabel:undefined,\r\n\titems:undefined,    // array (rows) of array (cells)\r\n}\r\n\r\n// DEFAULT SETTINGS\r\nconst default_settings = {\r\n\tclass:undefined,\r\n\tstyle:undefined,\r\n\tid:undefined\r\n}\r\n\r\n\r\n\r\n/**\r\n * Dock rendering with given state, produce a rendering result.\r\n * \r\n * @param {object} arg_settings - rendering item settings.\r\n * @param {object} arg_state - component state.\r\n * @param {object} arg_rendering_context - rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }.\r\n * @param {RenderingResult} arg_rendering_result - rendering result to update.\r\n * \r\n * @returns {RenderingResult} - updated Rendering result: VNode or Html text, headers.\r\n */\r\nexport default (arg_settings, arg_state={}, arg_rendering_context, arg_rendering_result)=>{\r\n\t// NORMALIZE ARGS\r\n\tconst { settings, state, rendering_context, rendering_result } = rendering_normalize(default_settings, default_state, arg_settings, arg_state, arg_rendering_context, arg_rendering_result, context)\r\n\t\r\n\t// GET BLOCK GRID RENDERING FUNCTION\r\n\tconst resolver = RenderingBuilder.get_rendering_function_resolver()\r\n\tconst block_grid = resolver ? resolver.find_rendering_function('block_grid') : undefined\r\n\tconst dock_content = block_grid ? block_grid : container\r\n\r\n\t// GET STATE ATTRIBUTES\r\n\r\n\tconst tag_dock_id = settings.id\r\n\r\n\t/*\r\n\t.float-center {\r\n\t\tdisplay: block;\r\n\t\tmargin-right: auto;\r\n\t\tmargin-left: auto;\r\n\t}\r\n\t.float-left {\r\n\t\tfloat: left !important;\r\n\t}\r\n\t.float-right {\r\n\t\tfloat: right !important;\r\n\t}\r\n\t*/\r\n\t// BUILD DOCK HEADER\r\n\t// const tag_header_resize = h('button', { style:'float:right;color:#8a8a8a;cursor:pointer;' } , [ h('span', undefined, [h('span', undefined, 'R')] ) ])\r\n\tconst tag_content_close = h('button', { style:'float:right;color:#8a8a8a;cursor:pointer;' } , [ h('span', undefined, [h('span', undefined, 'X')] ) ])\r\n\tconst tag_header_id = tag_dock_id + '_header'\r\n\tconst tag_header_children = [/*tag_header_settings, tag_header_resize, */tag_content_close]\r\n\tconst tag_header_props = { id:tag_header_id, className:'devapt-dock-header' }\r\n\tconst tag_header = h('div', tag_header_props, tag_header_children )\r\n\t\r\n\t// BUILD DOCK CONTENT\r\n\tsettings.id = tag_dock_id + '_content'\r\n\tsettings.class = T.isString(settings.class) ? settings.class : ''\r\n\tsettings.class += ' devapt-dock-content' \r\n\tdock_content(settings, state, rendering_context, rendering_result)\r\n\tconst tag_content = rendering_result.get_vtree(settings.id)\r\n\trendering_result.remove_vtree(settings.id)\r\n\r\n\t// BUILD DOCK MAIN\r\n\tconst tag_dock_children = [tag_header, tag_content]\r\n\tconst tag_dock_props = { id:tag_dock_id, className:'devapt-dock' }\r\n\tconst tag_dock = h('div', tag_dock_props, tag_dock_children )\r\n\r\n\trendering_result.add_vtree(tag_dock_id, tag_dock)\r\n\r\n\treturn rendering_result\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/rendering/dock.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1017,
    "kind": "variable",
    "name": "context",
    "memberof": "js/rendering/dock.js",
    "static": true,
    "longname": "js/rendering/dock.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/dock.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1018,
    "kind": "variable",
    "name": "default_state",
    "memberof": "js/rendering/dock.js",
    "static": true,
    "longname": "js/rendering/dock.js~default_state",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/dock.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "{\"label\": *, \"items\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1019,
    "kind": "variable",
    "name": "default_settings",
    "memberof": "js/rendering/dock.js",
    "static": true,
    "longname": "js/rendering/dock.js~default_settings",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/dock.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "{\"class\": *, \"style\": *, \"id\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1020,
    "kind": "function",
    "name": "dock",
    "memberof": "js/rendering/dock.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/dock.js~dock",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/rendering/dock.js",
    "importStyle": "dock",
    "description": "Dock rendering with given state, produce a rendering result.",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult} - updated Rendering result: VNode or Html text, headers."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "rendering item settings."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_context",
        "description": "rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }."
      },
      {
        "nullable": null,
        "types": [
          "RenderingResult"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_result",
        "description": "rendering result to update."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": "updated Rendering result: VNode or Html text, headers."
    }
  },
  {
    "__docId__": 1021,
    "kind": "file",
    "name": "js/rendering/hbox.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\n// import _ from 'lodash'\r\n// import h from 'virtual-dom/h'\r\n\r\n// COMMON IMPORTS\r\n// import T from '../utils/types'\r\nimport rendering_normalize from './rendering_normalize'\r\nimport table from './table'\r\n\r\n\r\nlet context = 'common/rendering/hbox'\r\n\r\n\r\n\r\n// DEFAULT STATE\r\nconst default_state = {\r\n\tlabel:undefined,\r\n\titems:undefined,    // array (rows) of array (cells)\r\n}\r\n\r\n// DEFAULT SETTINGS\r\nconst default_settings = {\r\n\tclass:undefined,\r\n\tstyle:undefined,\r\n\tid:undefined\r\n}\r\n\r\n\r\n\r\n/**\r\n * HBox rendering with given state, produce a rendering result.\r\n * \r\n * @param {object} arg_settings - rendering item settings.\r\n * @param {object} arg_state - component state.\r\n * @param {object} arg_rendering_context - rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }.\r\n * @param {RenderingResult} arg_rendering_result - rendering result to update.\r\n * \r\n * @returns {RenderingResult} - updated Rendering result: VNode or Html text, headers.\r\n */\r\nexport default (arg_settings, arg_state={}, arg_rendering_context, arg_rendering_result)=>{\r\n\t// NORMALIZE ARGS\r\n\tconst { settings, state, rendering_context, rendering_result } = rendering_normalize(default_settings, default_state, arg_settings, arg_state, arg_rendering_context, arg_rendering_result, context)\r\n\t\t\r\n\t// GET STATE ATTRIBUTES\r\n\tstate.columns = undefined\r\n\tstate.footers = undefined\r\n\r\n\treturn table(settings, state, rendering_context, rendering_result)\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/rendering/hbox.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1022,
    "kind": "variable",
    "name": "context",
    "memberof": "js/rendering/hbox.js",
    "static": true,
    "longname": "js/rendering/hbox.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/hbox.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1023,
    "kind": "variable",
    "name": "default_state",
    "memberof": "js/rendering/hbox.js",
    "static": true,
    "longname": "js/rendering/hbox.js~default_state",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/hbox.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "{\"label\": *, \"items\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1024,
    "kind": "variable",
    "name": "default_settings",
    "memberof": "js/rendering/hbox.js",
    "static": true,
    "longname": "js/rendering/hbox.js~default_settings",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/hbox.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "{\"class\": *, \"style\": *, \"id\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1025,
    "kind": "function",
    "name": "hbox",
    "memberof": "js/rendering/hbox.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/hbox.js~hbox",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/rendering/hbox.js",
    "importStyle": "hbox",
    "description": "HBox rendering with given state, produce a rendering result.",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult} - updated Rendering result: VNode or Html text, headers."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "rendering item settings."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_context",
        "description": "rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }."
      },
      {
        "nullable": null,
        "types": [
          "RenderingResult"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_result",
        "description": "rendering result to update."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": "updated Rendering result: VNode or Html text, headers."
    }
  },
  {
    "__docId__": 1026,
    "kind": "file",
    "name": "js/rendering/image.js",
    "content": "// NPM IMPORTS\r\nimport h from 'virtual-dom/h'\r\n\r\n// COMMON IMPORTS\r\nimport T                   from '../utils/types'\r\nimport rendering_normalize from './rendering_normalize'\r\n\r\n\r\nlet context = 'common/rendering/image'\r\n\r\n\r\n\r\n// DEFAULT STATE\r\nconst default_state = {\r\n\t// label:undefined\r\n}\r\n\r\n// DEFAULT SETTINGS\r\nconst default_settings = {\r\n\tsrc: undefined,\r\n\talt: undefined,\r\n\tclass:undefined,\r\n\tstyle:undefined,\r\n\tid:undefined\r\n}\r\n\r\n\r\n\r\n/**\r\n * Image rendering with given state, produce a rendering result.\r\n * \r\n * @param {object} arg_settings - rendering item settings.\r\n * @param {object} arg_state - component state.\r\n * @param {object} arg_rendering_context - rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }.\r\n * @param {RenderingResult} arg_rendering_result - rendering result to update.\r\n * \r\n * @returns {RenderingResult} - updated Rendering result: VNode or Html text, headers.\r\n */\r\nexport default (arg_settings, arg_state={}, arg_rendering_context, arg_rendering_result)=>{\r\n\t// NORMALIZE ARGS\r\n\tconst { settings, state, rendering_context, rendering_result } = rendering_normalize(default_settings, default_state, arg_settings, arg_state, arg_rendering_context, arg_rendering_result, context)\r\n\r\n\t// GET SETTINGS ATTRIBUTES\r\n\tconst src_value = (T.isString(settings.source) && settings.source.length > 0) ? settings.source : undefined\r\n\tconst alt_value = (T.isString(settings.alt)    && settings.alt.length    > 0) ? settings.alt : undefined\r\n\t\t\r\n\t// GET STATE ATTRIBUTES\r\n\t// const label_value = T.isString(state.label) ? state.label : undefined\r\n\r\n\t// BUILD TAG\r\n\tconst tag_id = settings.id\r\n\tconst tag_children = undefined\r\n\tconst tag_props = { id:tag_id, src:src_value, alt:alt_value, style:settings.style, class:settings.class }\r\n\tconst tag = h('img', tag_props, tag_children)\r\n\t\r\n\trendering_result.add_vtree(tag_id, tag)\r\n\r\n\treturn rendering_result\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/rendering/image.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1027,
    "kind": "variable",
    "name": "context",
    "memberof": "js/rendering/image.js",
    "static": true,
    "longname": "js/rendering/image.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/image.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1028,
    "kind": "variable",
    "name": "default_state",
    "memberof": "js/rendering/image.js",
    "static": true,
    "longname": "js/rendering/image.js~default_state",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/image.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1029,
    "kind": "variable",
    "name": "default_settings",
    "memberof": "js/rendering/image.js",
    "static": true,
    "longname": "js/rendering/image.js~default_settings",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/image.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "{\"src\": *, \"alt\": *, \"class\": *, \"style\": *, \"id\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1030,
    "kind": "function",
    "name": "image",
    "memberof": "js/rendering/image.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/image.js~image",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/rendering/image.js",
    "importStyle": "image",
    "description": "Image rendering with given state, produce a rendering result.",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult} - updated Rendering result: VNode or Html text, headers."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "rendering item settings."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_context",
        "description": "rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }."
      },
      {
        "nullable": null,
        "types": [
          "RenderingResult"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_result",
        "description": "rendering result to update."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": "updated Rendering result: VNode or Html text, headers."
    }
  },
  {
    "__docId__": 1031,
    "kind": "file",
    "name": "js/rendering/index.js",
    "content": "\r\n// COMMON IMPORTS\r\nimport rendering_normalize from './rendering_normalize'\r\nimport RenderingResult     from './rendering_result'\r\nimport rendering_factory   from './rendering_factory'\r\nimport rendering_function  from './rendering_function'\r\n\r\nimport component       from './component'\r\nimport container       from './container'\r\nimport input_field     from './input_field'\r\nimport button          from './button'\r\nimport canvas          from './canvas'\r\nimport table           from './table'\r\nimport anchor          from './anchor'\r\nimport list            from './list'\r\nimport image           from './image'\r\nimport label           from './label'\r\nimport hbox            from './hbox'\r\nimport vbox            from './vbox'\r\nimport menubar         from './menubar'\r\nimport script          from './script'\r\nimport page            from './page'\r\nimport page_content    from './page_content'\r\nimport tabs            from './tabs'\r\nimport textarea        from './textarea'\r\nimport dock            from './dock'\r\n// import treetable       from './treetable'\r\n\r\nexport {\r\n\tRenderingResult,\r\n\trendering_function,\r\n\trendering_factory,\r\n\trendering_normalize,\r\n\tcomponent,\r\n\tcontainer,\r\n\tinput_field,\r\n\tbutton,\r\n\tcanvas,\r\n\ttable,\r\n\tanchor,\r\n\tlist,\r\n\timage,\r\n\tlabel,\r\n\thbox,\r\n\tvbox,\r\n\tmenubar,\r\n\tscript,\r\n\tpage,\r\n\tpage_content,\r\n\ttabs,\r\n\ttextarea,\r\n\tdock/*,\r\n\ttree,\r\n\ttreetabs*/\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/rendering/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1032,
    "kind": "file",
    "name": "js/rendering/input_field.js",
    "content": "// NPM IMPORTS\r\nimport h from 'virtual-dom/h'\r\n\r\n// COMMON IMPORTS\r\nimport T                   from '../utils/types'\r\nimport rendering_normalize from './rendering_normalize'\r\n\r\n\r\nlet context = 'common/rendering/input_field'\r\n\r\n\r\n\r\n// INPUT FIELD\r\nconst default_state = {\r\n\tlabel:undefined,\r\n\tplaceholder:'enter a string value',\r\n\tdefault:''\r\n}\r\n\r\nconst default_settings = {\r\n\tformat: 'text',\r\n\tclass:undefined,\r\n\tstyle:undefined,\r\n\tid:undefined\r\n}\r\n\r\nconst formats = ['text', 'number', 'date', 'datetime', 'datetime-local', 'email', 'month', 'password', 'search', 'tel', 'time', 'url', 'week']\r\n\r\n\r\n\r\n/**\r\n * Input field rendering with given state, produce a rendering result.\r\n * \r\n * @param {object} arg_settings - rendering item settings.\r\n * @param {object} arg_state - component state.\r\n * @param {object} arg_rendering_context - rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }.\r\n * @param {RenderingResult} arg_rendering_result - rendering result to update.\r\n * \r\n * @returns {RenderingResult} - updated Rendering result: VNode or Html text, headers.\r\n */\r\nexport default (arg_settings, arg_state={}, arg_rendering_context, arg_rendering_result)=>{\r\n\t// NORMALIZE ARGS\r\n\tconst { settings, state, rendering_context, rendering_result } = rendering_normalize(default_settings, default_state, arg_settings, arg_state, arg_rendering_context, arg_rendering_result, context)\r\n\t\r\n\t// GET SETTINGS ATTRIBUTES\r\n\tconst format = (T.isString(settings.format) && formats.indexOf(settings.format) > -1) ? settings.format : 'text'\r\n\tconst css_label_class = T.isString(settings.css_class_label) ? settings.css_class_label : undefined\r\n\t\t\r\n\t// GET STATE ATTRIBUTES\r\n\tconst placeholder_value = T.isString(state.placeholder) ? state.placeholder : undefined\r\n\tconst default_value  = ( T.isString(state.default) || T.isNumber(state.default) ) ? state.default : undefined\r\n\tconst label_value    = T.isString(state.label)          ? state.label : undefined\r\n\tconst label_position = T.isString(state.label_position) ? state.label_position : 'top'\r\n\tconst label_style    = T.isObject(state.label_style)    ? state.label_style : undefined\r\n\tconst label_class    = T.isString(state.label_class)    ? state.label_class : ''\r\n\tconst label_size     = T.isNumber(state.label_size) && state.label_size > 0 ? (state.label_size < 12 ? state.label_size : 11) : 3\r\n\r\n\t// BUILD INPUT TAG\r\n\t// const input_id = label_value ? settings.id : settings.id\r\n\tconst input_id = label_value ? settings.id + '_input' : settings.id\r\n\tconst input_children = undefined\r\n\tconst input_props = { id:input_id, type:format, value:default_value, placeholder:placeholder_value, style:settings.style, class:settings.class }\r\n\tconst input = h('input', input_props, input_children)\r\n\t\r\n\tif (! label_value)\r\n\t{\r\n\t\trendering_result.add_vtree(input_id, input)\r\n\t\treturn rendering_result\r\n\t}\r\n\r\n\t// BUILD LABEL TAG\r\n\tconst label_id = input_id + '_label'\r\n\tconst label_props = { id:label_id, attributes:{ for:input_id } }\r\n\tif (label_style)\r\n\t{\r\n\t\tlabel_props.style = label_style\r\n\t}\r\n\tif (css_label_class)\r\n\t{\r\n\t\tlabel_props.class = css_label_class\r\n\t}\r\n\tif (label_class)\r\n\t{\r\n\t\tlabel_props.class = label_props.class ? label_props.class + label_class : label_class\r\n\t}\r\n\tlet label = undefined\r\n\tif (label_position == 'top')\r\n\t{\r\n\t\tlabel = h('label', label_props, [label_value, input])\r\n\t}\r\n\telse if (label_position == 'left')\r\n\t{\r\n\t\tconst left  = h('div', { style:'float:left;width:' + label_size * (100/12) + '%;' }, [ h('label', label_props, [label_value]) ] )\r\n\t\tconst right = h('div', { style:'float:right;width:' + (12 - label_size) * (100/12) + '%;' }, [input] )\r\n\t\tlabel = h('div', { className:'' }, [left, right] )\r\n\t}\r\n\telse if (label_position == 'right')\r\n\t{\r\n\t\tconst left = h('div', { style:'float:right;width:' + (12 - label_size) * (100/12) + '%;' }, [input] )\r\n\t\tconst right  = h('div', { style:'float:left;width:' + label_size * (100/12) + '%;' }, [ h('label', label_props, [label_value]) ] )\r\n\t\tlabel = h('div', { className:'' }, [left, right] )\r\n\t}\r\n\telse\r\n\t{\r\n\t\tlabel = h('label', label_props, [label_value, input])\r\n\t}\r\n\t\r\n\r\n\tconst div = h('div', { id:settings.id }, [label])\r\n\trendering_result.add_vtree(settings.id, div)\r\n\r\n\treturn rendering_result\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/rendering/input_field.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1033,
    "kind": "variable",
    "name": "context",
    "memberof": "js/rendering/input_field.js",
    "static": true,
    "longname": "js/rendering/input_field.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/input_field.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1034,
    "kind": "variable",
    "name": "default_state",
    "memberof": "js/rendering/input_field.js",
    "static": true,
    "longname": "js/rendering/input_field.js~default_state",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/input_field.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "{\"label\": *, \"placeholder\": string, \"default\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1035,
    "kind": "variable",
    "name": "default_settings",
    "memberof": "js/rendering/input_field.js",
    "static": true,
    "longname": "js/rendering/input_field.js~default_settings",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/input_field.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "{\"format\": string, \"class\": *, \"style\": *, \"id\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1036,
    "kind": "variable",
    "name": "formats",
    "memberof": "js/rendering/input_field.js",
    "static": true,
    "longname": "js/rendering/input_field.js~formats",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/input_field.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1037,
    "kind": "function",
    "name": "input_field",
    "memberof": "js/rendering/input_field.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/input_field.js~input_field",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/rendering/input_field.js",
    "importStyle": "input_field",
    "description": "Input field rendering with given state, produce a rendering result.",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult} - updated Rendering result: VNode or Html text, headers."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "rendering item settings."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_context",
        "description": "rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }."
      },
      {
        "nullable": null,
        "types": [
          "RenderingResult"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_result",
        "description": "rendering result to update."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": "updated Rendering result: VNode or Html text, headers."
    }
  },
  {
    "__docId__": 1038,
    "kind": "file",
    "name": "js/rendering/label.js",
    "content": "// NPM IMPORTS\r\nimport h from 'virtual-dom/h'\r\n\r\n// COMMON IMPORTS\r\nimport T                   from '../utils/types'\r\nimport rendering_normalize from './rendering_normalize'\r\n\r\n\r\nlet context = 'common/rendering/label'\r\n\r\n\r\n\r\n// DEFAULT STATE\r\nconst default_state = {\r\n\tlabel:undefined\r\n}\r\n\r\n// DEFAULT SETTINGS\r\nconst default_settings = {\r\n\tclass:undefined,\r\n\tstyle:undefined,\r\n\tid:undefined\r\n}\r\n\r\n\r\n\r\n/**\r\n * Label rendering with given state, produce a rendering result.\r\n * \r\n * @param {object} arg_settings - rendering item settings.\r\n * @param {object} arg_state - component state.\r\n * @param {object} arg_rendering_context - rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }.\r\n * @param {RenderingResult} arg_rendering_result - rendering result to update.\r\n * \r\n * @returns {RenderingResult} - updated Rendering result: VNode or Html text, headers.\r\n */\r\nexport default (arg_settings, arg_state={}, arg_rendering_context, arg_rendering_result)=>{\r\n\t// NORMALIZE ARGS\r\n\tconst { settings, state, rendering_context, rendering_result } = rendering_normalize(default_settings, default_state, arg_settings, arg_state, arg_rendering_context, arg_rendering_result, context)\r\n\r\n\t// GET SETTINGS ATTRIBUTES\r\n\t\t\r\n\t// GET STATE ATTRIBUTES\r\n\tconst label_value = T.isString(state.label) ? state.label : undefined\r\n\r\n\t// BUILD TAG\r\n\tconst tag_id = settings.id\r\n\tconst tag_children = label_value\r\n\tconst tag_props = { id:tag_id, style:settings.style, class:settings.class }\r\n\tconst tag = h('span', tag_props, tag_children)\r\n\t\r\n\trendering_result.add_vtree(tag_id, tag)\r\n\r\n\treturn rendering_result\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/rendering/label.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1039,
    "kind": "variable",
    "name": "context",
    "memberof": "js/rendering/label.js",
    "static": true,
    "longname": "js/rendering/label.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/label.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1040,
    "kind": "variable",
    "name": "default_state",
    "memberof": "js/rendering/label.js",
    "static": true,
    "longname": "js/rendering/label.js~default_state",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/label.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "{\"label\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1041,
    "kind": "variable",
    "name": "default_settings",
    "memberof": "js/rendering/label.js",
    "static": true,
    "longname": "js/rendering/label.js~default_settings",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/label.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "{\"class\": *, \"style\": *, \"id\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1042,
    "kind": "function",
    "name": "label",
    "memberof": "js/rendering/label.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/label.js~label",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/rendering/label.js",
    "importStyle": "label",
    "description": "Label rendering with given state, produce a rendering result.",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult} - updated Rendering result: VNode or Html text, headers."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "rendering item settings."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_context",
        "description": "rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }."
      },
      {
        "nullable": null,
        "types": [
          "RenderingResult"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_result",
        "description": "rendering result to update."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": "updated Rendering result: VNode or Html text, headers."
    }
  },
  {
    "__docId__": 1043,
    "kind": "file",
    "name": "js/rendering/list.js",
    "content": "// NPM IMPORTS\r\nimport h from 'virtual-dom/h'\r\n\r\n// COMMON IMPORTS\r\nimport T                   from '../utils/types'\r\nimport rendering_normalize from './rendering_normalize'\r\n\r\n\r\nlet context = 'common/rendering/list'\r\n\r\n\r\n\r\n// DEFAULT STATE\r\nconst default_state = {\r\n\tlabel:undefined,\r\n\titems:undefined    // array (rows)\r\n}\r\n\r\n// DEFAULT SETTINGS\r\nconst default_settings = {\r\n\ttype:'ul',\r\n\tclass:undefined,\r\n\tstyle:undefined,\r\n\tid:undefined\r\n}\r\n\r\nconst types = ['ul', 'ol']\r\n\r\n\r\n\r\n/**\r\n * List rendering with given state, produce a rendering result.\r\n * \r\n * @param {object} arg_settings - rendering item settings.\r\n * @param {object} arg_state - component state.\r\n * @param {object} arg_rendering_context - rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }.\r\n * @param {RenderingResult} arg_rendering_result - rendering result to update.\r\n * \r\n * @returns {RenderingResult} - updated Rendering result: VNode or Html text, headers.\r\n */\r\nexport default (arg_settings, arg_state={}, arg_rendering_context, arg_rendering_result)=>{\r\n\t// NORMALIZE ARGS\r\n\tconst { settings, state, rendering_context, rendering_result } = rendering_normalize(default_settings, default_state, arg_settings, arg_state, arg_rendering_context, arg_rendering_result, context)\r\n\t\r\n\t// GET SETTINGS ATTRIBUTES\r\n\tconst type_value = (T.isString(settings.type) && types.indexOf(settings.type) > -1) ? settings.type : 'ul'\r\n\r\n\t// GET STATE ATTRIBUTES\r\n\tconst label_value   = T.isString(state.label)  ? state.label : undefined\r\n\tconst items_value   = T.isArray(state.items)   ? state.items : undefined\r\n\r\n\t// BUILD THEAD\r\n\tconst cell_fn = (cell) => T.isFunction(rendering_context.rendering_factory) ? rendering_context.rendering_factory(cell, rendering_context, settings.children).get_final_vtree(undefined, rendering_result) : cell.toString()\r\n\tconst li_fn = (content)=>h('li', undefined, cell_fn(content) )\r\n\r\n\t// BUILD TAG\r\n\tconst tag_id = settings.id\r\n\tconst tag_children = items_value ? items_value.map(li_fn) : undefined\r\n\tconst tag_props = { id:tag_id, style:settings.style, class:settings.class }\r\n\tconst tag = h(type_value, tag_props, label_value ? [label_value].concat(tag_children) : tag_children )\r\n\t\r\n\trendering_result.add_vtree(tag_id, tag)\r\n\r\n\treturn rendering_result\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/rendering/list.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1044,
    "kind": "variable",
    "name": "context",
    "memberof": "js/rendering/list.js",
    "static": true,
    "longname": "js/rendering/list.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/list.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1045,
    "kind": "variable",
    "name": "default_state",
    "memberof": "js/rendering/list.js",
    "static": true,
    "longname": "js/rendering/list.js~default_state",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/list.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "{\"label\": *, \"items\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1046,
    "kind": "variable",
    "name": "default_settings",
    "memberof": "js/rendering/list.js",
    "static": true,
    "longname": "js/rendering/list.js~default_settings",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/list.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"class\": *, \"style\": *, \"id\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1047,
    "kind": "variable",
    "name": "types",
    "memberof": "js/rendering/list.js",
    "static": true,
    "longname": "js/rendering/list.js~types",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/list.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1048,
    "kind": "function",
    "name": "list",
    "memberof": "js/rendering/list.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/list.js~list",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/rendering/list.js",
    "importStyle": "list",
    "description": "List rendering with given state, produce a rendering result.",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult} - updated Rendering result: VNode or Html text, headers."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "rendering item settings."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_context",
        "description": "rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }."
      },
      {
        "nullable": null,
        "types": [
          "RenderingResult"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_result",
        "description": "rendering result to update."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": "updated Rendering result: VNode or Html text, headers."
    }
  },
  {
    "__docId__": 1049,
    "kind": "file",
    "name": "js/rendering/menubar.js",
    "content": "// NPM IMPORTS\r\n\r\n// COMMON IMPORTS\r\nimport T                   from '../utils/types'\r\nimport rendering_normalize from './rendering_normalize'\r\nimport table               from './table'\r\n\r\n\r\nlet context = 'common/rendering/menubar'\r\n\r\n\r\n\r\n// DEFAULT STATE\r\nconst default_state = {\r\n\titems:undefined,    // array (rows) of array (cells)\r\n}\r\n\r\n// DEFAULT SETTINGS\r\nconst default_settings = {\r\n\tclass:undefined,\r\n\tstyle:undefined,\r\n\tid:undefined\r\n}\r\n\r\n\r\n\r\n/**\r\n * HBox rendering with given state, produce a rendering result.\r\n * \r\n * @param {object} arg_settings - rendering item settings.\r\n * @param {object} arg_state - component state.\r\n * @param {object} arg_rendering_context - rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }.\r\n * @param {RenderingResult} arg_rendering_result - rendering result to update.\r\n * \r\n * @returns {RenderingResult} - updated Rendering result: VNode or Html text, headers.\r\n */\r\nexport default (arg_settings, arg_state={}, arg_rendering_context, arg_rendering_result)=>{\r\n\t// NORMALIZE ARGS\r\n\tconst { settings, state, rendering_context, rendering_result } = rendering_normalize(default_settings, default_state, arg_settings, arg_state, arg_rendering_context, arg_rendering_result, context)\r\n\t\r\n\t// GET STATE ATTRIBUTES\r\n\tstate.columns = undefined\r\n\tstate.footers = undefined\r\n\tstate.label = undefined\r\n\t\r\n\tstate.items = state.items.map(\r\n\t\t(item)=>{\r\n\t\t\tif ( T.isArray(item) )\r\n\t\t\t{\r\n\t\t\t\tif (item.length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\titem = item[0]\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn undefined\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( T.isString(item) )\r\n\t\t\t{\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttype:'anchor',\r\n\t\t\t\t\tsettings:{},\r\n\t\t\t\t\tstate:{label:item}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( T.isObject(item) && T.isString(item.label) && item.label.length > 0)\r\n\t\t\t{\r\n\t\t\t\titem.settings = item.settings ? item.settings : {}\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttype:'anchor',\r\n\t\t\t\t\tsettings:{\r\n\t\t\t\t\t\tclass:item.settings.class,\r\n\t\t\t\t\t\tstyle:item.settings.style,\r\n\t\t\t\t\t\tid:item.settings.id,\r\n\t\t\t\t\t\thref:item.url,\r\n\t\t\t\t\t\tcommand:item.command,\r\n\t\t\t\t\t\tblank:item.blank\r\n\t\t\t\t\t},\r\n\t\t\t\t\tstate:{\r\n\t\t\t\t\t\tlabel:item.label\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn undefined\r\n\t\t}\r\n\t)\r\n\r\n\tsettings.class += ' devapt-kindof-menubar'\r\n\r\n\treturn table(settings, state, rendering_context, rendering_result)\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/rendering/menubar.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1050,
    "kind": "variable",
    "name": "context",
    "memberof": "js/rendering/menubar.js",
    "static": true,
    "longname": "js/rendering/menubar.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/menubar.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1051,
    "kind": "variable",
    "name": "default_state",
    "memberof": "js/rendering/menubar.js",
    "static": true,
    "longname": "js/rendering/menubar.js~default_state",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/menubar.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "{\"items\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1052,
    "kind": "variable",
    "name": "default_settings",
    "memberof": "js/rendering/menubar.js",
    "static": true,
    "longname": "js/rendering/menubar.js~default_settings",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/menubar.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "{\"class\": *, \"style\": *, \"id\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1053,
    "kind": "function",
    "name": "menubar",
    "memberof": "js/rendering/menubar.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/menubar.js~menubar",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/rendering/menubar.js",
    "importStyle": "menubar",
    "description": "HBox rendering with given state, produce a rendering result.",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult} - updated Rendering result: VNode or Html text, headers."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "rendering item settings."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_context",
        "description": "rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }."
      },
      {
        "nullable": null,
        "types": [
          "RenderingResult"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_result",
        "description": "rendering result to update."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": "updated Rendering result: VNode or Html text, headers."
    }
  },
  {
    "__docId__": 1054,
    "kind": "file",
    "name": "js/rendering/page.js",
    "content": "// NPM IMPORTS\r\nimport _ from 'lodash'\r\nimport h from 'virtual-dom/h'\r\n\r\n// COMMON IMPORTS\r\nimport T                   from '../utils/types'\r\nimport rendering_normalize from './rendering_normalize'\r\n\r\n\r\nlet context = 'common/rendering/page'\r\n\r\n\r\n\r\n// DEFAULT STATE\r\nconst default_state = {\r\n\ttitle:undefined,\r\n\tmetas:undefined, \t // array of head tags\r\n\r\n\tbody_headers:undefined,   // array of tags\r\n\tbody_contents:undefined,   // array of tags\r\n\tbody_footers:undefined,   // array of tags\r\n\t\r\n\thead_styles_tags:[],\r\n\thead_styles_urls:[],\r\n\t\r\n\thead_scripts_tags:[],\r\n\thead_scripts_urls:[],\r\n\r\n\tbody_styles_tags:[],\r\n\tbody_styles_urls:[],\r\n\r\n\tbody_scripts_tags:[],\r\n\tbody_scripts_urls:[]\r\n}\r\n\r\n// DEFAULT SETTINGS\r\nconst default_settings = {\r\n\thtml_lang:undefined,\r\n\thtml_class:undefined,\r\n\thtml_prefix:undefined,\r\n\r\n\thead_charset:'utf-8',\r\n\thead_viewport:undefined,\r\n\thead_description:undefined,\r\n\thead_robots:undefined,\r\n\r\n\tbody_class:undefined,\r\n\r\n\tassets_urls_templates:{\r\n\t\tscript:'{{url}}',\r\n\t\tstyle:'{{url}}',\r\n\t\timage:'{{url}}',\r\n\t\thtml:'{{url}}'\r\n\t}\r\n}\r\n\r\n\r\nconst get_url = (arg_template, arg_url, arg_absolute)=>arg_absolute ? arg_url : arg_template.replace('{{url}}', arg_url)\r\n\r\n\r\n\r\n/**\r\n * Page rendering with given state, produce a rendering result.\r\n * \r\n * @param {object} arg_settings - rendering item settings.\r\n * @param {object} arg_state - component state.\r\n * @param {object} arg_rendering_context - rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }.\r\n * @param {RenderingResult} arg_rendering_result - rendering result to update.\r\n * \r\n * @returns {RenderingResult} - updated Rendering result: VNode or Html text, headers.\r\n */\r\nexport default (arg_settings, arg_state={}, arg_rendering_context, arg_rendering_result)=>{\r\n\t// NORMALIZE ARGS\r\n\tconst { settings, state, rendering_context, rendering_result } = rendering_normalize(default_settings, default_state, arg_settings, arg_state, arg_rendering_context, arg_rendering_result, context)\r\n\tconst rendering_factory = rendering_context ? rendering_context.rendering_factory : undefined\r\n\r\n\r\n\t// GET SETTINGS ATTRIBUTES\r\n\tconst html_lang_value    = T.isString(settings.html_lang)    ? settings.html_lang : undefined\r\n\tconst html_class_value   = T.isString(settings.html_class)   ? settings.html_class : undefined\r\n\tconst html_prefix_value  = T.isString(settings.html_prefix)  ? settings.html_prefix : undefined\r\n\tconst head_charset_value = T.isString(settings.head_charset) ? settings.head_charset : 'UTF-8'\r\n\tconst head_viewport_value= T.isString(settings.head_viewport)? settings.head_viewport : 'width=device-width'\r\n\tconst head_description_value= T.isString(settings.head_description)? settings.head_description : undefined\r\n\tconst head_robots_value  = T.isString(settings.head_robots)  ? settings.head_robots : undefined\r\n\tconst body_class_value   = T.isString(settings.body_class)   ? settings.body_class : undefined\r\n\r\n\t// GET STATE ATTRIBUTES\r\n\tconst title_value         = T.isString(state.title)       ? state.title : 'Devapt'\r\n\tconst metas_value         = T.isArray(state.metas)        ? state.metas : []\r\n\tconst body_headers_value  = T.isArray(state.body_headers) ? state.body_headers : undefined\r\n\tconst body_contents_value = T.isArray(state.body_contents)? state.body_contents : undefined\r\n\tconst body_footers_value  = T.isArray(state.body_footers) ? state.body_footers : undefined\r\n\r\n\r\n\t// BUILD CONTENT\r\n\tconst render = (item) => {\r\n\t\t// console.log(item, context + ':render:item')\r\n\t\treturn T.isFunction(rendering_factory) ? rendering_factory(item, rendering_context, settings.children).get_final_vtree(undefined, rendering_result) : item.toString()\r\n\t}\r\n\r\n\r\n\t// BUILD HEAD SCRIPTS TAGS\r\n\tconst head_script_tag = (item)=>{\r\n\t\tif ( T.isObject(item) && T.isString(item.id) && item.id.length > 0 && T.isString(item.content) && item.content.length > 0 )\r\n\t\t{\r\n\t\t\tconst type = T.isString(item.type)  && item.type.length  > 0 ? item.type  : 'text/javascript'\r\n\r\n\t\t\treturn h('script', { id:item.id, type:type }, item.content)\r\n\t\t}\r\n\t}\r\n\r\n\t// BUILD BODY SCRIPTS TAGS\r\n\tconst body_script_tag = (item)=>{\r\n\t\tif ( T.isObject(item) && T.isString(item.id) && item.id.length > 0 && T.isString(item.content) && item.content.length > 0 )\r\n\t\t{\r\n\t\t\tconst type = T.isString(item.type)  && item.type.length  > 0 ? item.type  : 'text/javascript'\r\n\r\n\t\t\tconst content = `\r\n\t\t\t\twindow.devapt_bootstrap_promise.then(\r\n\t\t\t\t\tfunction()\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t${item.content}\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t`\r\n\t\t\treturn h('script', { id:item.id, type:type }, content)\r\n\t\t}\r\n\t}\r\n\r\n\t// BUILD STYLES TAGS\r\n\tconst style = (item)=>{\r\n\t\tif ( T.isObject(item) && T.isString(item.id) && item.id.length > 0 && T.isString(item.content) && item.content.length > 0 )\r\n\t\t{\r\n\t\t\tconst type  = T.isString(item.type)  && item.type.length  > 0 ? item.type  : 'text/css'\r\n\t\t\tconst media = T.isString(item.media) && item.media.length > 0 ? item.media : 'all'\r\n\r\n\t\t\treturn h('style', { id:item.id, type:type, media:media }, item.content)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// BUILD HEAD STYLES/LINKS URLS\r\n\tconst link = (item)=>{\r\n\t\tif ( T.isObject(item) && T.isString(item.href) && item.href.length > 0 && T.isString(item.id) && item.id.length > 0 )\r\n\t\t{\r\n\t\t\tconst rel   = T.isString(item.rel)   && item.rel.length   > 0 ? item.rel   : 'stylesheet'\r\n\t\t\tconst type  = T.isString(item.type)  && item.type.length  > 0 ? item.type  : 'text/css'\r\n\t\t\tconst media = T.isString(item.media) && item.media.length > 0 ? item.media : 'all'\r\n\t\t\tconst title = T.isString(item.title) && item.title.length > 0 ? item.title : undefined\r\n\t\t\tconst url_template = rel == 'stylesheet' ? settings.assets_urls_templates.style : settings.assets_urls_templates.image\r\n\r\n\t\t\treturn h('link', { id:item.id, href:get_url(url_template, item.href, item.absolute), type:type, media:media, rel:rel, title:title })\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// BUILD SCRIPTS URLS\r\n\tconst script_url = (item)=>{\r\n\t\tif ( T.isObject(item) && T.isString(item.src) && item.src.length > 0 && T.isString(item.id) && item.id.length > 0 )\r\n\t\t{\r\n\t\t\tconst type = T.isString(item.type)  && item.type.length  > 0 ? item.type  : 'text/javascript'\r\n\r\n\t\t\treturn h('script', { id:item.id, src:get_url(settings.assets_urls_templates.script, item.src, item.absolute), type:type })\r\n\t\t}\r\n\t}\r\n\r\n\tconst body_script_url = (item)=>{\r\n\t\tif ( T.isObject(item) && T.isString(item.src) && item.src.length > 0 && T.isString(item.id) && item.id.length > 0 )\r\n\t\t{\r\n\t\t\tconst type = T.isString(item.type)  && item.type.length  > 0 ? item.type  : 'text/javascript'\r\n\r\n\t\t\tconst url = get_url(settings.assets_urls_templates.script, item.src, item.absolute)\r\n\t\t\tswitch(item.id){\r\n\t\t\t\tcase 'js-socketio':\r\n\t\t\t\tcase 'js-browser':\r\n\t\t\t\tcase 'js-initial-state':\r\n\t\t\t\tcase 'js-initial-content':\r\n\t\t\t\t\treturn h('script', { id:item.id, src:url, type:type })\r\n\t\t\t\t\r\n\t\t\t\tcase 'js-devapt-core-browser': {\r\n\t\t\t\t\tconst content = `\r\n\t\t\t\t\t\tvar required_element = document.getElementById(\"js-browser\")\r\n\t\t\t\t\t\tvar required_loaded = window.babel ? true : false\r\n\r\n\t\t\t\t\t\tvar core_browser_promise_cb = function(resolve, reject) {\r\n\t\t\t\t\t\t\tif (window.DEVAPT.TRACE_RUNTIME)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tconsole.log(\"page loading:loading of [${item.id}] begins\")\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\tvar load_cb = function() {\r\n\t\t\t\t\t\t\t\t\t// CREATE CORE BROWSER SCRIPT ELEMENT\r\n\t\t\t\t\t\t\t\t\tvar js_element = document.createElement(\"script\")\r\n\t\t\t\t\t\t\t\t\tjs_element.setAttribute(\"id\", \"${item.id}\")\r\n\t\t\t\t\t\t\t\t\tjs_element.src = \"${url}\"\r\n\t\t\t\t\t\t\t\t\tdocument.body.appendChild(js_element)\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tvar js_load_cb = function() {\r\n\t\t\t\t\t\t\t\t\t\tif (window.DEVAPT.TRACE_RUNTIME)\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"page loading:loading of [${item.id}] ends\")\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tresolve()\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tjs_element.addEventListener (\"load\", js_load_cb, false)\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (! required_loaded)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\trequired_element.addEventListener (\"load\", load_cb, false)\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tload_cb()\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (window.DEVAPT.TRACE_RUNTIME)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tconsole.log(\"page loading:loading of [${item.id}] waits dependancies\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcatch(e) {\r\n\t\t\t\t\t\t\t\tconsole.error(\"page loading:loading [${item.id}]:error=\" + e.toString())\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\twindow.devapt_core_browser_promise = new Promise(core_browser_promise_cb)\r\n\t\t\t\t\t`\r\n\t\t\t\t\treturn h('script', { id:item.id + '-load', type:type }, content)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcase 'js-devapt-bootstrap': {\r\n\t\t\t\t\tconst content = `\r\n\t\t\t\t\t\tvar bootstrap_promise_cb = function(resolve, reject) {\r\n\t\t\t\t\t\t\twindow.DEVAPT.TRACE_RUNTIME && console.log(\"page loading:loading of [${item.id}] begins\")\r\n\r\n\t\t\t\t\t\t\twindow.devapt_core_browser_promise.then(\r\n\t\t\t\t\t\t\t\tfunction()\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tif (window.DEVAPT.TRACE_RUNTIME)\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"page loading:loading of [${item.id}] dependancies resolved\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\t\t\t// CREATE BOOTSTRAP SCRIPT ELEMENT\r\n\t\t\t\t\t\t\t\t\t\tvar js_element = document.createElement(\"script\")\r\n\t\t\t\t\t\t\t\t\t\tjs_element.setAttribute(\"id\", \"${item.id}\")\r\n\t\t\t\t\t\t\t\t\t\tjs_element.src = \"${url}\"\r\n\t\t\t\t\t\t\t\t\t\tdocument.body.appendChild(js_element)\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (window.DEVAPT.TRACE_RUNTIME)\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"page loading:loading of [${item.id}] element\", js_element)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tvar js_load_cb = function() {\r\n\t\t\t\t\t\t\t\t\t\t\twindow.devapt().register_asset_loading(\"script\", \"${item.id}\", \"${url}\")\r\n\t\t\t\t\t\t\t\t\t\t\twindow.DEVAPT.TRACE_RUNTIME && console.log(\"page loading:loading of [${item.id}] ends\")\r\n\t\t\t\t\t\t\t\t\t\t\tresolve()\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tjs_element.addEventListener (\"load\", js_load_cb, false)\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcatch(e) {\r\n\t\t\t\t\t\t\t\t\t\treject(\"page loading:loading [${item.id}]:error=\" + e.toString())\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\tif (window.DEVAPT.TRACE_RUNTIME)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tconsole.log(\"page loading:loading of [${item.id}] waits dependancies\")\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\twindow.devapt_bootstrap_promise = new Promise(bootstrap_promise_cb)\r\n\t\t\t\t\t`\r\n\t\t\t\t\treturn h('script', { id:item.id + '-load', type:type }, content)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet options = undefined\r\n\t\t\tif ( T.isNotEmptyArray(item.required) )\r\n\t\t\t{\r\n\t\t\t\toptions = { required:item.required }\r\n\t\t\t}\r\n\t\t\tconst options_str = JSON.stringify(options)\r\n\r\n\t\t\tconst content = `\r\n\t\t\t\twindow.devapt_bootstrap_promise.then(\r\n\t\t\t\t\tfunction()\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twindow.devapt().script_promise(\"${item.id}\", \"${url}\", ${options_str})\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t`\r\n\t\t\treturn h('script', { id:item.id, type:type }, content)\r\n\t\t}\r\n\t}\r\n\r\n\tconst do_body_scripts_urls = (items)=>{\r\n\t\tlet socketio_item = undefined\r\n\t\tlet browser_item = undefined\r\n\t\tlet core_browser_item = undefined\r\n\t\tlet bootstrap_item = undefined\r\n\t\tconst ordered_items = []\r\n\t\t_.forEach(items,\r\n\t\t\t(item)=>{\r\n\t\t\t\tif (item && item.id && item.id == 'js-socketio')\r\n\t\t\t\t{\r\n\t\t\t\t\tsocketio_item = item\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tif (item && item.id && item.id == 'js-browser')\r\n\t\t\t\t{\r\n\t\t\t\t\tbrowser_item = item\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tif (item && item.id && item.id == 'js-devapt-core-browser')\r\n\t\t\t\t{\r\n\t\t\t\t\tcore_browser_item = item\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tif (item && item.id && item.id == 'js-devapt-bootstrap')\r\n\t\t\t\t{\r\n\t\t\t\t\tbootstrap_item = item\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tordered_items.push(item)\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn [socketio_item, browser_item, core_browser_item, bootstrap_item].concat(ordered_items).map(body_script_url)\r\n\t}\r\n\r\n\t// BUILD BODY SCRIPTS ELEMENTS\r\n\tconst do_body_scripts_tags = (items)=>{\r\n\t\treturn items.map(body_script_tag)\r\n\t}\r\n\r\n\t// BUILD TITLE TAG\r\n\tconst title = h('title', undefined, title_value)\r\n\r\n\r\n\t// BUILD METAS TAG\r\n\tconst meta_charset     = T.isString(head_charset_value)     ? h('meta', { charSet:head_charset_value }, undefined) : undefined\r\n\tconst meta_viewport    = T.isString(head_viewport_value)    ? h('meta', { name:'viewport', content:head_viewport_value }) : undefined\r\n\tconst meta_description = T.isString(head_description_value) ? h('meta', { name:'description', content:head_description_value }) : undefined\r\n\tconst meta_robots      = T.isString(head_robots_value)      ? h('meta', { name:'robots', content:head_robots_value }) : undefined\r\n\tconst meta = (item)=>{\r\n\t\tif ( T.isObject(item) && T.isString(item.name) && item.name.length > 0 && T.isString(item.content) )\r\n\t\t{\r\n\t\t\treturn h('meta', { name:item.name, content:item.content})\r\n\t\t}\r\n\t}\r\n\tconst metas = [meta_charset, meta_viewport, meta_description, meta_robots].concat( metas_value.map(meta) )\r\n\r\n\r\n\t// BUILD BODY TAG\r\n\tconst headers_children = T.isArray(body_headers_value) ? body_headers_value.map(render) : undefined\r\n\tconst headers = h('header', undefined, headers_children)\r\n\t\r\n\tconst contents_children = T.isArray(body_contents_value) ? body_contents_value.map(render) : undefined\r\n\tconst contents = h('div', { id:'content'}, contents_children)\r\n\t\r\n\tconst footers_children = T.isArray(body_footers_value) ? body_footers_value.map(render) : undefined\r\n\tconst footers = h('footer', undefined, footers_children)\r\n\r\n\tconst body_styles_tags  = ( T.isArray(state.body_styles_tags)  ? _.concat(rendering_result.body_styles_tags,  state.body_styles_tags)  : rendering_result.body_styles_tags ).map(style)\r\n\tconst body_styles_urls  = ( T.isArray(state.body_styles_urls)  ? _.concat(rendering_result.body_styles_urls,  state.body_styles_urls)  : rendering_result.body_styles_urls ).map(link)\r\n\tconst body_scripts_tags = do_body_scripts_tags( T.isArray(state.body_scripts_tags) ? _.concat(rendering_result.body_scripts_tags, state.body_scripts_tags) : rendering_result.body_scripts_tags )\r\n\tconst body_scripts_urls = do_body_scripts_urls( T.isArray(state.body_scripts_urls) ? _.concat(rendering_result.body_scripts_urls, state.body_scripts_urls) : rendering_result.body_scripts_urls )\r\n\r\n\tconst body_children = [headers, contents, footers, body_styles_urls, body_styles_tags, body_scripts_urls, body_scripts_tags]\r\n\tconst body_props = { class:body_class_value }\r\n\tconst body = h('body', body_props, body_children)\r\n\t\r\n\r\n\t// BUILD ASSETS TAGS\r\n\tconst head_styles_urls  = ( T.isArray(state.head_styles_urls)  ? _.concat(rendering_result.head_styles_urls,  state.head_styles_urls) : rendering_result.head_styles_urls  ).map(link)\r\n\tconst head_links_urls   = ( T.isArray(state.head_links_urls)   ? _.concat(rendering_result.head_links_urls,   state.head_links_urls)  : rendering_result.head_links_urls   ).map(link)\r\n\tconst head_scripts_urls = ( T.isArray(state.head_scripts_urls) ? _.concat(rendering_result.head_scripts_urls, state.head_scripts_urls): rendering_result.head_scripts_urls ).map(script_url)\r\n\tconst head_scripts_tags = ( T.isArray(state.head_scripts_tags) ? _.concat(rendering_result.head_scripts_tags, state.head_scripts_tags): rendering_result.head_scripts_tags ).map(head_script_tag)\r\n\tconst head_styles_tags  = ( T.isArray(state.head_styles_tags)  ? _.concat(rendering_result.head_styles_tags,  state.head_styles_tags) : rendering_result.head_styles_tag   ).map(style)\r\n\r\n\r\n\t// BUILD HEAD TAG\r\n\tconst head_children = [title].concat(metas, head_styles_urls, head_links_urls, head_scripts_urls, head_styles_tags, head_scripts_tags)\r\n\tconst head_props = undefined\r\n\tconst head = h('head', head_props, head_children)\r\n\r\n\r\n\t// BUILD HTML TAG\r\n\tconst page_children = [head, body]\r\n\tconst page_props = { lang:html_lang_value, class:html_class_value, prefix:html_prefix_value }\r\n\tconst page = h('html', page_props, page_children)\r\n\t\r\n\trendering_result.add_vtree('page', page)\r\n\r\n\treturn rendering_result\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/rendering/page.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1055,
    "kind": "variable",
    "name": "context",
    "memberof": "js/rendering/page.js",
    "static": true,
    "longname": "js/rendering/page.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1056,
    "kind": "variable",
    "name": "default_state",
    "memberof": "js/rendering/page.js",
    "static": true,
    "longname": "js/rendering/page.js~default_state",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "{\"title\": *, \"metas\": *, \"body_headers\": *, \"body_contents\": *, \"body_footers\": *, \"head_styles_tags\": *, \"head_styles_urls\": *, \"head_scripts_tags\": *, \"head_scripts_urls\": *, \"body_styles_tags\": *, \"body_styles_urls\": *, \"body_scripts_tags\": *, \"body_scripts_urls\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1057,
    "kind": "variable",
    "name": "default_settings",
    "memberof": "js/rendering/page.js",
    "static": true,
    "longname": "js/rendering/page.js~default_settings",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "{\"html_lang\": *, \"html_class\": *, \"html_prefix\": *, \"head_charset\": string, \"head_viewport\": *, \"head_description\": *, \"head_robots\": *, \"body_class\": *, \"assets_urls_templates\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1058,
    "kind": "function",
    "name": "get_url",
    "memberof": "js/rendering/page.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/page.js~get_url",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "params": [
      {
        "name": "arg_template",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_url",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_absolute",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 1059,
    "kind": "function",
    "name": "page",
    "memberof": "js/rendering/page.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/page.js~page",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/rendering/page.js",
    "importStyle": "page",
    "description": "Page rendering with given state, produce a rendering result.",
    "lineNumber": 72,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult} - updated Rendering result: VNode or Html text, headers."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "rendering item settings."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_context",
        "description": "rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }."
      },
      {
        "nullable": null,
        "types": [
          "RenderingResult"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_result",
        "description": "rendering result to update."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": "updated Rendering result: VNode or Html text, headers."
    }
  },
  {
    "__docId__": 1060,
    "kind": "file",
    "name": "js/rendering/page_body.js",
    "content": "// NPM IMPORTS\r\nimport h from 'virtual-dom/h'\r\n\r\n// COMMON IMPORTS\r\nimport T                   from '../utils/types'\r\nimport rendering_normalize from './rendering_normalize'\r\n\r\n\r\nlet context = 'common/rendering/page_body'\r\n\r\n\r\n\r\n// DEFAULT STATE\r\nconst default_state = {\r\n\tbody_headers:undefined,   // array of tags\r\n\tbody_contents:undefined,   // array of tags\r\n\tbody_footers:undefined   // array of tags\r\n}\r\n\r\n// DEFAULT SETTINGS\r\nconst default_settings = {\r\n\tbody_class:undefined,\r\n\tassets_urls_templates:{\r\n\t\tscript:'{{url}}',\r\n\t\tstyle:'{{url}}',\r\n\t\timage:'{{url}}',\r\n\t\thtml:'{{url}}'\r\n\t}\r\n}\r\n\r\n\r\nconst get_url = (arg_template, arg_url)=>arg_template.replace('{{url}}', arg_url)\r\n\r\n\r\n\r\n/**\r\n * Page rendering with given state, produce a rendering result.\r\n * \r\n * @param {object} arg_settings - rendering item settings.\r\n * @param {object} arg_state - component state.\r\n * @param {object} arg_rendering_context - rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }.\r\n * @param {RenderingResult} arg_rendering_result - rendering result to update.\r\n * \r\n * @returns {RenderingResult} - updated Rendering result: VNode or Html text, headers.\r\n */\r\nexport default (arg_settings, arg_state={}, arg_rendering_context, arg_rendering_result)=>{\r\n\t// NORMALIZE ARGS\r\n\tconst { settings, state, rendering_context, rendering_result } = rendering_normalize(default_settings, default_state, arg_settings, arg_state, arg_rendering_context, arg_rendering_result, context)\r\n\tconst rendering_factory = rendering_context ? rendering_context.rendering_factory : undefined\r\n\r\n\r\n\t// GET SETTINGS ATTRIBUTES\r\n\r\n\t// GET STATE ATTRIBUTES\r\n\tconst body_headers_value  = T.isArray(state.body_headers) ? state.body_headers : undefined\r\n\tconst body_contents_value = T.isArray(state.body_contents)? state.body_contents : undefined\r\n\tconst body_footers_value  = T.isArray(state.body_footers) ? state.body_footers : undefined\r\n\r\n\r\n\t// BUILD CONTENT\r\n\tconst render = (item) => T.isFunction(rendering_factory) ? rendering_factory(item, rendering_context, settings.children).get_final_vtree(undefined, rendering_result) : item.toString()\r\n\r\n\r\n\t// BUILD SCRIPTS TAGS\r\n\tconst script = (item)=>{\r\n\t\tif ( T.isObject(item) && T.isString(item.id) && item.id.length > 0 && T.isString(item.content) && item.content.length > 0 )\r\n\t\t{\r\n\t\t\tconst type = T.isString(item.type)  && item.type.length  > 0 ? item.type  : 'text/javascript'\r\n\r\n\t\t\treturn h('script', { id:item.id, type:type }, item.content)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// BUILD STYLES TAGS\r\n\tconst style = (item)=>{\r\n\t\tif ( T.isObject(item) && T.isString(item.id) && item.id.length > 0 && T.isString(item.content) && item.content.length > 0 )\r\n\t\t{\r\n\t\t\tconst type  = T.isString(item.type)  && item.type.length  > 0 ? item.type  : 'text/css'\r\n\t\t\tconst media = T.isString(item.media) && item.media.length > 0 ? item.media : 'all'\r\n\r\n\t\t\treturn h('script', { id:item.id, type:type, media:media }, item.content)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// BUILD HEAD STYLES/LINKS URLS\r\n\tconst link = (item)=>{\r\n\t\tif ( T.isObject(item) && T.isString(item.href) && item.href.length > 0 && T.isString(item.id) && item.id.length > 0 )\r\n\t\t{\r\n\t\t\tconst rel   = T.isString(item.rel)   && item.rel.length   > 0 ? item.rel   : 'stylesheet'\r\n\t\t\tconst type  = T.isString(item.type)  && item.type.length  > 0 ? item.type  : 'text/css'\r\n\t\t\tconst media = T.isString(item.media) && item.media.length > 0 ? item.media : 'all'\r\n\t\t\tconst title = T.isString(item.title) && item.title.length > 0 ? item.title : undefined\r\n\t\t\tconst url_template = rel == 'stylesheet' ? settings.assets_urls_templates.style : settings.assets_urls_templates.image\r\n\r\n\t\t\treturn h('link', { id:item.id, href:get_url(url_template, item.href), type:type, media:media, rel:rel, title:title })\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// BUILD HEAD SCRIPTS URLS\r\n\tconst script_url = (item)=>{\r\n\t\tif ( T.isObject(item) && T.isString(item.src) && item.src.length > 0 && T.isString(item.id) && item.id.length > 0 )\r\n\t\t{\r\n\t\t\tconst type = T.isString(item.type)  && item.type.length  > 0 ? item.type  : 'text/javascript'\r\n\r\n\t\t\treturn h('script', { id:item.id, src:get_url(settings.assets_urls_templates.script, item.src), type:type })\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// BUILD BODY TAG\r\n\tconst headers_children = T.isArray(body_headers_value) ? body_headers_value.map(render) : undefined\r\n\tconst headers = h('header', undefined, headers_children)\r\n\t\r\n\tconst contents_children = T.isArray(body_contents_value) ? body_contents_value.map(render) : undefined\r\n\tconst contents = h('div', { id:'content'}, contents_children)\r\n\t\r\n\tconst footers_children = T.isArray(body_footers_value) ? body_footers_value.map(render) : undefined\r\n\tconst footers = h('footer', undefined, footers_children)\r\n\r\n\tconst body_styles_tags  = rendering_result.body_styles_tags.map(style)\r\n\tconst body_styles_urls  = rendering_result.body_styles_urls.map(link)\r\n\tconst body_scripts_tags = rendering_result.body_scripts_tags.map(script)\r\n\tconst body_scripts_urls = rendering_result.body_scripts_urls.map(script_url)\r\n\r\n\tconst body_children = [headers, contents, footers, body_styles_urls, body_styles_tags, body_scripts_urls, body_scripts_tags]\r\n\tconst body_props = { class:settings.body_class }\r\n\tconst body = h('body', body_props, body_children)\r\n\t\r\n\trendering_result.add_vtree('body', body)\r\n\r\n\treturn rendering_result\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/rendering/page_body.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1061,
    "kind": "variable",
    "name": "context",
    "memberof": "js/rendering/page_body.js",
    "static": true,
    "longname": "js/rendering/page_body.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/page_body.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1062,
    "kind": "variable",
    "name": "default_state",
    "memberof": "js/rendering/page_body.js",
    "static": true,
    "longname": "js/rendering/page_body.js~default_state",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/page_body.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "{\"body_headers\": *, \"body_contents\": *, \"body_footers\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1063,
    "kind": "variable",
    "name": "default_settings",
    "memberof": "js/rendering/page_body.js",
    "static": true,
    "longname": "js/rendering/page_body.js~default_settings",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/page_body.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "{\"body_class\": *, \"assets_urls_templates\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1064,
    "kind": "function",
    "name": "get_url",
    "memberof": "js/rendering/page_body.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/page_body.js~get_url",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/page_body.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "params": [
      {
        "name": "arg_template",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_url",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 1065,
    "kind": "function",
    "name": "page_body",
    "memberof": "js/rendering/page_body.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/page_body.js~page_body",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/rendering/page_body.js",
    "importStyle": "page_body",
    "description": "Page rendering with given state, produce a rendering result.",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult} - updated Rendering result: VNode or Html text, headers."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "rendering item settings."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_context",
        "description": "rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }."
      },
      {
        "nullable": null,
        "types": [
          "RenderingResult"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_result",
        "description": "rendering result to update."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": "updated Rendering result: VNode or Html text, headers."
    }
  },
  {
    "__docId__": 1066,
    "kind": "file",
    "name": "js/rendering/page_content.js",
    "content": "// NPM IMPORTS\r\nimport _ from 'lodash'\r\nimport h from 'virtual-dom/h'\r\n\r\n// COMMON IMPORTS\r\nimport T                   from '../utils/types'\r\nimport rendering_normalize from './rendering_normalize'\r\n\r\n\r\nlet context = 'common/rendering/page_content'\r\n\r\n\r\n\r\n// DEFAULT STATE\r\nconst default_state = {\r\n\tbody_contents:undefined   // array of tags\r\n}\r\n\r\n// DEFAULT SETTINGS\r\nconst default_settings = {\r\n\tassets_urls_templates:{\r\n\t\tscript:'{{url}}',\r\n\t\tstyle:'{{url}}',\r\n\t\timage:'{{url}}',\r\n\t\thtml:'{{url}}'\r\n\t}\r\n}\r\n\r\n\r\nconst get_url = (arg_template, arg_url)=>arg_template.replace('{{url}}', arg_url)\r\n\r\n\r\n\r\n/**\r\n * Page rendering with given state, produce a rendering result.\r\n * \r\n * @param {object} arg_settings - rendering item settings.\r\n * @param {object} arg_state - component state.\r\n * @param {object} arg_rendering_context - rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }.\r\n * @param {RenderingResult} arg_rendering_result - rendering result to update.\r\n * \r\n * @returns {RenderingResult} - updated Rendering result: VNode or Html text, headers.\r\n */\r\nexport default (arg_settings, arg_state={}, arg_rendering_context, arg_rendering_result)=>{\r\n\t// NORMALIZE ARGS\r\n\tconst { settings, state, rendering_context, rendering_result } = rendering_normalize(default_settings, default_state, arg_settings, arg_state, arg_rendering_context, arg_rendering_result, context)\r\n\tconst rendering_factory = rendering_context ? rendering_context.rendering_factory : undefined\r\n\r\n\r\n\t// GET SETTINGS ATTRIBUTES\r\n\r\n\t// GET STATE ATTRIBUTES\r\n\tconst body_contents_value = T.isArray(state.body_contents)? state.body_contents : undefined\r\n\r\n\r\n\t// BUILD CONTENT\r\n\tconst render = (item) => T.isFunction(rendering_factory) ? rendering_factory(item, rendering_context, settings.children).get_final_vtree(undefined, rendering_result) : item.toString()\r\n\r\n\r\n\t// BUILD SCRIPTS TAGS\r\n\tconst script = (item)=>{\r\n\t\tif ( T.isObject(item) && T.isString(item.id) && item.id.length > 0 && T.isString(item.content) && item.content.length > 0 )\r\n\t\t{\r\n\t\t\tconst type = T.isString(item.type)  && item.type.length  > 0 ? item.type  : 'text/javascript'\r\n\r\n\t\t\treturn h('script', { id:item.id, type:type }, item.content)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// BUILD STYLES TAGS\r\n\tconst style = (item)=>{\r\n\t\tif ( T.isObject(item) && T.isString(item.id) && item.id.length > 0 && T.isString(item.content) && item.content.length > 0 )\r\n\t\t{\r\n\t\t\tconst type  = T.isString(item.type)  && item.type.length  > 0 ? item.type  : 'text/css'\r\n\t\t\tconst media = T.isString(item.media) && item.media.length > 0 ? item.media : 'all'\r\n\r\n\t\t\treturn h('script', { id:item.id, type:type, media:media }, item.content)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// BUILD HEAD STYLES/LINKS URLS\r\n\tconst link = (item)=>{\r\n\t\tif ( T.isObject(item) && T.isString(item.href) && item.href.length > 0 && T.isString(item.id) && item.id.length > 0 )\r\n\t\t{\r\n\t\t\tconst rel   = T.isString(item.rel)   && item.rel.length   > 0 ? item.rel   : 'stylesheet'\r\n\t\t\tconst type  = T.isString(item.type)  && item.type.length  > 0 ? item.type  : 'text/css'\r\n\t\t\tconst media = T.isString(item.media) && item.media.length > 0 ? item.media : 'all'\r\n\t\t\tconst title = T.isString(item.title) && item.title.length > 0 ? item.title : undefined\r\n\t\t\tconst url_template = rel == 'stylesheet' ? settings.assets_urls_templates.style : settings.assets_urls_templates.image\r\n\r\n\t\t\treturn h('link', { id:item.id, href:get_url(url_template, item.href), type:type, media:media, rel:rel, title:title })\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// BUILD HEAD SCRIPTS URLS\r\n\tconst script_url = (item)=>{\r\n\t\tif ( T.isObject(item) && T.isString(item.src) && item.src.length > 0 && T.isString(item.id) && item.id.length > 0 )\r\n\t\t{\r\n\t\t\tconst type = T.isString(item.type)  && item.type.length  > 0 ? item.type  : 'text/javascript'\r\n\r\n\t\t\treturn h('script', { id:item.id, src:get_url(settings.assets_urls_templates.script, item.src), type:type })\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// BUILD CONTENT TAG\r\n\tconst body_styles_tags  = rendering_result.body_styles_tags.map(style)\r\n\tconst body_styles_urls  = rendering_result.body_styles_urls.map(link)\r\n\tconst body_scripts_tags = rendering_result.body_scripts_tags.map(script)\r\n\tconst body_scripts_urls = rendering_result.body_scripts_urls.map(script_url)\r\n\r\n\tconst contents_children = T.isArray(body_contents_value) ? body_contents_value.map(render) : []\r\n\tconst content = h('div', { id:'content'}, _.concat(contents_children, [body_styles_urls, body_styles_tags, body_scripts_urls, body_scripts_tags]) )\r\n\t\r\n\trendering_result.add_vtree('content', content)\r\n\r\n\treturn rendering_result\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/rendering/page_content.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1067,
    "kind": "variable",
    "name": "context",
    "memberof": "js/rendering/page_content.js",
    "static": true,
    "longname": "js/rendering/page_content.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/page_content.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1068,
    "kind": "variable",
    "name": "default_state",
    "memberof": "js/rendering/page_content.js",
    "static": true,
    "longname": "js/rendering/page_content.js~default_state",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/page_content.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "{\"body_contents\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1069,
    "kind": "variable",
    "name": "default_settings",
    "memberof": "js/rendering/page_content.js",
    "static": true,
    "longname": "js/rendering/page_content.js~default_settings",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/page_content.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "{\"assets_urls_templates\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1070,
    "kind": "function",
    "name": "get_url",
    "memberof": "js/rendering/page_content.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/page_content.js~get_url",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/page_content.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [
      {
        "name": "arg_template",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_url",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 1071,
    "kind": "function",
    "name": "page_content",
    "memberof": "js/rendering/page_content.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/page_content.js~page_content",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/rendering/page_content.js",
    "importStyle": "page_content",
    "description": "Page rendering with given state, produce a rendering result.",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult} - updated Rendering result: VNode or Html text, headers."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "rendering item settings."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_context",
        "description": "rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }."
      },
      {
        "nullable": null,
        "types": [
          "RenderingResult"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_result",
        "description": "rendering result to update."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": "updated Rendering result: VNode or Html text, headers."
    }
  },
  {
    "__docId__": 1072,
    "kind": "file",
    "name": "js/rendering/rendering_builder.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport _ from 'lodash'\r\n\r\n// COMMON IMPORTS\r\nimport T                        from '../utils/types'\r\nimport {is_server}              from '../utils/is_browser'\r\nimport rendering_factory        from './rendering_factory'\r\nimport RenderingBuilderAssets   from './rendering_builder_assets'\r\nimport RenderingResolverBuilder from './rendering_resolver'\r\n\r\n\r\nconst context = 'common/rendering/rendering_builder'\r\n\r\n\r\n\r\n/**\r\n * Rendering wrapper class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class RenderingBuilder extends RenderingBuilderAssets\r\n{\r\n    /**\r\n     * Create a rendering wrapper class.\r\n\t * \r\n\t * API:\r\n\t * \t\t->constructor(arg_runtime, arg_assets_styles, arg_assets_scripts, arg_assets_img, arg_assets_html, arg_application)\r\n\t * \r\n\t * \t\t->get_content_description(arg_view_name, arg_menubar_name):object - Get application content description.\r\n\t * \t\t->get_initial_state(arg_view_name, arg_menubar_name):string - Get application initial state as a JSON string.\r\n\t * \r\n\t * \t\t->render_html_page(arg_title, arg_view, arg_menubar, arg_credentials, arg_assets_services=undefined):string -  Render full page into HTML string.\r\n\t * \t\t->render_page(arg_title, arg_view, arg_menubar, arg_credentials, arg_assets_services=undefined):RenderingResult - Render full page.\r\n\t * \r\n\t * \t\t->render_json_content(arg_view, arg_menubar, arg_credentials, arg_assets_services):object - Render page content (inside 'content' DIV element) with a menubar and a view and convert rendering result to JSON.\r\n\t * \t\t->render_content(arg_view, arg_menubar, arg_credentials, arg_assets_services):RenderingResult - Render page content (inside 'content' DIV element) with a menubar and a view.\r\n\t * \r\n\t * @param {RuntimeBase} arg_runtime - runtime instance.\r\n\t * @param {string} arg_assets_styles - application service name to provide style assets.\r\n\t * @param {string} arg_assets_scripts - application service name to provide script assets.\r\n\t * @param {string} arg_assets_img - application service name to provide image assets.\r\n\t * @param {string} arg_assets_html - application service name to provide html assets.\r\n\t * @param {TopologyDefineApplication} arg_application - application.\r\n\t * \r\n\t * @returns {nothing}\r\n     */\r\n\tconstructor(arg_runtime, arg_assets_styles, arg_assets_scripts, arg_assets_img, arg_assets_html, arg_application)\r\n\t{\r\n\t\tassert( T.isObject(arg_runtime) && arg_runtime.is_base_runtime, context + ':constructor:bad runtime instance' )\r\n\r\n\t\tif ( T.isObject(arg_assets_styles) && T.isString(arg_assets_styles.style) && T.isString(arg_assets_styles.script) && T.isString(arg_assets_styles.image) && T.isString(arg_assets_styles.html) )\r\n\t\t{\r\n\t\t\targ_application = arg_assets_scripts\r\n\r\n\t\t\targ_assets_scripts = arg_assets_styles.script\r\n\t\t\targ_assets_img = arg_assets_styles.image\r\n\t\t\targ_assets_html = arg_assets_styles.html\r\n\t\t\targ_assets_styles = arg_assets_styles.style\r\n\t\t}\r\n\r\n\t\tsuper(arg_runtime, arg_assets_styles, arg_assets_scripts, arg_assets_img, arg_assets_html, arg_application)\r\n\t\t\r\n\t\tassert( T.isObject(this._runtime) && this._runtime.is_base_runtime, context + ':constructor:bad this._runtime instance' )\r\n\r\n\t\tthis.update_trace_enabled()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get name for loggers.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_name()\r\n\t{\r\n\t\treturn 'RenderingBuilder instance'\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get application content description.\r\n\t * \r\n\t * @param {string} arg_view_name - main view name.\r\n\t * @param {string} arg_menubar_name - main menubar name.\r\n\t * \r\n\t * @returns {object} - content description object as { name:..., type:..., state:..., settings:..., children:... }.\r\n\t */\r\n\tget_content_description(arg_view_name, arg_menubar_name)\r\n\t{\r\n\t\t// console.log(context + ':get_content_description:view=%s, menubar=%s', arg_view_name, arg_menubar_name)\r\n\t\treturn {\r\n\t\t\tname:'content',\r\n\t\t\ttype:'page_content',\r\n\t\t\tstate:{\r\n\t\t\t\tbody_contents:[arg_menubar_name, 'separator', arg_view_name]\r\n\t\t\t},\r\n\t\t\tsettings:{\r\n\t\t\t\tassets_urls_templates:{\r\n\t\t\t\t\tscript:is_server() ? this.get_assets_script_url('{{url}}') : this._runtime.ui()._ui_rendering.get_asset_url('{{url}}', 'script', this._runtime.get_session_credentials()),\r\n\t\t\t\t\tstyle: is_server() ? this.get_assets_style_url('{{url}}')  : this._runtime.ui()._ui_rendering.get_asset_url('{{url}}', 'style',  this._runtime.get_session_credentials()),\r\n\t\t\t\t\timage: is_server() ? this.get_assets_image_url('{{url}}')  : this._runtime.ui()._ui_rendering.get_asset_url('{{url}}', 'image',  this._runtime.get_session_credentials()),\r\n\t\t\t\t\thtml:  is_server() ? this.get_assets_html_url('{{url}}')   : this._runtime.ui()._ui_rendering.get_asset_url('{{url}}', 'html',   this._runtime.get_session_credentials())\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tchildren:{\r\n\t\t\t\tseparator:{\r\n\t\t\t\t\tname:'separator',\r\n\t\t\t\t\ttype:'table',\r\n\t\t\t\t\tstate:{},\r\n\t\t\t\t\tsettings: {\r\n\t\t\t\t\t\tid:'separator',\r\n\t\t\t\t\t\tclasses:'devapt-layout-persistent'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get application initial state as a JSON string.\r\n\t * \r\n\t * @param {string} arg_view_name - main view name.\r\n\t * @param {string} arg_menubar_name - main menubar name.\r\n\t * \r\n\t * @returns {string} - state JSON string.\r\n\t */\r\n\tget_initial_state(arg_view_name, arg_menubar_name)\r\n\t{\r\n\t\tlet initial_state = this._application ? this._application.export_settings() : {}\r\n\r\n\t\tinitial_state.credentials = {\r\n\t\t\t\"tenant\":\"{{{credentials_tenant}}}\",\r\n\t\t\t\"env\":\"{{{credentials_env}}}\",\r\n\t\t\t\"application\":\"{{{credentials_application}}}\",\r\n\t\t\t\r\n\t\t\t\"token\":\"{{{credentials_token}}}\",\r\n\t\t\t\"user_name\":\"{{{credentials_user_name}}}\",\r\n\t\t\t\"user_pass_digest\":\"{{{credentials_pass_digest}}}\",\r\n\r\n\t\t\t\"ts_login\":\"{{{credentials_login}}}\",\r\n\t\t\t\"ts_expiration\":\"{{{credentials_expire}}}\",\r\n\r\n\t\t\t\"errors_count\":\"{{{credentials_errors_count}}}\",\r\n\t\t\t\"renew_count\":\"{{{credentials_renew_count}}}\"\r\n\t\t}\r\n\r\n\t\tinitial_state.app_url    = this._application ? this._application.app_url : null\r\n\t\tinitial_state.app_assets = this._application ? this._application.app_assets : null\r\n\t\tinitial_state.commands   = this._application ? this._application.get_resources_settings('commands') : {}\r\n\t\tinitial_state.views      = this._application ? this._application.get_resources_settings('views') : {}\r\n\t\tinitial_state.menubars   = this._application ? this._application.get_resources_settings('menubars') : {}\r\n\t\tinitial_state.menus      = this._application ? this._application.get_resources_settings('menus') : {}\r\n\t\tinitial_state.models     = this._application ? this._application.get_resources_settings('models') : {}\r\n\r\n\t\tinitial_state.assets_urls_templates = {\r\n\t\t\tscript:this.get_assets_script_url('{{url}}'),\r\n\t\t\tstyle:this.get_assets_style_url('{{url}}'),\r\n\t\t\timage:this.get_assets_image_url('{{url}}'),\r\n\t\t\thtml:this.get_assets_html_url('{{url}}')\r\n\t\t}\r\n\r\n\t\tinitial_state.plugins_urls= {}\r\n\t\tif ( T.isArray(initial_state.used_plugins) )\r\n\t\t{\r\n\t\t\tconst tenant = this._application.get_topology_owner()\r\n\t\t\tif (! tenant)\r\n\t\t\t{\r\n\t\t\t\tthis.error('no owner tenant found for this application')\r\n\t\t\t\tconsole.error(context + ':get_initial_state:no owner tenant found for this application')\r\n\t\t\t} else {\r\n\t\t\t\t_.forEach(initial_state.used_plugins,\r\n\t\t\t\t\t(plugin_name)=>{\r\n\t\t\t\t\t\t// console.log('plugin_name', plugin_name)\r\n\r\n\t\t\t\t\t\tconst plugin = tenant.get_topology_owner().plugin(plugin_name)\r\n\t\t\t\t\t\tif ( ! plugin )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tconsole.error(context + ':get_initial_state:plugin not found for [' + plugin_name + ']')\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif ( T.isFunction(plugin.topology_plugin_instance.get_browser_plugin_file_url) )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tconst url = plugin.topology_plugin_instance.get_browser_plugin_file_url()\r\n\t\t\t\t\t\t\tif ( T.isString(url) )\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tinitial_state.plugins_urls[plugin_name] = url\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (! initial_state.views.content)\r\n\t\t{\r\n\t\t\tinitial_state.views.content = this.get_content_description(arg_view_name, arg_menubar_name)\r\n\t\t\t// _.forEach(initial_state.views.content.children,\r\n\t\t\t// \t(view_desc, view_name)=>{\r\n\t\t\t// \t\tinitial_state.views[view_name] = view_desc\r\n\t\t\t// \t}\r\n\t\t\t// )\r\n\t\t}\r\n\r\n\t\treturn JSON.stringify(initial_state)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Render full page into HTML string.\r\n\t * \r\n\t * @param {string|undefined} arg_title - page title, application title (optional).\r\n\t * @param {string|Component|undefined} arg_view - main view name or instance (optional) (default application view name).\r\n\t * @param {string|Component|undefined} arg_menubar - main menubar name or instance (optional) (default application menubar name).\r\n\t * @param {Credentials} arg_credentials - credentials instance.\r\n\t * @param {object} arg_assets_services - assets record (optional).\r\n\t * \r\n\t * @returns {string} - rendering HTML code.\r\n\t */\r\n\trender_html_page(arg_title, arg_view, arg_menubar, arg_credentials, arg_assets_services=undefined)\r\n\t{\r\n\t\tconst rendering_result = this.render_page(arg_title, arg_view, arg_menubar, arg_credentials, arg_assets_services)\r\n\t\tconst html = '<!DOCTYPE html>' + rendering_result.get_final_html('page')\r\n\t\tconst rendered_html = this._runtime.context.render_credentials_template(html, arg_credentials)\r\n\r\n\t\treturn rendered_html\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Render full page.\r\n\t * \r\n\t * @param {string|undefined} arg_title - page title, application title (optional).\r\n\t * @param {string|Component|undefined} arg_view - main view name or instance (optional) (default application view name).\r\n\t * @param {string|Component|undefined} arg_menubar - main menubar name or instance (optional) (default application menubar name).\r\n\t * @param {Credentials} arg_credentials - credentials instance.\r\n\t * @param {object} arg_assets_services - assets record (optional).\r\n\t * \r\n\t * @returns {RenderingResult} - rendering result instance.\r\n\t */\r\n\trender_page(arg_title, arg_view, arg_menubar, arg_credentials, arg_assets_services=undefined)\r\n\t{\r\n\t\t// DEBUG\r\n\t\tdebugger\r\n\t\tconsole.log(context + ':render_page:credentials', arg_credentials)\r\n\r\n\t\tassert( T.isObject(arg_credentials) && arg_credentials.is_credentials, context + ':render_page:bad credentials object')\r\n\t\t\r\n\t\t// ONLY FOR SERVER SIDE\r\n\t\tassert( is_server(), context + ':render_page:only for server side')\r\n\r\n\r\n\t\t// SET ASSETS SERVICES NAMES\r\n\t\tif ( T.isObject(arg_assets_services) )\r\n\t\t{\r\n\t\t\tthis.set_assets_services_names(arg_assets_services.style, arg_assets_services.script, arg_assets_services.image, arg_assets_services.html)\r\n\t\t}\r\n\r\n\t\t// GET TOPOLOGY DEFINED APPLICATION\r\n\t\tconst topology_define_app = this.get_topology_defined_application(arg_credentials)\r\n\t\tassert(topology_define_app, context + ':render_page:bad topology_define_app')\r\n\t\t\r\n\t\t// GET VIEW\r\n\t\tconst default_view_name = topology_define_app.app_default_view\r\n\t\t// const view = ( T.isString(arg_view) || ( T.isObject(arg_view) && arg_view.is_component ) ) ? arg_view : default_view_name\r\n\t\t\r\n\t\t// GET MENUBAR\r\n\t\tconst default_menubar_name = topology_define_app.app_default_menubar\r\n\t\t// const menubar = ( T.isString(arg_menubar) || ( T.isObject(arg_menubar) && arg_menubar.is_component ) ) ? arg_menubar : default_menubar_name\r\n\r\n\t\t// GET DEFAULT TITLE IF NEEDED\r\n\t\tconst default_title = topology_define_app.app_title\r\n\t\tconst title = arg_title ? arg_title : default_title\r\n\r\n\t\t// TODO ADDSECURITY  HEADERS\r\n\t\t// const auth_basic_realm = '<meta http-equiv=\"WWW-Authenticate\" content=\"Basic realm=Devtools\"/>'\r\n\t\t// const auth_basic_credentials = '<meta http-equiv=\"Authorization\" content=\"Basic {{{credentials_basic_base64}}}\"/>'\r\n\r\n\t\tconst view_name = T.isString(arg_view) ? arg_view : ( ( T.isObject(arg_view) && arg_view.is_component ) ? arg_view.get_name() : default_view_name )\r\n\t\tconst menubar_name = T.isString(arg_menubar) ? arg_menubar : ( ( T.isObject(arg_menubar) && arg_menubar.is_component ) ? arg_menubar.get_name() : default_menubar_name )\r\n\t\tconst content_result = this.render_json_content(view_name, menubar_name, arg_credentials, arg_assets_services)\r\n\t\tconst stored_state = this.get_initial_state(view_name, menubar_name)\r\n\r\n\t\tconst page = {\r\n\t\t\ttype:'page',\r\n\t\t\tstate:{\r\n\t\t\t\ttitle:title,\r\n\t\t\t\tmetas:undefined,\r\n\r\n\t\t\t\tbody_headers:undefined,\r\n\t\t\t\tbody_contents:[],\r\n\t\t\t\tbody_footers:undefined,\r\n\t\t\t\t\r\n\t\t\t\thead_styles_tags:content_result.head_styles_tags,\r\n\t\t\t\thead_styles_urls:topology_define_app.app_assets_css.concat(content_result.head_styles_urls),\r\n\t\t\t\t\r\n\t\t\t\thead_scripts_tags:content_result.head_scripts_tags,\r\n\t\t\t\thead_scripts_urls:content_result.head_scripts_urls,\r\n\r\n\t\t\t\tbody_styles_tags:content_result.body_styles_tags,\r\n\t\t\t\tbody_styles_urls:content_result.body_styles_urls,\r\n\r\n\t\t\t\tbody_scripts_tags:content_result.body_scripts_tags, // SEE LATER FOR CONTENT\r\n\t\t\t\tbody_scripts_urls:[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid:'js-socketio',\r\n\t\t\t\t\t\tsrc:'/socket.io/socket.io.js',\r\n\t\t\t\t\t\tabsolute:true\r\n\t\t\t\t\t}\r\n\t\t\t\t].concat(content_result.body_scripts_urls, topology_define_app.app_assets_js)\r\n\t\t\t},\r\n\t\t\tsettings:{\r\n\t\t\t\thtml_lang:undefined,\r\n\t\t\t\thtml_class:undefined,\r\n\t\t\t\thtml_prefix:undefined,\r\n\r\n\t\t\t\thead_charset:'utf-8',\r\n\t\t\t\thead_viewport:undefined,\r\n\t\t\t\thead_description:undefined,\r\n\t\t\t\thead_robots:undefined,\r\n\r\n\t\t\t\tbody_class:undefined,\r\n\r\n\t\t\t\tassets_urls_templates:{\r\n\t\t\t\t\tscript:this.get_assets_script_url('{{url}}'),\r\n\t\t\t\t\tstyle:this.get_assets_style_url('{{url}}'),\r\n\t\t\t\t\timage:this.get_assets_image_url('{{url}}'),\r\n\t\t\t\t\thtml:this.get_assets_html_url('{{url}}')\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tchildren:{}\r\n\t\t}\r\n\r\n\t\tconst rendering_context = {\r\n\t\t\ttrace_fn:undefined, /*console.log,*/\r\n\t\t\tresolver:RenderingResolverBuilder.from_topology('server resolver from topology for page', topology_define_app),\r\n\t\t\tcredentials:arg_credentials,\r\n\t\t\trendering_factory:rendering_factory\r\n\t\t}\r\n\t\t\r\n\t\tcontent_result.head_styles_urls = []\r\n\t\tcontent_result.head_styles_tagss = []\r\n\t\tcontent_result.head_scripts_urls = []\r\n\t\tcontent_result.head_scripts_tags = []\r\n\t\tcontent_result.body_styles_urls = []\r\n\t\tcontent_result.body_styles_tags = []\r\n\t\tcontent_result.body_scripts_urls = []\r\n\t\tcontent_result.body_scripts_tags = []\r\n\t\t\r\n\t\tcontent_result.assets_urls_templates = page.settings.assets_urls_templates\r\n\r\n\t\t// console.log(context + ':render_page:content_result', content_result.vtrees.content.c)\r\n\r\n\t\tlet content_json_str_result = JSON.stringify(content_result)\r\n\t\tcontent_json_str_result = content_json_str_result.replace(/\"class\"/g, '\"className\"')\r\n\r\n\t\tpage.state.body_scripts_tags = page.state.body_scripts_tags.concat([\r\n\t\t\t{\r\n\t\t\t\tid:'js-initial-state',\r\n\t\t\t\tcontent:`window.__INITIAL_STATE__ = ${stored_state};`\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid:'js-initial-content',\r\n\t\t\t\tcontent:`window.__INITIAL_CONTENT__ = ${content_json_str_result};`\r\n\t\t\t}\r\n\t\t])\r\n\r\n\t\tconst rendering_result = rendering_factory(page, rendering_context, page.children)\r\n\t\treturn rendering_result\r\n\t}\r\n\r\n\t\r\n\r\n\t/**\r\n\t * Render page content (inside 'content' DIV element) with a menubar and a view and convert rendering result to JSON.\r\n\t * \r\n\t * @param {string|Component|undefined} arg_view - main view name or instance (optional) (default application view name).\r\n\t * @param {string|Component|undefined} arg_menubar - main menubar name or instance (optional) (default application menubar name).\r\n\t * @param {Credentials} arg_credentials - credentials instance.\r\n\t * @param {object} arg_assets_services - assets record (optional).\r\n\t * \r\n\t * @returns {object} - rendering result converted to JSON object.\r\n\t */\r\n\trender_json_content(arg_view, arg_menubar, arg_credentials, arg_assets_services)\r\n\t{\r\n\t\tconst result = this.render_content(arg_view, arg_menubar, arg_credentials, arg_assets_services)\r\n\t\tconst json = result.convert_to_json()\r\n\t\treturn json\r\n\t}\r\n\r\n\t\r\n\r\n\t/**\r\n\t * Render page content (inside 'content' DIV element) with a menubar and a view.\r\n\t * \r\n\t * @param {string|Component|undefined} arg_view - main view name or instance (optional) (default application view name).\r\n\t * @param {string|Component|undefined} arg_menubar - main menubar name or instance (optional) (default application menubar name).\r\n\t * @param {Credentials} arg_credentials - credentials instance.\r\n\t * @param {object} arg_assets_services - assets record (optional).\r\n\t * \r\n\t * @returns {RenderingResult} - rendering result instance.\r\n\t */\r\n\trender_content(arg_view, arg_menubar, arg_credentials, arg_assets_services)\r\n\t{\r\n\t\tassert( T.isString(arg_view) || ( T.isObject(arg_view) && arg_view.is_component ), context + ':bad view string or object')\r\n\t\tassert( T.isObject(arg_credentials) && arg_credentials.is_credentials, context + ':bad credentials object')\r\n\t\t\r\n\t\t// SET ASSETS SERVICES NAMES\r\n\t\tif ( T.isObject(arg_assets_services) )\r\n\t\t{\r\n\t\t\tthis.set_assets_services_names(arg_assets_services.style, arg_assets_services.script, arg_assets_services.image, arg_assets_services.html)\r\n\t\t}\r\n\r\n\t\t// RUN ON SERVER SIDE\r\n\t\tif ( is_server() )\r\n\t\t{\r\n\t\t\tassert( T.isString(arg_view) || T.isString(arg_menubar), context + ':bad view or menubar name string')\r\n\t\t\t\r\n\t\t\t// RUN ON BROWSER SIDE\r\n\t\t\tconst rendering_result = this._render_content_on_server(arg_view, arg_menubar, arg_credentials)\r\n\t\t\treturn rendering_result\r\n\t\t}\r\n\r\n\t\t// RUN ON BROWSER SIDE\r\n\t\tconst rendering_result = this._render_content_on_browser(arg_view, arg_menubar, arg_credentials)\r\n\t\treturn rendering_result\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Get rendering function resolver.\r\n\t * \r\n\t * @param {Credentials} arg_credentials - credentials instance.\r\n\t * \r\n\t * @returns {Function} - rendering function resolver.\r\n\t */\r\n\tstatic get_rendering_function_resolver(arg_credentials)\r\n\t{\r\n\t\tif ( is_server() )\r\n\t\t{\r\n\t\t\t// GET TOPOLOGY DEFINED APPLICATION\r\n\t\t\tconst topology_define_app = this.get_topology_defined_application(arg_credentials)\r\n\t\t\tassert(topology_define_app, context + ':render_content:bad topology_define_app')\r\n\t\t\t\r\n\t\t\t// GET SERVER RESOLVER\r\n\t\t\tconst resolver = RenderingResolverBuilder.from_topology('server resolver from topology', topology_define_app)\r\n\t\t\treturn resolver\r\n\t\t}\r\n\r\n\t\t// GET BROWSER RESOLVER\r\n\t\tconst res_resolver = window.devapt().ui().get_resource_description_resolver()\r\n\t\tconst rf_resolver  = window.devapt().ui().get_rendering_function_resolver()\r\n\t\tconst rendering_resolver = RenderingResolverBuilder.from_resolvers('browser resolver from ui', res_resolver, rf_resolver)\r\n\t\treturn rendering_resolver\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Render page content on browser side.\r\n\t * @private\r\n\t * \r\n\t * @param {string|Component|undefined} arg_view - main view name or instance (optional) (default application view name).\r\n\t * @param {string|Component|undefined} arg_menubar - main menubar name or instance (optional) (default application menubar name).\r\n\t * @param {Credentials} arg_credentials - credentials instance.\r\n\t * \r\n\t * @returns {RenderingResult} - rendering result instance.\r\n\t */\r\n\t_render_content_on_browser(arg_view, arg_menubar, arg_credentials)\r\n\t{\r\n\t\tassert( T.isObject(this._runtime) && this._runtime.is_base_runtime, context + ':_render_content_on_browser:bad this._runtime instance' )\r\n\t\t\r\n\t\tconst store = this._runtime.get_state_store()\r\n\t\tconst state = store.get_state()\r\n\r\n\t\tconst res_resolver = this._runtime.ui().get_resource_description_resolver()\r\n\t\tconst rf_resolver  = this._runtime.ui().get_rendering_function_resolver()\r\n\t\tconst rendering_resolver = RenderingResolverBuilder.from_resolvers('browser resolver from ui', res_resolver, rf_resolver)\r\n\r\n\t\t// GET DEFAULT VIEW\r\n\t\tconst default_view_name = state.get('default_view', undefined)\r\n\t\t\r\n\t\t// GET DEFAULT MENUBAR\r\n\t\tconst default_menubar_name = state.get('default_menubar', undefined)\r\n\t\t\r\n\t\treturn this._render_content_common(arg_view, arg_menubar, arg_credentials, default_view_name, default_menubar_name, rendering_resolver)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Render page content on server side.\r\n\t * @private\r\n\t * \r\n\t * @param {string|Component|undefined} arg_view - main view name or instance (optional) (default application view name).\r\n\t * @param {string|Component|undefined} arg_menubar - main menubar name or instance (optional) (default application menubar name).\r\n\t * @param {Credentials} arg_credentials - credentials instance.\r\n\t * \r\n\t * @returns {RenderingResult} - rendering result instance.\r\n\t */\r\n\t_render_content_on_server(arg_view, arg_menubar, arg_credentials)\r\n\t{\r\n\t\t// GET TOPOLOGY DEFINED APPLICATION\r\n\t\tconst topology_define_app = this.get_topology_defined_application(arg_credentials)\r\n\t\tassert(topology_define_app, context + ':render_content:bad topology_define_app')\r\n\r\n\t\t// GET DEFAULT VIEW\r\n\t\tconst default_view_name = topology_define_app.app_default_view\r\n\t\t\r\n\t\t// GET DEFAULT MENUBAR\r\n\t\tconst default_menubar_name = topology_define_app.app_default_menubar\r\n\t\t\r\n\t\tconst resolver = RenderingResolverBuilder.from_topology('server resolver from topology', topology_define_app)\r\n\r\n\t\treturn this._render_content_common(arg_view, arg_menubar, arg_credentials, default_view_name, default_menubar_name, resolver)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Render page content helper on browser or server side.\r\n\t * @private\r\n\t * \r\n\t * @param {string|Component|undefined} arg_view - main view name or instance (optional) (default application view name).\r\n\t * @param {string|Component|undefined} arg_menubar - main menubar name or instance (optional) (default application menubar name).\r\n\t * @param {Credentials} arg_credentials - credentials instance.\r\n\t * @param {string} arg_default_view_name - default view name.\r\n\t * @param {string} arg_default_menubar_name - default menubar name.\r\n\t * @param {RenderingResolver} arg_rendering_resolver - object with 'find_rendering_function(type name)' method.\r\n\t * \r\n\t * @returns {RenderingResult} - rendering result instance.\r\n\t */\r\n\t_render_content_common(arg_view, arg_menubar, arg_credentials, arg_default_view_name, arg_default_menubar_name, arg_rendering_resolver)\r\n\t{\r\n\t\tconst menubar = (arg_menubar ? arg_menubar : arg_default_menubar_name)\r\n\t\tconst view    = (arg_view    ? arg_view    : arg_default_view_name)\r\n\t\tconst content = this.get_content_description(view, menubar)\r\n\r\n\t\t// DEBUG\r\n\t\t// console.log(context + ':_render_content_common:arg_view_name=%s,arg_menubar_name=%s,view=%s,menubar=%s', arg_view_name, arg_menubar_name, view, menubar)\r\n\t\t// console.log(context + ':_render_content_common:content', content)\r\n\r\n\t\tconst rendering_context = {\r\n\t\t\ttrace_fn:undefined,//console.log,//\r\n\t\t\tresolver:arg_rendering_resolver,\r\n\t\t\tcredentials:arg_credentials,\r\n\t\t\trendering_factory:rendering_factory\r\n\t\t}\r\n\t\t\r\n\t\tconst rendering_result = rendering_factory(content, rendering_context, undefined)\r\n\t\t\r\n\t\trendering_result.assets_urls_templates = content.settings.assets_urls_templates\r\n\r\n\t\treturn rendering_result\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/rendering/rendering_builder.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1073,
    "kind": "variable",
    "name": "context",
    "memberof": "js/rendering/rendering_builder.js",
    "static": true,
    "longname": "js/rendering/rendering_builder.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/rendering_builder.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1074,
    "kind": "class",
    "name": "RenderingBuilder",
    "memberof": "js/rendering/rendering_builder.js",
    "static": true,
    "longname": "js/rendering/rendering_builder.js~RenderingBuilder",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/rendering/rendering_builder.js",
    "importStyle": "RenderingBuilder",
    "description": "Rendering wrapper class.",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets"
    ]
  },
  {
    "__docId__": 1075,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/rendering/rendering_builder.js~RenderingBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_builder.js~RenderingBuilder#constructor",
    "access": "public",
    "description": "Create a rendering wrapper class.\n\nAPI:\n\t\t->constructor(arg_runtime, arg_assets_styles, arg_assets_scripts, arg_assets_img, arg_assets_html, arg_application)\n\n\t\t->get_content_description(arg_view_name, arg_menubar_name):object - Get application content description.\n\t\t->get_initial_state(arg_view_name, arg_menubar_name):string - Get application initial state as a JSON string.\n\n\t\t->render_html_page(arg_title, arg_view, arg_menubar, arg_credentials, arg_assets_services=undefined):string -  Render full page into HTML string.\n\t\t->render_page(arg_title, arg_view, arg_menubar, arg_credentials, arg_assets_services=undefined):RenderingResult - Render full page.\n\n\t\t->render_json_content(arg_view, arg_menubar, arg_credentials, arg_assets_services):object - Render page content (inside 'content' DIV element) with a menubar and a view and convert rendering result to JSON.\n\t\t->render_content(arg_view, arg_menubar, arg_credentials, arg_assets_services):RenderingResult - Render page content (inside 'content' DIV element) with a menubar and a view.",
    "lineNumber": 48,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "RuntimeBase"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "runtime instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_assets_styles",
        "description": "application service name to provide style assets."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_assets_scripts",
        "description": "application service name to provide script assets."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_assets_img",
        "description": "application service name to provide image assets."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_assets_html",
        "description": "application service name to provide html assets."
      },
      {
        "nullable": null,
        "types": [
          "TopologyDefineApplication"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_application",
        "description": "application."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1076,
    "kind": "method",
    "name": "get_name",
    "memberof": "js/rendering/rendering_builder.js~RenderingBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_builder.js~RenderingBuilder#get_name",
    "access": "public",
    "description": "Get name for loggers.",
    "lineNumber": 76,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1077,
    "kind": "method",
    "name": "get_content_description",
    "memberof": "js/rendering/rendering_builder.js~RenderingBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_builder.js~RenderingBuilder#get_content_description",
    "access": "public",
    "description": "Get application content description.",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - content description object as { name:..., type:..., state:..., settings:..., children:... }."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_view_name",
        "description": "main view name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_menubar_name",
        "description": "main menubar name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "content description object as { name:..., type:..., state:..., settings:..., children:... }."
    }
  },
  {
    "__docId__": 1078,
    "kind": "method",
    "name": "get_initial_state",
    "memberof": "js/rendering/rendering_builder.js~RenderingBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_builder.js~RenderingBuilder#get_initial_state",
    "access": "public",
    "description": "Get application initial state as a JSON string.",
    "lineNumber": 132,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - state JSON string."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_view_name",
        "description": "main view name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_menubar_name",
        "description": "main menubar name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "state JSON string."
    }
  },
  {
    "__docId__": 1079,
    "kind": "method",
    "name": "render_html_page",
    "memberof": "js/rendering/rendering_builder.js~RenderingBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_builder.js~RenderingBuilder#render_html_page",
    "access": "public",
    "description": "Render full page into HTML string.",
    "lineNumber": 226,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - rendering HTML code."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_title",
        "description": "page title, application title (optional)."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "Component",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_view",
        "description": "main view name or instance (optional) (default application view name)."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "Component",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_menubar",
        "description": "main menubar name or instance (optional) (default application menubar name)."
      },
      {
        "nullable": null,
        "types": [
          "Credentials"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "credentials instance."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_assets_services",
        "description": "assets record (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "rendering HTML code."
    }
  },
  {
    "__docId__": 1080,
    "kind": "method",
    "name": "render_page",
    "memberof": "js/rendering/rendering_builder.js~RenderingBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_builder.js~RenderingBuilder#render_page",
    "access": "public",
    "description": "Render full page.",
    "lineNumber": 248,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult} - rendering result instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_title",
        "description": "page title, application title (optional)."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "Component",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_view",
        "description": "main view name or instance (optional) (default application view name)."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "Component",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_menubar",
        "description": "main menubar name or instance (optional) (default application menubar name)."
      },
      {
        "nullable": null,
        "types": [
          "Credentials"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "credentials instance."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_assets_services",
        "description": "assets record (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": "rendering result instance."
    }
  },
  {
    "__docId__": 1081,
    "kind": "method",
    "name": "render_json_content",
    "memberof": "js/rendering/rendering_builder.js~RenderingBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_builder.js~RenderingBuilder#render_json_content",
    "access": "public",
    "description": "Render page content (inside 'content' DIV element) with a menubar and a view and convert rendering result to JSON.",
    "lineNumber": 391,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - rendering result converted to JSON object."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "Component",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_view",
        "description": "main view name or instance (optional) (default application view name)."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "Component",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_menubar",
        "description": "main menubar name or instance (optional) (default application menubar name)."
      },
      {
        "nullable": null,
        "types": [
          "Credentials"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "credentials instance."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_assets_services",
        "description": "assets record (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "rendering result converted to JSON object."
    }
  },
  {
    "__docId__": 1082,
    "kind": "method",
    "name": "render_content",
    "memberof": "js/rendering/rendering_builder.js~RenderingBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_builder.js~RenderingBuilder#render_content",
    "access": "public",
    "description": "Render page content (inside 'content' DIV element) with a menubar and a view.",
    "lineNumber": 410,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult} - rendering result instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "Component",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_view",
        "description": "main view name or instance (optional) (default application view name)."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "Component",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_menubar",
        "description": "main menubar name or instance (optional) (default application menubar name)."
      },
      {
        "nullable": null,
        "types": [
          "Credentials"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "credentials instance."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_assets_services",
        "description": "assets record (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": "rendering result instance."
    }
  },
  {
    "__docId__": 1083,
    "kind": "method",
    "name": "get_rendering_function_resolver",
    "memberof": "js/rendering/rendering_builder.js~RenderingBuilder",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/rendering_builder.js~RenderingBuilder.get_rendering_function_resolver",
    "access": "public",
    "description": "Get rendering function resolver.",
    "lineNumber": 444,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} - rendering function resolver."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Credentials"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "credentials instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "rendering function resolver."
    }
  },
  {
    "__docId__": 1084,
    "kind": "method",
    "name": "_render_content_on_browser",
    "memberof": "js/rendering/rendering_builder.js~RenderingBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_builder.js~RenderingBuilder#_render_content_on_browser",
    "access": "private",
    "description": "Render page content on browser side.",
    "lineNumber": 476,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult} - rendering result instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "Component",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_view",
        "description": "main view name or instance (optional) (default application view name)."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "Component",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_menubar",
        "description": "main menubar name or instance (optional) (default application menubar name)."
      },
      {
        "nullable": null,
        "types": [
          "Credentials"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "credentials instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": "rendering result instance."
    }
  },
  {
    "__docId__": 1085,
    "kind": "method",
    "name": "_render_content_on_server",
    "memberof": "js/rendering/rendering_builder.js~RenderingBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_builder.js~RenderingBuilder#_render_content_on_server",
    "access": "private",
    "description": "Render page content on server side.",
    "lineNumber": 508,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult} - rendering result instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "Component",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_view",
        "description": "main view name or instance (optional) (default application view name)."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "Component",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_menubar",
        "description": "main menubar name or instance (optional) (default application menubar name)."
      },
      {
        "nullable": null,
        "types": [
          "Credentials"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "credentials instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": "rendering result instance."
    }
  },
  {
    "__docId__": 1086,
    "kind": "method",
    "name": "_render_content_common",
    "memberof": "js/rendering/rendering_builder.js~RenderingBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_builder.js~RenderingBuilder#_render_content_common",
    "access": "private",
    "description": "Render page content helper on browser or server side.",
    "lineNumber": 540,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult} - rendering result instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "Component",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_view",
        "description": "main view name or instance (optional) (default application view name)."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "Component",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_menubar",
        "description": "main menubar name or instance (optional) (default application menubar name)."
      },
      {
        "nullable": null,
        "types": [
          "Credentials"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "credentials instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_default_view_name",
        "description": "default view name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_default_menubar_name",
        "description": "default menubar name."
      },
      {
        "nullable": null,
        "types": [
          "RenderingResolver"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_resolver",
        "description": "object with 'find_rendering_function(type name)' method."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": "rendering result instance."
    }
  },
  {
    "__docId__": 1087,
    "kind": "file",
    "name": "js/rendering/rendering_builder_assets.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n// import _ from 'lodash'\r\n\r\n// COMMON IMPORTS\r\nimport T        from '../utils/types'\r\nimport Loggable from '../base/loggable'\r\n\r\n\r\nconst context = 'common/rendering/rendering_builder'\r\n\r\n\r\n\r\n/**\r\n * Rendering wrapper class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class RenderingBuilderAssets extends Loggable\r\n{\r\n    /**\r\n     * Create a rendering wrapper class.\r\n\t * \r\n\t * API:\r\n\t * \t\t->render_content(arg_title, arg_view, arg_menubar, arg_credentials):string - generate page HTML string.\r\n\t * \r\n\t * @param {RuntimeBase} arg_runtime - runtime instance.\r\n\t * @param {string} arg_assets_styles - application service name to provide style assets.\r\n\t * @param {string} arg_assets_scripts - application service name to provide script assets.\r\n\t * @param {string} arg_assets_img - application service name to provide image assets.\r\n\t * @param {string} arg_assets_html - application service name to provide html assets.\r\n\t * @param {TopologyDefineApplication} arg_application - application.\r\n\t * \r\n\t * @returns {nothing}\r\n     */\r\n\tconstructor(arg_runtime, arg_assets_styles, arg_assets_scripts, arg_assets_img, arg_assets_html, arg_application)\r\n\t{\r\n\t\tassert( T.isObject(arg_runtime) && arg_runtime.is_base_runtime, context + ':constructor:bad runtime instance' )\r\n\t\t\r\n\t\tsuper(context, arg_runtime.get_logger_manager())\r\n\r\n\t\tthis.is_render = true\r\n\r\n\t\tthis._application = arg_application\r\n\t\tthis._runtime = arg_runtime\r\n\t\t\r\n\t\tthis.set_assets_services_names(arg_assets_styles, arg_assets_scripts, arg_assets_img, arg_assets_html)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Set assets services names.\r\n\t * \r\n\t * @param {string} arg_assets_styles  - styles assets service name.\r\n\t * @param {string} arg_assets_scripts - scripts assets service name.\r\n\t * @param {string} arg_assets_img     - images assets service name.\r\n\t * @param {string} arg_assets_html    - html assets service name.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tset_assets_services_names(arg_assets_styles, arg_assets_scripts, arg_assets_img, arg_assets_html)\r\n\t{\r\n\t\tthis.assets_styles_service_name = arg_assets_styles ? arg_assets_styles : null\r\n\t\tthis.assets_scripts_service_name = arg_assets_scripts ? arg_assets_scripts : null\r\n\t\tthis.assets_images_service_name = arg_assets_img ? arg_assets_img : null\r\n\t\tthis.assets_html_service_name = arg_assets_html ? arg_assets_html : null\r\n\r\n\t\tthis.assets_styles_service_consumer = null\r\n\t\tthis.assets_scripts_service_consumer = null\r\n\t\tthis.assets_images_service_consumer = null\r\n\t\tthis.assets_html_service_consumer = null\r\n\t}\r\n    \r\n\r\n\r\n    /**\r\n     * Get an url to server the given image asset.\r\n\t * \r\n     * @param {string} arg_url - image asset relative url.\r\n\t * \r\n     * @returns {string} absolute image asset url.\r\n     */\r\n\tget_url_with_credentials(arg_url)\r\n\t{\r\n\t\tthis.enter_group('get_url_with_credentials')\r\n\r\n\t\t// TODO CHECK CRENDETIALS\r\n\t\tconst url = this._runtime.context.get_url_with_credentials(arg_url)\r\n\r\n\t\tthis.leave_group('get_url_with_credentials')\r\n\t\treturn url\r\n\t}\r\n\t\r\n    \r\n    /**\r\n     * Get an url to server the given image asset.\r\n     * @param {string} arg_url - image asset relative url.\r\n     * @returns {string} absolute image asset url.\r\n     */\r\n\tget_assets_image_url(arg_url)\r\n\t{\r\n\t\tthis.enter_group('get_assets_image_url')\r\n\r\n\t\tconst name = this.assets_images_service_name\r\n\t\tconst url = this.get_assets_url(this.assets_images_service_consumer, name, arg_url)\r\n\r\n\t\tthis.leave_group('get_assets_image_url')\r\n\t\treturn url\r\n\t}\r\n\t\r\n    \r\n    /**\r\n     * Get an url to server the given static html asset.\r\n     * @param {string} arg_url - html asset relative url.\r\n     * @returns {string} absolute html asset url.\r\n     */\r\n\tget_assets_html_url(arg_url)\r\n\t{\r\n\t\tthis.enter_group('get_assets_html_url')\r\n\r\n\t\tconst name = this.assets_html_service_name\r\n\t\tconst url = this.get_assets_url(this.assets_html_service_consumer, name, arg_url)\r\n\r\n\t\tthis.leave_group('get_assets_html_url')\r\n\t\treturn url\r\n\t}\r\n\t\r\n    \r\n    /**\r\n     * Get an url to server the given script asset.\r\n     * @param {string} arg_url - script asset relative url.\r\n     * @returns {string} absolute script asset url.\r\n     */\r\n\tget_assets_script_url(arg_url)\r\n\t{\r\n\t\tthis.enter_group('get_assets_script_url')\r\n\r\n\t\tconst name = this.assets_scripts_service_name\r\n\t\tconst url = this.get_assets_url(this.assets_scripts_service_consumer, name, arg_url)\r\n\r\n\t\t// console.log(context + ':get_assets_script_url:name=%s, arg_url=%s, url=%s', name, arg_url, url)\r\n\r\n\t\tthis.leave_group('get_assets_script_url')\r\n\t\treturn url\r\n\t}\r\n\t\r\n    \r\n    /**\r\n     * Get an url to server the given style asset.\r\n     * @param {string} arg_url - script asset relative url.\r\n     * @returns {string} absolute script asset url.\r\n     */\r\n\tget_assets_style_url(arg_url)\r\n\t{\r\n\t\tthis.enter_group('get_assets_style_url')\r\n\r\n\t\tconst name = this.assets_styles_service_name\r\n\t\tconst url = this.get_assets_url(this.assets_styles_service_consumer, name, arg_url)\r\n\r\n\t\tthis.leave_group('get_assets_style_url')\r\n\t\treturn url\r\n\t}\r\n\t\r\n    \r\n    /**\r\n     * Get an url to server the given image asset.\r\n\t * \r\n     * @param {object} arg_consumer - service consumer.\r\n     * @param {string} arg_svc_name - service name or null.\r\n     * @param {string} arg_url - image asset relative url.\r\n\t * \r\n     * @returns {string} absolute image asset url.\r\n     */\r\n\tget_assets_url(arg_consumer, arg_svc_name, arg_url)\r\n\t{\r\n\t\tthis.enter_group('get_assets_url')\r\n\r\n\t\t// console.log(typeof arg_url, 'arg_url', arg_url)\r\n\t\tassert( T.isString(arg_url), context + ':get_assets_url:bad url string for svc [' + arg_svc_name + '] for url [' + arg_url + ']')\r\n\r\n\t\tconst has_consumer = T.isObject(arg_consumer) && arg_consumer.is_service_consumer\r\n\t\tif (! has_consumer)\r\n\t\t{\r\n\t\t\tassert( T.isString(arg_svc_name), context + ':get_assets_url:bad svc name string')\r\n\r\n\t\t\tconst service =  this._runtime.deployed_local_topology.find_deployed_service(arg_svc_name)\r\n\t\t\tassert( T.isObject(service) && service.is_service, context + ':get_assets_script_url:bad service object')\r\n\r\n\t\t\tthis.assets_scripts_service_consumer = service.create_consumer()\r\n\t\t}\r\n\t\tassert( T.isObject(this.assets_scripts_service_consumer) && this.assets_scripts_service_consumer.is_service_consumer, context + ':get_assets_script_url:bad consumer object')\r\n\r\n\t\tconst service = this.assets_scripts_service_consumer.get_service()\r\n\t\tif (! service)\r\n\t\t{\r\n\t\t\tthis.error('no service found for images assets')\r\n\t\t\tthis.leave_group('get_assets_url')\r\n\t\t\treturn null\r\n\t\t}\r\n\r\n\t\tconst strategy = null\r\n\t\tconst provider = service.get_a_provider(strategy)\r\n\t\tlet url = this.assets_scripts_service_consumer.get_url_for(provider, { url: arg_url})\r\n\t\turl = this._runtime.context.get_url_with_credentials(url)\r\n\r\n\t\tthis.leave_group('get_assets_url')\r\n\t\treturn url\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get TopologyDefineApplication instance from registered application or from credentials.\r\n\t * \r\n\t * @param {Credentials} arg_credentials - Credentials instance (optional).\r\n\t * \r\n\t * @returns {TopologyDefineApplication} - request user credentials application.\r\n\t */\r\n\tget_topology_defined_application(arg_credentials)\r\n\t{\r\n\t\t// GET TOPOLOGY DEFINED APPLICATION\r\n\t\tif ( ! this._application )\r\n\t\t{\r\n\t\t\tif ( T.isObject(arg_credentials) && arg_credentials.is_credentials )\r\n\t\t\t{\r\n\t\t\t\tconst defined_topology = this._runtime.get_defined_topology()\r\n\t\t\t\tthis._application = defined_topology.find_application_with_credentials(arg_credentials)\r\n\t\t\t\t\r\n\t\t\t\tif(! this._application)\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.error(context + ':get_topology_defined_application:application not found')\r\n\t\t\t\t\treturn undefined\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this._application\r\n\t\t\t}\r\n\r\n\t\t\tconsole.error(context + ':get_topology_defined_application:bad credentials object')\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\treturn this._application\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/rendering/rendering_builder_assets.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1088,
    "kind": "variable",
    "name": "context",
    "memberof": "js/rendering/rendering_builder_assets.js",
    "static": true,
    "longname": "js/rendering/rendering_builder_assets.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/rendering_builder_assets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1089,
    "kind": "class",
    "name": "RenderingBuilderAssets",
    "memberof": "js/rendering/rendering_builder_assets.js",
    "static": true,
    "longname": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/rendering/rendering_builder_assets.js",
    "importStyle": "RenderingBuilderAssets",
    "description": "Rendering wrapper class.",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/loggable.js~Loggable"
    ]
  },
  {
    "__docId__": 1090,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets#constructor",
    "access": "public",
    "description": "Create a rendering wrapper class.\n\nAPI:\n\t\t->render_content(arg_title, arg_view, arg_menubar, arg_credentials):string - generate page HTML string.",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "RuntimeBase"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "runtime instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_assets_styles",
        "description": "application service name to provide style assets."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_assets_scripts",
        "description": "application service name to provide script assets."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_assets_img",
        "description": "application service name to provide image assets."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_assets_html",
        "description": "application service name to provide html assets."
      },
      {
        "nullable": null,
        "types": [
          "TopologyDefineApplication"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_application",
        "description": "application."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1091,
    "kind": "member",
    "name": "is_render",
    "memberof": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets",
    "static": false,
    "longname": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets#is_render",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1092,
    "kind": "member",
    "name": "_application",
    "memberof": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets",
    "static": false,
    "longname": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets#_application",
    "access": "private",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1093,
    "kind": "member",
    "name": "_runtime",
    "memberof": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets",
    "static": false,
    "longname": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets#_runtime",
    "access": "private",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1094,
    "kind": "method",
    "name": "set_assets_services_names",
    "memberof": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets#set_assets_services_names",
    "access": "public",
    "description": "Set assets services names.",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_assets_styles",
        "description": "styles assets service name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_assets_scripts",
        "description": "scripts assets service name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_assets_img",
        "description": "images assets service name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_assets_html",
        "description": "html assets service name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1095,
    "kind": "member",
    "name": "assets_styles_service_name",
    "memberof": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets",
    "static": false,
    "longname": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets#assets_styles_service_name",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1096,
    "kind": "member",
    "name": "assets_scripts_service_name",
    "memberof": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets",
    "static": false,
    "longname": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets#assets_scripts_service_name",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1097,
    "kind": "member",
    "name": "assets_images_service_name",
    "memberof": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets",
    "static": false,
    "longname": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets#assets_images_service_name",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1098,
    "kind": "member",
    "name": "assets_html_service_name",
    "memberof": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets",
    "static": false,
    "longname": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets#assets_html_service_name",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1099,
    "kind": "member",
    "name": "assets_styles_service_consumer",
    "memberof": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets",
    "static": false,
    "longname": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets#assets_styles_service_consumer",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1100,
    "kind": "member",
    "name": "assets_scripts_service_consumer",
    "memberof": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets",
    "static": false,
    "longname": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets#assets_scripts_service_consumer",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1101,
    "kind": "member",
    "name": "assets_images_service_consumer",
    "memberof": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets",
    "static": false,
    "longname": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets#assets_images_service_consumer",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1102,
    "kind": "member",
    "name": "assets_html_service_consumer",
    "memberof": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets",
    "static": false,
    "longname": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets#assets_html_service_consumer",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1103,
    "kind": "method",
    "name": "get_url_with_credentials",
    "memberof": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets#get_url_with_credentials",
    "access": "public",
    "description": "Get an url to server the given image asset.",
    "lineNumber": 84,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} absolute image asset url."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_url",
        "description": "image asset relative url."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "absolute image asset url."
    }
  },
  {
    "__docId__": 1104,
    "kind": "method",
    "name": "get_assets_image_url",
    "memberof": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets#get_assets_image_url",
    "access": "public",
    "description": "Get an url to server the given image asset.",
    "lineNumber": 101,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} absolute image asset url."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_url",
        "description": "image asset relative url."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "absolute image asset url."
    }
  },
  {
    "__docId__": 1105,
    "kind": "method",
    "name": "get_assets_html_url",
    "memberof": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets#get_assets_html_url",
    "access": "public",
    "description": "Get an url to server the given static html asset.",
    "lineNumber": 118,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} absolute html asset url."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_url",
        "description": "html asset relative url."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "absolute html asset url."
    }
  },
  {
    "__docId__": 1106,
    "kind": "method",
    "name": "get_assets_script_url",
    "memberof": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets#get_assets_script_url",
    "access": "public",
    "description": "Get an url to server the given script asset.",
    "lineNumber": 135,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} absolute script asset url."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_url",
        "description": "script asset relative url."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "absolute script asset url."
    }
  },
  {
    "__docId__": 1107,
    "kind": "method",
    "name": "get_assets_style_url",
    "memberof": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets#get_assets_style_url",
    "access": "public",
    "description": "Get an url to server the given style asset.",
    "lineNumber": 154,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} absolute script asset url."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_url",
        "description": "script asset relative url."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "absolute script asset url."
    }
  },
  {
    "__docId__": 1108,
    "kind": "method",
    "name": "get_assets_url",
    "memberof": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets#get_assets_url",
    "access": "public",
    "description": "Get an url to server the given image asset.",
    "lineNumber": 175,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} absolute image asset url."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_consumer",
        "description": "service consumer."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_name",
        "description": "service name or null."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_url",
        "description": "image asset relative url."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "absolute image asset url."
    }
  },
  {
    "__docId__": 1110,
    "kind": "method",
    "name": "get_topology_defined_application",
    "memberof": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_builder_assets.js~RenderingBuilderAssets#get_topology_defined_application",
    "access": "public",
    "description": "Get TopologyDefineApplication instance from registered application or from credentials.",
    "lineNumber": 220,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{TopologyDefineApplication} - request user credentials application."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Credentials"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "Credentials instance (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TopologyDefineApplication"
      ],
      "spread": false,
      "description": "request user credentials application."
    }
  },
  {
    "__docId__": 1112,
    "kind": "file",
    "name": "js/rendering/rendering_factory.js",
    "content": "// NPM IMPORTS\r\nimport VText from 'virtual-dom/vnode/vtext'\r\n\r\n// COMMON IMPORTS\r\nimport T               from '../utils/types'\r\nimport uid             from '../utils/uid'\r\nimport RenderingResult from './rendering_result'\r\n\r\n\r\nlet context = 'common/rendering/rendering_factory'\r\n\r\n\r\n\r\n/**\r\n * @file Rendering factory.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\n\r\n\r\nconst from_string = (arg_item, arg_rendering_context=undefined)=>{\r\n\tif (arg_rendering_context && arg_rendering_context.resolver && arg_rendering_context.resolver.find_resource_description)\r\n\t{\r\n\t\targ_rendering_context.trace_fn(context + ':from_string:search item [' + arg_item + '] in resolver [' + arg_rendering_context.resolver.get_name() + ']')\r\n\r\n\t\tconst r = arg_rendering_context.resolver.find_resource_description(arg_item)\r\n\t\tif (r)\r\n\t\t{\r\n\t\t\tconst res_settings = r\r\n\t\t\tres_settings.settings = res_settings.settings ? res_settings.settings : {}\r\n\t\t\tif ( ! res_settings.settings.id)\r\n\t\t\t{\r\n\t\t\t\tres_settings.settings.id = arg_item\r\n\t\t\t}\r\n\t\t\targ_rendering_context.trace_fn(res_settings, 'res_settings')\r\n\r\n\t\t\treturn from_object(res_settings, arg_rendering_context)\r\n\t\t}\r\n\r\n\t\targ_rendering_context.trace_fn(context + ':from_string:item [' + arg_item + '] NOT FOUND in defined application')\r\n\t}\r\n\t\r\n\r\n\tconst result = new RenderingResult()\r\n\tresult.add_vtree('tag_' + uid(), new VText(arg_item) )\r\n\treturn result\r\n}\r\n\r\n\r\n\r\nconst from_object = (arg_item, arg_rendering_context=undefined)=>{\r\n\r\n\tconst rendering = T.isString(arg_item.rendering) ? arg_item.rendering : undefined\r\n\tconst item_type = T.isString(arg_item.type)     ? arg_item.type.toLocaleLowerCase() : (T.isString(arg_item.class_name) ? arg_item.class_name.toLocaleLowerCase() : undefined)\r\n\tconst settings  = T.isObject(arg_item.settings) ? arg_item.settings : {}\r\n\tconst state     = T.isObject(arg_item.state)    ? arg_item.state : undefined\r\n\tconst children  = T.isObject(arg_item.children) ? arg_item.children : {}\r\n\tconst type      = rendering ? rendering : item_type\r\n\r\n\t// DEBUG\r\n\t// debugger\r\n\targ_rendering_context.trace_fn(arg_item, context + ':from_object:arg_item')\r\n\targ_rendering_context.trace_fn(type, context     + ':from_object:type')\r\n\t// arg_rendering_context.trace_fn(settings, context + ':from_object:settings')\r\n\t// arg_rendering_context.trace_fn(state, context    + ':from_object:state')\r\n\targ_rendering_context.trace_fn(children, context + ':from_object:children')\r\n\t\r\n\tsettings.children = children\r\n\r\n\tif (arg_rendering_context && arg_rendering_context.resolver && arg_rendering_context.resolver.find_rendering_function)\r\n\t{\r\n\t\targ_rendering_context.trace_fn(context + ':from_object:search rendering function into application plugins for ' + type)\r\n\r\n\t\tconst f = arg_rendering_context.resolver.find_rendering_function(type)\r\n\t\tif (f)\r\n\t\t{\r\n\t\t\targ_rendering_context.trace_fn(context + ':from_object:search rendering function into application plugins: FOUND')\r\n\r\n\t\t\treturn f(settings, state, arg_rendering_context)\r\n\t\t}\r\n\t}\r\n\r\n\targ_rendering_context.trace_fn(context + ':from_object:rendering function NOT FOUND')\r\n\r\n\tconst result = new RenderingResult()\r\n\tresult.add_vtree('tag_' + uid(), new VText( arg_item.toString() ) )\r\n\treturn result\r\n}\r\n\r\n\r\n\r\n/**\r\n * Create a RenderingResult with an item: string, function, view instance as object...\r\n * \r\n * @param {any} arg_item - item configuration.\r\n * @param {object} arg_rendering_context - rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }.\r\n * @param {object} arg_children - private view children settings\r\n * \r\n * @returns {RenderingResult}\r\n */\r\nexport default (arg_item, arg_rendering_context=undefined, arg_children={})=>{\r\n\targ_rendering_context.trace_fn = T.isFunction(arg_rendering_context.trace_fn) ? arg_rendering_context.trace_fn : ()=>{}\r\n\t\r\n\t// FORCE DEBUG\r\n\t// arg_rendering_context.trace_fn = console.log\r\n\r\n\targ_rendering_context.trace_fn('-------- rendering_factory:ENTER --------')\r\n\targ_rendering_context.trace_fn(arg_children, 'children')\r\n\targ_rendering_context.trace_fn(T.isString(arg_item) ? arg_item : 'not a string', 'item')\r\n\targ_rendering_context.trace_fn(arg_rendering_context.resolver, 'arg_rendering_context.resolver')\r\n\r\n\t// ITEM IS A NUMBER: a simple value to display\r\n\tif( T.isNumber(arg_item) )\r\n\t{\r\n\t\tconst result = new RenderingResult()\r\n\t\tresult.add_vtree('tag_' + uid(), new VText('' + arg_item) )\r\n\t\treturn result\r\n\t}\r\n\r\n\t// ITEM IS A STRING: a text or a view name\r\n\tif ( T.isObject(arg_item) && T.isString(arg_item.view) )\r\n\t{\r\n\t\targ_item = arg_item.view\r\n\t}\r\n\tif( T.isString(arg_item) )\r\n\t{\r\n\t\tif (arg_item in arg_children)\r\n\t\t{\r\n\t\t\t// console.log('rendering_factory:item [' + arg_item + '] found into children')\r\n\t\t\tconst res_settings = arg_children[arg_item]\r\n\t\t\tres_settings.settings = res_settings.settings ? res_settings.settings : {}\r\n\t\t\tif ( ! res_settings.settings.id)\r\n\t\t\t{\r\n\t\t\t\tres_settings.settings.id = arg_item\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn from_object(res_settings, arg_rendering_context)\r\n\t\t}\r\n\t\treturn from_string(arg_item, arg_rendering_context)\r\n\t}\r\n\r\n\t// ITEM IS AN OBJECT: a view config\r\n\tif( T.isObject(arg_item) )\r\n\t{\r\n\t\treturn from_object(arg_item, arg_rendering_context)\r\n\t}\r\n\r\n\t// console.log(arg_item, context + ':create:unknow item')\r\n\tconsole.error(context + ':unknow item with typeof:' + typeof arg_item)\r\n\t\r\n\tconst result = new RenderingResult()\r\n\tresult.add_vtree('tag_' + uid(), new VText( context + ':unknow item with typeof:' + typeof arg_item ) )\r\n\treturn result\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/rendering/rendering_factory.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1113,
    "kind": "variable",
    "name": "context",
    "memberof": "js/rendering/rendering_factory.js",
    "static": true,
    "longname": "js/rendering/rendering_factory.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/rendering_factory.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1114,
    "kind": "function",
    "name": "from_string",
    "memberof": "js/rendering/rendering_factory.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/rendering_factory.js~from_string",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/rendering_factory.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Rendering factory."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "params": [
      {
        "name": "arg_item",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_rendering_context",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "undefined",
        "defaultValue": "undefined"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1115,
    "kind": "function",
    "name": "from_object",
    "memberof": "js/rendering/rendering_factory.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/rendering_factory.js~from_object",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/rendering_factory.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "params": [
      {
        "name": "arg_item",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_rendering_context",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "undefined",
        "defaultValue": "undefined"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1116,
    "kind": "function",
    "name": "rendering_factory",
    "memberof": "js/rendering/rendering_factory.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/rendering_factory.js~rendering_factory",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/rendering/rendering_factory.js",
    "importStyle": "rendering_factory",
    "description": "Create a RenderingResult with an item: string, function, view instance as object...",
    "lineNumber": 103,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_item",
        "description": "item configuration."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_context",
        "description": "rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_children",
        "description": "private view children settings"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1117,
    "kind": "file",
    "name": "js/rendering/rendering_function.js",
    "content": "// NPM IMPORTS\r\n\r\n// COMMON IMPORTS\r\nimport T               from '../utils/types'\r\nimport RenderingResult from './rendering_result'\r\n\r\n\r\n// let context = 'common/rendering/rendering_function'\r\n\r\n\r\n\r\n/**\r\n * Rendering process with given state, produce a rendering result.\r\n * \r\n * @param {object} arg_settings - rendering item settings.\r\n * @param {object} arg_state - component state.\r\n * @param {object} arg_rendering_context - rendering context: { resolver:..., credentials:..., rendering_factory:... }.\r\n * @param {RenderingResult} arg_rendering_result - rendering result to update.\r\n * \r\n * @returns {RenderingResult} - updated Rendering result: VNode or Html text, headers.\r\n */\r\nexport default (arg_settings, arg_state={}, arg_rendering_context, arg_rendering_result)=>{\r\n\treturn T.isObject(arg_rendering_result) && arg_rendering_result.is_rendering_result ? arg_rendering_result : new RenderingResult()\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/rendering/rendering_function.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1118,
    "kind": "function",
    "name": "rendering_function",
    "memberof": "js/rendering/rendering_function.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/rendering_function.js~rendering_function",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/rendering/rendering_function.js",
    "importStyle": "rendering_function",
    "description": "Rendering process with given state, produce a rendering result.",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult} - updated Rendering result: VNode or Html text, headers."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "rendering item settings."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_context",
        "description": "rendering context: { resolver:..., credentials:..., rendering_factory:... }."
      },
      {
        "nullable": null,
        "types": [
          "RenderingResult"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_result",
        "description": "rendering result to update."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": "updated Rendering result: VNode or Html text, headers."
    }
  },
  {
    "__docId__": 1119,
    "kind": "file",
    "name": "js/rendering/rendering_normalize.js",
    "content": "// NPM IMPORTS\r\nimport _ from 'lodash'\r\n\r\n// COMMON IMPORTS\r\nimport T               from '../utils/types'\r\nimport uid             from '../utils/uid'\r\nimport RenderingResult from './rendering_result'\r\n\r\n\r\n// let context = 'common/rendering/rendering_normalize'\r\n\r\n\r\n\r\n/**\r\n * Normalize settings and state, helper function.\r\n * \r\n * @param {object} arg_default_settings - rendering default settings.\r\n * @param {object} arg_default_state - component default state.\r\n * @param {object} arg_settings - rendering item settings.\r\n * @param {object} arg_state - component state.\r\n * @param {object} arg_rendering_context - rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }.\r\n * @param {RenderingResult} arg_rendering_result - rendering result to update.\r\n * @param {string} arg_log_context - trace context.\r\n * \r\n * @returns {RenderingResult} - updated Rendering result: VNode or Html text, headers.\r\n */\r\nexport default (arg_default_settings, arg_default_state, arg_settings, arg_state, arg_rendering_context, arg_rendering_result, arg_log_context)=>{\r\n\t// NORMALIZE ARGUMENTS\r\n\tconst result   = T.isObject(arg_rendering_result) && arg_rendering_result.is_rendering_result ? arg_rendering_result : new RenderingResult()\r\n\tconst settings = _.merge({}, arg_default_settings, arg_settings)\r\n\tconst state    = _.merge({}, arg_default_state, arg_state)\r\n\t\r\n\tconst rendering_context = {\r\n\t\ttrace_fn: T.isFunction(arg_rendering_context.trace_fn) ? arg_rendering_context.trace_fn : ()=>{},\r\n\t\tcredentials:arg_rendering_context.credentials,\r\n\t\trendering_factory: T.isFunction(arg_rendering_context.rendering_factory) ? arg_rendering_context.rendering_factory : (v)=>v,\r\n\t\tresolver:arg_rendering_context.resolver\r\n\t}\r\n\r\n\t// SET ID\r\n\tif (! T.isString(settings.id) )\r\n\t{\r\n\t\tsettings.id = 'tag_' + uid()\r\n\t}\r\n\r\n\t// SET CHILDREN\r\n\tif (! T.isObject(settings.children) )\r\n\t{\r\n\t\tsettings.children = {}\r\n\t}\r\n\r\n\t// DEBUG\r\n\tif (arg_rendering_context && arg_rendering_context.trace_fn)\r\n\t{\r\n\t\targ_rendering_context.trace_fn(settings, arg_log_context + ':settings')\r\n\t\targ_rendering_context.trace_fn(state, arg_log_context + ':state')\r\n\t}\r\n\r\n\treturn {\r\n\t\tsettings:settings,\r\n\t\tstate:state,\r\n\t\trendering_context:rendering_context,\r\n\t\trendering_result:result\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/rendering/rendering_normalize.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1120,
    "kind": "function",
    "name": "rendering_normalize",
    "memberof": "js/rendering/rendering_normalize.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/rendering_normalize.js~rendering_normalize",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/rendering/rendering_normalize.js",
    "importStyle": "rendering_normalize",
    "description": "Normalize settings and state, helper function.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult} - updated Rendering result: VNode or Html text, headers."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_default_settings",
        "description": "rendering default settings."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_default_state",
        "description": "component default state."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "rendering item settings."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_context",
        "description": "rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }."
      },
      {
        "nullable": null,
        "types": [
          "RenderingResult"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_result",
        "description": "rendering result to update."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": "updated Rendering result: VNode or Html text, headers."
    }
  },
  {
    "__docId__": 1121,
    "kind": "file",
    "name": "js/rendering/rendering_resolver.js",
    "content": "// NPM IMPORTS\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\n\r\n\r\n// const context = 'common/rendering/rendering_resolver'\r\n\r\n\r\n\r\n/**\r\n * Rendering resource and function resolver class.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nclass RenderingResolver\r\n{\r\n\t/**\r\n\t * RenderingResolver constructor.\r\n\t * \r\n\t * @param {string} arg_name - trace name.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_name='no name')\r\n\t{\r\n\t\tthis._name = arg_name\r\n\t\tthis._find_resource = undefined\r\n\t\tthis._find_function = undefined\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get name (only for tracing).\r\n\t * \r\n\t * returns {string}\r\n\t */\r\n\tget_name()\r\n\t{\r\n\t\treturn this._name\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Find a resource description.\r\n\t * \r\n\t * @param {string} arg_name - resource name.\r\n\t * \r\n\t * @returns {object|undefined} - resource description or undefined if not found.\r\n\t */\r\n\tfind_resource_description(arg_name)\r\n\t{\r\n\t\treturn T.isFunction(this._find_resource) ? this._find_resource(arg_name) : undefined\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Find a rendering function.\r\n\t * \r\n\t * @param {string} arg_type - resource type.\r\n\t * \r\n\t * @returns {function|undefined} - resource rendering function or undefined if not found.\r\n\t */\r\n\tfind_rendering_function(arg_name)\r\n\t{\r\n\t\treturn T.isFunction(this._find_function) ? this._find_function(arg_name) : undefined\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport default class RenderingResolverBuilder\r\n{\r\n\t/**\r\n\t * Instance building static method from Topology define application instance.\r\n\t * @static\r\n\t * \r\n\t * @param {string} arg_name - trace name.\r\n\t * @param {TopologyDefinedApplication} arg_app - Topology define application instance.\r\n\t * \r\n\t * @returns {RenderingResolver} - new RenderingResolver instance\r\n\t */\r\n\tstatic from_topology(arg_name, arg_app)\r\n\t{\r\n\t\tconst resolver = new RenderingResolver(arg_name)\r\n\r\n\t\tif ( T.isObject(arg_app) && arg_app.is_topology_define_application)\r\n\t\t{\r\n\t\t\tresolver._find_resource = (name)=>{\r\n\t\t\t\t// console.log('RenderingResolver:find_rendering_function:name=' + name)\r\n\r\n\t\t\t\tconst r = arg_app.find_resource(name)\r\n\t\t\t\treturn r ? r.get_settings_js() : undefined\r\n\t\t\t}\r\n\t\t\tresolver._find_function = (type)=>{\r\n\t\t\t\t// console.log('RenderingResolver:find_rendering_function:type=' + type)\r\n\r\n\t\t\t\treturn arg_app.find_rendering_function(type)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn resolver\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Instance building static method from renring resolver functions.\r\n\t * @static\r\n\t * \r\n\t * @param {string} arg_name - trace name.\r\n\t * @param {Function} arg_resource_resolver - resource description resolver function.\r\n\t * @param {Function} arg_function_resolver - rendering function resolver function.\r\n\t * \r\n\t * @returns {RenderingResolver} - new RenderingResolver instance\r\n\t */\r\n\tstatic from_resolvers(arg_name, arg_resource_resolver, arg_function_resolver)\r\n\t{\r\n\t\tconst resolver = new RenderingResolver(arg_name)\r\n\r\n\t\tif ( T.isFunction(arg_resource_resolver) )\r\n\t\t{\r\n\t\t\tresolver._find_resource = (name)=>arg_resource_resolver(name)\r\n\t\t}\r\n\r\n\t\tif ( T.isFunction(arg_function_resolver) )\r\n\t\t{\r\n\t\t\tresolver._find_function = (type)=>arg_function_resolver(type)\r\n\t\t}\r\n\r\n\t\treturn resolver\r\n\t}\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/rendering/rendering_resolver.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1122,
    "kind": "class",
    "name": "RenderingResolver",
    "memberof": "js/rendering/rendering_resolver.js",
    "static": true,
    "longname": "js/rendering/rendering_resolver.js~RenderingResolver",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/rendering_resolver.js",
    "importStyle": null,
    "description": "Rendering resource and function resolver class.",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 1123,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/rendering/rendering_resolver.js~RenderingResolver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_resolver.js~RenderingResolver#constructor",
    "access": "public",
    "description": "RenderingResolver constructor.",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "trace name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1124,
    "kind": "member",
    "name": "_name",
    "memberof": "js/rendering/rendering_resolver.js~RenderingResolver",
    "static": false,
    "longname": "js/rendering/rendering_resolver.js~RenderingResolver#_name",
    "access": "private",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1125,
    "kind": "member",
    "name": "_find_resource",
    "memberof": "js/rendering/rendering_resolver.js~RenderingResolver",
    "static": false,
    "longname": "js/rendering/rendering_resolver.js~RenderingResolver#_find_resource",
    "access": "private",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1126,
    "kind": "member",
    "name": "_find_function",
    "memberof": "js/rendering/rendering_resolver.js~RenderingResolver",
    "static": false,
    "longname": "js/rendering/rendering_resolver.js~RenderingResolver#_find_function",
    "access": "private",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1127,
    "kind": "method",
    "name": "get_name",
    "memberof": "js/rendering/rendering_resolver.js~RenderingResolver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_resolver.js~RenderingResolver#get_name",
    "access": "public",
    "description": "Get name (only for tracing).\n\nreturns {string}",
    "lineNumber": 40,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1128,
    "kind": "method",
    "name": "find_resource_description",
    "memberof": "js/rendering/rendering_resolver.js~RenderingResolver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_resolver.js~RenderingResolver#find_resource_description",
    "access": "public",
    "description": "Find a resource description.",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object|undefined} - resource description or undefined if not found."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "resource name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object",
        "undefined"
      ],
      "spread": false,
      "description": "resource description or undefined if not found."
    }
  },
  {
    "__docId__": 1129,
    "kind": "method",
    "name": "find_rendering_function",
    "memberof": "js/rendering/rendering_resolver.js~RenderingResolver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_resolver.js~RenderingResolver#find_rendering_function",
    "access": "public",
    "description": "Find a rendering function.",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function|undefined} - resource rendering function or undefined if not found."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_type",
        "description": "resource type."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function",
        "undefined"
      ],
      "spread": false,
      "description": "resource rendering function or undefined if not found."
    }
  },
  {
    "__docId__": 1130,
    "kind": "class",
    "name": "RenderingResolverBuilder",
    "memberof": "js/rendering/rendering_resolver.js",
    "static": true,
    "longname": "js/rendering/rendering_resolver.js~RenderingResolverBuilder",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/rendering/rendering_resolver.js",
    "importStyle": "RenderingResolverBuilder",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 1131,
    "kind": "method",
    "name": "from_topology",
    "memberof": "js/rendering/rendering_resolver.js~RenderingResolverBuilder",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/rendering_resolver.js~RenderingResolverBuilder.from_topology",
    "access": "public",
    "description": "Instance building static method from Topology define application instance.",
    "lineNumber": 87,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResolver} - new RenderingResolver instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "trace name."
      },
      {
        "nullable": null,
        "types": [
          "TopologyDefinedApplication"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_app",
        "description": "Topology define application instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResolver"
      ],
      "spread": false,
      "description": "new RenderingResolver instance"
    }
  },
  {
    "__docId__": 1132,
    "kind": "method",
    "name": "from_resolvers",
    "memberof": "js/rendering/rendering_resolver.js~RenderingResolverBuilder",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/rendering_resolver.js~RenderingResolverBuilder.from_resolvers",
    "access": "public",
    "description": "Instance building static method from renring resolver functions.",
    "lineNumber": 121,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResolver} - new RenderingResolver instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "trace name."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_resource_resolver",
        "description": "resource description resolver function."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_function_resolver",
        "description": "rendering function resolver function."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResolver"
      ],
      "spread": false,
      "description": "new RenderingResolver instance"
    }
  },
  {
    "__docId__": 1133,
    "kind": "file",
    "name": "js/rendering/rendering_result.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport _ from 'lodash'\r\nimport VNode from 'virtual-dom/vnode/vnode'\r\nimport VText from 'virtual-dom/vnode/vtext'\r\nimport html_to_vdom from 'html-to-vdom'\r\nimport vdom_as_json from 'vdom-as-json'\r\nimport create_element from 'virtual-dom/create-element'\r\nconst vdom_to_json = vdom_as_json.toJson\r\nconst vdom_from_json = vdom_as_json.fromJson\r\n\r\n// COMMON IMPORTS\r\nimport T            from '../utils/types'\r\nimport {is_browser} from '../utils/is_browser'\r\nimport uid          from '../utils/uid'\r\n\r\n\r\nlet context = 'common/rendering/rendering_result'\r\n\r\nconst convertHTML = html_to_vdom(\r\n\t{\r\n\t\tVNode: VNode,\r\n\t\tVText: VText\r\n\t}\r\n)\r\n\r\n\r\n\r\n/**\r\n * @file RenderingResult class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class RenderingResult\r\n{\r\n\t/**\r\n\t * Create RenderingResult instance.\r\n\t * \r\n\t * API:\r\n\t * \t\t->constructor():nothing - create an empty rendering result instance.\r\n\t * \t\t\r\n\t * \t\t->add_result(arg_result, arg_merge_vnodes=true):nothing - merge RenderingResult instances.\r\n\t * \r\n\t * \t\t->add_html(arg_tag_id, arg_html):nothing - take Html text and convert it to a virtual tree.\r\n\t * \t\t->add_vtree(arg_tag_id, arg_vtree):nothing - add a virtual tree.\r\n\t * \t\t->remove_vtree(arg_tag_id):nothing - remove a virtual tree.\r\n\t * \r\n\t * \t\t->get_vtree_json(arg_tag_id):VTree - get an existing VTree as Json.\r\n\t * \t\t->get_vtree(arg_id):VTree - get an existing VTree instance.\r\n\t * \t\t->get_html(arg_id)\r\n\t * \t\t\r\n\t * \t\t->get_final_vtree(arg_final_id, arg_parent_result):VNode - get final VTree.\r\n\t * \t\t->get_final_html(arg_final_id, arg_parent_result):string - get Html code for an existing vtree.\r\n\t * \r\n\t * \t\t->set_headers(arg_headers)\r\n\t * \r\n\t * \t\t->add_head_scripts_urls(arg_urls)\r\n\t * \t\t->add_head_scripts_tags(arg_tags)\r\n\t * \r\n\t * \t\t->add_body_scripts_urls(arg_urls)\r\n\t * \t\t->add_body_scripts_tags(arg_tags)\r\n\t * \r\n\t * \t\t->add_head_styles_urls(arg_tags)\r\n\t * \t\t->add_head_styles_tags(arg_tags)\r\n\t * \r\n     * @returns {nothing}\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.is_rendering_result = true\r\n\r\n\t\tthis.uid = 'RR_' + uid()\r\n\t\tthis.vtrees = {}\r\n\r\n\t\tthis.headers = []\r\n\r\n\t\tthis.head_scripts_urls = []\r\n\t\tthis.head_scripts_tags = []\r\n\t\tthis.body_scripts_urls = []\r\n\t\tthis.body_scripts_tags = []\r\n\r\n\t\tthis.head_styles_urls = []\r\n\t\tthis.head_styles_tags = []\r\n\t\tthis.body_styles_urls = []\r\n\t\tthis.body_styles_tags = []\r\n\r\n\t\tthis.head_links_urls = []\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Merge RenderingResult instances.\r\n\t * \r\n\t * @param {RenderingResult} arg_result - rendering result to add to this result.\r\n\t * @param {boolean} arg_merge_vnodes - flag to merge or not vnodes (default:true) (optional)\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tadd_result(arg_result, arg_merge_vnodes=true)\r\n\t{\r\n\t\t// console.log(context + ':add_result [' + this.uid + ']:merge=' + (arg_merge_vnodes ? 'y' : 'n'), this.body_scripts_urls.length, arg_result.body_scripts_urls.length)\r\n\r\n\t\tif (arg_merge_vnodes)\r\n\t\t{\r\n\t\t\tthis.vtrees = Object.assign(this.vtrees, arg_result.vtrees)\r\n\t\t}\r\n\t\t\r\n\t\tconst asset_compare = _.isEqual\r\n\r\n\t\tthis.head_scripts_urls = _.uniqWith( _.concat(this.head_scripts_urls, arg_result.head_scripts_urls), asset_compare )\r\n\t\tthis.head_scripts_tags = _.uniqWith( _.concat(this.head_scripts_tags, arg_result.head_scripts_tags), asset_compare )\r\n\t\tthis.body_scripts_urls = _.uniqWith( _.concat(this.body_scripts_urls, arg_result.body_scripts_urls), asset_compare )\r\n\t\tthis.body_scripts_tags = _.uniqWith( _.concat(this.body_scripts_tags, arg_result.body_scripts_tags), asset_compare )\r\n\r\n\t\tthis.head_styles_urls  = _.uniqWith( _.concat(this.head_styles_urls,  arg_result.head_styles_urls),  asset_compare )\r\n\t\tthis.head_styles_tags  = _.uniqWith( _.concat(this.head_styles_tags,  arg_result.head_styles_tags),  asset_compare )\r\n\t\tthis.body_styles_urls  = _.uniqWith( _.concat(this.body_styles_urls,  arg_result.body_styles_urls),  asset_compare )\r\n\t\tthis.body_styles_tags  = _.uniqWith( _.concat(this.body_styles_tags,  arg_result.body_styles_tags),  asset_compare )\r\n\r\n\t\tthis.head_links_urls   = _.uniqWith( _.concat(this.head_links_urls,   arg_result.head_links_urls),   asset_compare )\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Add Html tag.\r\n\t * \r\n\t * @param {string} arg_tag_id - tag id string.\r\n\t * @param {string} arg_html - Html string.\r\n\t * \r\n\t * @returns {nothing}.\r\n\t */\r\n\tadd_html(arg_tag_id, arg_html)\r\n\t{\r\n\t\tassert( T.isString(arg_tag_id) && arg_tag_id.length > 0, context + ':add_html:bad tag id string')\r\n\t\tassert( T.isString(arg_html), context + ':set_html:bad html string')\r\n\t\tthis.vtrees[arg_tag_id] = vdom_to_json( convertHTML(arg_html) )\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Add a VTree instance.\r\n\t * \r\n\t * @param {string} arg_tag_id - tag id string.\r\n\t * @param {VNode} arg_vtree - virtual-dom virtual tree.\r\n\t * \r\n\t * @returns {nothing}.\r\n\t */\r\n\tadd_vtree(arg_tag_id, arg_vtree)\r\n\t{\r\n\t\tassert( T.isString(arg_tag_id) && arg_tag_id.length > 0, context + ':add_vtree:bad tag id string')\r\n\t\tassert( T.isObject(arg_vtree), context + ':add_vtree:bad vtree object')\r\n\t\tthis.vtrees[arg_tag_id] = arg_vtree\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Remove a VTree instance.\r\n\t * \r\n\t * @param {string} arg_tag_id - tag id string.\r\n\t * \r\n\t * @returns {nothing}.\r\n\t */\r\n\tremove_vtree(arg_tag_id)\r\n\t{\r\n\t\tassert( T.isString(arg_tag_id) && arg_tag_id.length > 0, context + ':add_vtree:bad tag id string')\r\n\t\tdelete this.vtrees[arg_tag_id]\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Convert all VNode to json objects.\r\n\t * \r\n\t * @returns {RenderingResult}\r\n\t */\r\n\tconvert_to_json()\r\n\t{\r\n\t\tlet i = 0\r\n\t\tconst keys = Object.keys(this.vtrees)\r\n\t\tconst l = keys.length\r\n\t\tfor( ; i < l ; i++)\r\n\t\t{\r\n\t\t\tconst key = keys[i]\r\n\t\t\tthis.vtrees[key] = vdom_to_json( this.vtrees[key] ) \r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Convert all VNode to json objects.\r\n\t * \r\n\t * @returns {RenderingResult}\r\n\t */\r\n\tconvert_from_json()\r\n\t{\r\n\t\tlet i = 0\r\n\t\tconst keys = Object.keys(this.vtrees)\r\n\t\tconst l = keys.length\r\n\t\tfor( ; i < l ; i++)\r\n\t\t{\r\n\t\t\tconst key = keys[i]\r\n\t\t\tthis.vtrees[key] = vdom_from_json( this.vtrees[key] ) \r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get an existing VTree as Json.\r\n\t * \r\n\t * @param {string} arg_tag_id - tag id string.\r\n\t * @param {VNode} arg_vtree - virtual-dom virtual tree.\r\n\t * \r\n\t * @returns {nothing}.\r\n\t */\r\n\tget_vtree_json(arg_tag_id)\r\n\t{\r\n\t\tconst vtree = this.get_vtree(arg_tag_id)\r\n\t\tif (vtree)\r\n\t\t{\r\n\t\t\treturn vdom_to_json(vtree)\r\n\t\t}\r\n\t\treturn undefined\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get existing VTree instance.\r\n\t * \r\n\t * @param {string} arg_id - element id.\r\n\t * \r\n\t * @returns {VTree}\r\n\t */\r\n\tget_vtree(arg_id)\r\n\t{\r\n\t\treturn this.vtrees[arg_id]\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get Html code for an existing vtree.\r\n\t * \r\n\t * @param {string} arg_id - element id.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_html(arg_id)\r\n\t{\r\n\t\tconst vtree = this.get_vtree(arg_id)\r\n\t\tif (! vtree)\r\n\t\t{\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\ttry\r\n\t\t{\r\n\t\t\tconst e = create_element(vtree)\r\n\t\t\tif (e)\r\n\t\t\t{\r\n\t\t\t\treturn is_browser() ? e.innerHTML : e.toString()\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(e)\r\n\t\t{\r\n\t\t\tconsole.error(context + ':', e)\r\n\t\t}\r\n\t\treturn undefined\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get final VTree.\r\n\t * \r\n\t * @param {string|undefined} arg_final_id - final tree id (optional).\r\n\t * @param {RenderingResult} arg_parent_result - parent result to merge assets into (optional).\r\n\t * \r\n\t * @returns {VNode}\r\n\t */\r\n\tget_final_vtree(arg_final_id, arg_parent_result)\r\n\t{\r\n\t\t// MERGE THIS ASSETS INTO PARENT RESULT ASSETS\r\n\t\tif ( T.isObject(arg_parent_result) && arg_parent_result.is_rendering_result)\r\n\t\t{\r\n\t\t\targ_parent_result.add_result(this, false)\r\n\t\t}\r\n\r\n\t\t// NO VNODE\r\n\t\tconst size = _.size(this.vtrees)\r\n\t\tif (size == 0)\r\n\t\t{\r\n\t\t\treturn new VText('')\r\n\t\t}\r\n\r\n\t\t// ONLY ONE VNODE\r\n\t\tif (size == 1)\r\n\t\t{\r\n\t\t\tconst trees = _.toArray(this.vtrees)\r\n\t\t\treturn trees[0]\r\n\t\t}\r\n\r\n\t\t// MANY VNODES\r\n\t\tconst settings = T.isString(arg_final_id) ? { id:arg_final_id } : undefined\r\n\t\treturn new VNode('DIV', settings, _.toArray(this.vtrees), 'id', undefined)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get Html code for an existing vtree.\r\n\t * \r\n\t * @param {string|undefined} arg_final_id - final tree id (optional).\r\n\t * @param {RenderingResult} arg_parent_result - parent result to merge assets into (optional).\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_final_html(arg_final_id, arg_parent_result)\r\n\t{\r\n\t\tconst vtree = this.get_final_vtree(arg_final_id, arg_parent_result)\r\n\t\tif (! vtree)\r\n\t\t{\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\ttry\r\n\t\t{\r\n\t\t\tconst e = create_element(vtree)\r\n\t\t\tif (e)\r\n\t\t\t{\r\n\t\t\t\treturn is_browser() ? e.innerHTML : e.toString()\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(e)\r\n\t\t{\r\n\t\t\tconsole.error(context + ':', e)\r\n\t\t}\r\n\t\treturn undefined\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Set headers.\r\n\t * \r\n\t * @param {array} set_headers - headers strings array.\r\n\t * \r\n\t * @returns {nothing}.\r\n\t */\r\n\tset_headers(arg_headers)\r\n\t{\r\n\t\tassert( T.isArray(arg_headers), context + ':set_headers:bad headers array')\r\n\t\tthis.headers = arg_headers\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Add header scripts urls.\r\n\t * \r\n\t * @param {array} arg_urls - scripts urls strings array.\r\n\t * \r\n\t * @returns {nothing}.\r\n\t */\r\n\tadd_head_scripts_urls(arg_urls=[])\r\n\t{\r\n\t\tassert( T.isArray(arg_urls), context + ':add_head_scripts_urls:bad head scripts urls array')\r\n\t\tthis.head_scripts_urls = _.concat(this.head_scripts_urls, arg_urls)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Add header scripts tags.\r\n\t * \r\n\t * @param {array} arg_tags - scripts tags strings array.\r\n\t * \r\n\t * @returns {nothing}.\r\n\t */\r\n\tadd_head_scripts_tags(arg_tags=[])\r\n\t{\r\n\t\tassert( T.isArray(arg_tags), context + ':add_head_scripts_tags:bad head scripts tags array')\r\n\t\tthis.head_scripts_tags = _.concat(this.head_scripts_tag, arg_tags)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Add body scripts urls.\r\n\t * \r\n\t * @param {array} arg_urls - scripts urls strings array.\r\n\t * \r\n\t * @returns {nothing}.\r\n\t */\r\n\tadd_body_scripts_urls(arg_urls=[])\r\n\t{\r\n\t\tassert( T.isArray(arg_urls), context + ':add_body_scripts_urls:bad body scripts urls array')\r\n\t\tthis.body_scripts_urls = _.concat(this.body_scripts_urls, arg_urls)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Add body scripts tags.\r\n\t * \r\n\t * @param {array} arg_tags - scripts tags strings array.\r\n\t * \r\n\t * @returns {nothing}.\r\n\t */\r\n\tadd_body_scripts_tags(arg_tags=[])\r\n\t{\r\n\t\tassert( T.isArray(arg_tags), context + ':add_body_scripts_tags:bad body scripts tags array')\r\n\t\tthis.body_scripts_tags = _.concat(this.body_scripts_tags, arg_tags)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Add header styles urls.\r\n\t * \r\n\t * @param {array} arg_urls - styles urls strings array.\r\n\t * \r\n\t * @returns {nothing}.\r\n\t */\r\n\tadd_head_styles_urls(arg_urls=[])\r\n\t{\r\n\t\tassert( T.isArray(arg_urls), context + ':add_head_styles_urls:bad head styles urls array')\r\n\t\tthis.head_styles_urls = _.concat(this.head_styles_urls, arg_urls)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Add header styles tags.\r\n\t * \r\n\t * @param {array} arg_tags - styles tags strings array.\r\n\t * \r\n\t * @returns {nothing}.\r\n\t */\r\n\tadd_head_styles_tags(arg_tags=[])\r\n\t{\r\n\t\tassert( T.isArray(arg_tags), context + ':add_head_styles_tags:bad head styles tags array')\r\n\t\tthis.head_styles_tags = _.concat(this.head_styles_tags, arg_tags)\r\n\t}\r\n}\r\n\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/rendering/rendering_result.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1134,
    "kind": "variable",
    "name": "vdom_to_json",
    "memberof": "js/rendering/rendering_result.js",
    "static": true,
    "longname": "js/rendering/rendering_result.js~vdom_to_json",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/rendering_result.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1135,
    "kind": "variable",
    "name": "vdom_from_json",
    "memberof": "js/rendering/rendering_result.js",
    "static": true,
    "longname": "js/rendering/rendering_result.js~vdom_from_json",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/rendering_result.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1136,
    "kind": "variable",
    "name": "context",
    "memberof": "js/rendering/rendering_result.js",
    "static": true,
    "longname": "js/rendering/rendering_result.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/rendering_result.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1137,
    "kind": "variable",
    "name": "convertHTML",
    "memberof": "js/rendering/rendering_result.js",
    "static": true,
    "longname": "js/rendering/rendering_result.js~convertHTML",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/rendering_result.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1138,
    "kind": "class",
    "name": "RenderingResult",
    "memberof": "js/rendering/rendering_result.js",
    "static": true,
    "longname": "js/rendering/rendering_result.js~RenderingResult",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/rendering/rendering_result.js",
    "importStyle": "RenderingResult",
    "description": "",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "RenderingResult class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 1139,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#constructor",
    "access": "public",
    "description": "Create RenderingResult instance.\n\nAPI:\n\t\t->constructor():nothing - create an empty rendering result instance.\n\t\t\n\t\t->add_result(arg_result, arg_merge_vnodes=true):nothing - merge RenderingResult instances.\n\n\t\t->add_html(arg_tag_id, arg_html):nothing - take Html text and convert it to a virtual tree.\n\t\t->add_vtree(arg_tag_id, arg_vtree):nothing - add a virtual tree.\n\t\t->remove_vtree(arg_tag_id):nothing - remove a virtual tree.\n\n\t\t->get_vtree_json(arg_tag_id):VTree - get an existing VTree as Json.\n\t\t->get_vtree(arg_id):VTree - get an existing VTree instance.\n\t\t->get_html(arg_id)\n\t\t\n\t\t->get_final_vtree(arg_final_id, arg_parent_result):VNode - get final VTree.\n\t\t->get_final_html(arg_final_id, arg_parent_result):string - get Html code for an existing vtree.\n\n\t\t->set_headers(arg_headers)\n\n\t\t->add_head_scripts_urls(arg_urls)\n\t\t->add_head_scripts_tags(arg_tags)\n\n\t\t->add_body_scripts_urls(arg_urls)\n\t\t->add_body_scripts_tags(arg_tags)\n\n\t\t->add_head_styles_urls(arg_tags)\n\t\t->add_head_styles_tags(arg_tags)",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1140,
    "kind": "member",
    "name": "is_rendering_result",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#is_rendering_result",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1141,
    "kind": "member",
    "name": "uid",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#uid",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1142,
    "kind": "member",
    "name": "vtrees",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#vtrees",
    "access": "public",
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 1143,
    "kind": "member",
    "name": "headers",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#headers",
    "access": "public",
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 1144,
    "kind": "member",
    "name": "head_scripts_urls",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#head_scripts_urls",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 1145,
    "kind": "member",
    "name": "head_scripts_tags",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#head_scripts_tags",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 1146,
    "kind": "member",
    "name": "body_scripts_urls",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#body_scripts_urls",
    "access": "public",
    "description": null,
    "lineNumber": 81,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 1147,
    "kind": "member",
    "name": "body_scripts_tags",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#body_scripts_tags",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 1148,
    "kind": "member",
    "name": "head_styles_urls",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#head_styles_urls",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 1149,
    "kind": "member",
    "name": "head_styles_tags",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#head_styles_tags",
    "access": "public",
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 1150,
    "kind": "member",
    "name": "body_styles_urls",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#body_styles_urls",
    "access": "public",
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 1151,
    "kind": "member",
    "name": "body_styles_tags",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#body_styles_tags",
    "access": "public",
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 1152,
    "kind": "member",
    "name": "head_links_urls",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#head_links_urls",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 1153,
    "kind": "method",
    "name": "add_result",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#add_result",
    "access": "public",
    "description": "Merge RenderingResult instances.",
    "lineNumber": 102,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "RenderingResult"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_result",
        "description": "rendering result to add to this result."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_merge_vnodes",
        "description": "flag to merge or not vnodes (default:true) (optional)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1164,
    "kind": "method",
    "name": "add_html",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#add_html",
    "access": "public",
    "description": "Add Html tag.",
    "lineNumber": 136,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_tag_id",
        "description": "tag id string."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_html",
        "description": "Html string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "{nothing}."
    }
  },
  {
    "__docId__": 1165,
    "kind": "method",
    "name": "add_vtree",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#add_vtree",
    "access": "public",
    "description": "Add a VTree instance.",
    "lineNumber": 153,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_tag_id",
        "description": "tag id string."
      },
      {
        "nullable": null,
        "types": [
          "VNode"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_vtree",
        "description": "virtual-dom virtual tree."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "{nothing}."
    }
  },
  {
    "__docId__": 1166,
    "kind": "method",
    "name": "remove_vtree",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#remove_vtree",
    "access": "public",
    "description": "Remove a VTree instance.",
    "lineNumber": 169,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_tag_id",
        "description": "tag id string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "{nothing}."
    }
  },
  {
    "__docId__": 1167,
    "kind": "method",
    "name": "convert_to_json",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#convert_to_json",
    "access": "public",
    "description": "Convert all VNode to json objects.",
    "lineNumber": 182,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1168,
    "kind": "method",
    "name": "convert_from_json",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#convert_from_json",
    "access": "public",
    "description": "Convert all VNode to json objects.",
    "lineNumber": 202,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1169,
    "kind": "method",
    "name": "get_vtree_json",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#get_vtree_json",
    "access": "public",
    "description": "Get an existing VTree as Json.",
    "lineNumber": 225,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_tag_id",
        "description": "tag id string."
      },
      {
        "nullable": null,
        "types": [
          "VNode"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_vtree",
        "description": "virtual-dom virtual tree."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "{nothing}."
    }
  },
  {
    "__docId__": 1170,
    "kind": "method",
    "name": "get_vtree",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#get_vtree",
    "access": "public",
    "description": "Get existing VTree instance.",
    "lineNumber": 244,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{VTree}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_id",
        "description": "element id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "VTree"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1171,
    "kind": "method",
    "name": "get_html",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#get_html",
    "access": "public",
    "description": "Get Html code for an existing vtree.",
    "lineNumber": 258,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_id",
        "description": "element id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1172,
    "kind": "method",
    "name": "get_final_vtree",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#get_final_vtree",
    "access": "public",
    "description": "Get final VTree.",
    "lineNumber": 291,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{VNode}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_final_id",
        "description": "final tree id (optional)."
      },
      {
        "nullable": null,
        "types": [
          "RenderingResult"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_parent_result",
        "description": "parent result to merge assets into (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "VNode"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1173,
    "kind": "method",
    "name": "get_final_html",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#get_final_html",
    "access": "public",
    "description": "Get Html code for an existing vtree.",
    "lineNumber": 328,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_final_id",
        "description": "final tree id (optional)."
      },
      {
        "nullable": null,
        "types": [
          "RenderingResult"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_parent_result",
        "description": "parent result to merge assets into (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1174,
    "kind": "method",
    "name": "set_headers",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#set_headers",
    "access": "public",
    "description": "Set headers.",
    "lineNumber": 360,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "set_headers",
        "description": "headers strings array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "{nothing}."
    }
  },
  {
    "__docId__": 1176,
    "kind": "method",
    "name": "add_head_scripts_urls",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#add_head_scripts_urls",
    "access": "public",
    "description": "Add header scripts urls.",
    "lineNumber": 375,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_urls",
        "description": "scripts urls strings array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "{nothing}."
    }
  },
  {
    "__docId__": 1178,
    "kind": "method",
    "name": "add_head_scripts_tags",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#add_head_scripts_tags",
    "access": "public",
    "description": "Add header scripts tags.",
    "lineNumber": 390,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_tags",
        "description": "scripts tags strings array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "{nothing}."
    }
  },
  {
    "__docId__": 1180,
    "kind": "method",
    "name": "add_body_scripts_urls",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#add_body_scripts_urls",
    "access": "public",
    "description": "Add body scripts urls.",
    "lineNumber": 405,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_urls",
        "description": "scripts urls strings array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "{nothing}."
    }
  },
  {
    "__docId__": 1182,
    "kind": "method",
    "name": "add_body_scripts_tags",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#add_body_scripts_tags",
    "access": "public",
    "description": "Add body scripts tags.",
    "lineNumber": 420,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_tags",
        "description": "scripts tags strings array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "{nothing}."
    }
  },
  {
    "__docId__": 1184,
    "kind": "method",
    "name": "add_head_styles_urls",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#add_head_styles_urls",
    "access": "public",
    "description": "Add header styles urls.",
    "lineNumber": 435,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_urls",
        "description": "styles urls strings array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "{nothing}."
    }
  },
  {
    "__docId__": 1186,
    "kind": "method",
    "name": "add_head_styles_tags",
    "memberof": "js/rendering/rendering_result.js~RenderingResult",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/rendering/rendering_result.js~RenderingResult#add_head_styles_tags",
    "access": "public",
    "description": "Add header styles tags.",
    "lineNumber": 450,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_tags",
        "description": "styles tags strings array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "{nothing}."
    }
  },
  {
    "__docId__": 1188,
    "kind": "file",
    "name": "js/rendering/script.js",
    "content": "// NPM IMPORTS\r\nimport h from 'virtual-dom/h'\r\n\r\n// COMMON IMPORTS\r\nimport T                   from '../utils/types'\r\nimport rendering_normalize from './rendering_normalize'\r\n\r\n\r\nlet context = 'common/rendering/script'\r\n\r\n\r\n\r\n// DEFAULT STATE\r\nconst default_state = {\r\n\tcode:undefined\r\n}\r\n\r\n// DEFAULT SETTINGS\r\nconst default_settings = {\r\n\tlanguage:'javascript',\r\n\tid:undefined\r\n}\r\n\r\n\r\n\r\n/**\r\n * Script rendering with given state, produce a rendering result.\r\n * \r\n * @param {object} arg_settings - rendering item settings.\r\n * @param {object} arg_state - component state.\r\n * @param {object} arg_rendering_context - rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }.\r\n * @param {RenderingResult} arg_rendering_result - rendering result to update.\r\n * \r\n * @returns {RenderingResult} - updated Rendering result: VNode or Html text, headers.\r\n */\r\nexport default (arg_settings, arg_state={}, arg_rendering_context, arg_rendering_result)=>{\r\n\t// NORMALIZE ARGS\r\n\tconst { settings, state, rendering_context, rendering_result } = rendering_normalize(default_settings, default_state, arg_settings, arg_state, arg_rendering_context, arg_rendering_result, context)\r\n\r\n\t// GET SETTINGS ATTRIBUTES\r\n\t\t\r\n\t// GET STATE ATTRIBUTES\r\n\tconst code_value = T.isString(state.code) ? state.code : undefined\r\n\r\n\t// BUILD TAG\r\n\tconst tag_id = settings.id\r\n\tconst tag_children = code_value\r\n\tconst tag_props = { id:tag_id, type:settings.language }\r\n\tconst tag = h('script', tag_props, tag_children)\r\n\t\r\n\trendering_result.add_vtree(tag_id, tag)\r\n\r\n\treturn rendering_result\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/rendering/script.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1189,
    "kind": "variable",
    "name": "context",
    "memberof": "js/rendering/script.js",
    "static": true,
    "longname": "js/rendering/script.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/script.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1190,
    "kind": "variable",
    "name": "default_state",
    "memberof": "js/rendering/script.js",
    "static": true,
    "longname": "js/rendering/script.js~default_state",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/script.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "{\"code\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1191,
    "kind": "variable",
    "name": "default_settings",
    "memberof": "js/rendering/script.js",
    "static": true,
    "longname": "js/rendering/script.js~default_settings",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/script.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "{\"language\": string, \"id\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1192,
    "kind": "function",
    "name": "script",
    "memberof": "js/rendering/script.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/script.js~script",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/rendering/script.js",
    "importStyle": "script",
    "description": "Script rendering with given state, produce a rendering result.",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult} - updated Rendering result: VNode or Html text, headers."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "rendering item settings."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_context",
        "description": "rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }."
      },
      {
        "nullable": null,
        "types": [
          "RenderingResult"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_result",
        "description": "rendering result to update."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": "updated Rendering result: VNode or Html text, headers."
    }
  },
  {
    "__docId__": 1193,
    "kind": "file",
    "name": "js/rendering/table.js",
    "content": "// NPM IMPORTS\r\nimport h from 'virtual-dom/h'\r\n\r\n// COMMON IMPORTS\r\nimport T                   from '../utils/types'\r\nimport rendering_normalize from './rendering_normalize'\r\nimport uid                 from '../utils/uid'\r\n\r\n\r\nlet context = 'common/rendering/table'\r\n\r\n\r\n\r\n// DEFAULT STATE\r\nconst default_state = {\r\n\tlabel:undefined,\r\n\theaders:undefined,  // array (rows) of array (th values)\r\n\titems:undefined,    // array (rows) of array (cells)\r\n\tfooters:undefined   // array (rows) of array (th values)\r\n}\r\n\r\n// DEFAULT SETTINGS\r\nconst default_settings = {\r\n\tclass:undefined,\r\n\tstyle:undefined,\r\n\tid:undefined\r\n}\r\n\r\n\r\n\r\n/**\r\n * Table rendering with given state, produce a rendering result.\r\n * \r\n * @param {object} arg_settings - rendering item settings.\r\n * @param {object} arg_state - component state.\r\n * @param {object} arg_rendering_context - rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }.\r\n * @param {RenderingResult} arg_rendering_result - rendering result to update.\r\n * \r\n * @returns {RenderingResult} - updated Rendering result: VNode or Html text, headers.\r\n */\r\nexport default (arg_settings, arg_state={}, arg_rendering_context, arg_rendering_result)=>{\r\n\r\n\t// DEBUG\r\n\t// console.log(context + ':rendering_function:arg_settings=', arg_settings)\r\n\t// console.log(context + ':rendering_function:arg_state=', arg_state)\r\n\r\n\t// NORMALIZE ARGS\r\n\tconst { settings, state, rendering_context, rendering_result } = rendering_normalize(default_settings, default_state, arg_settings, arg_state, arg_rendering_context, arg_rendering_result, context)\r\n\tconst rendering_factory = rendering_context ? rendering_context.rendering_factory : undefined\r\n\t\r\n\t// GET STATE ATTRIBUTES\r\n\tconst label_value   = T.isString(state.label)  ? state.label : undefined\r\n\tconst headers_value = T.isArray(state.headers) ? (label_value ? [[label_value]].concat(state.headers) : state.headers) : (label_value ? [[label_value]] : undefined)\r\n\tconst items_value   = T.isArray(state.items)   ? state.items : undefined\r\n\tconst footers_value = T.isArray(state.footers) ? state.footers : undefined\r\n\r\n\t// GET SETTINGS ATTRIBUTES\r\n\tconst has_body_cursor = T.isBoolean(settings.has_body_cursor) ? settings.has_body_cursor : undefined\r\n\r\n\t// DEBUG\r\n\trendering_context.trace_fn(state.headers, context + ':state.headers')\r\n\trendering_context.trace_fn(state.items, context + ':state.items')\r\n\trendering_context.trace_fn(headers_value, context + ':headers_value')\r\n\trendering_context.trace_fn(items_value, context + ':items_value')\r\n\r\n\t// BUILD THEAD, TBODY, TFOOT\r\n\tconst cell_fn = (cell) =>{\r\n\t\treturn T.isFunction(rendering_factory) ? rendering_factory(cell, rendering_context, settings.children).get_final_vtree(undefined, rendering_result) : cell.toString()\r\n\t}\r\n\tconst cell_content=(tag, cell_settings, index)=>{\r\n\t\t// CELL CONTENT SETTINGS IS AN OBJECT\r\n\t\tif ( T.isObject(cell_settings) )\r\n\t\t{\r\n\t\t\t// CELL CONTENT IS A VALUE\r\n\t\t\tif ( ! T.isString(cell_settings.type) && T.isString(cell_settings.value) )\r\n\t\t\t{\r\n\t\t\t\tif ( ! T.isString(cell_settings.key) )\r\n\t\t\t\t{\r\n\t\t\t\t\tcell_settings.key = uid()\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn h(tag, { id:settings.id + '_' + cell_settings.key }, [ cell_settings.value ])\r\n\t\t\t}\r\n\r\n\t\t\t// CELL CONTENT IS A VIEW\r\n\t\t\tif ( ! T.isString(cell_settings.type) && T.isString(cell_settings.view) )\r\n\t\t\t{\r\n\t\t\t\tif ( ! T.isString(cell_settings.key) )\r\n\t\t\t\t{\r\n\t\t\t\t\tcell_settings.key = cell_settings.view\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn h(tag, { id:settings.id + '_' + cell_settings.key }, [ cell_fn(cell_settings.view) ] )\r\n\t\t\t}\r\n\r\n\t\t\t// CELL IS A RENDERING SETTINGS\r\n\t\t\tif ( T.isString(cell_settings.type) )\r\n\t\t\t{\r\n\t\t\t\treturn h(tag, { id:settings.id + '_' + tag + '_' + index }, [ cell_fn(cell_settings) ] )\r\n\t\t\t}\r\n\r\n\t\t\tconst str_value = cell_settings.toString()\r\n\t\t\treturn h(tag, { id:settings.id + '_' + tag + '_' + index }, [ str_value ] )\r\n\t\t}\r\n\t\t\r\n\t\tconst str_value = T.isString(cell_settings) ? cell_settings : ( T.isFunction(cell_settings.toString) ? cell_settings.toString() : 'ERROR')\r\n\t\treturn h(tag, { id:settings.id + '_' + tag + '_' + index }, [ str_value ] )\r\n\t}\r\n\tconst th_fn = (content, index)=>cell_content('th', content, index)\r\n\tconst td_fn = (content, index)=>cell_content('td', content, index)\r\n\r\n\tconst tr_th_fn = (cells, index)  =>h('tr', { id:settings.id + '_head_row_' + index }, (T.isArray(cells) ? cells : [cells]).map(th_fn) )\r\n\tconst tr_td_fn = (cells, index)  =>h('tr', { id:settings.id + '_body_row_' + index }, (T.isArray(cells) ? cells : [cells]).map(td_fn) )\r\n\tconst tr_tf_fn = (cells, index)  =>h('tr', { id:settings.id + '_foot_row_' + index }, (T.isArray(cells) ? cells : [cells]).map(th_fn) )\r\n\t\r\n\tconst thead_children = headers_value ? (T.isArray(headers_value) ? headers_value : [headers_value]).map(tr_th_fn) : undefined\r\n\tconst tbody_children = items_value   ? (T.isArray(items_value)   ? items_value   : [items_value]).map(tr_td_fn)   : undefined\r\n\tconst tfoot_children = footers_value ? (T.isArray(footers_value) ? footers_value : [footers_value]).map(tr_tf_fn) : undefined\r\n\r\n\tconst thead_props = undefined\r\n\tconst tbody_props = has_body_cursor ? { style:\"cursor:pointer;\" } : undefined\r\n\tconst tfoot_props = undefined\r\n\r\n\tconst thead = h('thead', thead_props, thead_children)\r\n\tconst tbody = h('tbody', tbody_props, tbody_children)\r\n\tconst tfoot = h('tfoot', tfoot_props, tfoot_children)\r\n\r\n\t// BUILD TAG\r\n\tconst tag_id = settings.id\r\n\tconst tag_children = [thead, tbody, tfoot]\r\n\tconst tag_props = { id:tag_id, style:settings.style, className:settings.class }\r\n\tconst tag = h('table', tag_props, tag_children)\r\n\r\n\t// DEBUG\r\n\t// console.log(context + ':rendering_function:settings=', settings)\r\n\t// console.log(context + ':rendering_function:tag_props=', tag_props)\r\n\r\n\trendering_result.add_vtree(tag_id, tag)\r\n\r\n\treturn rendering_result\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/rendering/table.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1194,
    "kind": "variable",
    "name": "context",
    "memberof": "js/rendering/table.js",
    "static": true,
    "longname": "js/rendering/table.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/table.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1195,
    "kind": "variable",
    "name": "default_state",
    "memberof": "js/rendering/table.js",
    "static": true,
    "longname": "js/rendering/table.js~default_state",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/table.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "{\"label\": *, \"headers\": *, \"items\": *, \"footers\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1196,
    "kind": "variable",
    "name": "default_settings",
    "memberof": "js/rendering/table.js",
    "static": true,
    "longname": "js/rendering/table.js~default_settings",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/table.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "{\"class\": *, \"style\": *, \"id\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1197,
    "kind": "function",
    "name": "table",
    "memberof": "js/rendering/table.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/table.js~table",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/rendering/table.js",
    "importStyle": "table",
    "description": "Table rendering with given state, produce a rendering result.",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult} - updated Rendering result: VNode or Html text, headers."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "rendering item settings."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_context",
        "description": "rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }."
      },
      {
        "nullable": null,
        "types": [
          "RenderingResult"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_result",
        "description": "rendering result to update."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": "updated Rendering result: VNode or Html text, headers."
    }
  },
  {
    "__docId__": 1198,
    "kind": "file",
    "name": "js/rendering/tabs.js",
    "content": "// NPM IMPORTS\r\nimport h from 'virtual-dom/h'\r\n\r\n// COMMON IMPORTS\r\nimport T                   from '../utils/types'\r\nimport rendering_normalize from './rendering_normalize'\r\n\r\n\r\nlet context = 'common/rendering/tabs'\r\n\r\n\r\n\r\n// DEFAULT STATE\r\nconst default_state = {\r\n\tlabel:undefined,\r\n\titems:undefined,\r\n\thas_vertical:false\r\n}\r\n\r\n// DEFAULT SETTINGS\r\nconst default_settings = {\r\n\tclass:undefined,\r\n\tstyle:undefined,\r\n\tid:undefined\r\n}\r\n\r\n\r\n\r\n/**\r\n * Tabs rendering with given state, produce a rendering result.\r\n * \r\n * @param {object} arg_settings - rendering item settings.\r\n * @param {object} arg_state - component state.\r\n * @param {object} arg_rendering_context - rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }.\r\n * @param {RenderingResult} arg_rendering_result - rendering result to update.\r\n * \r\n * @returns {RenderingResult} - updated Rendering result: VNode or Html text, headers.\r\n */\r\nexport default (arg_settings, arg_state={}, arg_rendering_context, arg_rendering_result)=>{\r\n\t// console.log(arg_settings, context)\r\n\r\n\t// NORMALIZE ARGS\r\n\tconst { settings, state, rendering_context, rendering_result } = rendering_normalize(default_settings, default_state, arg_settings, arg_state, arg_rendering_context, arg_rendering_result, context)\r\n\tconst rendering_factory = rendering_context ? rendering_context.rendering_factory : undefined\r\n\r\n\t// GET STATE ATTRIBUTES\r\n\tconst label_value = T.isString(state.label)  ? state.label : undefined\r\n\tconst items_value = T.isArray(state.items)   ? state.items : []\r\n\tconst titles_value = items_value.map( (item)=>item.title )\r\n\tconst contents_value = items_value.map( (item)=>item.content )\r\n\tif (state.has_vertical)\r\n\t{\r\n\t\t// return `\\n<div ${html_id}>\\n<div class=\"row collapse\">\\n<div class=\"medium-2 columns\">\\n${html_titles}\\n</div>\\n<div class=\"medium-10 columns\">\\n${html_contents}\\n</div>\\n</div>\\n</div>\\n`\r\n\t}\r\n\t\r\n\t// DEBUG\r\n\trendering_context.trace_fn(label_value, 'label_value')\r\n\trendering_context.trace_fn(items_value, 'items_value')\r\n\t\r\n\r\n\t// BUILD TABS TITLES\r\n\tconst items_tab_is_active = (index)=>(index == 0) ? ' is-active' : ''\r\n\tconst items_tab_is_aria_selected = (index)=>(index == 0) ? true : false // TODO\r\n\tconst titles_create   = (title, index)=>{\r\n\t\tconst r = rendering_factory(title, rendering_context, settings.children).get_final_vtree(undefined, rendering_result)\r\n\t\treturn r ? r : 'Tab ' + index\r\n\t}\r\n\tconst titles_a = (title, index)=>h('a', { href:'#' + settings.id + '_content_' + index, 'aria-selected':items_tab_is_aria_selected(index) ? 'true' : 'false' }, titles_create(title, index) )\r\n\tconst titles_li =  (title, index)=>h('li', { class:'tabs-title' + items_tab_is_active(index) }, titles_a(title, index))\r\n\tconst titles_id = settings.id + '_titles'\r\n\tconst titles_children = titles_value.map(titles_li)\r\n\tconst titles_props = { id:titles_id, style:undefined, class:'tabs' + (state.has_vertical ? ' vertical' : ''), 'data-tabs':'' }\r\n\tconst titles = h('ul', titles_props, titles_children)\r\n\r\n\r\n\t// BUILD TABS CONTENTS\r\n\tconst contents_item = (content)=>rendering_factory(content, rendering_context, settings.children).get_final_vtree(undefined, rendering_result)\r\n\tconst contents_div = (content, index)=>h('div', { id:settings.id + '_content_' + index, class:'tabs-panel' + items_tab_is_active(index) }, contents_item(content) )\r\n\tconst contents_children = contents_value.map(contents_div)\r\n\tconst contents_props = { style:undefined, class:'tabs-content' + (state.has_vertical ? ' vertical' : ''), 'data-tabs-content':titles_id }\r\n\tconst contents = h('div', contents_props, contents_children)\r\n\r\n\r\n\t// BUILD DIV TAG\r\n\tconst tag_id = settings.id\r\n\tconst tag_children = [titles, contents]\r\n\tconst tag_props = { id:tag_id, style:settings.style, class:settings.class }\r\n\tconst tag = h('div', tag_props, tag_children)\r\n\t\r\n\r\n\t// UPDATE RENDERING RESULT\r\n\trendering_result.add_vtree(tag_id, tag)\r\n\r\n\treturn rendering_result\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/rendering/tabs.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1199,
    "kind": "variable",
    "name": "context",
    "memberof": "js/rendering/tabs.js",
    "static": true,
    "longname": "js/rendering/tabs.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/tabs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1200,
    "kind": "variable",
    "name": "default_state",
    "memberof": "js/rendering/tabs.js",
    "static": true,
    "longname": "js/rendering/tabs.js~default_state",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/tabs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "{\"label\": *, \"items\": *, \"has_vertical\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1201,
    "kind": "variable",
    "name": "default_settings",
    "memberof": "js/rendering/tabs.js",
    "static": true,
    "longname": "js/rendering/tabs.js~default_settings",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/tabs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "{\"class\": *, \"style\": *, \"id\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1202,
    "kind": "function",
    "name": "tabs",
    "memberof": "js/rendering/tabs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/tabs.js~tabs",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/rendering/tabs.js",
    "importStyle": "tabs",
    "description": "Tabs rendering with given state, produce a rendering result.",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult} - updated Rendering result: VNode or Html text, headers."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "rendering item settings."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_context",
        "description": "rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }."
      },
      {
        "nullable": null,
        "types": [
          "RenderingResult"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_result",
        "description": "rendering result to update."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": "updated Rendering result: VNode or Html text, headers."
    }
  },
  {
    "__docId__": 1203,
    "kind": "file",
    "name": "js/rendering/textarea.js",
    "content": "// NPM IMPORTS\r\nimport h from 'virtual-dom/h'\r\n\r\n// COMMON IMPORTS\r\nimport T                   from '../utils/types'\r\nimport rendering_normalize from './rendering_normalize'\r\n\r\n\r\nlet context = 'common/rendering/textarea'\r\n\r\n\r\n\r\n// INPUT FIELD\r\nconst default_state = {\r\n\tlabel:undefined,\r\n\tplaceholder:'enter a string value',\r\n\tdefault:''\r\n}\r\n\r\nconst default_settings = {\r\n\tformat: 'text',\r\n\tclass:undefined,\r\n\tstyle:undefined,\r\n\tid:undefined\r\n}\r\n\r\n// const formats = ['text', 'number', 'date', 'datetime', 'datetime-local', 'email', 'month', 'password', 'search', 'tel', 'time', 'url', 'week']\r\n\r\n\r\n\r\n/**\r\n * Textarea rendering with given state, produce a rendering result.\r\n * \r\n * @param {object} arg_settings - rendering item settings.\r\n * @param {object} arg_state - component state.\r\n * @param {object} arg_rendering_context - rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }.\r\n * @param {RenderingResult} arg_rendering_result - rendering result to update.\r\n * \r\n * @returns {RenderingResult} - updated Rendering result: VNode or Html text, headers.\r\n */\r\nexport default (arg_settings, arg_state={}, arg_rendering_context, arg_rendering_result)=>{\r\n\t// NORMALIZE ARGS\r\n\tconst { settings, state, rendering_context, rendering_result } = rendering_normalize(default_settings, default_state, arg_settings, arg_state, arg_rendering_context, arg_rendering_result, context)\r\n\t\r\n\t// GET SETTINGS ATTRIBUTES\r\n\t// const format = (T.isString(settings.format) && formats.indexOf(settings.format) > -1) ? settings.format : 'text'\r\n\tconst css_label_class = T.isString(settings.css_class_label) ? settings.css_class_label : undefined\r\n\t\t\r\n\t// GET STATE ATTRIBUTES\r\n\tconst placeholder_value = T.isString(state.placeholder) ? state.placeholder : undefined\r\n\tconst default_value = ( T.isString(state.default) || T.isNumber(state.default) ) ? state.default : undefined\r\n\tconst label_value = T.isString(state.label) ? state.label : undefined\r\n\r\n\t// BUILD INPUT TAG\r\n\tconst input_id = label_value ? settings.id + '_textarea' : settings.id\r\n\tconst input_children = undefined\r\n\tconst input_props = { id:input_id, /*type:format,*/ value:default_value, placeholder:placeholder_value, style:settings.style, class:settings.class }\r\n\tconst input = h('textarea', input_props, input_children)\r\n\t\r\n\tif (! label_value)\r\n\t{\r\n\t\trendering_result.add_vtree(input_id, input)\r\n\t\treturn rendering_result\r\n\t}\r\n\r\n\t// BUILD LABEL TAG\r\n\tconst label_id = input_id + '_label'\r\n\tconst label_props = { id:label_id, for:input_id, class:css_label_class }\r\n\tconst label = h('label', label_props, [label_value])\r\n\r\n\tconst div = h('div', { id:settings.id }, [label, input])\r\n\trendering_result.add_vtree(settings.id, div)\r\n\r\n\treturn rendering_result\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/rendering/textarea.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1204,
    "kind": "variable",
    "name": "context",
    "memberof": "js/rendering/textarea.js",
    "static": true,
    "longname": "js/rendering/textarea.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/textarea.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1205,
    "kind": "variable",
    "name": "default_state",
    "memberof": "js/rendering/textarea.js",
    "static": true,
    "longname": "js/rendering/textarea.js~default_state",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/textarea.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "{\"label\": *, \"placeholder\": string, \"default\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1206,
    "kind": "variable",
    "name": "default_settings",
    "memberof": "js/rendering/textarea.js",
    "static": true,
    "longname": "js/rendering/textarea.js~default_settings",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/textarea.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "{\"format\": string, \"class\": *, \"style\": *, \"id\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1207,
    "kind": "function",
    "name": "textarea",
    "memberof": "js/rendering/textarea.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/textarea.js~textarea",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/rendering/textarea.js",
    "importStyle": "textarea",
    "description": "Textarea rendering with given state, produce a rendering result.",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult} - updated Rendering result: VNode or Html text, headers."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "rendering item settings."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_context",
        "description": "rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }."
      },
      {
        "nullable": null,
        "types": [
          "RenderingResult"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_result",
        "description": "rendering result to update."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": "updated Rendering result: VNode or Html text, headers."
    }
  },
  {
    "__docId__": 1208,
    "kind": "file",
    "name": "js/rendering/vbox.js",
    "content": "// NPM IMPORTS\r\n\r\n// COMMON IMPORTS\r\n// import T                   from '../utils/types'\r\nimport rendering_normalize from './rendering_normalize'\r\nimport table               from './table'\r\n\r\n\r\nlet context = 'common/rendering/vbox'\r\n\r\n\r\n\r\n// DEFAULT STATE\r\nconst default_state = {\r\n\tlabel:undefined,\r\n\titems:undefined,    // array (rows) of array (cells)\r\n}\r\n\r\n// DEFAULT SETTINGS\r\nconst default_settings = {\r\n\tclass:undefined,\r\n\tstyle:undefined,\r\n\tid:undefined\r\n}\r\n\r\n\r\n\r\n/**\r\n * VBox rendering with given state, produce a rendering result.\r\n * \r\n * @param {object} arg_settings - rendering item settings.\r\n * @param {object} arg_state - component state.\r\n * @param {object} arg_rendering_context - rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }.\r\n * @param {RenderingResult} arg_rendering_result - rendering result to update.\r\n * \r\n * @returns {RenderingResult} - updated Rendering result: VNode or Html text, headers.\r\n */\r\nexport default (arg_settings, arg_state={}, arg_rendering_context, arg_rendering_result)=>{\r\n\t// NORMALIZE ARGS\r\n\tconst { settings, state, rendering_context, rendering_result } = rendering_normalize(default_settings, default_state, arg_settings, arg_state, arg_rendering_context, arg_rendering_result, context)\r\n\t\t\r\n\t// GET STATE ATTRIBUTES\r\n\tstate.columns = undefined\r\n\tstate.footers = undefined\r\n\r\n\treturn table(settings, state, rendering_context, rendering_result)\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/rendering/vbox.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1209,
    "kind": "variable",
    "name": "context",
    "memberof": "js/rendering/vbox.js",
    "static": true,
    "longname": "js/rendering/vbox.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/vbox.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1210,
    "kind": "variable",
    "name": "default_state",
    "memberof": "js/rendering/vbox.js",
    "static": true,
    "longname": "js/rendering/vbox.js~default_state",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/vbox.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "{\"label\": *, \"items\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1211,
    "kind": "variable",
    "name": "default_settings",
    "memberof": "js/rendering/vbox.js",
    "static": true,
    "longname": "js/rendering/vbox.js~default_settings",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/rendering/vbox.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "{\"class\": *, \"style\": *, \"id\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1212,
    "kind": "function",
    "name": "vbox",
    "memberof": "js/rendering/vbox.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/rendering/vbox.js~vbox",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/rendering/vbox.js",
    "importStyle": "vbox",
    "description": "VBox rendering with given state, produce a rendering result.",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult} - updated Rendering result: VNode or Html text, headers."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "rendering item settings."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_context",
        "description": "rendering context: { trace_fn:..., resolver:..., credentials:..., rendering_factory:... }."
      },
      {
        "nullable": null,
        "types": [
          "RenderingResult"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_result",
        "description": "rendering result to update."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": "updated Rendering result: VNode or Html text, headers."
    }
  },
  {
    "__docId__": 1213,
    "kind": "file",
    "name": "js/services/service.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T                    from '../utils/types'\r\nimport Instance             from '../base/instance'\r\nimport Collection           from '../base/collection'\r\nimport ServiceActivator     from './service_activator'\r\nimport ServiceProvider      from './service_provider'\r\nimport ServiceConsumerByUrl from './service_consumer_by_url'\r\n\r\n\r\nlet context = 'common/services'\r\n\r\n\r\n\r\n// STATUS CONSTANTS\r\n// unknow -> created -> enabled -> disabled -> enabled\r\nconst STATUS_UNKNOW = 'unknow'\r\nconst STATUS_ERROR = 'error'\r\nconst STATUS_CREATED = 'created'\r\nconst STATUS_ENABLED = 'enabled'\r\nconst STATUS_DISABLED = 'disabled'\r\n\r\n\r\n\r\n/**\r\n * Service base class.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n* \tAPI:\r\n* \t\t->is_unknow():boolean - STATUS_UNKNOW ?\r\n* \t\t->is_error():boolean - STATUS_ERROR ?\r\n* \t\t->is_created():boolean - STATUS_CREATED ?\r\n* \t\t->is_enabled():boolean - STATUS_ENABLED ?\r\n* \t\t->is_disabled():boolean - STATUS_DISABLED ?\r\n* \r\n* \t\t->enable():boolean - Enable service.\r\n* \t\t->disable():boolean - Disable service.\r\n* \r\n* \t\t->activate(arg_application, arg_app_svc_cfg):nothing - Activate a service feature for an application.\r\n* \t\t->activate_on_server(arg_application, arg_server, arg_app_svc_cfg):nothing - Activate a service feature for an application on a server.\r\n* \r\n* \t\t->get_providers():Collection - Get service providers.\r\n* \t\t->get_a_provider(arg_strategy):ServiceProvider|null - Get one service provider corresponding to the given strategy.\r\n* \t\t->get_provider_by_app_server(arg_app_name, arg_server_name):ServiceProvider|null - Get one service provider corresponding to the given application and server.\r\n* \t\t->create_provider(arg_name, arg_service):ServiceProvider - Create a new ServiceProvider instance for this service.\r\n* \t\t->create_consumer():ServiceConsumer - Create a new ServiceConsumer instance.\r\n* \t\t->provider(arg_name):ServiceProvider - Get a service provider by its name.\r\n* \r\n* \t\t->get_topology_info(arg_deep=true, arg_visited={}):object - Get topology item informations.\r\n* \t\t->get_assets_services_names(arg_region='any'):object - Get assets services names.\r\n* \r\n */\r\nexport default class Service extends Instance\r\n{\r\n\t// STATIC CONST ACCESSORS\r\n\tstatic STATUS_UNKNOW()   { return STATUS_UNKNOW }\r\n\tstatic STATUS_ERROR()\t { return STATUS_ERROR }\r\n\tstatic STATUS_CREATED()  { return STATUS_CREATED }\r\n\tstatic STATUS_ENABLED()  { return STATUS_ENABLED }\r\n\tstatic STATUS_DISABLED() { return STATUS_DISABLED }\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a service instance.\r\n\t * \r\n\t * @param {string} arg_name - plugin name\r\n\t * @param {object} arg_settings - plugin settings map\r\n\t * @param {string} arg_log_context - trace context string.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_svc_name, arg_settings, arg_log_context)\r\n\t{\r\n\t\tsuper('services', 'Service', arg_svc_name, arg_settings, arg_log_context ? arg_log_context : context)\r\n\t\t\r\n\t\tthis.status = STATUS_UNKNOW\r\n\t\t\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_service = true\r\n\t\t\r\n\t\t/**\r\n\t\t * Service status.\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis.status = Service.STATUS_CREATED\r\n\r\n\t\tthis._activator = new ServiceActivator(this)\r\n\t\tthis._providers = new Collection()\r\n\t}\r\n\t\r\n\t\r\n\t// STATUS TEST\r\n\tis_unknow()   { return this.status === STATUS_UNKNOW }\r\n\tis_error()\t  { return this.status === STATUS_ERROR }\r\n\tis_created()  { return this.status === STATUS_CREATED }\r\n\tis_enabled()  { return this.status === STATUS_ENABLED }\r\n\tis_disabled() { return this.status === STATUS_DISABLED }\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Enable service.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tenable()\r\n\t{\r\n\t\tif (this.is_unknow() || this.is_error() || this.is_enabled())\r\n\t\t{\r\n\t\t\treturn false\r\n\t\t}\r\n\t\t\r\n\t\tthis.status = Service.STATUS_ENABLED\r\n\t\treturn true\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Disable service.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tdisable()\r\n\t{\r\n\t\tif (this.is_unknow() || this.is_error() || this.is_disabled())\r\n\t\t{\r\n\t\t\treturn false\r\n\t\t}\r\n\t\t\r\n\t\tthis.status = Service.STATUS_DISABLED\r\n\t\treturn true\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Activate a service feature for an application.\r\n\t * \r\n\t * @param {Application} arg_application - Application instance.\r\n\t * @param {object} arg_app_svc_cfg - service configuration on application.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tactivate(arg_application, arg_app_svc_cfg)\r\n\t{\r\n\t\t// console.log(arg_app_svc_cfg, context + ':arg_app_svc_cfg')\r\n\t\tassert( T.isObject(arg_application) && arg_application.is_topology_define_application , context + ':bad application object')\r\n\t\tassert( T.isObject(arg_app_svc_cfg) , context + ':bad app svc settings object')\r\n\t\tassert( T.isArray(arg_app_svc_cfg.servers), context + ':bad app svc servers array')\r\n\t\t// this.info('servers ' + arg_app_svc_cfg.servers.length)\r\n\t\t\r\n\t\tfor(let i in arg_app_svc_cfg.servers)\r\n\t\t{\r\n\t\t\tconst server_name = arg_app_svc_cfg.servers[i]\r\n\t\t\tassert(T.isString(server_name), context + ':bad server name string')\r\n\t\t\tthis.info('activate on server:' + server_name)\r\n\t\t\t\r\n\t\t\tconst server = this.get_runtime().node.get_servers().find_by_name(server_name)\r\n\t\t\tif ( T.isObject(server) )\r\n\t\t\t{\r\n\t\t\t\t// this.activate_on_server(arg_application, server, arg_app_svc_cfg)\r\n\r\n\t\t\t\t// TODO\r\n\t\t\t\tserver.use_service_on_loading(arg_application, this, arg_app_svc_cfg)\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tthis.info('server_name not found ' + server_name)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Activate a service feature for an application on a server.\r\n\t * \r\n\t * @param {Application} arg_application - Application instance.\r\n\t * @param {Server} arg_server - Server instance.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tactivate_on_server(arg_application, arg_server)\r\n\t{\r\n\t\tassert( T.isObject(arg_application) && arg_application.is_topology_define_application , context + ':bad application object')\r\n\t\tassert( T.isObject(arg_server) && arg_server.is_server , context + ':bad server object')\r\n\t\t\r\n\t\tthis.info('activate_on_server [' + arg_server.get_name() + '] for application [' + arg_application.get_name() + ']')\r\n\t\t\r\n\t\tlet provider = this.get_provider_by_app_server(arg_application.get_name(), arg_server.get_name())\r\n\t\t\r\n\t\tthis._activator.activate(provider, arg_application, arg_server)\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * Get service providers.\r\n\t * \r\n\t * @returns {Collection}\r\n\t */\r\n\tget_providers()\r\n\t{\r\n\t\treturn this._providers\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * Get one service provider corresponding to the given strategy.\r\n\t * \r\n\t * @param {object} arg_strategy - search stratgey (TODO).\r\n\t * \r\n\t * @returns {ServiceProvider|null} - found service provider or null\r\n\t */\r\n\tget_a_provider(arg_strategy)\r\n\t{\r\n\t\tlet provider = null\r\n\t\t\r\n\t\tif (! arg_strategy)\r\n\t\t{\r\n\t\t\t// USE THE FIRST ITEM OF THE LIST OR THE WEAKED LIST IF ENABLED\r\n\t\t\tprovider = this._providers.get_first()\r\n\t\t}\r\n\t\t\r\n\t\t// TODO: define metrics on the provider and update the weak at each turn\r\n\t\t// TODO: define Strategy class with: bablance, round\r\n\t\t\r\n\t\tif (! provider)\r\n\t\t{\r\n\t\t\t// const key = 'app' + '-' + 'name'\r\n\t\t\t// provider = this.create_provider(this.get_name() + '_provider_for_' + key, this)\r\n\t\t\t// this._providers.add(provider)\r\n\t\t}\r\n\t\t\r\n\t\treturn provider\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get one service provider corresponding to the given application and server.\r\n\t * \r\n\t * @param {string} arg_app_name - application name.\r\n\t * @param {string} arg_server_name - server name.\r\n\t * \r\n\t * @returns {ServiceProvider|null} - found service provider or null\r\n\t */\r\n\tget_provider_by_app_server(arg_app_name, arg_server_name)\r\n\t{\r\n\t\tconst key = arg_app_name + '-' + arg_server_name\r\n\t\tlet provider = this._providers.find_by_attr('application_server', key)\r\n\t\tassert(! provider, context + ':service provider already activated')\r\n\t\t\r\n\t\tif (! provider)\r\n\t\t{\r\n\t\t\tprovider = this.create_provider(this.get_name() + '_provider_for_' + key, this)\r\n\t\t\tthis._providers.add(provider)\r\n\t\t}\r\n\t\t\r\n\t\treturn provider\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a new ServiceProvider instance for this service.\r\n\t * \r\n\t * @param {string} arg_name - instance name.\r\n\t * @param {Service} arg_service - service instance.\r\n\t * \r\n\t * @returns {ServiceProvider} - created service provider.\r\n\t */\r\n\tcreate_provider(arg_name, arg_service)\r\n\t{\r\n\t\tconst provider_class = this.get_setting('provider_class', ServiceProvider)\r\n\t\treturn new provider_class(arg_name, arg_service)\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * Create a new ServiceConsumer instance.\r\n\t * \r\n\t * @returns {ServiceConsumer} - created service consumer.\r\n\t */\r\n\tcreate_consumer()\r\n\t{\r\n\t\tconst consumer_name  = this.get_name() + '_consumer_' + this.get_id()\r\n\t\tconst consumer_class = this.get_setting('consumer_class', ServiceConsumerByUrl)\r\n\t\treturn new consumer_class(consumer_name, this)\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Get a service provider by its name.\r\n\t * \r\n\t * @param {string} arg_name - service provider name.\r\n\t * \r\n\t * @returns {ServiceProvider}\r\n\t */\r\n\tprovider(arg_name)\r\n\t{\r\n\t\treturn this._providers.item(arg_name)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get topology item informations.\r\n\t * \r\n\t * @param {boolean} arg_deep - get deep sub items information on true (default:false).\r\n\t * @param {object} arg_visited - visited items plain object map.\r\n\t * \r\n\t * @returns {object} - topology informations (plain object).\r\n\t */\r\n\tget_topology_info(arg_deep=true, arg_visited={})\r\n\t{\r\n\t\tconst info = {\r\n\t\t\tname:this.get_name(),\r\n\t\t\tuid_desc:'N/A',\r\n\t\t\tuid:'N/A',\r\n\r\n\t\t\ttenant:'N/A',\r\n\t\t\tpackage:'N/A',\r\n\t\t\tversion:'N/A',\r\n\t\t\t\r\n\t\t\ttype:'service',\r\n\t\t\tsecurity:'N/A',\r\n\t\t\t\r\n\t\t\tchildren:['N/A']\r\n\t\t}\r\n\r\n\t\tif ( arg_visited && (this.topology_uid in arg_visited) )\r\n\t\t{\r\n\t\t\treturn Object.assign(info, { note:'already dumped' } )\r\n\t\t}\r\n\r\n\t\targ_visited[this.topology_uid] = info\r\n\r\n\t\treturn info\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get assets services names.\r\n\t * \r\n\t * @param {string} arg_region - region name.\r\n\t * \r\n\t * @returns {object} - assets { style:'', script:'', image:'', html:'' }\r\n\t */\r\n\tget_assets_services_names(arg_region='any')\r\n\t{\r\n\t\tassert( T.isString(arg_region), context + ':get_assets_services_names:bad region string')\r\n\r\n\t\t// GET ASSETS CONFIG\r\n\t\tconst assets = this.topology_deploy_assets\r\n\t\tconst assets_region = arg_region == 'any' ? 'all' : arg_region\r\n\t\tconst assets_for_region = T.isObject(assets) && T.isObject(assets[assets_region]) ? assets[assets_region] : undefined\r\n\t\t\r\n\t\tconst assets_style  = T.isObject(assets_for_region) && T.isArray(assets_for_region.style)  ? assets_for_region.style  : []\r\n\t\tconst assets_script = T.isObject(assets_for_region) && T.isArray(assets_for_region.script) ? assets_for_region.script : []\r\n\t\tconst assets_image  = T.isObject(assets_for_region) && T.isArray(assets_for_region.image)  ? assets_for_region.image  : []\r\n\t\tconst assets_html   = T.isObject(assets_for_region) && T.isArray(assets_for_region.html)   ? assets_for_region.html   : []\r\n\r\n\t\tconst assets_style_selected  = assets_style.length  > 0 ? assets_style[0]  : undefined\r\n\t\tconst assets_script_selected = assets_script.length > 0 ? assets_script[0] : undefined\r\n\t\tconst assets_image_selected  = assets_image.length  > 0 ? assets_image[0]  : undefined\r\n\t\tconst assets_html_selected   = assets_html.length   > 0 ? assets_html[0]   : undefined\r\n\r\n\t\treturn {\r\n\t\t\tstyle:assets_style_selected,\r\n\t\t\tscript:assets_script_selected,\r\n\t\t\timage:assets_image_selected,\r\n\t\t\thtml:assets_html_selected\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/*\r\nLoading:\r\n\tcreate rt = new Runtime()\r\n\trt.load()\r\n\t\tload_config\r\n\t\t\tfill config.*\r\n\t\tload_runtime\r\n\t\t\tcreate instances and fill runtime.*\r\n\t\t\t1 create servers\r\n\t\t\t2 create services\r\n\t\t\t3 create applications\r\n\r\nEXAMPLES\r\n\t'rest_api_models_query':['*'],\r\n\t'rest_api_models_modifier':['*'],\r\n\t'rest_api_resources_query':['*'],\r\n\t'rest_api_resources_modifier':['*'],\r\n\t'html_assets':false,\r\n\t'html_app':false\r\n*/",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/services/service.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1214,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/service.js",
    "static": true,
    "longname": "js/services/service.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/services/service.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1215,
    "kind": "variable",
    "name": "STATUS_UNKNOW",
    "memberof": "js/services/service.js",
    "static": true,
    "longname": "js/services/service.js~STATUS_UNKNOW",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/services/service.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1216,
    "kind": "variable",
    "name": "STATUS_ERROR",
    "memberof": "js/services/service.js",
    "static": true,
    "longname": "js/services/service.js~STATUS_ERROR",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/services/service.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1217,
    "kind": "variable",
    "name": "STATUS_CREATED",
    "memberof": "js/services/service.js",
    "static": true,
    "longname": "js/services/service.js~STATUS_CREATED",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/services/service.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1218,
    "kind": "variable",
    "name": "STATUS_ENABLED",
    "memberof": "js/services/service.js",
    "static": true,
    "longname": "js/services/service.js~STATUS_ENABLED",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/services/service.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1219,
    "kind": "variable",
    "name": "STATUS_DISABLED",
    "memberof": "js/services/service.js",
    "static": true,
    "longname": "js/services/service.js~STATUS_DISABLED",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/services/service.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1220,
    "kind": "class",
    "name": "Service",
    "memberof": "js/services/service.js",
    "static": true,
    "longname": "js/services/service.js~Service",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/services/service.js",
    "importStyle": "Service",
    "description": "Service base class.",
    "examples": [
      "\tAPI:\n\t\t->is_unknow():boolean - STATUS_UNKNOW ?\n\t\t->is_error():boolean - STATUS_ERROR ?\n\t\t->is_created():boolean - STATUS_CREATED ?\n\t\t->is_enabled():boolean - STATUS_ENABLED ?\n\t\t->is_disabled():boolean - STATUS_DISABLED ?\n\n\t\t->enable():boolean - Enable service.\n\t\t->disable():boolean - Disable service.\n\n\t\t->activate(arg_application, arg_app_svc_cfg):nothing - Activate a service feature for an application.\n\t\t->activate_on_server(arg_application, arg_server, arg_app_svc_cfg):nothing - Activate a service feature for an application on a server.\n\n\t\t->get_providers():Collection - Get service providers.\n\t\t->get_a_provider(arg_strategy):ServiceProvider|null - Get one service provider corresponding to the given strategy.\n\t\t->get_provider_by_app_server(arg_app_name, arg_server_name):ServiceProvider|null - Get one service provider corresponding to the given application and server.\n\t\t->create_provider(arg_name, arg_service):ServiceProvider - Create a new ServiceProvider instance for this service.\n\t\t->create_consumer():ServiceConsumer - Create a new ServiceConsumer instance.\n\t\t->provider(arg_name):ServiceProvider - Get a service provider by its name.\n\n\t\t->get_topology_info(arg_deep=true, arg_visited={}):object - Get topology item informations.\n\t\t->get_assets_services_names(arg_region='any'):object - Get assets services names."
    ],
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/instance.js~Instance"
    ]
  },
  {
    "__docId__": 1221,
    "kind": "method",
    "name": "STATUS_UNKNOW",
    "memberof": "js/services/service.js~Service",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/services/service.js~Service.STATUS_UNKNOW",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1222,
    "kind": "method",
    "name": "STATUS_ERROR",
    "memberof": "js/services/service.js~Service",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/services/service.js~Service.STATUS_ERROR",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1223,
    "kind": "method",
    "name": "STATUS_CREATED",
    "memberof": "js/services/service.js~Service",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/services/service.js~Service.STATUS_CREATED",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1224,
    "kind": "method",
    "name": "STATUS_ENABLED",
    "memberof": "js/services/service.js~Service",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/services/service.js~Service.STATUS_ENABLED",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1225,
    "kind": "method",
    "name": "STATUS_DISABLED",
    "memberof": "js/services/service.js~Service",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/services/service.js~Service.STATUS_DISABLED",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1226,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/service.js~Service",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service.js~Service#constructor",
    "access": "public",
    "description": "Create a service instance.",
    "lineNumber": 78,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "plugin name"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "plugin settings map"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1227,
    "kind": "member",
    "name": "status",
    "memberof": "js/services/service.js~Service",
    "static": false,
    "longname": "js/services/service.js~Service#status",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1228,
    "kind": "member",
    "name": "is_service",
    "memberof": "js/services/service.js~Service",
    "static": false,
    "longname": "js/services/service.js~Service#is_service",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 88,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1230,
    "kind": "member",
    "name": "_activator",
    "memberof": "js/services/service.js~Service",
    "static": false,
    "longname": "js/services/service.js~Service#_activator",
    "access": "private",
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1231,
    "kind": "member",
    "name": "_providers",
    "memberof": "js/services/service.js~Service",
    "static": false,
    "longname": "js/services/service.js~Service#_providers",
    "access": "private",
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1232,
    "kind": "method",
    "name": "is_unknow",
    "memberof": "js/services/service.js~Service",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service.js~Service#is_unknow",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1233,
    "kind": "method",
    "name": "is_error",
    "memberof": "js/services/service.js~Service",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service.js~Service#is_error",
    "access": "public",
    "description": null,
    "lineNumber": 103,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1234,
    "kind": "method",
    "name": "is_created",
    "memberof": "js/services/service.js~Service",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service.js~Service#is_created",
    "access": "public",
    "description": null,
    "lineNumber": 104,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1235,
    "kind": "method",
    "name": "is_enabled",
    "memberof": "js/services/service.js~Service",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service.js~Service#is_enabled",
    "access": "public",
    "description": null,
    "lineNumber": 105,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1236,
    "kind": "method",
    "name": "is_disabled",
    "memberof": "js/services/service.js~Service",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service.js~Service#is_disabled",
    "access": "public",
    "description": null,
    "lineNumber": 106,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1237,
    "kind": "method",
    "name": "enable",
    "memberof": "js/services/service.js~Service",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service.js~Service#enable",
    "access": "public",
    "description": "Enable service.",
    "lineNumber": 115,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1239,
    "kind": "method",
    "name": "disable",
    "memberof": "js/services/service.js~Service",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service.js~Service#disable",
    "access": "public",
    "description": "Disable service.",
    "lineNumber": 133,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1241,
    "kind": "method",
    "name": "activate",
    "memberof": "js/services/service.js~Service",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service.js~Service#activate",
    "access": "public",
    "description": "Activate a service feature for an application.",
    "lineNumber": 154,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Application"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_application",
        "description": "Application instance."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_app_svc_cfg",
        "description": "service configuration on application."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1242,
    "kind": "method",
    "name": "activate_on_server",
    "memberof": "js/services/service.js~Service",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service.js~Service#activate_on_server",
    "access": "public",
    "description": "Activate a service feature for an application on a server.",
    "lineNumber": 193,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Application"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_application",
        "description": "Application instance."
      },
      {
        "nullable": null,
        "types": [
          "Server"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_server",
        "description": "Server instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1243,
    "kind": "method",
    "name": "get_providers",
    "memberof": "js/services/service.js~Service",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service.js~Service#get_providers",
    "access": "public",
    "description": "Get service providers.",
    "lineNumber": 212,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Collection}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Collection"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1244,
    "kind": "method",
    "name": "get_a_provider",
    "memberof": "js/services/service.js~Service",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service.js~Service#get_a_provider",
    "access": "public",
    "description": "Get one service provider corresponding to the given strategy.",
    "lineNumber": 226,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceProvider|null} - found service provider or null"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_strategy",
        "description": "search stratgey (TODO)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ServiceProvider",
        "null"
      ],
      "spread": false,
      "description": "found service provider or null"
    }
  },
  {
    "__docId__": 1245,
    "kind": "method",
    "name": "get_provider_by_app_server",
    "memberof": "js/services/service.js~Service",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service.js~Service#get_provider_by_app_server",
    "access": "public",
    "description": "Get one service provider corresponding to the given application and server.",
    "lineNumber": 259,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceProvider|null} - found service provider or null"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_app_name",
        "description": "application name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_server_name",
        "description": "server name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ServiceProvider",
        "null"
      ],
      "spread": false,
      "description": "found service provider or null"
    }
  },
  {
    "__docId__": 1246,
    "kind": "method",
    "name": "create_provider",
    "memberof": "js/services/service.js~Service",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service.js~Service#create_provider",
    "access": "public",
    "description": "Create a new ServiceProvider instance for this service.",
    "lineNumber": 284,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceProvider} - created service provider."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service",
        "description": "service instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ServiceProvider"
      ],
      "spread": false,
      "description": "created service provider."
    }
  },
  {
    "__docId__": 1247,
    "kind": "method",
    "name": "create_consumer",
    "memberof": "js/services/service.js~Service",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service.js~Service#create_consumer",
    "access": "public",
    "description": "Create a new ServiceConsumer instance.",
    "lineNumber": 297,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceConsumer} - created service consumer."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ServiceConsumer"
      ],
      "spread": false,
      "description": "created service consumer."
    },
    "params": []
  },
  {
    "__docId__": 1248,
    "kind": "method",
    "name": "provider",
    "memberof": "js/services/service.js~Service",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service.js~Service#provider",
    "access": "public",
    "description": "Get a service provider by its name.",
    "lineNumber": 313,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceProvider}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "service provider name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ServiceProvider"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1249,
    "kind": "method",
    "name": "get_topology_info",
    "memberof": "js/services/service.js~Service",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service.js~Service#get_topology_info",
    "access": "public",
    "description": "Get topology item informations.",
    "lineNumber": 328,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - topology informations (plain object)."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_deep",
        "description": "get deep sub items information on true (default:false)."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_visited",
        "description": "visited items plain object map."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "topology informations (plain object)."
    }
  },
  {
    "__docId__": 1250,
    "kind": "method",
    "name": "get_assets_services_names",
    "memberof": "js/services/service.js~Service",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service.js~Service#get_assets_services_names",
    "access": "public",
    "description": "Get assets services names.",
    "lineNumber": 364,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - assets { style:'', script:'', image:'', html:'' }"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_region",
        "description": "region name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "assets { style:'', script:'', image:'', html:'' }"
    }
  },
  {
    "__docId__": 1251,
    "kind": "file",
    "name": "js/services/service_activator.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport _ from 'lodash'\r\n\r\n// COMMON IMPORTS\r\nimport T               from '../utils/types'\r\nimport { is_server }   from '../utils/is_browser'\r\nimport Credentials     from '../base/credentials'\r\nimport ServiceRequest  from './service_request'\r\nimport ServiceResponse from './service_response'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n * @type {string}\r\n */\r\nlet context = 'common/services/service_activator'\r\n\r\n\r\n\r\n/**\r\n * Service activator class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class ServiceActivator\r\n{\r\n\t/**\r\n\t * Create a service provider.\r\n\t * \r\n\t * \tAPI:\r\n\t * \t\t->activate(arg_application, arg_server, arg_app_svc_cfg):nothing - Activate a service feature for an application.\r\n\t * \r\n\t * @param {Service} arg_service_instance - service instance.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_service_instance)\r\n\t{\r\n\t\tassert( T.isObject(arg_service_instance) && arg_service_instance.is_service, context + ':bad service object')\r\n\t\t\r\n\t\tthis.is_service_activator = true\r\n\t\t\r\n\t\tthis.service = arg_service_instance\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Activate a service feature for an application.\r\n\t * \r\n\t * @param {ServiceProvider} arg_provider - service provider instance.\r\n\t * @param {Application}     arg_application - application instance.\r\n\t * @param {Server}          arg_server - server instance to bind the service.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tactivate(arg_provider, arg_application, arg_server)\r\n\t{\r\n\t\tassert(T.isObject(arg_application), context + ':bad application object')\r\n\t\tassert(T.isObject(arg_server) && arg_server.is_server, context + ':bad server object')\r\n\t\t\r\n\t\tassert( arg_provider.server == null, context + ': already activated')\r\n\t\tassert( arg_provider.application == null, context + ': already activated')\r\n\t\t\r\n\t\tassert( is_server(), context + ':service activation is only available on server')\r\n\t\t\r\n\t\t// console.log(context + ':activate:app=' + arg_application.get_name())\r\n\t\t// console.log(context + ':activate:server=' + arg_server.get_name())\r\n\t\t\r\n\t\targ_provider.server = arg_server\r\n\t\targ_provider.application = arg_application\r\n\t\targ_provider.application_server = arg_application.get_name() + '-' + arg_server.get_name()\r\n\r\n\t\t// ACTIVATE ON SOCKETIO\r\n\t\tif (arg_server.serverio)\r\n\t\t{\r\n\t\t\t// console.log(context + ':activate:with socketio')\r\n\r\n\t\t\tthis.activate_on_socketio_server(arg_provider, arg_server.serverio)\r\n\t\t}\r\n\r\n\t\t// ACTIVATE WITH EXECUTABLE\r\n\t\tif ( T.isObject(arg_provider.exec) && arg_provider.exec.is_executable )\r\n\t\t{\r\n\t\t\tconst routes = arg_provider.get_setting_js('routes')\r\n\t\t\t// console.log(context + ':activate:with routes', routes)\r\n\r\n\t\t\tif ( T.isNotEmptyArray(routes) )\r\n\t\t\t{\r\n\t\t\t\tconst exec_cfg = {\r\n\t\t\t\t\t'routes':routes,\r\n\t\t\t\t\t'server':arg_server\r\n\t\t\t\t}\r\n\t\t\t\targ_provider.set_setting('routes', routes)\r\n\t\t\t\targ_provider.exec.prepare(exec_cfg)\r\n\t\t\t\targ_provider.exec.execute(arg_application)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Activate service on one socketio server for browser request with messages.\r\n\t * \r\n\t * @param {ServiceProvider} arg_provider - service provider instance.\r\n\t * @param {object} arg_socketio - socketio server.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tactivate_on_socketio_server(arg_provider, arg_socketio)\r\n\t{\r\n\t\tconst runtime = arg_provider.get_runtime()\r\n\t\tconst svc_name = arg_provider.service.get_name()\r\n\t\tconst serverio_svc = arg_socketio.of(svc_name)\r\n\t\t\r\n\t\tconsole.log(context + ':activate_on_socketio_server:svc=' + svc_name + ':socket.id=' + serverio_svc.name)\r\n\t\t\r\n\t\tconst no_credentials_ops = ['devapt-login', 'devapt-subscribe', 'devapt-unsubscribe', 'devapt-disconnect', 'end', 'devapt-ping', 'devapt-connect']\r\n\r\n\t\tconst error_values = {\r\n\t\t\tservice:svc_name,\r\n\t\t\toperation:'unknow',\r\n\t\t\thas_error:true,\r\n\t\t\terror:'error?'\r\n\t\t}\r\n\t\t\r\n\t\tconst with_credentials_fn = (op_name, socket)=>{\r\n\t\t\t// console.log(context + ':activate_on_socketio_server:with_credentials_fn:svc=' + svc_name + ':socket.id=' + serverio_svc.name + ' enable operation [' + op_name + '] with credentials')\r\n\t\t\t\r\n\t\t\treturn (arg_request_plain_object) => {\r\n\t\t\t\t// console.log(context + ':activate_on_socketio_server:svc=' + svc_name + ':socket.id=' + serverio_svc.name + ' requested operation [' + op_name + '] with credentials')\r\n\r\n\t\t\t\tconst request = new ServiceRequest(arg_request_plain_object)\r\n\t\t\t\trequest.set_socket(socket)\r\n\r\n\t\t\t\t// CHECK REQUEST\r\n\t\t\t\tif ( ! T.isObject(request) || ! request.is_service_request)\r\n\t\t\t\t{\r\n\t\t\t\t\terror_values.operation = op_name\r\n\t\t\t\t\terror_values.error = 'bad request object'\r\n\t\t\t\t\tconst response = new ServiceResponse(error_values)\r\n\t\t\t\t\tsocket.emit(op_name, response.get_properties_values())\r\n\t\t\t\t\targ_provider.error('bad credentials')\r\n\t\t\t\t\tconsole.error(context + ':activate_on_socketio_server:bad request for method %s of svc %s with data:', op_name, svc_name)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// CHECK CREDENTIALS\r\n\t\t\t\tif ( ! request.has_credentials() )\r\n\t\t\t\t{\r\n\t\t\t\t\terror_values.operation = op_name\r\n\t\t\t\t\terror_values.error = 'security failure:no credentials'\r\n\t\t\t\t\tconst response = new ServiceResponse(error_values)\r\n\t\t\t\t\tsocket.emit(op_name, response.get_properties_values())\r\n\t\t\t\t\targ_provider.error('bad credentials')\r\n\t\t\t\t\tconsole.error(context + ':activate_on_socketio_server:bad credentials for method %s of svc %s with data:', op_name, svc_name)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// TEST SECURITY\r\n\t\t\t\t// console.log(context + ':on: svc=%s op=%s :arg_credentials', svc_name, key, data.credentials.username)\r\n\t\t\t\tconst credentials = new Credentials(request.get_credentials())\r\n\t\t\t\truntime.security().authenticate(credentials)\r\n\t\t\t\t.then(\r\n\t\t\t\t\t(authenticate_result) => {\r\n\t\t\t\t\t\tif (authenticate_result)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\targ_provider.debug('authentication success')\r\n\t\t\t\t\t\t\t// console.log(context + 'authentication success')\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tconst permission = { resource:svc_name, operation:op_name }\r\n\t\t\t\t\t\t\tlet authorization_promise = runtime.security().authorize(permission, credentials)\r\n\t\t\t\t\t\t\treturn authorization_promise.then(\r\n\t\t\t\t\t\t\t\t(authorize_result) => {\r\n\t\t\t\t\t\t\t\t\t// console.log(context + ':authorize_result', authorize_result)\r\n\t\t\t\t\t\t\t\t\tif (authorize_result)\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\targ_provider.debug('authorization success')\r\n\t\t\t\t\t\t\t\t\t\t// console.log(context + ':authorization success')\r\n\t\t\t\t\t\t\t\t\t\tconst response_promise = arg_provider.produce(request)\r\n\t\t\t\t\t\t\t\t\t\tresponse_promise.then(\r\n\t\t\t\t\t\t\t\t\t\t\t(response)=>{\r\n\t\t\t\t\t\t\t\t\t\t\t\tsocket.emit(op_name,  response.get_properties_values())\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\treturn true\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\targ_provider.debug('authorization failure')\r\n\t\t\t\t\t\t\t\t\tconsole.log(context + ':authorization failure')\r\n\r\n\t\t\t\t\t\t\t\t\terror_values.operation = op_name\r\n\t\t\t\t\t\t\t\t\terror_values.error = 'security failure:authorization refused'\r\n\t\t\t\t\t\t\t\t\tconst response = new ServiceResponse(error_values)\r\n\t\t\t\t\t\t\t\t\tsocket.emit(op_name, response.get_properties_values())\r\n\t\t\t\t\t\t\t\t\treturn false\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t.catch(\r\n\t\t\t\t\t\t\t\t(reason) => {\r\n\t\t\t\t\t\t\t\t\targ_provider.debug('authorization error:' + reason)\r\n\t\t\t\t\t\t\t\t\tconsole.error(context + ':authorization error:' + reason)\r\n\r\n\t\t\t\t\t\t\t\t\terror_values.operation = op_name\r\n\t\t\t\t\t\t\t\t\terror_values.error = 'security failure:authorization exception:' + reason\r\n\t\t\t\t\t\t\t\t\tconst response = new ServiceResponse(error_values)\r\n\t\t\t\t\t\t\t\t\tsocket.emit(op_name, response.get_properties_values())\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\targ_provider.debug('authentication failure')\r\n\t\t\t\t\t\tconsole.log(context + 'authentication failure')\r\n\r\n\t\t\t\t\t\terror_values.operation = op_name\r\n\t\t\t\t\t\terror_values.error = 'security failure:authentication refused'\r\n\t\t\t\t\t\tconst response = new ServiceResponse(error_values)\r\n\t\t\t\t\t\tsocket.emit(op_name, response.get_properties_values())\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\t.catch(\r\n\t\t\t\t\t(reason) => {\r\n\t\t\t\t\t\targ_provider.debug('authentication error:' + reason) // TODO NOT ONLY AUTHORIZ. ERROR\r\n\t\t\t\t\t\tconsole.log(context + 'authentication error:' + reason)\r\n\r\n\t\t\t\t\t\terror_values.operation = op_name\r\n\t\t\t\t\t\terror_values.error = 'security failure:authentication exception:' + reason\r\n\t\t\t\t\t\tconst response = new ServiceResponse(error_values)\r\n\t\t\t\t\t\tsocket.emit(op_name, response.get_properties_values())\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tconst no_credentials_fn = (op_name, socket)=>{\r\n\t\t\t// console.log(context + ':activate_on_socketio_server:no_credentials_fn:svc=' + svc_name + ':socket.id=' + serverio_svc.name + ' enable operation [' + op_name + '] without credentials')\r\n\r\n\t\t\treturn (arg_request_plain_object)=>{\r\n\t\t\t\t// console.log(context + ':activate_on_socketio_server:svc=' + svc_name + ':socket.id=' + serverio_svc.name + ' requested operation [' + op_name + '] without credentials')\r\n\t\t\t\t// console.log(context + ':activate_on_socketio_server:request', arg_request_plain_object)\r\n\t\t\t\t\r\n\t\t\t\tconst request = new ServiceRequest(arg_request_plain_object)\r\n\t\t\t\trequest.set_socket(socket)\r\n\t\t\t\t\r\n\t\t\t\t// CHECK REQUEST\r\n\t\t\t\tif ( ! T.isObject(request) || ! request.is_service_request)\r\n\t\t\t\t{\r\n\t\t\t\t\terror_values.operation = op_name\r\n\t\t\t\t\terror_values.error = 'bad request object'\r\n\t\t\t\t\tconst response = new ServiceResponse(error_values)\r\n\t\t\t\t\tsocket.emit(op_name, response.get_properties_values())\r\n\t\t\t\t\targ_provider.error('bad credentials')\r\n\t\t\t\t\tconsole.error(context + ':activate_on_socketio_server:bad request for operation %s of svc %s with data:', op_name, svc_name)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst response_promise = arg_provider.produce(request)\r\n\t\t\t\tresponse_promise.then(\r\n\t\t\t\t\t(response)=>{\r\n\t\t\t\t\t\t// console.log(context + ':activate_on_socketio_server:svc=' + svc_name + ':socket.id=' + serverio_svc.name + ' reply to operation [' + op_name + '] without credentials with response', response.get_properties_values())\r\n\t\t\t\t\t\tsocket.emit(op_name,  response.get_properties_values())\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tserverio_svc.on('connection',\r\n\t\t\t(socket) => {\r\n\t\t\t\targ_provider.info('activate_on_socketio_server:new connection on /' + svc_name, socket.id)\r\n\t\t\t\t\r\n\t\t\t\tconst ops = arg_provider.get_operations_names()\r\n\t\t\t\t_.forEach(ops, \r\n\t\t\t\t\t(op_name) => {\r\n\t\t\t\t\t\t// socket.join(socket.id)\r\n\r\n\t\t\t\t\t\tif ( no_credentials_ops.indexOf(op_name) > -1 )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tconsole.log(context + ':activate_on_socketio_server:svc=[%s] serverio.name=[%s] socket.id=[%s] enable operation=[%s] without credentials', svc_name, serverio_svc.name, socket.id, op_name)\r\n\r\n\t\t\t\t\t\t\tsocket.on(op_name, no_credentials_fn(op_name, socket))\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconsole.log(context + ':activate_on_socketio_server:svc=[%s] serverio.name=[%s] socket.id=[%s] enable operation=[%s] with credentials', svc_name, serverio_svc.name, socket.id, op_name)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsocket.on(op_name, with_credentials_fn(op_name, socket))\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/services/service_activator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1252,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/service_activator.js",
    "static": true,
    "longname": "js/services/service_activator.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/services/service_activator.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 1253,
    "kind": "class",
    "name": "ServiceActivator",
    "memberof": "js/services/service_activator.js",
    "static": true,
    "longname": "js/services/service_activator.js~ServiceActivator",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/services/service_activator.js",
    "importStyle": "ServiceActivator",
    "description": "Service activator class.",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 1254,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/service_activator.js~ServiceActivator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_activator.js~ServiceActivator#constructor",
    "access": "public",
    "description": "Create a service provider.\n\n\tAPI:\n\t\t->activate(arg_application, arg_server, arg_app_svc_cfg):nothing - Activate a service feature for an application.",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1255,
    "kind": "member",
    "name": "is_service_activator",
    "memberof": "js/services/service_activator.js~ServiceActivator",
    "static": false,
    "longname": "js/services/service_activator.js~ServiceActivator#is_service_activator",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1256,
    "kind": "member",
    "name": "service",
    "memberof": "js/services/service_activator.js~ServiceActivator",
    "static": false,
    "longname": "js/services/service_activator.js~ServiceActivator#service",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1257,
    "kind": "method",
    "name": "activate",
    "memberof": "js/services/service_activator.js~ServiceActivator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_activator.js~ServiceActivator#activate",
    "access": "public",
    "description": "Activate a service feature for an application.",
    "lineNumber": 61,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ServiceProvider"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider",
        "description": "service provider instance."
      },
      {
        "nullable": null,
        "types": [
          "Application"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_application",
        "description": "application instance."
      },
      {
        "nullable": null,
        "types": [
          "Server"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_server",
        "description": "server instance to bind the service."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1258,
    "kind": "method",
    "name": "activate_on_socketio_server",
    "memberof": "js/services/service_activator.js~ServiceActivator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_activator.js~ServiceActivator#activate_on_socketio_server",
    "access": "public",
    "description": "Activate service on one socketio server for browser request with messages.",
    "lineNumber": 115,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ServiceProvider"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider",
        "description": "service provider instance."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_socketio",
        "description": "socketio server."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1259,
    "kind": "file",
    "name": "js/services/service_consumer.js",
    "content": "// NPM IMPORTS\r\n\r\n// COMMON IMPORTS\r\nimport ServiceConsumerByUrl from './service_consumer_by_url'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n * @type {string}\r\n */\r\nlet context = 'common/services/service_consumer'\r\n\r\n\r\n\r\n/**\r\n * Service consumer base class.\r\n * @abstract\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class ServiceConsumer extends ServiceConsumerByUrl\r\n{\r\n\t/**\r\n\t * Create a service by url consumer.\r\n\t * \r\n\t * @param {string} arg_consumer_name - consumer name.\r\n\t * @param {Service} arg_service_instance - service instance.\r\n\t * @param {string} arg_context - logging context label.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_consumer_name, arg_service_instance, arg_context)\r\n\t{\r\n\t\tsuper(arg_consumer_name, arg_service_instance, arg_context ? arg_context : context)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/services/service_consumer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1260,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/service_consumer.js",
    "static": true,
    "longname": "js/services/service_consumer.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/services/service_consumer.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 12,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 1261,
    "kind": "class",
    "name": "ServiceConsumer",
    "memberof": "js/services/service_consumer.js",
    "static": true,
    "longname": "js/services/service_consumer.js~ServiceConsumer",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/services/service_consumer.js",
    "importStyle": "ServiceConsumer",
    "description": "Service consumer base class.",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "abstract": true,
    "interface": false,
    "extends": [
      "js/services/service_consumer_by_url.js~ServiceConsumerByUrl"
    ]
  },
  {
    "__docId__": 1262,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/service_consumer.js~ServiceConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_consumer.js~ServiceConsumer#constructor",
    "access": "public",
    "description": "Create a service by url consumer.",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_consumer_name",
        "description": "consumer name."
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1263,
    "kind": "file",
    "name": "js/services/service_consumer_base.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T        from '../utils/types'\r\nimport Instance from '../base/instance'\r\nimport { is_browser, is_server } from '../utils/is_browser'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n * @type {string}\r\n */\r\nlet context = 'common/services/service_consumer_base'\r\n\r\n\r\n\r\n/**\r\n * Service consumer base class.\r\n * @abstract\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n* \tAPI:\r\n* \t\t->get_service():Service - Get service instance.\r\n* \r\n* \t\t->prepare_args(arg_operands):array - Enhance operands if needed (abstract).\r\n* \r\n* \t\t->consume(...args):Promise - Consume datas from service producer.\r\n* \r\n* \t\t->is_service_on_same_node():boolean - Is requested service on the same Node ?\r\n* \r\n* \t\t->consume_from_server(arg_operands):Promise - Consume service on a server.\r\n* \t\t->consume_from_browser(arg_operands):Promise - Consume a service from a browser.\r\n* \r\n* \t\t->consume_local(arg_provider, arg_operands):Promise - Consume a service on the same host (abstract).\r\n* \t\t->consume_remote(arg_operands):Promise - Consume a service on a remote host (abstract).\r\n* \r\n */\r\nexport default class ServiceConsumerBase extends Instance\r\n{\r\n\t/**\r\n\t * Create a service consumer.\r\n\t * \r\n\t * @param {string} arg_consumer_name - consumer name.\r\n\t * @param {Service} arg_service_instance - service instance.\r\n\t * @param {string} arg_context - logging context label.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_consumer_name, arg_service_instance, arg_context)\r\n\t{\r\n\t\tassert( T.isString(arg_consumer_name), context + ':bad consumer name string')\r\n\t\tassert( T.isObject(arg_service_instance) && arg_service_instance.is_service, context + ':bad service object')\r\n\t\t\r\n\t\tsuper('svc_consumers', 'ServiceConsumer', arg_consumer_name, arg_service_instance.get_settings(), arg_context ? arg_context : context)\r\n\t\t\r\n\t\tthis.is_service_consumer = true\r\n\t\tthis.service = arg_service_instance\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Get service instance.\r\n\t * \r\n\t * @returns {Service}\r\n\t */\r\n\tget_service()\r\n\t{\r\n\t\treturn (T.isObject(this.service) && this.service.is_service) ? this.service : null\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Enhance operands if needed.\r\n\t * @abstract\r\n\t * \r\n\t * @params {array} arg_operands - Variable list of operands.\r\n\t * \r\n\t * @returns {array} - array of operands.\r\n\t */\r\n\tprepare_args(arg_operands)\r\n\t{\r\n\t\treturn arg_operands\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Consume datas from service producer.\r\n\t * \r\n\t * @params {...objects} args - Variable list of operands object.\r\n\t * \r\n\t * @returns {Promise} - promise of results.\r\n\t */\r\n\tconsume(...args)\r\n\t{\r\n\t\tthis.enter_group('consume')\r\n\t\t\r\n\t\tlet promise = null\r\n\t\t\r\n\t\ttry\r\n\t\t{\r\n\t\t\tconst operands = this.prepare_args(args)\r\n\r\n\t\t\t// SERVER\r\n\t\t\tif ( is_server() )\r\n\t\t\t{\r\n\t\t\t\tthis.info('svc consumer is on a server')\r\n\r\n\t\t\t\tpromise = this.consume_from_server(operands)\r\n\t\t\t\t\r\n\t\t\t\tthis.leave_group('consume')\r\n\t\t\t\treturn promise\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// BROWSER\r\n\t\t\tif ( is_browser() )\r\n\t\t\t{\r\n\t\t\t\tthis.info('svc consumer is on a browser')\r\n\r\n\t\t\t\tpromise = this.consume_from_browser(args)\r\n\t\t\t\t\r\n\t\t\t\tthis.leave_group('consume')\r\n\t\t\t\treturn promise\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(e)\r\n\t\t{\r\n\t\t\tthis.error(context + ':consume', e)\r\n\t\t}\r\n\r\n\t\tpromise = Promise.resolve(undefined)\r\n\t\tthis.leave_group('consume')\r\n\t\treturn promise\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Is requested service on the same Node ?\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tis_service_on_same_node()\r\n\t{\r\n\t\treturn true\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Consume service on a server.\r\n\t * \r\n\t * @params {array} arg_operands - operands object array.\r\n\t * \r\n\t * @returns {Promise} - promise of results.\r\n\t */\r\n\tconsume_from_server(arg_operands)\r\n\t{\r\n\t\tthis.enter_group('consume_on_server')\r\n\t\t\r\n\r\n\t\tif ( this.is_service_on_same_node() )\r\n\t\t{\r\n\t\t\tconst service = this.get_service()\r\n\t\t\tassert( T.isObject(service) && service.is_service, context + ':consume_from_server:bad service object')\r\n\t\t\t\r\n\t\t\tconst provider = service.get_provider()\r\n\t\t\tconst promise = this.consume_local(provider, arg_operands)\r\n\r\n\t\t\tthis.leave_group('consume_on_server:consume on the same Node')\r\n\t\t\treturn promise\r\n\t\t}\r\n\r\n\r\n\t\tconst promise = this.consume_remote(arg_operands)\r\n\t\tthis.leave_group('consume_on_server:consume not on the same Node')\r\n\t\treturn promise\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Consume a service from a browser.\r\n\t * \r\n\t * @param {array} arg_operands - consumer operands.\r\n\t * \r\n\t * @returns {Promise} - promise of service results.\r\n\t */\r\n\tconsume_from_browser(arg_operands)\r\n\t{\r\n\t\treturn this.consume_remote(arg_operands)\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Consume a service on the same host.\r\n\t * @abstract\r\n\t * \r\n\t * @param {object} arg_provider - service provider.\r\n\t * @param {array} arg_operands - consumer operands.\r\n\t * \r\n\t * @returns {Promise} - promise of service results.\r\n\t */\r\n\t/* eslint no-unused-vars: \"off\" */\r\n\tconsume_local(arg_provider, arg_operands)\r\n\t{\r\n\t\treturn Promise.resolve(undefined)\r\n\t}\r\n\t\r\n\r\n\r\n\t/**\r\n\t * Consume a service on a remote host.\r\n\t * @abstract\r\n\t * \r\n\t * @param {array} arg_operands - consumer operands.\r\n\t * \r\n\t * @returns {Promise} - promise of service results.\r\n\t */\r\n\t/* eslint no-unused-vars: \"off\" */\r\n\tconsume_remote(arg_operands)\r\n\t{\r\n\t\treturn Promise.resolve(undefined)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/services/service_consumer_base.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1264,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/service_consumer_base.js",
    "static": true,
    "longname": "js/services/service_consumer_base.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/services/service_consumer_base.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 1265,
    "kind": "class",
    "name": "ServiceConsumerBase",
    "memberof": "js/services/service_consumer_base.js",
    "static": true,
    "longname": "js/services/service_consumer_base.js~ServiceConsumerBase",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/services/service_consumer_base.js",
    "importStyle": "ServiceConsumerBase",
    "description": "Service consumer base class.",
    "examples": [
      "\tAPI:\n\t\t->get_service():Service - Get service instance.\n\n\t\t->prepare_args(arg_operands):array - Enhance operands if needed (abstract).\n\n\t\t->consume(...args):Promise - Consume datas from service producer.\n\n\t\t->is_service_on_same_node():boolean - Is requested service on the same Node ?\n\n\t\t->consume_from_server(arg_operands):Promise - Consume service on a server.\n\t\t->consume_from_browser(arg_operands):Promise - Consume a service from a browser.\n\n\t\t->consume_local(arg_provider, arg_operands):Promise - Consume a service on the same host (abstract).\n\t\t->consume_remote(arg_operands):Promise - Consume a service on a remote host (abstract)."
    ],
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "abstract": true,
    "interface": false,
    "extends": [
      "js/base/instance.js~Instance"
    ]
  },
  {
    "__docId__": 1266,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/service_consumer_base.js~ServiceConsumerBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_consumer_base.js~ServiceConsumerBase#constructor",
    "access": "public",
    "description": "Create a service consumer.",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_consumer_name",
        "description": "consumer name."
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1267,
    "kind": "member",
    "name": "is_service_consumer",
    "memberof": "js/services/service_consumer_base.js~ServiceConsumerBase",
    "static": false,
    "longname": "js/services/service_consumer_base.js~ServiceConsumerBase#is_service_consumer",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1268,
    "kind": "member",
    "name": "service",
    "memberof": "js/services/service_consumer_base.js~ServiceConsumerBase",
    "static": false,
    "longname": "js/services/service_consumer_base.js~ServiceConsumerBase#service",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1269,
    "kind": "method",
    "name": "get_service",
    "memberof": "js/services/service_consumer_base.js~ServiceConsumerBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_consumer_base.js~ServiceConsumerBase#get_service",
    "access": "public",
    "description": "Get service instance.",
    "lineNumber": 72,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Service}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Service"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1270,
    "kind": "method",
    "name": "prepare_args",
    "memberof": "js/services/service_consumer_base.js~ServiceConsumerBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_consumer_base.js~ServiceConsumerBase#prepare_args",
    "access": "public",
    "description": "Enhance operands if needed.",
    "lineNumber": 87,
    "unknown": [
      {
        "tagName": "@params",
        "tagValue": "{array} arg_operands - Variable list of operands."
      },
      {
        "tagName": "@returns",
        "tagValue": "{array} - array of operands."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "array of operands."
    },
    "abstract": true,
    "params": [
      {
        "name": "arg_operands",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 1271,
    "kind": "method",
    "name": "consume",
    "memberof": "js/services/service_consumer_base.js~ServiceConsumerBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_consumer_base.js~ServiceConsumerBase#consume",
    "access": "public",
    "description": "Consume datas from service producer.",
    "lineNumber": 101,
    "unknown": [
      {
        "tagName": "@params",
        "tagValue": "{...objects} args - Variable list of operands object."
      },
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of results."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of results."
    },
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ]
  },
  {
    "__docId__": 1272,
    "kind": "method",
    "name": "is_service_on_same_node",
    "memberof": "js/services/service_consumer_base.js~ServiceConsumerBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_consumer_base.js~ServiceConsumerBase#is_service_on_same_node",
    "access": "public",
    "description": "Is requested service on the same Node ?",
    "lineNumber": 151,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1273,
    "kind": "method",
    "name": "consume_from_server",
    "memberof": "js/services/service_consumer_base.js~ServiceConsumerBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_consumer_base.js~ServiceConsumerBase#consume_from_server",
    "access": "public",
    "description": "Consume service on a server.",
    "lineNumber": 165,
    "unknown": [
      {
        "tagName": "@params",
        "tagValue": "{array} arg_operands - operands object array."
      },
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of results."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of results."
    },
    "params": [
      {
        "name": "arg_operands",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 1274,
    "kind": "method",
    "name": "consume_from_browser",
    "memberof": "js/services/service_consumer_base.js~ServiceConsumerBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_consumer_base.js~ServiceConsumerBase#consume_from_browser",
    "access": "public",
    "description": "Consume a service from a browser.",
    "lineNumber": 197,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of service results."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_operands",
        "description": "consumer operands."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of service results."
    }
  },
  {
    "__docId__": 1275,
    "kind": "method",
    "name": "consume_local",
    "memberof": "js/services/service_consumer_base.js~ServiceConsumerBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_consumer_base.js~ServiceConsumerBase#consume_local",
    "access": "public",
    "description": "Consume a service on the same host.",
    "lineNumber": 214,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of service results."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider",
        "description": "service provider."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_operands",
        "description": "consumer operands."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of service results."
    },
    "abstract": true
  },
  {
    "__docId__": 1276,
    "kind": "method",
    "name": "consume_remote",
    "memberof": "js/services/service_consumer_base.js~ServiceConsumerBase",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_consumer_base.js~ServiceConsumerBase#consume_remote",
    "access": "public",
    "description": "Consume a service on a remote host.",
    "lineNumber": 230,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of service results."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_operands",
        "description": "consumer operands."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of service results."
    },
    "abstract": true
  },
  {
    "__docId__": 1277,
    "kind": "file",
    "name": "js/services/service_consumer_by_url.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T                        from '../utils/types'\r\nimport { is_remote, is_locale } from '../utils/is_remote'\r\nimport ServiceConsumerBase from './service_consumer_base'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n * @type {string}\r\n */\r\nlet context = 'common/services/service_consumer_by_url'\r\n\r\n\r\n\r\n/**\r\n * Service consumer base class.\r\n * @abstract\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class ServiceConsumerByUrl extends ServiceConsumerBase\r\n{\r\n\t/**\r\n\t * Create a service by url consumer.\r\n\t * \r\n\t * @param {string} arg_consumer_name - consumer name.\r\n\t * @param {Service} arg_service_instance - service instance.\r\n\t * @param {string} arg_context - logging context label.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_consumer_name, arg_service_instance, arg_context)\r\n\t{\r\n\t\tsuper(arg_consumer_name, arg_service_instance, arg_context ? arg_context : context)\r\n\t\t\r\n\t\tthis.is_service_consumer_by_url = true\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Get consumed service server url.\r\n\t * \r\n\t * @param {object} arg_provider - service provider.\r\n\t * \r\n\t * @returns {string} - server url.\r\n\t */\r\n\tget_server_url_for(arg_provider)\r\n\t{\r\n\t\tassert( T.isObject(arg_provider) && arg_provider.is_service_provider, context + ':get_url_for:bad provider object')\r\n\r\n\t\tconst host = arg_provider.server.server_host\r\n\t\tconst port = arg_provider.server.server_port\r\n\t\tconst proto = arg_provider.server.server_protocole\r\n\r\n\t\tconst url = proto + '://' + host + ':' + port\r\n\t\tthis.debug('get_server_url_for', url)\r\n\t\t// console.log(context + ':get_url_for', url)\r\n\r\n\t\treturn url\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * Get consumed service application url.\r\n\t * \r\n\t * @param {object} arg_provider - service provider.\r\n\t * \r\n\t * @returns {string} - service url.\r\n\t */\r\n\tget_app_url_for(arg_provider)\r\n\t{\r\n\t\tlet url = this.get_server_url_for(arg_provider)\r\n\t\tconst app_url = arg_provider.application.app_url\r\n\t\t\r\n\t\treturn url + '/' + app_url\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * Get consumed service url.\r\n\t * \r\n\t * @param {object} arg_provider - service provider.\r\n\t * @param {string|object} arg_operands - consumer operands as {url:...} (to consume a service with an url).\r\n\t * \r\n\t * @returns {string} - service url.\r\n\t */\r\n\tget_url_for(arg_provider, arg_operands)\r\n\t{\r\n\t\tlet url = this.get_app_url_for(arg_provider)\r\n\t\tconst opds_url = T.isString(arg_operands) ? arg_operands : (T.isObject(arg_operands) ? arg_operands.url : null)\r\n\t\t\r\n\t\treturn url + (opds_url ? '/' + opds_url : '')\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Consume a service on the same host.\r\n\t * @abstract\r\n\t * \r\n\t * @param {object} arg_provider - service provider.\r\n\t * @param {array} arg_operands - consumer operands.\r\n\t * \r\n\t * @returns {Promise} - promise of service results.\r\n\t */\r\n\t/* eslint no-unused-vars: \"off\" */\r\n\tconsume_local(arg_provider, arg_operands)\r\n\t{\r\n\t\treturn Promise.resolve(undefined)\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Consume service on a server.\r\n\t * \r\n\t * @params {array} arg_operands - operands object array.\r\n\t * \r\n\t * @returns {Promise} - promise of results.\r\n\t */\r\n\tconsume_from_server(arg_operands)\r\n\t{\r\n\t\tthis.enter_group('consume_on_server')\r\n\t\t\r\n\t\tlet promise = null\r\n\t\t\r\n\t\tconst service = this.get_service()\r\n\t\tassert( T.isObject(service) && service.is_service, context + ':consume:bad service object')\r\n\r\n\t\t// TODO: QUESTION, should we always use the same producer for each consumer and register it to consumer.producer?\r\n\t\t// YES: less search, we need to work on the same producer during the step\r\n\t\t// NO: what about producer failure or overload\r\n\t\tconst strategy = null\r\n\t\tconst provider = service.get_a_provider(strategy)\r\n\t\tassert( T.isObject(provider), context + ':consume:bad service provider object')\r\n\r\n\t\tconst host = provider.get_host()\r\n\t\tconst port = provider.get_port()\r\n\r\n\t\t// LOCAL SAME SERVER\r\n\t\tif ( is_locale(host, port) )\r\n\t\t{\r\n\t\t\tthis.info('svc consumer is on the same local server (host, port)')\r\n\r\n\t\t\tpromise = this.consume_same_local_server(provider, arg_operands)\r\n\t\t\t\r\n\t\t\tthis.leave_group('consume_on_server')\r\n\t\t\treturn promise\r\n\t\t}\r\n\r\n\t\t// LOCAL OTHER SERVER\r\n\t\tif ( is_locale(host) )\r\n\t\t{\r\n\t\t\tthis.info('svc consumer is on an other local server (host, port)')\r\n\r\n\t\t\tpromise = this.consume_other_local_server(provider, arg_operands)\r\n\t\t\t\r\n\t\t\tthis.leave_group('consume_on_server')\r\n\t\t\treturn promise\r\n\t\t}\r\n\r\n\t\t// REMOTE SERVER\r\n\t\tif ( is_remote(host) )\r\n\t\t{\r\n\t\t\tthis.info('svc consumer is on a remote server (host, port)')\r\n\r\n\t\t\tpromise = this.consume_other_remote_server(provider, arg_operands)\r\n\t\t\t\r\n\t\t\tthis.leave_group('consume_on_server')\r\n\t\t\treturn promise\r\n\t\t}\r\n\t\t\r\n\t\tpromise = Promise.resolve(undefined)\r\n\t\tthis.leave_group('consume_on_server: failure')\r\n\t\treturn promise\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Consume a service on the same local server (same host, same port).\r\n\t * \r\n\t * @param {object} arg_provider - service provider.\r\n\t * @param {array} arg_operands - consumer operands.\r\n\t * \r\n\t * @returns {Promise} - promise of service results.\r\n\t */\r\n\tconsume_same_local_server(arg_provider, arg_operands)\r\n\t{\r\n\t\treturn this.consume_local(arg_operands)\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Consume a service on an other local server (same host, other port)\r\n\t * @param {object} arg_provider - service provider\r\n\t * @param {array} arg_operands - consumer operands\r\n\t * @returns {Promise} - promise of service results\r\n\t */\r\n\tconsume_other_local_server(arg_provider, arg_operands)\r\n\t{\r\n\t\treturn this.consume_local(arg_operands)\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Consume a service on an other remote server (other host).\r\n\t * \r\n\t * @param {object} arg_provider - service provider.\r\n\t * @param {array} arg_operands - consumer operands.\r\n\t * \r\n\t * @returns {Promise} - promise of service results.\r\n\t */\r\n\tconsume_other_remote_server(arg_provider, arg_operands)\r\n\t{\r\n\t\treturn this.consume_remote(arg_provider, arg_operands)\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * Consume a service from a browser.\r\n\t * \r\n\t * @param {array} arg_operands - consumer operands.\r\n\t * \r\n\t * @returns {Promise} - promise of service results.\r\n\t */\r\n\tconsume_from_browser(arg_operands)\r\n\t{\r\n\t\treturn this.consume_remote(arg_operands)\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Consume a service on a remote host\r\n\t * @abstract\r\n\t * \r\n\t * @param {object} arg_provider - service provider.\r\n\t * @param {array} arg_operands - consumer operands.\r\n\t * \r\n\t * @returns {Promise} - promise of service results.\r\n\t */\r\n\t/* eslint no-unused-vars: \"off\" */\r\n\tconsume_remote(arg_provider, arg_operands)\r\n\t{\r\n\t\treturn Promise.resolve(undefined)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/services/service_consumer_by_url.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1278,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/service_consumer_by_url.js",
    "static": true,
    "longname": "js/services/service_consumer_by_url.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/services/service_consumer_by_url.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 1279,
    "kind": "class",
    "name": "ServiceConsumerByUrl",
    "memberof": "js/services/service_consumer_by_url.js",
    "static": true,
    "longname": "js/services/service_consumer_by_url.js~ServiceConsumerByUrl",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/services/service_consumer_by_url.js",
    "importStyle": "ServiceConsumerByUrl",
    "description": "Service consumer base class.",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "abstract": true,
    "interface": false,
    "extends": [
      "js/services/service_consumer_base.js~ServiceConsumerBase"
    ]
  },
  {
    "__docId__": 1280,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/service_consumer_by_url.js~ServiceConsumerByUrl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_consumer_by_url.js~ServiceConsumerByUrl#constructor",
    "access": "public",
    "description": "Create a service by url consumer.",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_consumer_name",
        "description": "consumer name."
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1281,
    "kind": "member",
    "name": "is_service_consumer_by_url",
    "memberof": "js/services/service_consumer_by_url.js~ServiceConsumerByUrl",
    "static": false,
    "longname": "js/services/service_consumer_by_url.js~ServiceConsumerByUrl#is_service_consumer_by_url",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1282,
    "kind": "method",
    "name": "get_server_url_for",
    "memberof": "js/services/service_consumer_by_url.js~ServiceConsumerByUrl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_consumer_by_url.js~ServiceConsumerByUrl#get_server_url_for",
    "access": "public",
    "description": "Get consumed service server url.",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - server url."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider",
        "description": "service provider."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "server url."
    }
  },
  {
    "__docId__": 1283,
    "kind": "method",
    "name": "get_app_url_for",
    "memberof": "js/services/service_consumer_by_url.js~ServiceConsumerByUrl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_consumer_by_url.js~ServiceConsumerByUrl#get_app_url_for",
    "access": "public",
    "description": "Get consumed service application url.",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - service url."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider",
        "description": "service provider."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "service url."
    }
  },
  {
    "__docId__": 1284,
    "kind": "method",
    "name": "get_url_for",
    "memberof": "js/services/service_consumer_by_url.js~ServiceConsumerByUrl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_consumer_by_url.js~ServiceConsumerByUrl#get_url_for",
    "access": "public",
    "description": "Get consumed service url.",
    "lineNumber": 95,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - service url."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider",
        "description": "service provider."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_operands",
        "description": "consumer operands as {url:...} (to consume a service with an url)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "service url."
    }
  },
  {
    "__docId__": 1285,
    "kind": "method",
    "name": "consume_local",
    "memberof": "js/services/service_consumer_by_url.js~ServiceConsumerByUrl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_consumer_by_url.js~ServiceConsumerByUrl#consume_local",
    "access": "public",
    "description": "Consume a service on the same host.",
    "lineNumber": 115,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of service results."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider",
        "description": "service provider."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_operands",
        "description": "consumer operands."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of service results."
    },
    "abstract": true
  },
  {
    "__docId__": 1286,
    "kind": "method",
    "name": "consume_from_server",
    "memberof": "js/services/service_consumer_by_url.js~ServiceConsumerByUrl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_consumer_by_url.js~ServiceConsumerByUrl#consume_from_server",
    "access": "public",
    "description": "Consume service on a server.",
    "lineNumber": 129,
    "unknown": [
      {
        "tagName": "@params",
        "tagValue": "{array} arg_operands - operands object array."
      },
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of results."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of results."
    },
    "params": [
      {
        "name": "arg_operands",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 1287,
    "kind": "method",
    "name": "consume_same_local_server",
    "memberof": "js/services/service_consumer_by_url.js~ServiceConsumerByUrl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_consumer_by_url.js~ServiceConsumerByUrl#consume_same_local_server",
    "access": "public",
    "description": "Consume a service on the same local server (same host, same port).",
    "lineNumber": 196,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of service results."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider",
        "description": "service provider."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_operands",
        "description": "consumer operands."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of service results."
    }
  },
  {
    "__docId__": 1288,
    "kind": "method",
    "name": "consume_other_local_server",
    "memberof": "js/services/service_consumer_by_url.js~ServiceConsumerByUrl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_consumer_by_url.js~ServiceConsumerByUrl#consume_other_local_server",
    "access": "public",
    "description": "Consume a service on an other local server (same host, other port)",
    "lineNumber": 209,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of service results"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider",
        "description": "service provider"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_operands",
        "description": "consumer operands"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of service results"
    }
  },
  {
    "__docId__": 1289,
    "kind": "method",
    "name": "consume_other_remote_server",
    "memberof": "js/services/service_consumer_by_url.js~ServiceConsumerByUrl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_consumer_by_url.js~ServiceConsumerByUrl#consume_other_remote_server",
    "access": "public",
    "description": "Consume a service on an other remote server (other host).",
    "lineNumber": 224,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of service results."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider",
        "description": "service provider."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_operands",
        "description": "consumer operands."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of service results."
    }
  },
  {
    "__docId__": 1290,
    "kind": "method",
    "name": "consume_from_browser",
    "memberof": "js/services/service_consumer_by_url.js~ServiceConsumerByUrl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_consumer_by_url.js~ServiceConsumerByUrl#consume_from_browser",
    "access": "public",
    "description": "Consume a service from a browser.",
    "lineNumber": 238,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of service results."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_operands",
        "description": "consumer operands."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of service results."
    }
  },
  {
    "__docId__": 1291,
    "kind": "method",
    "name": "consume_remote",
    "memberof": "js/services/service_consumer_by_url.js~ServiceConsumerByUrl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_consumer_by_url.js~ServiceConsumerByUrl#consume_remote",
    "access": "public",
    "description": "Consume a service on a remote host",
    "lineNumber": 255,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of service results."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider",
        "description": "service provider."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_operands",
        "description": "consumer operands."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of service results."
    },
    "abstract": true
  },
  {
    "__docId__": 1292,
    "kind": "file",
    "name": "js/services/service_provider.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T               from '../utils/types'\r\nimport StreamsProvider    from '../messaging/streams_provider'\r\nimport ServiceResponse from './service_response'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n * @type {string}\r\n */\r\nconst context = 'common/services/service_provider'\r\n\r\n\r\n\r\n/**\r\n * Service provider base class.\r\n * @abstract\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n* \tAPI:\r\n* \t\t->load():nothing - Load settings.\r\n* \r\n* \t\t->activate(arg_application, arg_server, arg_app_svc_cfg):nothing - Activate a service feature for an application.\r\n* \r\n* \t\t->produce():Promise - Produce service datas on request.\r\n* \r\n* \t\t->get_host():string - Get host name of service server.\r\n* \t\t->get_port():number - Get host port of service server.\r\n* \r\n */\r\nexport default class ServiceProvider extends StreamsProvider\r\n{\r\n\t/**\r\n\t * Create a service provider.\r\n\t * \r\n\t * @param {string} arg_provider_name - consumer name.\r\n\t * @param {Service} arg_service_instance - service instance.\r\n\t * @param {string} arg_context - logging context label.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_provider_name, arg_service_instance, arg_context)\r\n\t{\r\n\t\tassert( T.isString(arg_provider_name), context + ':bad provider name string')\r\n\t\tassert( T.isObject(arg_service_instance) && arg_service_instance.is_service, context + ':bad service object')\r\n\t\t\r\n\t\tsuper('svc_providers', 'ServiceProvider', arg_provider_name, arg_service_instance.get_settings(), arg_context ? arg_context : context)\r\n\t\t\r\n\t\tthis.is_service_provider = true\r\n\t\t\r\n\t\tthis.service = arg_service_instance\r\n\t\tthis.server = null\r\n\t\tthis.application = null\r\n\t\tthis.application_server = null\r\n\r\n\t\t\r\n\t\t// CREATE A STREAM WHICH RECEIVE VALUES TO SEND TO SUBSCRIBERS\r\n\t\t/*\r\n\t\tthis.subscribers_sockets = []\r\n\t\tthis.provided_values_stream = new Stream()\r\n\t\tif ( T.isFunction(this.init_provided_values_stream) )\r\n\t\t{\r\n\t\t\tthis.init_provided_values_stream()\r\n\t\t}\r\n\r\n\t\t// ENABLE SEND VALUES TO SUBSCRIBERS HANDLER\r\n\t\tconst post_cb = (v) => {\r\n\t\t\t// console.log(context + ':on stream value for provider %s',  arg_provider_name)\r\n\t\t\tthis.post_provided_values_to_subscribers(v)\r\n\t\t}\r\n\t\tthis.provided_values_stream.subscribe(post_cb)\r\n\t\t*/\r\n\r\n\t\tthis.add_stream('default')\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Load settings.\r\n\t * @abstract\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tload()\r\n\t{\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get provider operations names.\r\n\t * @abstract\r\n\t * \r\n\t * @returns {array}\r\n\t */\r\n\tget_operations_names()\r\n\t{\r\n\t\treturn ['devapt-disconnect', 'devapt-subscribe', 'devapt-unsubscribe', 'devapt-subscription']\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Produce service datas on request.\r\n\t * \r\n\t * @param {ServiceRequest} arg_request - service request instance.\r\n\t * \r\n\t * @returns {Promise} - promise of ServiceResponse instance.\r\n\t */\r\n\tproduce(arg_request)\r\n\t{\r\n\t\tconst operation = arg_request.get_operation()\r\n\t\tconst operands = arg_request.get_operands()\r\n\t\tconst response = new ServiceResponse(arg_request)\r\n\t\tconst opd_1 = operands.length > 0 ? operands[0] : undefined\r\n\t\tconst opd_1_str = T.isNotEmptyString(opd_1) ? opd_1 : 'default'\r\n\r\n\t\t// SUBSCRIBE TO PROVIDER STREAM DATAS\r\n\t\tif (operation == 'devapt-disconnect')\r\n\t\t{\r\n\t\t\tconst socket = arg_request.get_socket()\r\n\t\t\t\r\n\t\t\tif (socket)\r\n\t\t\t{\r\n\t\t\t\tthis.unsubscribe(opd_1_str, socket)\r\n\t\t\t\tsocket.disconnect(0)\r\n\r\n\t\t\t\tresponse.set_results( ['done'].concat(operands) )\r\n\t\t\t\treturn Promise.resolve(response)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tresponse.set_results( [ { error:'bad socket' } ].concat(operands) )\r\n\t\t\treturn Promise.resolve(response)\r\n\t\t}\r\n\r\n\t\t// SUBSCRIBE TO PROVIDER STREAM DATAS\r\n\t\tif (operation == 'devapt-subscribe')\r\n\t\t{\r\n\t\t\tconst socket = arg_request.get_socket()\r\n\t\t\t\r\n\t\t\tif (socket)\r\n\t\t\t{\r\n\t\t\t\tthis.subscribe(opd_1_str, socket)\r\n\r\n\t\t\t\tresponse.set_results( ['done'].concat(operands) )\r\n\t\t\t\treturn Promise.resolve(response)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tresponse.set_results([ { error:'bad socket' } ].concat(operands) )\r\n\t\t\treturn Promise.resolve(response)\r\n\t\t}\r\n\r\n\t\t// UNSUBSCRIBE FROM PROVIDER STREAM DATAS\r\n\t\tif (operation == 'devapt-unsubscribe')\r\n\t\t{\r\n\t\t\tconst socket = arg_request.get_socket()\r\n\t\t\t\r\n\t\t\tif (socket)\r\n\t\t\t{\r\n\t\t\t\tthis.unsubscribe(opd_1_str, socket)\r\n\t\t\t\tresponse.set_results( ['done'].concat(operands) )\r\n\t\t\t\treturn Promise.resolve(response)\r\n\t\t\t}\r\n\r\n\t\t\tresponse.set_results( [ { error:'bad socket' } ].concat(operands) )\r\n\t\t\treturn Promise.resolve(response)\r\n\t\t}\r\n\r\n\t\t// SUBSCRIPTION\r\n\t\tif (operation == 'devapt-subscription')\r\n\t\t{\r\n\t\t\tresponse.set_results(operands)\r\n\t\t\treturn Promise.resolve(response)\r\n\t\t}\r\n\r\n\t\tresponse.set_has_error(true)\r\n\t\tresponse.set_error('produce:error:operation failure [' + operation + '] not found')\r\n\t\tresponse.set_results(undefined)\r\n\t\treturn Promise.resolve(response)\r\n\t}\r\n\t\r\n\r\n    \r\n\t/**\r\n\t * Get host name of service server.\r\n\t * \r\n\t * @returns {string} - service host name\r\n\t */\r\n\tget_host()\r\n\t{\r\n\t\treturn this.server.server_host\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * Get host port of service server.\r\n\t * \r\n\t * @returns {number} - service host port\r\n\t */\r\n\tget_port()\r\n\t{\r\n\t\treturn this.server.server_port\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Post streams values to one subscriber.\r\n\t * \r\n\t * @param {object} arg_subscriber - subscriber object (Socket...).\r\n\t * @param {string} arg_stream_name - stream name.\r\n\t * @param {object} arg_datas - response values.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tpost_to_subscriber(arg_subscriber, arg_stream_name, arg_datas)\r\n\t{\r\n\t\t// DEBUG\r\n\t\t// console.log(context + ':post_to_subscriber:stream=[%s] subscriber=', arg_stream_name, arg_subscriber)\r\n\t\t// console.log(context + ':post_to_subscriber:stream=[%s] datas=', arg_stream_name, arg_datas)\r\n\r\n\t\tconst svc_name = this.service.get_name()\r\n\t\targ_subscriber.emit('devapt-subscription', { service:svc_name, operation:'devapt-subscription', results:['done', arg_datas] })\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/services/service_provider.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1293,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/service_provider.js",
    "static": true,
    "longname": "js/services/service_provider.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/services/service_provider.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 1294,
    "kind": "class",
    "name": "ServiceProvider",
    "memberof": "js/services/service_provider.js",
    "static": true,
    "longname": "js/services/service_provider.js~ServiceProvider",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/services/service_provider.js",
    "importStyle": "ServiceProvider",
    "description": "Service provider base class.",
    "examples": [
      "\tAPI:\n\t\t->load():nothing - Load settings.\n\n\t\t->activate(arg_application, arg_server, arg_app_svc_cfg):nothing - Activate a service feature for an application.\n\n\t\t->produce():Promise - Produce service datas on request.\n\n\t\t->get_host():string - Get host name of service server.\n\t\t->get_port():number - Get host port of service server."
    ],
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "abstract": true,
    "interface": false,
    "extends": [
      "js/messaging/streams_provider.js~StreamsProvider"
    ]
  },
  {
    "__docId__": 1295,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/service_provider.js~ServiceProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_provider.js~ServiceProvider#constructor",
    "access": "public",
    "description": "Create a service provider.",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider_name",
        "description": "consumer name."
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1296,
    "kind": "member",
    "name": "is_service_provider",
    "memberof": "js/services/service_provider.js~ServiceProvider",
    "static": false,
    "longname": "js/services/service_provider.js~ServiceProvider#is_service_provider",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1297,
    "kind": "member",
    "name": "service",
    "memberof": "js/services/service_provider.js~ServiceProvider",
    "static": false,
    "longname": "js/services/service_provider.js~ServiceProvider#service",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1298,
    "kind": "member",
    "name": "server",
    "memberof": "js/services/service_provider.js~ServiceProvider",
    "static": false,
    "longname": "js/services/service_provider.js~ServiceProvider#server",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1299,
    "kind": "member",
    "name": "application",
    "memberof": "js/services/service_provider.js~ServiceProvider",
    "static": false,
    "longname": "js/services/service_provider.js~ServiceProvider#application",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1300,
    "kind": "member",
    "name": "application_server",
    "memberof": "js/services/service_provider.js~ServiceProvider",
    "static": false,
    "longname": "js/services/service_provider.js~ServiceProvider#application_server",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1301,
    "kind": "method",
    "name": "load",
    "memberof": "js/services/service_provider.js~ServiceProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_provider.js~ServiceProvider#load",
    "access": "public",
    "description": "Load settings.",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true,
    "params": []
  },
  {
    "__docId__": 1302,
    "kind": "method",
    "name": "get_operations_names",
    "memberof": "js/services/service_provider.js~ServiceProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_provider.js~ServiceProvider#get_operations_names",
    "access": "public",
    "description": "Get provider operations names.",
    "lineNumber": 104,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true,
    "params": []
  },
  {
    "__docId__": 1303,
    "kind": "method",
    "name": "produce",
    "memberof": "js/services/service_provider.js~ServiceProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_provider.js~ServiceProvider#produce",
    "access": "public",
    "description": "Produce service datas on request.",
    "lineNumber": 118,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of ServiceResponse instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ServiceRequest"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_request",
        "description": "service request instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of ServiceResponse instance."
    }
  },
  {
    "__docId__": 1304,
    "kind": "method",
    "name": "get_host",
    "memberof": "js/services/service_provider.js~ServiceProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_provider.js~ServiceProvider#get_host",
    "access": "public",
    "description": "Get host name of service server.",
    "lineNumber": 197,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - service host name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "service host name"
    },
    "params": []
  },
  {
    "__docId__": 1305,
    "kind": "method",
    "name": "get_port",
    "memberof": "js/services/service_provider.js~ServiceProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_provider.js~ServiceProvider#get_port",
    "access": "public",
    "description": "Get host port of service server.",
    "lineNumber": 209,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} - service host port"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "service host port"
    },
    "params": []
  },
  {
    "__docId__": 1306,
    "kind": "method",
    "name": "post_to_subscriber",
    "memberof": "js/services/service_provider.js~ServiceProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_provider.js~ServiceProvider#post_to_subscriber",
    "access": "public",
    "description": "Post streams values to one subscriber.",
    "lineNumber": 225,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_subscriber",
        "description": "subscriber object (Socket...)."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_stream_name",
        "description": "stream name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_datas",
        "description": "response values."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1307,
    "kind": "file",
    "name": "js/services/service_request.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T              from '../utils/types'\r\nimport Introspectable from '../base/introspectable'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n * @type {string}\r\n */\r\nconst context = 'common/services/service_request'\r\n\r\n\r\n/**\r\n * Request properties array.\r\n * @private\r\n * @type {array}\r\n */\r\nconst properties = [\r\n\t{\r\n\t\tname:'service',\r\n\t\ttype:'string',\r\n\t\tcurrent:undefined,\r\n\t\tprivate:true,\r\n\t\tserializable:true,\r\n\t\tsetter:true,\r\n\t\tgetter:true,\r\n\t\ttester:true\r\n\t},\r\n\t{\r\n\t\tname:'operation',\r\n\t\ttype:'string',\r\n\t\tcurrent:undefined,\r\n\t\tprivate:true,\r\n\t\tserializable:true,\r\n\t\tsetter:true,\r\n\t\tgetter:true,\r\n\t\ttester:true\r\n\t},\r\n\t{\r\n\t\tname:'operands',\r\n\t\ttype:'array',\r\n\t\tcurrent:[],\r\n\t\tprivate:true,\r\n\t\tserializable:true,\r\n\t\tsetter:true,\r\n\t\tgetter:true,\r\n\t\ttester:true\r\n\t},\r\n\t{\r\n\t\tname:'credentials',\r\n\t\ttype:'object',\r\n\t\tcurrent:undefined,\r\n\t\tprivate:true,\r\n\t\tserializable:true,\r\n\t\tsetter:true,\r\n\t\tgetter:true,\r\n\t\ttester:true\r\n\t},\r\n\t{\r\n\t\tname:'socket',\r\n\t\ttype:'object',\r\n\t\tcurrent:undefined,\r\n\t\tprivate:true,\r\n\t\tserializable:false,\r\n\t\tsetter:true,\r\n\t\tgetter:true,\r\n\t\ttester:true\r\n\t},\r\n\t{\r\n\t\tname:'socket_id',\r\n\t\ttype:'string',\r\n\t\tcurrent:undefined,\r\n\t\tprivate:true,\r\n\t\tserializable:true,\r\n\t\tsetter:true,\r\n\t\tgetter:true,\r\n\t\ttester:true\r\n\t},\r\n\t{\r\n\t\tname:'session_uid',\r\n\t\ttype:'string',\r\n\t\tcurrent:undefined,\r\n\t\tprivate:true,\r\n\t\tserializable:true,\r\n\t\tsetter:true,\r\n\t\tgetter:true,\r\n\t\ttester:true\r\n\t}\r\n]\r\n\r\n\r\n/**\r\n * Request methods array.\r\n * @private\r\n * @type {array}\r\n */\r\nconst methods =[]\r\n\r\n\r\n/**\r\n * Service request class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class ServiceRequest extends Introspectable\r\n{\r\n    /**\r\n     * Create a Service request instance.\r\n\t * \r\n\t * @param {object} arg_values - values object.\r\n\t * \r\n\t * @returns {nothing}\r\n     */\r\n\tconstructor(arg_values)\r\n\t{\r\n\t\tassert( T.isObject(arg_values), context + ':constructor:bad values object')\r\n\r\n\t\tsuper(properties, methods, arg_values)\r\n\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_service_request = true\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get operand by index.\r\n\t * \r\n\t * @param {integer} arg_index - operand array index.\r\n\t * \r\n\t * @returns {any}\r\n\t */\r\n\tget_operand(arg_index)\r\n\t{\r\n\t\tconst operands = this.get_operands()\r\n\t\treturn arg_index >= 0 && arg_index < operands.length ? operands[arg_index] : undefined\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/services/service_request.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1308,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/service_request.js",
    "static": true,
    "longname": "js/services/service_request.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/services/service_request.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 14,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 1309,
    "kind": "variable",
    "name": "properties",
    "memberof": "js/services/service_request.js",
    "static": true,
    "longname": "js/services/service_request.js~properties",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/services/service_request.js",
    "importStyle": null,
    "description": "Request properties array.",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 1310,
    "kind": "variable",
    "name": "methods",
    "memberof": "js/services/service_request.js",
    "static": true,
    "longname": "js/services/service_request.js~methods",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/services/service_request.js",
    "importStyle": null,
    "description": "Request methods array.",
    "lineNumber": 101,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 1311,
    "kind": "class",
    "name": "ServiceRequest",
    "memberof": "js/services/service_request.js",
    "static": true,
    "longname": "js/services/service_request.js~ServiceRequest",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/services/service_request.js",
    "importStyle": "ServiceRequest",
    "description": "Service request class.",
    "lineNumber": 111,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/introspectable.js~Introspectable"
    ]
  },
  {
    "__docId__": 1312,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/service_request.js~ServiceRequest",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_request.js~ServiceRequest#constructor",
    "access": "public",
    "description": "Create a Service request instance.",
    "lineNumber": 120,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_values",
        "description": "values object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1313,
    "kind": "member",
    "name": "is_service_request",
    "memberof": "js/services/service_request.js~ServiceRequest",
    "static": false,
    "longname": "js/services/service_request.js~ServiceRequest#is_service_request",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 130,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1314,
    "kind": "method",
    "name": "get_operand",
    "memberof": "js/services/service_request.js~ServiceRequest",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_request.js~ServiceRequest#get_operand",
    "access": "public",
    "description": "Get operand by index.",
    "lineNumber": 142,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{any}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_index",
        "description": "operand array index."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1315,
    "kind": "file",
    "name": "js/services/service_response.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T              from '../utils/types'\r\nimport Introspectable from '../base/introspectable'\r\n\r\n\r\n/**\r\n * Contextual constant for this file logs.\r\n * @private\r\n * @type {string}\r\n */\r\nconst context = 'common/services/service_response'\r\n\r\n\r\n/**\r\n * Request properties array.\r\n * @private\r\n * @type {array}\r\n */\r\nconst properties = [\r\n\t{\r\n\t\tname:'service',\r\n\t\ttype:'string',\r\n\t\tcurrent:undefined,\r\n\t\tprivate:true,\r\n\t\tsetter:true,\r\n\t\tgetter:true,\r\n\t\ttester:true\r\n\t},\r\n\t{\r\n\t\tname:'operation',\r\n\t\ttype:'string',\r\n\t\tcurrent:undefined,\r\n\t\tprivate:true,\r\n\t\tsetter:true,\r\n\t\tgetter:true,\r\n\t\ttester:true\r\n\t},\r\n\t{\r\n\t\tname:'results',\r\n\t\ttype:'array',\r\n\t\tcurrent:undefined,\r\n\t\tprivate:true,\r\n\t\tsetter:true,\r\n\t\tgetter:true,\r\n\t\ttester:true\r\n\t},\r\n\t{\r\n\t\tname:'socket_id',\r\n\t\ttype:'string',\r\n\t\tcurrent:undefined,\r\n\t\tprivate:true,\r\n\t\tserializable:true,\r\n\t\tsetter:true,\r\n\t\tgetter:true,\r\n\t\ttester:true\r\n\t},\r\n\t// {\r\n\t// \tname:'session_uid',\r\n\t// \ttype:'string',\r\n\t// \tcurrent:undefined,\r\n\t// \tprivate:true,\r\n\t// \tserializable:true,\r\n\t// \tsetter:true,\r\n\t// \tgetter:true,\r\n\t// \ttester:true\r\n\t// },\r\n\t{\r\n\t\tname:'has_error',\r\n\t\ttype:'boolean',\r\n\t\tcurrent:false,\r\n\t\tprivate:true,\r\n\t\tsetter:true,\r\n\t\tgetter:true,\r\n\t\ttester:true\r\n\t},\r\n\t{\r\n\t\tname:'error',\r\n\t\ttype:'string',\r\n\t\tcurrent:undefined,\r\n\t\tprivate:true,\r\n\t\tsetter:true,\r\n\t\tgetter:true,\r\n\t\ttester:true\r\n\t}\r\n]\r\n\r\n\r\n/**\r\n * Response methods array.\r\n * @private\r\n * @type {array}\r\n */\r\nconst methods =[]\r\n\r\n\r\n/**\r\n * Service response class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class ServiceResponse extends Introspectable\r\n{\r\n    /**\r\n     * Create a Service response instance.\r\n\t * \r\n\t * @param {object} arg_values - values object.\r\n\t * \r\n\t * @returns {nothing}\r\n     */\r\n\tconstructor(arg_values)\r\n\t{\r\n\t\tassert( T.isObject(arg_values), context + ':constructor:bad values object')\r\n\r\n\t\tif ( arg_values.is_service_request && T.isFunction(arg_values.get_service) )\r\n\t\t{\r\n\t\t\targ_values = {\r\n\t\t\t\tservice:arg_values.get_service(),\r\n\t\t\t\toperation:arg_values.get_operation(),\r\n\t\t\t\tsocket_id:arg_values.get_socket_id()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper(properties, methods, arg_values)\r\n\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_service_response = true\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/services/service_response.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1316,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/service_response.js",
    "static": true,
    "longname": "js/services/service_response.js~context",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/services/service_response.js",
    "importStyle": null,
    "description": "Contextual constant for this file logs.",
    "lineNumber": 14,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 1317,
    "kind": "variable",
    "name": "properties",
    "memberof": "js/services/service_response.js",
    "static": true,
    "longname": "js/services/service_response.js~properties",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/services/service_response.js",
    "importStyle": null,
    "description": "Request properties array.",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 1318,
    "kind": "variable",
    "name": "methods",
    "memberof": "js/services/service_response.js",
    "static": true,
    "longname": "js/services/service_response.js~methods",
    "access": "private",
    "export": false,
    "importPath": "devapt-core-common/js/services/service_response.js",
    "importStyle": null,
    "description": "Response methods array.",
    "lineNumber": 96,
    "type": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 1319,
    "kind": "class",
    "name": "ServiceResponse",
    "memberof": "js/services/service_response.js",
    "static": true,
    "longname": "js/services/service_response.js~ServiceResponse",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/services/service_response.js",
    "importStyle": "ServiceResponse",
    "description": "Service response class.",
    "lineNumber": 106,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/introspectable.js~Introspectable"
    ]
  },
  {
    "__docId__": 1320,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/service_response.js~ServiceResponse",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/service_response.js~ServiceResponse#constructor",
    "access": "public",
    "description": "Create a Service response instance.",
    "lineNumber": 115,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_values",
        "description": "values object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1321,
    "kind": "member",
    "name": "is_service_response",
    "memberof": "js/services/service_response.js~ServiceResponse",
    "static": false,
    "longname": "js/services/service_response.js~ServiceResponse#is_service_response",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 134,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1322,
    "kind": "file",
    "name": "js/state_store/map_store.js",
    "content": "// NPM IMPORTS\r\nimport { Map, fromJS } from 'immutable'\r\n\r\n// COMMON IMPORTS\r\nimport StateStore from './state_store'\r\n\r\n\r\nlet context = 'common/state_store/redux_store'\r\n\r\n\r\n\r\n/**\r\n * Immutable.Map class to deal with state storing and mutations.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class MapStore extends StateStore\r\n{\r\n\t/**\r\n\t * Create a Immutable.Map state Store instance.\r\n\t * \r\n\t * @param {object} arg_initial_state - initial state.\r\n\t * @param {string} arg_log_context - trace context.\r\n\t * @param {LoggerManager} arg_logger_manager - logger manager object (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_initial_state, arg_log_context, arg_logger_manager)\r\n\t{\r\n\t\tconst my_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(my_context, arg_logger_manager)\r\n\r\n\t\tthis.is_mutable = true\r\n\t\tthis.use_immutable = true\r\n\r\n\t\tthis.root = arg_initial_state ? fromJS(arg_initial_state).toMap() : new Map()\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Get current state.\r\n\t * \r\n\t * @returns {Immutable}\r\n\t */\r\n\tget_state()\r\n\t{\r\n\t\treturn this.root\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Set/Replace current state.\r\n\t * \r\n\t * @param {object} arg_state - new state.\r\n\t * \r\n\t * @returns {Immutable}\r\n\t */\r\n\tset_state(arg_state)\r\n\t{\r\n\t\tthis.root = arg_state ? fromJS(arg_state).toMap() : new Map()\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * Dispatch a requested action to mutate current state.\r\n\t * \r\n\t * @param {object} arg_action - action record: { type:'...', ... }.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t/* eslint no-unused-vars: \"off\" */\r\n\tdispatch(arg_action)\r\n\t{\r\n\t\tthrow Error('Map store does not implement dispatch method')\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * Register a handle on state mutations.\r\n\t * \r\n\t * @param {function} arg_handle - state changes handle as f(old_state, new_state).\r\n\t * \r\n\t * @returns {function} - unsubscribe function\r\n\t */\r\n\t/* eslint no-unused-vars: \"off\" */\r\n\tsubscribe(arg_handle)\r\n\t{\r\n\t\tthrow Error('Map store does not implement subscribe method')\r\n\t}\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/state_store/map_store.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1323,
    "kind": "variable",
    "name": "context",
    "memberof": "js/state_store/map_store.js",
    "static": true,
    "longname": "js/state_store/map_store.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/state_store/map_store.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1324,
    "kind": "class",
    "name": "MapStore",
    "memberof": "js/state_store/map_store.js",
    "static": true,
    "longname": "js/state_store/map_store.js~MapStore",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/state_store/map_store.js",
    "importStyle": "MapStore",
    "description": "Immutable.Map class to deal with state storing and mutations.",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/state_store/state_store.js~StateStore"
    ]
  },
  {
    "__docId__": 1325,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/state_store/map_store.js~MapStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/state_store/map_store.js~MapStore#constructor",
    "access": "public",
    "description": "Create a Immutable.Map state Store instance.",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_initial_state",
        "description": "initial state."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context."
      },
      {
        "nullable": null,
        "types": [
          "LoggerManager"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_logger_manager",
        "description": "logger manager object (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1326,
    "kind": "member",
    "name": "is_mutable",
    "memberof": "js/state_store/map_store.js~MapStore",
    "static": false,
    "longname": "js/state_store/map_store.js~MapStore#is_mutable",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1327,
    "kind": "member",
    "name": "use_immutable",
    "memberof": "js/state_store/map_store.js~MapStore",
    "static": false,
    "longname": "js/state_store/map_store.js~MapStore#use_immutable",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1328,
    "kind": "member",
    "name": "root",
    "memberof": "js/state_store/map_store.js~MapStore",
    "static": false,
    "longname": "js/state_store/map_store.js~MapStore#root",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1329,
    "kind": "method",
    "name": "get_state",
    "memberof": "js/state_store/map_store.js~MapStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/state_store/map_store.js~MapStore#get_state",
    "access": "public",
    "description": "Get current state.",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Immutable}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Immutable"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1330,
    "kind": "method",
    "name": "set_state",
    "memberof": "js/state_store/map_store.js~MapStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/state_store/map_store.js~MapStore#set_state",
    "access": "public",
    "description": "Set/Replace current state.",
    "lineNumber": 61,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Immutable}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "new state."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Immutable"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1332,
    "kind": "method",
    "name": "dispatch",
    "memberof": "js/state_store/map_store.js~MapStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/state_store/map_store.js~MapStore#dispatch",
    "access": "public",
    "description": "Dispatch a requested action to mutate current state.",
    "lineNumber": 76,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_action",
        "description": "action record: { type:'...', ... }."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1333,
    "kind": "method",
    "name": "subscribe",
    "memberof": "js/state_store/map_store.js~MapStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/state_store/map_store.js~MapStore#subscribe",
    "access": "public",
    "description": "Register a handle on state mutations.",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} - unsubscribe function"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_handle",
        "description": "state changes handle as f(old_state, new_state)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "unsubscribe function"
    }
  },
  {
    "__docId__": 1334,
    "kind": "file",
    "name": "js/state_store/redux_store.js",
    "content": "// NPM IMPORTS\r\nimport { createStore/*, combineReducers*/ } from 'redux'\r\nimport { fromJS } from 'immutable'\r\n\r\n// COMMON IMPORTS\r\nimport StateStore from './state_store'\r\n\r\n\r\nlet context = 'common/state_store/redux_store'\r\n\r\n\r\n\r\n/**\r\n * @file Redux class to deal with state storing and mutations.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class ReduxStore extends StateStore\r\n{\r\n\t/**\r\n\t * Create a Redux state Store instance.\r\n\t * @class ReduxStore\r\n\t * @extends StateStore\r\n\t * \r\n\t * @param {function} arg_reducer - state reducer.\r\n\t * @param {object} arg_initial_state - initial state.\r\n\t * @param {string} arg_log_context - trace context.\r\n\t * @param {LoggerManager} arg_logger_manager - logger manager object (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_reducer, arg_initial_state, arg_log_context, arg_logger_manager)\r\n\t{\r\n\t\tconst my_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(my_context, arg_logger_manager)\r\n\r\n\t\tthis.is_mutable = true\r\n\t\tthis.use_immutable = true\r\n\r\n\t\tthis.store = createStore(arg_reducer, fromJS(arg_initial_state) )\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * Get current state.\r\n\t * \r\n\t * @returns {Immutable}\r\n\t */\r\n\tget_state()\r\n\t{\r\n\t\treturn this.store.getState()\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * Set/Replace current state.\r\n\t * \r\n\t * @param {object} arg_state - new state.\r\n\t * \r\n\t * @returns {Immutable}\r\n\t */\r\n\tset_state(/*arg_state*/)\r\n\t{\r\n\t\tthrow Error('Redux store does not permit to set a state directly')\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Dispatch a requested action to mutate current state.\r\n\t * \r\n\t * @param {object} arg_action - action record: { type:'...', ... }.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdispatch(arg_action)\r\n\t{\r\n\t\t// console.log(context + ':dispatch:action', arg_action)\r\n\t\tthis.store.dispatch(arg_action)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Register a handle on state mutations.\r\n\t * \r\n\t * @param {function} arg_handle - state changes handle as f(old_state, new_state).\r\n\t * \r\n\t * @returns {function} - unsubscribe function\r\n\t */\r\n\tsubscribe(arg_handle)\r\n\t{\r\n\t\treturn this.store.subscribe(arg_handle)\r\n\t}\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/state_store/redux_store.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1335,
    "kind": "variable",
    "name": "context",
    "memberof": "js/state_store/redux_store.js",
    "static": true,
    "longname": "js/state_store/redux_store.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/state_store/redux_store.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1336,
    "kind": "class",
    "name": "ReduxStore",
    "memberof": "js/state_store/redux_store.js",
    "static": true,
    "longname": "js/state_store/redux_store.js~ReduxStore",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/state_store/redux_store.js",
    "importStyle": "ReduxStore",
    "description": "",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Redux class to deal with state storing and mutations."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/state_store/state_store.js~StateStore"
    ]
  },
  {
    "__docId__": 1337,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/state_store/redux_store.js~ReduxStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/state_store/redux_store.js~ReduxStore#constructor",
    "access": "public",
    "description": "Create a Redux state Store instance.",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "ReduxStore"
      },
      {
        "tagName": "@extends",
        "tagValue": "StateStore"
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_reducer",
        "description": "state reducer."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_initial_state",
        "description": "initial state."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context."
      },
      {
        "nullable": null,
        "types": [
          "LoggerManager"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_logger_manager",
        "description": "logger manager object (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1338,
    "kind": "member",
    "name": "is_mutable",
    "memberof": "js/state_store/redux_store.js~ReduxStore",
    "static": false,
    "longname": "js/state_store/redux_store.js~ReduxStore#is_mutable",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1339,
    "kind": "member",
    "name": "use_immutable",
    "memberof": "js/state_store/redux_store.js~ReduxStore",
    "static": false,
    "longname": "js/state_store/redux_store.js~ReduxStore#use_immutable",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1340,
    "kind": "member",
    "name": "store",
    "memberof": "js/state_store/redux_store.js~ReduxStore",
    "static": false,
    "longname": "js/state_store/redux_store.js~ReduxStore#store",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1341,
    "kind": "method",
    "name": "get_state",
    "memberof": "js/state_store/redux_store.js~ReduxStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/state_store/redux_store.js~ReduxStore#get_state",
    "access": "public",
    "description": "Get current state.",
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Immutable}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Immutable"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1342,
    "kind": "method",
    "name": "set_state",
    "memberof": "js/state_store/redux_store.js~ReduxStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/state_store/redux_store.js~ReduxStore#set_state",
    "access": "public",
    "description": "Set/Replace current state.",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Immutable}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "new state."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Immutable"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1343,
    "kind": "method",
    "name": "dispatch",
    "memberof": "js/state_store/redux_store.js~ReduxStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/state_store/redux_store.js~ReduxStore#dispatch",
    "access": "public",
    "description": "Dispatch a requested action to mutate current state.",
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_action",
        "description": "action record: { type:'...', ... }."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1344,
    "kind": "method",
    "name": "subscribe",
    "memberof": "js/state_store/redux_store.js~ReduxStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/state_store/redux_store.js~ReduxStore#subscribe",
    "access": "public",
    "description": "Register a handle on state mutations.",
    "lineNumber": 95,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} - unsubscribe function"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_handle",
        "description": "state changes handle as f(old_state, new_state)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "unsubscribe function"
    }
  },
  {
    "__docId__": 1345,
    "kind": "file",
    "name": "js/state_store/state_store.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T        from '../utils/types'\r\nimport Loggable from '../base/loggable'\r\n\r\n\r\nlet context = 'common/state_store/store'\r\n\r\n\r\n\r\n/**\r\n * Base class to deal with state storing and mutations.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class StateStore extends Loggable\r\n{\r\n\t/**\r\n\t * Create a state Store instance.\r\n\t * \r\n\t * @param {string} arg_log_context - trace context.\r\n\t * @param {LoggerManager} arg_logger_manager - logger manager object (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_log_context, arg_logger_manager)\r\n\t{\r\n\t\tconst my_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(my_context, arg_logger_manager)\r\n\r\n\t\tthis.is_mutable = true\r\n\t\tthis.use_immutable = false\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Get current state.\r\n\t * @abstract\r\n\t * \r\n\t * @returns {object}\r\n\t */\r\n\tget_state()\r\n\t{\r\n\t\treturn {}\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * Set/Replace current state.\r\n\t * @abstract\r\n\t * \r\n\t * @param {object} arg_state - new state.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t/* eslint no-unused-vars: \"off\" */\r\n\tset_state(arg_state)\r\n\t{\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Dispatch a requested action to mutate current state.\r\n\t * @abstract\r\n\t * \r\n\t * @param {object} arg_action - action record: { type:'...', ... }.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t/* eslint no-unused-vars: \"off\" */\r\n\tdispatch(arg_action)\r\n\t{\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Dispatch a state action.\r\n\t * \r\n\t * @param {object} arg_action - action object with a 'type' attribute.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdispatch_action(arg_action)\r\n\t{\r\n\t\tassert( T.isObject(arg_action) && T.isString(arg_action.type), context + ':dispatch_action:bad action object')\r\n\t\tthis.dispatch(arg_action)\t\t\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Register a handle on state mutations.\r\n\t * @abstract\r\n\t * \r\n\t * @param {function} arg_handle - state changes handle as f(old_state, new_state).\r\n\t * \r\n\t * @returns {function} - unsubscribe function\r\n\t */\r\n\t/* eslint no-unused-vars: \"off\" */\r\n\tsubscribe(arg_handle)\r\n\t{\r\n\t}\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/state_store/state_store.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1346,
    "kind": "variable",
    "name": "context",
    "memberof": "js/state_store/state_store.js",
    "static": true,
    "longname": "js/state_store/state_store.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/state_store/state_store.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1347,
    "kind": "class",
    "name": "StateStore",
    "memberof": "js/state_store/state_store.js",
    "static": true,
    "longname": "js/state_store/state_store.js~StateStore",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/state_store/state_store.js",
    "importStyle": "StateStore",
    "description": "Base class to deal with state storing and mutations.",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/loggable.js~Loggable"
    ]
  },
  {
    "__docId__": 1348,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/state_store/state_store.js~StateStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/state_store/state_store.js~StateStore#constructor",
    "access": "public",
    "description": "Create a state Store instance.",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context."
      },
      {
        "nullable": null,
        "types": [
          "LoggerManager"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_logger_manager",
        "description": "logger manager object (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1349,
    "kind": "member",
    "name": "is_mutable",
    "memberof": "js/state_store/state_store.js~StateStore",
    "static": false,
    "longname": "js/state_store/state_store.js~StateStore#is_mutable",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1350,
    "kind": "member",
    "name": "use_immutable",
    "memberof": "js/state_store/state_store.js~StateStore",
    "static": false,
    "longname": "js/state_store/state_store.js~StateStore#use_immutable",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1351,
    "kind": "method",
    "name": "get_state",
    "memberof": "js/state_store/state_store.js~StateStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/state_store/state_store.js~StateStore#get_state",
    "access": "public",
    "description": "Get current state.",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true,
    "params": []
  },
  {
    "__docId__": 1352,
    "kind": "method",
    "name": "set_state",
    "memberof": "js/state_store/state_store.js~StateStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/state_store/state_store.js~StateStore#set_state",
    "access": "public",
    "description": "Set/Replace current state.",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "new state."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true
  },
  {
    "__docId__": 1353,
    "kind": "method",
    "name": "dispatch",
    "memberof": "js/state_store/state_store.js~StateStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/state_store/state_store.js~StateStore#dispatch",
    "access": "public",
    "description": "Dispatch a requested action to mutate current state.",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_action",
        "description": "action record: { type:'...', ... }."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true
  },
  {
    "__docId__": 1354,
    "kind": "method",
    "name": "dispatch_action",
    "memberof": "js/state_store/state_store.js~StateStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/state_store/state_store.js~StateStore#dispatch_action",
    "access": "public",
    "description": "Dispatch a state action.",
    "lineNumber": 90,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_action",
        "description": "action object with a 'type' attribute."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1355,
    "kind": "method",
    "name": "subscribe",
    "memberof": "js/state_store/state_store.js~StateStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/state_store/state_store.js~StateStore#subscribe",
    "access": "public",
    "description": "Register a handle on state mutations.",
    "lineNumber": 107,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} - unsubscribe function"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_handle",
        "description": "state changes handle as f(old_state, new_state)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "unsubscribe function"
    },
    "abstract": true
  },
  {
    "__docId__": 1356,
    "kind": "file",
    "name": "js/tasks/command_task.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport is_browser from '../utils/is_browser'\r\nimport Task from './task'\r\n\r\n\r\nlet context = 'common/tasks/command_task'\r\n\r\n\r\n\r\n/**\r\n * @file CommandTask base class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class CommandTask extends Task\r\n{\r\n\t/**\r\n\t * Create a CommandTask instance.\r\n\t * @class CommandTask\r\n\t * @extends Task\r\n\t * \r\n\t * @param {object} arg_settings - task settings.\r\n\t * \r\n     * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_settings)\r\n\t{\r\n\t\tassert( T.isObject(arg_settings), context + ':constructor:bad settings object')\r\n\t\tassert( T.isObject(arg_settings.command) && arg_settings.command.is_topology_define_command, context + ':constructor:bad settings.command object')\r\n\r\n\t\tsuper(arg_settings)\r\n\r\n\t\tthis.is_task_command = true\r\n\r\n\t\tthis._init_with_command(arg_settings.command)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Init task with a Command instance.\r\n\t * \r\n\t * @param {TopologyDefineCommand} arg_command - Command instance.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t_init_with_command(arg_command)\r\n\t{\r\n\t\tthis._process_cb = (...args)=>{\r\n\t\t\tif ( is_browser() )\r\n\t\t\t{\r\n\t\t\t\tif (arg_command.command_type == \"display\")\r\n\t\t\t\t{\r\n\t\t\t\t\tconst url = arg_command.command_url\r\n\t\t\t\t\tconst url_target = arg_command.command_url_target\r\n\t\t\t\t\tconst view = arg_command.command_view\r\n\t\t\t\t\tconst menubar = arg_command.command_menubar\r\n\r\n\t\t\t\t\tif ( T.isString(view) || T.isString(menubar) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twindow.document.devapt().runtime().router().display_content(view, menubar)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( T.isString(url) && T.isString(url_target) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.get(url).then(\r\n\t\t\t\t\t\t\t(html)=>{\r\n\t\t\t\t\t\t\t\tif (url_target == 'body')\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t$(document.body).html(html)\r\n\t\t\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t$(url_target).html(html)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/tasks/command_task.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1357,
    "kind": "variable",
    "name": "context",
    "memberof": "js/tasks/command_task.js",
    "static": true,
    "longname": "js/tasks/command_task.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/tasks/command_task.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1358,
    "kind": "class",
    "name": "CommandTask",
    "memberof": "js/tasks/command_task.js",
    "static": true,
    "longname": "js/tasks/command_task.js~CommandTask",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/tasks/command_task.js",
    "importStyle": "CommandTask",
    "description": "",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "CommandTask base class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/tasks/task.js~Task"
    ]
  },
  {
    "__docId__": 1359,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/tasks/command_task.js~CommandTask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/tasks/command_task.js~CommandTask#constructor",
    "access": "public",
    "description": "Create a CommandTask instance.",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "CommandTask"
      },
      {
        "tagName": "@extends",
        "tagValue": "Task"
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "task settings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1360,
    "kind": "member",
    "name": "is_task_command",
    "memberof": "js/tasks/command_task.js~CommandTask",
    "static": false,
    "longname": "js/tasks/command_task.js~CommandTask#is_task_command",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1361,
    "kind": "method",
    "name": "_init_with_command",
    "memberof": "js/tasks/command_task.js~CommandTask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/tasks/command_task.js~CommandTask#_init_with_command",
    "access": "private",
    "description": "Init task with a Command instance.",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "TopologyDefineCommand"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_command",
        "description": "Command instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1362,
    "kind": "member",
    "name": "_process_cb",
    "memberof": "js/tasks/command_task.js~CommandTask",
    "static": false,
    "longname": "js/tasks/command_task.js~CommandTask#_process_cb",
    "access": "private",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1363,
    "kind": "file",
    "name": "js/tasks/executable_task.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport Task from './task'\r\n\r\n\r\nlet context = 'common/tasks/executable_task'\r\n\r\n\r\n\r\n/**\r\n * @file ExecutableTask base class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class ExecutableTask extends Task\r\n{\r\n\t/**\r\n\t * Create a ExecutableTask instance.\r\n\t * @class ExecutableTask\r\n\t * @extends Task\r\n\t * \r\n\t * @param {object} arg_settings - task settings.\r\n\t * \r\n     * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_settings)\r\n\t{\r\n\t\tassert( T.isObject(arg_settings), context + ':constructor:bad settings object')\r\n\t\tassert( T.isObject(arg_settings.executable) && arg_settings.executable.is_executable, context + ':constructor:bad settings.executable object')\r\n\r\n\t\tsuper(arg_settings)\r\n\r\n\t\tthis.is_task_executable = true\r\n\r\n\t\tthis._init_with_executable(arg_settings.executable, arg_settings.executable_prepare_settings)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Init task with an Executable instance.\r\n\t * \r\n\t * @param {Executable} arg_executable - Executable instance.\r\n\t * @param {object} arg_executable_settings - instance settings for prepare method.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t_init_with_executable(arg_executable, arg_executable_settings=undefined)\r\n\t{\r\n\t\tthis._process_cb = (...args)=>{\r\n\t\t\targ_executable.prepare(arg_executable_settings)\r\n\t\t\targ_executable.execute(args)\r\n\t\t\t.then(\r\n\t\t\t\t(...args)=>{\r\n\t\t\t\t\targ_executable.finish()\r\n\t\t\t\t\treturn args\r\n\t\t\t\t},\r\n\t\t\t\t(reason)=>{\r\n\t\t\t\t\tthrow reason\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n}\r\n\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/tasks/executable_task.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1364,
    "kind": "variable",
    "name": "context",
    "memberof": "js/tasks/executable_task.js",
    "static": true,
    "longname": "js/tasks/executable_task.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/tasks/executable_task.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1365,
    "kind": "class",
    "name": "ExecutableTask",
    "memberof": "js/tasks/executable_task.js",
    "static": true,
    "longname": "js/tasks/executable_task.js~ExecutableTask",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/tasks/executable_task.js",
    "importStyle": "ExecutableTask",
    "description": "",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "ExecutableTask base class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/tasks/task.js~Task"
    ]
  },
  {
    "__docId__": 1366,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/tasks/executable_task.js~ExecutableTask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/tasks/executable_task.js~ExecutableTask#constructor",
    "access": "public",
    "description": "Create a ExecutableTask instance.",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "ExecutableTask"
      },
      {
        "tagName": "@extends",
        "tagValue": "Task"
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "task settings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1367,
    "kind": "member",
    "name": "is_task_executable",
    "memberof": "js/tasks/executable_task.js~ExecutableTask",
    "static": false,
    "longname": "js/tasks/executable_task.js~ExecutableTask#is_task_executable",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1368,
    "kind": "method",
    "name": "_init_with_executable",
    "memberof": "js/tasks/executable_task.js~ExecutableTask",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/tasks/executable_task.js~ExecutableTask#_init_with_executable",
    "access": "private",
    "description": "Init task with an Executable instance.",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Executable"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_executable",
        "description": "Executable instance."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_executable_settings",
        "description": "instance settings for prepare method."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1369,
    "kind": "member",
    "name": "_process_cb",
    "memberof": "js/tasks/executable_task.js~ExecutableTask",
    "static": false,
    "longname": "js/tasks/executable_task.js~ExecutableTask#_process_cb",
    "access": "private",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1370,
    "kind": "file",
    "name": "js/tasks/task.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\n\r\nlet context = 'common/tasks/task'\r\n\r\n\r\n\r\n/**\r\n * @file Task base class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class Task\r\n{\r\n\t/**\r\n\t * Create a Task instance.\r\n\t * @class Task\r\n\t * @extends Object\r\n\t * \r\n\t * API:\r\n\t * \t\t->constructor(arg_settings)\r\n\t * \r\n\t * \t\t->_run(..args):Promise - get a cached value with its key.\r\n\t * \r\n\t * @param {object} arg_settings - task settings.\r\n\t * \r\n     * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_settings)\r\n\t{\r\n\t\tassert( T.isObject(arg_settings), context + ':constructor:bad settings object')\r\n\r\n\t\tthis.is_task = true\r\n\r\n\t\t// SET INFO ATTRIBUTES\r\n\t\tthis.name = T.isString(arg_settings.name) ? arg_settings.name : undefined\r\n\t\tthis.description = T.isString(arg_settings.description) ? arg_settings.description : undefined\r\n\t\tthis.version = T.isString(arg_settings.version) ? arg_settings.version : undefined\r\n\t\tthis.type = T.isString(arg_settings.type) ? arg_settings.type : undefined\r\n\r\n\t\t// SET PROCESSING CALLBACK\r\n\t\tthis._process_cb = T.isFunction(arg_settings.process_cb) ? arg_settings.process_cb : ()=>undefined\r\n\r\n\t\t// SET SUCCESS/FAILURE ATTRIBUTES\r\n\t\tthis._success_cb = T.isFunction(arg_settings.success_cb) ? arg_settings.success_cb : ()=>undefined\r\n\t\tthis._failure_cb = T.isFunction(arg_settings.failure_cb) ? arg_settings.failure_cb : ()=>undefined\r\n\r\n\t}\r\n\t\r\n\r\n\r\n\t/**\r\n\t * Run task.\r\n\t * @public\r\n\t * \r\n\t * @param {any} args - variadic arguments.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tperform(...args)\r\n\t{\r\n\t\tthis._run(args).then(\r\n\t\t\t(task_result)=>{\r\n\t\t\t\tif (task_result.result == 'done')\r\n\t\t\t\t{\r\n\t\t\t\t\tthis._success_cb(this, task_result.datas)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._failure_cb(this, task_result.datas)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t(reason)=>{\r\n\t\t\t\tthis._failure_cb(reason)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Run task.\r\n\t * @private\r\n\t * \r\n\t * @param {any} args - variadic arguments.\r\n\t * \r\n\t * @returns {Promise} - Promise of task result.\r\n\t */\r\n\t_run(...args)\r\n\t{\r\n\t\tconst task_result = {\r\n\t\t\tresult:'unknow',\r\n\t\t\tdatas:undefined\r\n\t\t}\r\n\r\n\t\ttry{\r\n\t\t\ttask_result.datas = this._process_cb(args)\r\n\t\t\ttask_result.result = 'done'\r\n\t\t} catch(e) {\r\n\t\t\ttask_result.result = 'exception'\r\n\t\t\ttask_result.datas = e\r\n\t\t}\r\n\t\treturn Promise.resolve(task_result)\r\n\t}\r\n}\r\n\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/tasks/task.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1371,
    "kind": "variable",
    "name": "context",
    "memberof": "js/tasks/task.js",
    "static": true,
    "longname": "js/tasks/task.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/tasks/task.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1372,
    "kind": "class",
    "name": "Task",
    "memberof": "js/tasks/task.js",
    "static": true,
    "longname": "js/tasks/task.js~Task",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/tasks/task.js",
    "importStyle": "Task",
    "description": "",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Task base class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 1373,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/tasks/task.js~Task",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/tasks/task.js~Task#constructor",
    "access": "public",
    "description": "Create a Task instance.",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Task"
      },
      {
        "tagName": "@extends",
        "tagValue": "Object\n\nAPI:\n\t\t->constructor(arg_settings)\n\n\t\t->_run(..args):Promise - get a cached value with its key."
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "task settings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1374,
    "kind": "member",
    "name": "is_task",
    "memberof": "js/tasks/task.js~Task",
    "static": false,
    "longname": "js/tasks/task.js~Task#is_task",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1375,
    "kind": "member",
    "name": "name",
    "memberof": "js/tasks/task.js~Task",
    "static": false,
    "longname": "js/tasks/task.js~Task#name",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1376,
    "kind": "member",
    "name": "description",
    "memberof": "js/tasks/task.js~Task",
    "static": false,
    "longname": "js/tasks/task.js~Task#description",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1377,
    "kind": "member",
    "name": "version",
    "memberof": "js/tasks/task.js~Task",
    "static": false,
    "longname": "js/tasks/task.js~Task#version",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1378,
    "kind": "member",
    "name": "type",
    "memberof": "js/tasks/task.js~Task",
    "static": false,
    "longname": "js/tasks/task.js~Task#type",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1379,
    "kind": "member",
    "name": "_process_cb",
    "memberof": "js/tasks/task.js~Task",
    "static": false,
    "longname": "js/tasks/task.js~Task#_process_cb",
    "access": "private",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1380,
    "kind": "member",
    "name": "_success_cb",
    "memberof": "js/tasks/task.js~Task",
    "static": false,
    "longname": "js/tasks/task.js~Task#_success_cb",
    "access": "private",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1381,
    "kind": "member",
    "name": "_failure_cb",
    "memberof": "js/tasks/task.js~Task",
    "static": false,
    "longname": "js/tasks/task.js~Task#_failure_cb",
    "access": "private",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1382,
    "kind": "method",
    "name": "perform",
    "memberof": "js/tasks/task.js~Task",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/tasks/task.js~Task#perform",
    "access": "public",
    "description": "Run task.",
    "lineNumber": 65,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "variadic arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1383,
    "kind": "method",
    "name": "_run",
    "memberof": "js/tasks/task.js~Task",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/tasks/task.js~Task#_run",
    "access": "private",
    "description": "Run task.",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of task result."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "variadic arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of task result."
    }
  },
  {
    "__docId__": 1384,
    "kind": "file",
    "name": "js/tasks/task_manager.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport async from 'async'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\n\r\nlet context = 'common/tasks/task_manager'\r\n\r\n\r\n\r\n/**\r\n * @file TaskManager class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class TaskManager\r\n{\r\n\t/**\r\n\t * Create a TaskManager instance.\r\n\t * @class TaskManager\r\n\t * @extends Object\r\n\t * \r\n\t * API:\r\n\t * \t\t->constructor(arg_settings)\r\n\t * \r\n\t * \t\t->perform(arg_task, ...args):Promise - run a task.\r\n\t * \r\n\t * @param {object} arg_settings - task settings.\r\n\t * \r\n     * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_settings)\r\n\t{\r\n\t\tthis.is_task_manager = true\r\n\r\n\t\tthis._running_tasks=[]\r\n\t}\r\n\t\r\n\r\n\r\n\t/**\r\n\t * Run a task.\r\n\t * @public\r\n\t * \r\n\t * @param {Task} arg_task - task instance.\r\n\t * @param {any} args - variadic arguments.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tperform(arg_taks, ...args)\r\n\t{\r\n\t\tassert( T.isObject(arg_task) && arg_task.is_task, context + ':perform:bad task object')\r\n\t\t\r\n\t\tasync.nextTick(\r\n\t\t\t()=>{\r\n\t\t\t\tconsole.debug('perfom task:' + arg_task.name)\r\n\t\t\t\tconst index = this._running_task.length\r\n\t\t\t\tthis._running_task.push(arg_task)\r\n\t\t\t\t\r\n\t\t\t\targ_task.perform(args)\r\n\r\n\t\t\t\tthis._running_task.splice(index, 1)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n}\r\n\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/tasks/task_manager.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1385,
    "kind": "variable",
    "name": "context",
    "memberof": "js/tasks/task_manager.js",
    "static": true,
    "longname": "js/tasks/task_manager.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/tasks/task_manager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1386,
    "kind": "class",
    "name": "TaskManager",
    "memberof": "js/tasks/task_manager.js",
    "static": true,
    "longname": "js/tasks/task_manager.js~TaskManager",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/tasks/task_manager.js",
    "importStyle": "TaskManager",
    "description": "",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "TaskManager class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 1387,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/tasks/task_manager.js~TaskManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/tasks/task_manager.js~TaskManager#constructor",
    "access": "public",
    "description": "Create a TaskManager instance.",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TaskManager"
      },
      {
        "tagName": "@extends",
        "tagValue": "Object\n\nAPI:\n\t\t->constructor(arg_settings)\n\n\t\t->perform(arg_task, ...args):Promise - run a task."
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "task settings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1388,
    "kind": "member",
    "name": "is_task_manager",
    "memberof": "js/tasks/task_manager.js~TaskManager",
    "static": false,
    "longname": "js/tasks/task_manager.js~TaskManager#is_task_manager",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1389,
    "kind": "member",
    "name": "_running_tasks",
    "memberof": "js/tasks/task_manager.js~TaskManager",
    "static": false,
    "longname": "js/tasks/task_manager.js~TaskManager#_running_tasks",
    "access": "private",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 1390,
    "kind": "method",
    "name": "perform",
    "memberof": "js/tasks/task_manager.js~TaskManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/tasks/task_manager.js~TaskManager#perform",
    "access": "public",
    "description": "Run a task.",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Task"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_task",
        "description": "task instance."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "variadic arguments."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1391,
    "kind": "file",
    "name": "js/test/test_base.js",
    "content": "\r\n// NPM IMPORTS\r\nimport {describe, it} from 'mocha'\r\nimport {expect} from 'chai'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport Collection from '../base/collection'\r\nimport Resource from '../base/resource'\r\n\r\n\r\n\r\ndescribe('common/base',\r\n\t() => {\r\n\t\tit('Collection',\r\n\t\t\t() => {\r\n\t\t\t\tlet items = new Collection()\r\n\t\t\t\tlet res1 = new Resource('res1', { setting1:'ABC' })\r\n\t\t\t\tlet res2 = new Resource('res2', { setting2:'ABC' })\r\n\t\t\t\tlet res3 = new Resource('res3', { setting3:'ABC' })\r\n\t\t\t\t\r\n\t\t\t\titems.add(res1)\r\n\t\t\t\titems.add(res2)\r\n\t\t\t\titems.add(res3)\r\n\t\t\t\t\r\n\t\t\t\tlet found1 = items.find_by_name('res1')\r\n\t\t\t\texpect( T.isObject(found1) ).to.be.true\r\n\t\t\t\texpect(found1.$name == 'res1').to.be.true\r\n\t\t\t\texpect(found1.$type == 'resources').to.be.true\r\n\t\t\t\texpect(found1.$class == 'Resource').to.be.true\r\n\t\t\t\texpect(found1.$settings.setting1 == 'ABC').to.be.true\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n)\r\n\r\n// curl http://localhost:8080/tutorial-rest/api/v1/views/VIEW_HOME\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/test/test_base.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1392,
    "kind": "file",
    "name": "js/test/test_store.js",
    "content": "/*import {describe, it} from 'mocha';\r\nimport {expect} from 'chai';\r\nimport {List, Map} from 'immutable';\r\nimport { ActionCreators } from 'redux-undo';\r\n\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport { store, config, runtime } from '../store/index'\r\nimport { dispatch_store_config_get_value } from '../store/config/actions'\r\nimport { dispatch_store_runtime_get_value } from '../store/runtime/actions'\r\nimport { dispatch_store_runtime_apps_create } from '../store/runtime/applications/actions'\r\n\r\nimport * as test_load_config from '../store/test/test_load_config'\r\n\r\n\r\n\r\ndescribe('store',\r\n\t() => {\r\n\t\tit('create_store()',\r\n\t\t\t() => {\r\n\t\t\t\tlet state = store.getState()\r\n\t\t\t\tlet config_present = state.config_reducer.present\r\n\t\t\t\tlet runtime_present = state.runtime_reducer\r\n\t\t\t\t\r\n\t\t\t\tlet config_obj = config_present.toJS()\r\n\t\t\t\t// console.log(config_obj, 'config_obj')\r\n\t\t\t\t\r\n\t\t\t\tconfig_obj = config_obj.config\r\n\t\t\t\t\r\n\t\t\t\tif (config_obj.modules && config_obj.modules.error)\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.log(config_obj.modules.error, 'config_obj.modules.error')\r\n\t\t\t\t\tconsole.log(config_obj.modules.errors, 'config_obj.modules.errors')\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\texpect( T.isObject(state) ).to.be.true\r\n\t\t\t\t\r\n\t\t\t\texpect(state).contain.keys('config_reducer', 'runtime_reducer')\r\n\t\t\t\t\r\n\t\t\t\texpect(config_present.has('config')).to.be.true\r\n\t\t\t\texpect(runtime_present.has('runtime')).to.be.true\r\n\t\t\t\t\r\n\t\t\t\texpect(config_present.get('config').has('error')).to.be.false\r\n\t\t\t\texpect(config_present.get('config').has('servers')).to.be.true\r\n\t\t\t\texpect(config_present.get('config').has('services')).to.be.true\r\n\t\t\t\texpect(config_present.get('config').has('applications')).to.be.true\r\n\t\t\t\texpect(config_present.get('config').has('modules')).to.be.true\r\n\t\t\t\texpect(config_present.get('config').has('plugins')).to.be.true\r\n\t\t\t\texpect(config_present.get('config').has('security')).to.be.true\r\n\t\t\t\t\r\n\t\t\t\texpect(runtime_present.get('runtime').has('error')).to.be.false\r\n\t\t\t\texpect(runtime_present.get('runtime').has('applications')).to.be.true\r\n\t\t\t\texpect(runtime_present.get('runtime').has('records')).to.be.true\r\n\t\t\t\texpect(runtime_present.get('runtime').has('instances')).to.be.true\r\n\t\t\t\texpect(runtime_present.get('runtime').has('security')).to.be.true\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\tit('store getters',\r\n\t\t\t() => {\r\n\t\t\t\t// let state = store.getState()\r\n\t\t\t\t// let config_present = state.config_reducer.present\r\n\t\t\t\t// let runtime_present = state.runtime_reducer.present\r\n\t\t\t\t\r\n\t\t\t\tlet store_config = devapt.runtime.get_registry().root\r\n\t\t\t\t// let store_runtime = runtime()\r\n\t\t\t\t\r\n\t\t\t\texpect( T.isObject(store_config) ).to.be.true\r\n\t\t\t\t// expect( T.isObject(store_runtime) ).to.be.true\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tlet value = null;\r\n\t\t\t\t\r\n\t\t\t\t// GET RESOURCES LIST\r\n\t\t\t\texpect(config).contain.keys('get_resources', 'get_views', 'get_models', 'get_menubars', 'get_menus', 'get_connexions', 'get_loggers')\r\n\t\t\t\t\r\n\t\t\t\tvalue = config.get_resources();\r\n\t\t\t\t// console.log(value, 'value')\r\n\t\t\t\texpect( T.isArray(value) ).to.be.true\r\n\t\t\t\t\r\n\t\t\t\tvalue = config.get_views();\r\n\t\t\t\t// console.log(value, 'value')\r\n\t\t\t\texpect( T.isArray(value) ).to.be.true\r\n\t\t\t\t\r\n\t\t\t\tvalue = config.get_models();\r\n\t\t\t\t// console.log(value, 'value')\r\n\t\t\t\texpect( T.isArray(value) ).to.be.true\r\n\t\t\t\t\r\n\t\t\t\tvalue = config.get_menubars();\r\n\t\t\t\t// console.log(value, 'value')\r\n\t\t\t\texpect( T.isArray(value) ).to.be.true\r\n\t\t\t\t\r\n\t\t\t\tvalue = config.get_menus();\r\n\t\t\t\t// console.log(value, 'value')\r\n\t\t\t\texpect( T.isArray(value) ).to.be.true\r\n\t\t\t\t\r\n\t\t\t\tvalue = config.get_connexions();\r\n\t\t\t\t// console.log(value, 'value')\r\n\t\t\t\texpect( T.isArray(value) ).to.be.true\r\n\t\t\t\t\r\n\t\t\t\tvalue = config.get_loggers();\r\n\t\t\t\t// console.log(value, 'value')\r\n\t\t\t\texpect( T.isArray(value) ).to.be.true\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t// GET A RESOURCE\r\n\t\t\t\texpect(config).contain.keys('get_resource', 'get_view', 'get_model', 'get_menubar', 'get_menu', 'get_connexion', 'get_logger')\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\t\r\n\t\tit('get config resource(\"VIEW_HOME\")',\r\n\t\t\t() => {\r\n\t\t\t\tconst RES_NAME = 'VIEW_HOME'\r\n\t\t\t\tconst RES_CLASS = 'IncludeView'\r\n\t\t\t\t\r\n\t\t\t\tlet value_obj = null\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tvalue_obj = config.get_resource(RES_NAME)\r\n\t\t\t\t\r\n\t\t\t\t// console.log(value_obj, 'value_obj')\r\n\t\t\t\t\r\n\t\t\t\texpect( T.isObject(value_obj) ).to.be.true\r\n\t\t\t\texpect( T.isString(value_obj.class_name) ).to.be.true\r\n\t\t\t\texpect( value_obj.class_name ).to.be.equal(RES_CLASS)\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tvalue_obj = config.get_view(RES_NAME)\r\n\t\t\t\t\r\n\t\t\t\t// console.log(value_obj, 'value_obj')\r\n\t\t\t\t\r\n\t\t\t\texpect( T.isObject(value_obj) ).to.be.true\r\n\t\t\t\texpect( T.isString(value_obj.class_name) ).to.be.true\r\n\t\t\t\texpect( value_obj.class_name ).to.be.equal(RES_CLASS)\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\t\r\n\t\tit('get config resource(\"HOME_MENUBAR\")',\r\n\t\t\t() => {\r\n\t\t\t\tconst RES_NAME = 'HOME_MENUBAR'\r\n\t\t\t\tconst RES_CLASS = 'Menubar'\r\n\t\t\t\t\r\n\t\t\t\tlet value_obj = null\r\n\t\t\t\t\r\n\t\t\t\tvalue_obj = config.get_resource(RES_NAME)\r\n\t\t\t\t// console.log(value_obj, 'value_obj')\r\n\t\t\t\texpect( T.isObject(value_obj) ).to.be.true\r\n\t\t\t\texpect( T.isString(value_obj.class_name) ).to.be.true\r\n\t\t\t\texpect( value_obj.class_name ).to.be.equal(RES_CLASS)\r\n\t\t\t\t\r\n\t\t\t\tvalue_obj = config.get_menubar(RES_NAME)\r\n\t\t\t\t// console.log(value_obj, 'value_obj')\r\n\t\t\t\texpect( T.isObject(value_obj) ).to.be.true\r\n\t\t\t\texpect( T.isString(value_obj.class_name) ).to.be.true\r\n\t\t\t\texpect( value_obj.class_name ).to.be.equal(RES_CLASS)\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\t\r\n\t\tit('create a runtime application for (\"tutorial-1\")',\r\n\t\t\t() => {\r\n\t\t\t\tconst APP_NAME = 'tutorial-1'\r\n\t\t\t\t\r\n\t\t\t\texpect( config().has('applications') ).to.be.true\r\n\t\t\t\texpect( runtime().has('applications') ).to.be.true\r\n\t\t\t\t\r\n\t\t\t\texpect( config().get('applications').toMap().has(APP_NAME) ).to.be.true\r\n\t\t\t\texpect( config.has_application(APP_NAME) ).to.be.true\r\n\t\t\t\texpect( runtime().get('applications').toMap().has(APP_NAME) ).to.be.false\r\n\t\t\t\texpect( runtime.has_application(APP_NAME) ).to.be.false\r\n\t\t\t\t\r\n\t\t\t\tdispatch_store_runtime_apps_create(store, APP_NAME, { app_setting_1:'hello' })\r\n\t\t\t\t\r\n\t\t\t\tconsole.log(runtime().get('applications').toMap().toJS(), 'runtime.applications')\r\n\t\t\t\t\r\n\t\t\t\texpect( config().get('applications').toMap().has(APP_NAME) ).to.be.true\r\n\t\t\t\texpect( runtime().get('applications').toMap().has(APP_NAME) ).to.be.true\r\n\t\t\t\texpect( runtime().hasIn(['applications', APP_NAME, 'app_setting_1']) ).to.be.true\r\n\t\t\t\t\r\n\t\t\t\tstore.dispatch( ActionCreators.undo() )\r\n\t\t\t\t\r\n\t\t\t\texpect( config().get('applications').toMap().has(APP_NAME) ).to.be.true\r\n\t\t\t\t// expect( runtime().get('applications').toMap().has(APP_NAME) ).to.be.false\r\n\t\t\t\t\r\n\t\t\t\tstore.dispatch( ActionCreators.redo() )\r\n\t\t\t\t\r\n\t\t\t\texpect( config().get('applications').toMap().has(APP_NAME) ).to.be.true\r\n\t\t\t\texpect( runtime().get('applications').toMap().has(APP_NAME) ).to.be.true\r\n\t\t\t\texpect( runtime().hasIn(['applications', APP_NAME, 'app_setting_1']) ).to.be.true\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n)\r\n*/",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/test/test_store.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1393,
    "kind": "file",
    "name": "js/test/test_transform.js",
    "content": "\r\n// NPM IMPORTS\r\n// import {describe, it} from 'mocha'\r\nimport {expect} from 'chai'\r\n\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport { extract, flat, transform } from '../utils/transform'\r\n\r\n\r\n\r\ndescribe('common/utils/transform',\r\n\t() => {\r\n\t\tit('Extract',\r\n\t\t\t() => {\r\n\t\t\t\tlet items = { v1:'a', v2:'b', v3:'c', v4:['d'] }\r\n\t\t\t\tlet xform1 = {\r\n\t\t\t\t\tresult_type:'object',\r\n\t\t\t\t\tfields:[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname:'v2',\r\n\t\t\t\t\t\t\tpath:'v2'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname:'v4',\r\n\t\t\t\t\t\t\tpath:'v4'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname:'v5',\r\n\t\t\t\t\t\t\tvalue:'v5'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst xform1_extract_v2_extractor = extract(xform1.fields[0])\r\n\t\t\t\tconst xform1_extract_v4_extractor = extract(xform1.fields[1])\r\n\t\t\t\tconst xform1_extract_v5_extractor = extract(xform1.fields[2])\r\n\t\t\t\t\r\n\t\t\t\t// console.log(T.isFunction(xform1_extract_v2_f), 'T.isFunction(xform1_extract_v2_f)')\r\n\t\t\t\t// console.log(xform1_extract_v2_f, '(xform1_extract_v2_f)')\r\n\t\t\t\t\r\n\t\t\t\texpect( T.isObject(xform1_extract_v2_extractor) ).to.be.true\r\n\t\t\t\texpect( T.isObject(xform1_extract_v4_extractor) ).to.be.true\r\n\t\t\t\texpect( T.isObject(xform1_extract_v5_extractor) ).to.be.true\r\n\t\t\t\t\r\n\t\t\t\texpect( T.isFunction(xform1_extract_v2_extractor.extract) ).to.be.true\r\n\t\t\t\texpect( T.isFunction(xform1_extract_v4_extractor.extract) ).to.be.true\r\n\t\t\t\texpect( T.isFunction(xform1_extract_v5_extractor.extract) ).to.be.true\r\n\t\t\t\t\r\n\t\t\t\tconst xform1_extract_v2_result = xform1_extract_v2_extractor.extract(items)\r\n\t\t\t\tconst xform1_extract_v4_result = xform1_extract_v4_extractor.extract(items)\r\n\t\t\t\tconst xform1_extract_v5_result = xform1_extract_v5_extractor.extract(items)\r\n\t\t\t\t\r\n\t\t\t\t// console.log(xform1_extract_v2_result, '(xform1_extract_v2_result)')\r\n\t\t\t\t// console.log(xform1_extract_v4_result, '(xform1_extract_v4_result)')\r\n\t\t\t\t// console.log(xform1_extract_v5_result, '(xform1_extract_v5_result)')\r\n\t\t\t\t\r\n\t\t\t\texpect( T.isString(xform1_extract_v2_result) ).to.be.true\r\n\t\t\t\texpect( T.isArray(xform1_extract_v4_result) ).to.be.true\r\n\t\t\t\texpect( T.isString(xform1_extract_v5_result) ).to.be.true\r\n\t\t\t\t\r\n\t\t\t\texpect( xform1_extract_v2_result == 'b' ).to.be.true\r\n\t\t\t\texpect( T.isArray(xform1_extract_v4_result) && xform1_extract_v4_result.length > 0).to.be.true\r\n\t\t\t\texpect( xform1_extract_v4_result[0] == 'd' ).to.be.true\r\n\t\t\t\texpect( xform1_extract_v5_result == 'v5' ).to.be.true\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\tit('Transform',\r\n\t\t\t() => {\r\n\t\t\t\tlet items = [\r\n\t\t\t\t\t{ v1:'a1', v2:'b1', v3:'c1', v4:['d1'] },\r\n\t\t\t\t\t{ v1:'a2', v2:'b2', v3:'c2', v4:['d2'] },\r\n\t\t\t\t\t{ v1:'a3', v2:'b3', v3:'c3', v4:['d3'] }\r\n\t\t\t\t]\r\n\t\t\t\tlet xform1 = {\r\n\t\t\t\t\tresult_type:'object',\r\n\t\t\t\t\tfields:[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname:'i2',\r\n\t\t\t\t\t\t\tpath:'v2'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname:'i4',\r\n\t\t\t\t\t\t\tpath:'v4'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname:'i5',\r\n\t\t\t\t\t\t\tvalue:'v5'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// const xform1_extract_v2_extractor = extract(xform1.fields[0])\r\n\t\t\t\t// const xform1_extract_v4_extractor = extract(xform1.fields[1])\r\n\t\t\t\t// const xform1_extract_v5_extractor = extract(xform1.fields[2])\r\n\t\t\t\t\r\n\t\t\t\tconst xformer = transform(xform1)\r\n\t\t\t\t// console.log(xformer, 'xformer')\r\n\t\t\t\t\r\n\t\t\t\tconst result0 = xformer(items[0])\r\n\t\t\t\t// console.log(result0, 'result0')\r\n\t\t\t\t\r\n\t\t\t\tconst results = xformer(items)\r\n\t\t\t\t// console.log(results, 'results')\r\n\t\t\t\t\r\n\t\t\t\t// console.log('result0:')\r\n\t\t\t\texpect( T.isObject(result0) ).to.be.true\r\n\t\t\t\texpect( result0.i2 ).to.equal('b1')\r\n\t\t\t\texpect( T.isArray(result0.i4) && result0.i4.length > 0 ).to.be.true\r\n\t\t\t\texpect( result0.i4[0] ).to.equal('d1')\r\n\t\t\t\texpect( result0.i5 ).to.equal('v5')\r\n\t\t\t\t\r\n\t\t\t\t// console.log('results:')\r\n\t\t\t\texpect( T.isArray(results) && results.length == items.length).to.be.true\r\n\t\t\t\tlet index = 0\r\n\t\t\t\t\r\n\t\t\t\t// console.log('results[0]:')\r\n\t\t\t\tindex = 0\r\n\t\t\t\texpect( T.isObject(results[index]) ).to.be.true\r\n\t\t\t\texpect( results[index].i2).to.equal(items[index].v2)\r\n\t\t\t\texpect( T.isArray(results[index].i4) && results[index].i4.length > 0).to.be.true\r\n\t\t\t\texpect( results[index].i4[0] ).to.equal(items[index].v4[0])\r\n\t\t\t\texpect( results[index].i5 ).to.equal('v5')\r\n\t\t\t\t\r\n\t\t\t\t// console.log('results[1]:')\r\n\t\t\t\tindex = 1\r\n\t\t\t\texpect( T.isObject(results[index]) ).to.be.true\r\n\t\t\t\texpect( results[index].i2).to.equal(items[index].v2)\r\n\t\t\t\texpect( T.isArray(results[index].i4) && results[index].i4.length > 0).to.be.true\r\n\t\t\t\texpect( results[index].i4[0] ).to.equal(items[index].v4[0])\r\n\t\t\t\texpect( results[index].i5 ).to.equal('v5')\r\n\t\t\t\t\r\n\t\t\t\t// console.log('results[2]:')\r\n\t\t\t\tindex = 2\r\n\t\t\t\texpect( T.isObject(results[index]) ).to.be.true\r\n\t\t\t\texpect( results[index].i2).to.equal(items[index].v2)\r\n\t\t\t\texpect( T.isArray(results[index].i4) && results[index].i4.length > 0).to.be.true\r\n\t\t\t\texpect( results[index].i4[0] ).to.equal(items[index].v4[0])\r\n\t\t\t\texpect( results[index].i5 ).to.equal('v5')\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\tit('Flat values',\r\n\t\t\t() => {\r\n\t\t\t\tlet items = [\r\n\t\t\t\t\t{ v1:'a1', v2:'b1', v3:'c1', v4:[ 'd1a', 'd1b', 'd1c' ] },\r\n\t\t\t\t\t{ v1:'a2', v2:'b2', v3:'c2', v4:[ 'd2a', 'd2b', 'd2c' ] },\r\n\t\t\t\t\t{ v1:'a3', v2:'b3', v3:'c3', v4:[ 'd3a', 'd3b', 'd3c' ] }\r\n\t\t\t\t]\r\n\t\t\t\tlet xform1 = {\r\n\t\t\t\t\tresult_type:'object',\r\n\t\t\t\t\tflat_field_name:'v4',\r\n\t\t\t\t\tflat_fields:[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname:'pos1'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n\t\t\t\t\tfields:[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname:'i2',\r\n\t\t\t\t\t\t\tpath:'v2'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname:'i1',\r\n\t\t\t\t\t\t\tpath:'v1'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname:'i5',\r\n\t\t\t\t\t\t\tvalue:'v5'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst xformer = transform(xform1)\r\n\t\t\t\t// console.log(xformer, 'xformer')\r\n\t\t\t\t\r\n\t\t\t\tconst result0 = xformer(items[0])\r\n\t\t\t\tconsole.log(result0, 'Flat values results[0]')\r\n\t\t\t\t\r\n\t\t\t\tconst result1 = xformer(items[1])\r\n\t\t\t\tconsole.log(result1, 'Flat values results[1]')\r\n\t\t\t\t\r\n\t\t\t\tconst result2 = xformer(items[2])\r\n\t\t\t\tconsole.log(result2, 'Flat values results[2]')\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\tit('Flat arrays',\r\n\t\t\t() => {\r\n\t\t\t\tlet items = [\r\n\t\t\t\t\t{ v1:'a1', v2:'b1', v3:'c1', v4:[ ['item 1 flat value 1:0'], ['item 1 flat value 2:0'], ['item 1 flat value 3:0'] ] },\r\n\t\t\t\t\t{ v1:'a2', v2:'b2', v3:'c2', v4:[ ['item 2 flat value 1:0', 'item 2 flat value 1:1'], ['item 2 flat value 2:0', 'item 2 flat value 2:1'], ['item 2 flat value 3:0', 'item 2 flat value 3:1'] ] },\r\n\t\t\t\t\t{ v1:'a3', v2:'b3', v3:'c3', v4:[ ['item 3 flat value 1:0'], ['item 3 flat value 2:0', 'item 3 flat value 2:1'], ['item 3 flat value 3:0'] ] }\r\n\t\t\t\t]\r\n\t\t\t\tlet xform1 = {\r\n\t\t\t\t\tresult_type:'array',\r\n\t\t\t\t\tflat_field_name:'v4',\r\n\t\t\t\t\tflat_fields:[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpath:1,\r\n\t\t\t\t\t\t\tname:'pos1'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpath:0,\r\n\t\t\t\t\t\t\tname:'pos0'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n\t\t\t\t\tfields:[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname:'i2',\r\n\t\t\t\t\t\t\tpath:'v2'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname:'i1',\r\n\t\t\t\t\t\t\tpath:'v1'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname:'i5',\r\n\t\t\t\t\t\t\tvalue:'v5'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst flat_extractor = flat('v4', xform1.fields, xform1.flat_fields, xform1.result_type)\r\n\t\t\t\t\r\n\t\t\t\tconst result0 = flat_extractor(items[0])\r\n\t\t\t\tconsole.log(result0, 'Flat arrays results[0]')\r\n\t\t\t\t\r\n\t\t\t\tconst result1 = flat_extractor(items[1])\r\n\t\t\t\tconsole.log(result1, 'Flat values results[1]')\r\n\t\t\t\t\r\n\t\t\t\tconst result2 = flat_extractor(items[2])\r\n\t\t\t\tconsole.log(result2, 'Flat values results[2]')\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t// const xformer = transform(xform1)\r\n\t\t\t\t// console.log(xformer, 'xformer')\r\n\t\t\t\t\r\n\t\t\t\t// const result0 = xformer(items[0])\r\n\t\t\t\t// console.log(result0, 'Flat values results[0]')\r\n\t\t\t\t\r\n\t\t\t\t// const result1 = xformer(items[1])\r\n\t\t\t\t// console.log(result1, 'Flat values results[1]')\r\n\t\t\t\t\r\n\t\t\t\t// const result2 = xformer(items[2])\r\n\t\t\t\t// console.log(result2, 'Flat values results[2]')\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n)\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/test/test_transform.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1394,
    "kind": "file",
    "name": "js/topology/define/index.js",
    "content": "// COMMON IMPORTS\r\nimport TopologyDefineWorld from './topology_define_world'\r\n\r\n\r\n/**\r\n * A topology is a graph of items.\r\n * An item is owned by another item: owner is responsible to create or delete an children.\r\n * Items can be linked together: an item can use another item. \r\n * \r\n * Runtime topology ownership is:\r\n * \t\tworld                   (TopologyDefineWorld)\r\n * \t\t\ttenants             (TopologyDefineTenant)\r\n * \t\t\t\tapplications    (TopologyDefine)\r\n * \t\t\t\t\tsecurity    (TopologyDefineSecurity)\r\n * \t\t\t\tpackages        (TopologyDefinePackage)\r\n * \t\t\t\t\tcommands    (TopologyDefineCommand)\r\n * \t\t\t\t\tservices    (TopologyDefineService)\r\n * \t\t\t\t\tdatasources (TopologyDefineDatasource)\r\n * \t\t\t\t\tmodels      (TopologyDefineModel)\r\n * \t\t\t\t\tviews       (TopologyDefineView)\r\n * \t\t\t\t\tmenus       (TopologyDefineMenu)\r\n * \t\t\t\t\tmenubars    (TopologyDefineMenubar)\r\n * \t\t\t\tsecurity        (TopologyDefineSecurity)\r\n * \t\t\tnodes               (TopologyDefineNode)\r\n * \t\t\t\tservers         (TopologyDefineServer)\r\n * \t\t\tplugins\t\t\t\t(TopologyDefinePlugin)\r\n * \t\t\tsecurity            (TopologyDefineSecurity)\r\n * \r\n */\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/define/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1395,
    "kind": "file",
    "name": "js/topology/define/topology_define_application.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../../utils/types'\r\n// import Collection from '../../base/collection'\r\n// import topology_registry from '../registry/index'\r\nimport TopologyDefineItem from './topology_define_item'\r\n// import topology_define_world from './index'\r\n\r\n\r\nlet context = 'common/topology/define/topology_define_application'\r\n\r\n\r\n\r\n/**\r\n * @file Application class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class TopologyDefineApplication extends TopologyDefineItem\r\n{\r\n    /**\r\n     * TopologyDefineApplication constructor.\r\n\t * @class TopologyDefineApplication\r\n\t * @extends TopologyDefineItem\r\n\t * \r\n\t * SETTINGS FORMAT:\r\n\t * \t\"applications\":\r\n\t * \t\t\"applicationA\":\r\n\t * \t\t\t\"url\":\"/../\",\r\n\t * \t\r\n\t * \t\t\t\"provided_services\":\r\n\t * \t\t\t\t\"devtools_store\": Object with servers\":[\"Server1\"] ,\r\n\t * \t\t\t\t\"devtools_panel\": Object wit \"servers\":[\"Server1\"] ,\r\n\t * \t\t\t\t\"metrics_http\": Object wit \"servers\":[\"Server2\", \"Server3]\r\n\t * \t\t\t\"used_services\":[\"messages\"],\r\n\t * \t\t\t\r\n\t * \t\t\t\"used_packages\": [\"devtools\"],\r\n\t * \t\t\t\"used_plugins\":[\"foundation6\"],\r\n\t * \t\t\t\r\n\t * \t\t\t\"license\":\"APACHE-LICENSE-2.0\"\r\n\t * \t\t\"applicationB\":...\r\n\t * \r\n     * @param {string} arg_name - application name.\r\n\t * @param {object} arg_settings - instance settings map.\r\n\t * @param {string} arg_log_context - trace context string.\r\n\t * \r\n\t * @returns {nothing}\r\n     */\r\n\tconstructor(arg_name, arg_settings, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_name, arg_settings, 'TopologyDefineApplication', log_context)\r\n\t\t\r\n\t\tthis.is_topology_define_application = true\r\n\r\n\t\tthis.topology_type = 'applications'\r\n\t\t\r\n\t\tthis.app_title\t\t\t\t= this.get_setting_js('title', undefined)\r\n\t\tthis.app_url\t\t\t\t= this.get_setting_js('url', undefined)\r\n\t\tthis.app_license\t\t\t= this.get_setting_js('license', undefined)\r\n\r\n\t\tthis.app_provided_services\t= this.get_setting('provided_services', undefined)\r\n\t\tthis.app_used_services \t\t= this.get_setting('used_service', undefined)\r\n\t\tthis.app_used_packages\t\t= this.get_setting('used_packages', undefined)\r\n\t\tthis.app_used_plugins\t\t= this.get_setting('used_plugins', undefined)\r\n\r\n\t\tthis.app_assets\t\t\t\t= this.get_setting_js('assets', undefined)\r\n\t\tthis.app_assets_js\t\t\t= this.get_setting_js(['assets', 'js'], [])\r\n\t\tthis.app_assets_css\t\t\t= this.get_setting_js(['assets', 'css'], [])\r\n\t\tthis.app_assets_img\t\t\t= this.get_setting_js(['assets', 'img'], [])\r\n\t\tthis.app_assets_index\t\t= this.get_setting_js(['assets', 'index'], undefined)\r\n\r\n\t\tthis.app_default_view\t\t= this.get_setting_js('default_view', undefined)\r\n\t\tthis.app_default_menubar\t= this.get_setting_js('default_menubar', undefined)\r\n\t\t\r\n\t\tthis.info('Application is created')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Find a resource.\r\n\t * \r\n\t * @param {string} arg_name - resource name (mandatory).\r\n\t * @param {string} arg_type - resource type name (optional).\r\n\t * \r\n\t * @returns {TopologyDefineItem|undefined} - resource instance.\r\n\t */\r\n\tfind_resource(arg_name, arg_type=undefined)\r\n\t{\r\n\t\tconst tenant = this.get_topology_owner()\r\n\t\tif (! tenant)\r\n\t\t{\r\n\t\t\tthis.error('find_resource:no owner tenant found for this application')\r\n\t\t\tconsole.error(context + ':find_resource:no owner tenant found for this application=' + this.get_name())\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\tconst used_packages_array = this.app_used_packages.toArray()\r\n\t\t// console.log('application.find_resource ' + arg_name + ' in packages ' + used_packages_array.toString() )\r\n\r\n\t\tlet package_index = 0\r\n\t\tfor( ; package_index < used_packages_array.length ; package_index++)\r\n\t\t{\r\n\t\t\tconst package_name = used_packages_array[package_index]\r\n\t\t\tconst pkg = tenant.package(package_name)\r\n\t\t\t// console.log('application.find_resource ' + arg_name + ' in package ' + package_name + ' for type ' + arg_type)\r\n\r\n\t\t\tconst resource = pkg.find_resource(arg_name, arg_type)\r\n\t\t\t// console.log(resource, 'application.find_resource ' + arg_name + ' in package ' + package_name + ' for type ' + arg_type)\r\n\t\t\t\r\n\t\t\tif (resource)\r\n\t\t\t{\r\n\t\t\t\t// console.log('application.find_resource ' + arg_name + ' FOUND')\r\n\t\t\t\treturn resource\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.warn('application.find_resource NOT FOUND ' + arg_name + ' in packages ' + used_packages_array.toString() )\r\n\t\treturn undefined\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get resources names.\r\n\t * \r\n\t * @param {string} arg_type - resource type name (optional).\r\n\t * \r\n\t * @returns {array} - resources names list.\r\n\t */\r\n\tget_resources_names(arg_type=undefined)\r\n\t{\r\n\t\tconst tenant = this.get_topology_owner()\r\n\t\tif (! tenant)\r\n\t\t{\r\n\t\t\tthis.error('get_resources_names:no owner tenant found for this application')\r\n\t\t\tconsole.error(context + ':get_resources_names:no owner tenant found for this application=' + this.get_name())\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\tlet names = []\r\n\t\tconst used_packages_array = this.app_used_packages.toArray()\r\n\t\tused_packages_array.map(\r\n\t\t\t(arg_pkg_name)=>{\r\n\t\t\t\tconst pkg = tenant.package(arg_pkg_name)\r\n\t\t\t\tnames = names.concat( pkg.get_resources_names(arg_type) )\r\n\t\t\t\t// console.log(context + ':get_resources_names:resources names package=%s', arg_pkg_name, names)\r\n\t\t\t }\r\n\t\t)\r\n\t\treturn names\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get resources instances.\r\n\t * \r\n\t * @param {string} arg_type - resources type name.\r\n\t * \r\n\t * @returns {array} - resources instances list.\r\n\t */\r\n\tget_resources(arg_type)\r\n\t{\r\n\t\tthis.enter_group('get_resources:type ' + arg_type)\r\n\r\n\t\tif ( ! T.isString(arg_type) )\r\n\t\t{\r\n\t\t\tthis.leave_group('get_resources:bad type string')\r\n\t\t\treturn []\r\n\t\t}\r\n\r\n\t\tconst used_packages_array = this.app_used_packages.toJS()\r\n\t\tassert( T.isArray(used_packages_array) , context + ':get_resources:bad used_packages_array array')\r\n\t\tthis.debug('used_packages_array=', used_packages_array)\r\n\r\n\t\tlet instances = []\r\n\t\tused_packages_array.map(\r\n\t\t\t(arg_pkg_name)=> {\r\n\t\t\t\tthis.debug('get_resources:loop on package[' + arg_pkg_name + ']')\r\n\r\n\t\t\t\tconst pkg = this.topology_owner.package(arg_pkg_name)\r\n\t\t\t\tassert( T.isObject(pkg) && pkg.is_topology_define_package, context + ':get_resources:bad package object for ' + arg_pkg_name)\r\n\r\n\t\t\t\tif (arg_type in pkg)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.debug(':get_resources:type ' + arg_type + ' found for package ' + arg_pkg_name)\r\n\r\n\t\t\t\t\tconst pkg_resources = pkg[arg_type]()\r\n\r\n\t\t\t\t\tif ( T.isObject(pkg_resources) && T.isFunction(pkg_resources.get_latest_items) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpkg_resources.get_latest_items().forEach(\r\n\t\t\t\t\t\t\t(instance)=>{\r\n\t\t\t\t\t\t\t\tinstances.push(instance)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.error(context + ':get_resources:type ' + arg_type + ' not found for package ' + arg_pkg_name, pkg)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tthis.leave_group('get_resources:type=' + arg_type + ':instances count=' + instances.length)\r\n\t\treturn instances\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get resources instances settings.\r\n\t * \r\n\t * @param {string} arg_type - resources type name.\r\n\t * \r\n\t * @returns {array} - resources instances list.\r\n\t */\r\n\tget_resources_settings(arg_type)\r\n\t{\r\n\t\tlet settings = {}\r\n\t\tconst instances = this.get_resources(arg_type)\r\n\t\tthis.debug('get_resources_settings:type[' + arg_type + ']:count=' + instances.length)\r\n\r\n\t\tinstances.forEach(\r\n\t\t\t(instance)=>{\r\n\t\t\t\tthis.debug('get_resources_settings:instance.is_instance=' + instance.is_instance, ':instance name=' + instance.$name)\r\n\t\t\t\tsettings[instance.get_name()] = instance.get_settings_js()\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn settings\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Find a rendering function.\r\n\t * @ TODO add a watchdog counter through all calls to prevent from recursive loops.\r\n\t * \r\n\t * @param {string} arg_type - rendering item type.\r\n\t * \r\n\t * @returns {Function} - rendering function.\r\n\t */\r\n\tfind_rendering_function(arg_type)\r\n\t{\r\n\t\tthis.debug('find_rendering_function:type=[' + arg_type + ']')\r\n\r\n\t\tif ( (! T.isString(arg_type) ) || arg_type.length == 0)\r\n\t\t{\r\n\t\t\tthis.error(context + ':find_rendering_function:bad type:', arg_type, typeof arg_type)\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\tconst tenant = this.get_topology_owner()\r\n\t\tif (! tenant)\r\n\t\t{\r\n\t\t\tthis.error(context + ':find_rendering_function:type=[' + arg_type + ']:no owner tenant found for this application')\r\n\t\t\t// console.error(context + ':find_rendering_function:type=[' + arg_type + ']:no owner tenant found for this application')\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\tconst used_plugins_array = this.app_used_plugins.toArray()\r\n\t\t// console.log('application.find_rendering_function ' + arg_type + ' in packages ' + used_plugins_array.toString() )\r\n\r\n\t\tlet plugin_index = 0\r\n\t\tfor( ; plugin_index < used_plugins_array.length ; plugin_index++)\r\n\t\t{\r\n\t\t\tconst plugin_name = used_plugins_array[plugin_index]\r\n\t\t\tconst plugin = tenant.get_topology_owner().plugin(plugin_name)\r\n\t\t\t\r\n\t\t\t// CHECK PLUGIN INSTANCE\r\n\t\t\tif ( ! plugin )\r\n\t\t\t{\r\n\t\t\t\tthis.error('find_rendering_function:type=[' + arg_type + ']:plugin not found for [' + plugin_name + ']')\r\n\t\t\t\tconsole.error(context + ':find_rendering_function:type=[' + arg_type + ']:plugin not found for [' + plugin_name + ']')\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\r\n\t\t\t// TEST PLUGIN\r\n\t\t\tif ( plugin.topology_plugin_type != 'rendering' || ! T.isFunction(plugin.find_rendering_function) )\r\n\t\t\t{\r\n\t\t\t\tthis.debug('find_rendering_function:type=[' + arg_type + ']:skip plugin [' + plugin_name + ']')\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\r\n\t\t\t// LOOKUP RENDERING FUNCTION\r\n\t\t\tconst rendering_fn = plugin.find_rendering_function(arg_type)\r\n\t\t\tthis.debug('find_rendering_function:type=' + arg_type + ' in plugin ' + plugin_name + (rendering_fn ? ' found' : ' not found'))\r\n\t\t\r\n\t\t\tif (rendering_fn)\r\n\t\t\t{\r\n\t\t\t\treturn rendering_fn\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.warn(context + ':find_rendering_function: NOT FOUND ' + arg_type + ' in plugin ' + used_plugins_array.toString() )\r\n\t\treturn undefined\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/define/topology_define_application.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1396,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/define/topology_define_application.js",
    "static": true,
    "longname": "js/topology/define/topology_define_application.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/define/topology_define_application.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1397,
    "kind": "class",
    "name": "TopologyDefineApplication",
    "memberof": "js/topology/define/topology_define_application.js",
    "static": true,
    "longname": "js/topology/define/topology_define_application.js~TopologyDefineApplication",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/define/topology_define_application.js",
    "importStyle": "TopologyDefineApplication",
    "description": "",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Application class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/topology/define/topology_define_item.js~TopologyDefineItem"
    ]
  },
  {
    "__docId__": 1398,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/topology/define/topology_define_application.js~TopologyDefineApplication",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_application.js~TopologyDefineApplication#constructor",
    "access": "public",
    "description": "TopologyDefineApplication constructor.",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TopologyDefineApplication"
      },
      {
        "tagName": "@extends",
        "tagValue": "TopologyDefineItem\n\nSETTINGS FORMAT:\n\t\"applications\":\n\t\t\"applicationA\":\n\t\t\t\"url\":\"/../\",\n\t\n\t\t\t\"provided_services\":\n\t\t\t\t\"devtools_store\": Object with servers\":[\"Server1\"] ,\n\t\t\t\t\"devtools_panel\": Object wit \"servers\":[\"Server1\"] ,\n\t\t\t\t\"metrics_http\": Object wit \"servers\":[\"Server2\", \"Server3]\n\t\t\t\"used_services\":[\"messages\"],\n\t\t\t\n\t\t\t\"used_packages\": [\"devtools\"],\n\t\t\t\"used_plugins\":[\"foundation6\"],\n\t\t\t\n\t\t\t\"license\":\"APACHE-LICENSE-2.0\"\n\t\t\"applicationB\":..."
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "application name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "instance settings map."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1399,
    "kind": "member",
    "name": "is_topology_define_application",
    "memberof": "js/topology/define/topology_define_application.js~TopologyDefineApplication",
    "static": false,
    "longname": "js/topology/define/topology_define_application.js~TopologyDefineApplication#is_topology_define_application",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1400,
    "kind": "member",
    "name": "topology_type",
    "memberof": "js/topology/define/topology_define_application.js~TopologyDefineApplication",
    "static": false,
    "longname": "js/topology/define/topology_define_application.js~TopologyDefineApplication#topology_type",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1401,
    "kind": "member",
    "name": "app_title",
    "memberof": "js/topology/define/topology_define_application.js~TopologyDefineApplication",
    "static": false,
    "longname": "js/topology/define/topology_define_application.js~TopologyDefineApplication#app_title",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1402,
    "kind": "member",
    "name": "app_url",
    "memberof": "js/topology/define/topology_define_application.js~TopologyDefineApplication",
    "static": false,
    "longname": "js/topology/define/topology_define_application.js~TopologyDefineApplication#app_url",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1403,
    "kind": "member",
    "name": "app_license",
    "memberof": "js/topology/define/topology_define_application.js~TopologyDefineApplication",
    "static": false,
    "longname": "js/topology/define/topology_define_application.js~TopologyDefineApplication#app_license",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1404,
    "kind": "member",
    "name": "app_provided_services",
    "memberof": "js/topology/define/topology_define_application.js~TopologyDefineApplication",
    "static": false,
    "longname": "js/topology/define/topology_define_application.js~TopologyDefineApplication#app_provided_services",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1405,
    "kind": "member",
    "name": "app_used_services",
    "memberof": "js/topology/define/topology_define_application.js~TopologyDefineApplication",
    "static": false,
    "longname": "js/topology/define/topology_define_application.js~TopologyDefineApplication#app_used_services",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1406,
    "kind": "member",
    "name": "app_used_packages",
    "memberof": "js/topology/define/topology_define_application.js~TopologyDefineApplication",
    "static": false,
    "longname": "js/topology/define/topology_define_application.js~TopologyDefineApplication#app_used_packages",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1407,
    "kind": "member",
    "name": "app_used_plugins",
    "memberof": "js/topology/define/topology_define_application.js~TopologyDefineApplication",
    "static": false,
    "longname": "js/topology/define/topology_define_application.js~TopologyDefineApplication#app_used_plugins",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1408,
    "kind": "member",
    "name": "app_assets",
    "memberof": "js/topology/define/topology_define_application.js~TopologyDefineApplication",
    "static": false,
    "longname": "js/topology/define/topology_define_application.js~TopologyDefineApplication#app_assets",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1409,
    "kind": "member",
    "name": "app_assets_js",
    "memberof": "js/topology/define/topology_define_application.js~TopologyDefineApplication",
    "static": false,
    "longname": "js/topology/define/topology_define_application.js~TopologyDefineApplication#app_assets_js",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1410,
    "kind": "member",
    "name": "app_assets_css",
    "memberof": "js/topology/define/topology_define_application.js~TopologyDefineApplication",
    "static": false,
    "longname": "js/topology/define/topology_define_application.js~TopologyDefineApplication#app_assets_css",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1411,
    "kind": "member",
    "name": "app_assets_img",
    "memberof": "js/topology/define/topology_define_application.js~TopologyDefineApplication",
    "static": false,
    "longname": "js/topology/define/topology_define_application.js~TopologyDefineApplication#app_assets_img",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1412,
    "kind": "member",
    "name": "app_assets_index",
    "memberof": "js/topology/define/topology_define_application.js~TopologyDefineApplication",
    "static": false,
    "longname": "js/topology/define/topology_define_application.js~TopologyDefineApplication#app_assets_index",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1413,
    "kind": "member",
    "name": "app_default_view",
    "memberof": "js/topology/define/topology_define_application.js~TopologyDefineApplication",
    "static": false,
    "longname": "js/topology/define/topology_define_application.js~TopologyDefineApplication#app_default_view",
    "access": "public",
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1414,
    "kind": "member",
    "name": "app_default_menubar",
    "memberof": "js/topology/define/topology_define_application.js~TopologyDefineApplication",
    "static": false,
    "longname": "js/topology/define/topology_define_application.js~TopologyDefineApplication#app_default_menubar",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1415,
    "kind": "method",
    "name": "find_resource",
    "memberof": "js/topology/define/topology_define_application.js~TopologyDefineApplication",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_application.js~TopologyDefineApplication#find_resource",
    "access": "public",
    "description": "Find a resource.",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{TopologyDefineItem|undefined} - resource instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "resource name (mandatory)."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_type",
        "description": "resource type name (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TopologyDefineItem",
        "undefined"
      ],
      "spread": false,
      "description": "resource instance."
    }
  },
  {
    "__docId__": 1416,
    "kind": "method",
    "name": "get_resources_names",
    "memberof": "js/topology/define/topology_define_application.js~TopologyDefineApplication",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_application.js~TopologyDefineApplication#get_resources_names",
    "access": "public",
    "description": "Get resources names.",
    "lineNumber": 134,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} - resources names list."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_type",
        "description": "resource type name (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "resources names list."
    }
  },
  {
    "__docId__": 1417,
    "kind": "method",
    "name": "get_resources",
    "memberof": "js/topology/define/topology_define_application.js~TopologyDefineApplication",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_application.js~TopologyDefineApplication#get_resources",
    "access": "public",
    "description": "Get resources instances.",
    "lineNumber": 165,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} - resources instances list."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_type",
        "description": "resources type name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "resources instances list."
    }
  },
  {
    "__docId__": 1418,
    "kind": "method",
    "name": "get_resources_settings",
    "memberof": "js/topology/define/topology_define_application.js~TopologyDefineApplication",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_application.js~TopologyDefineApplication#get_resources_settings",
    "access": "public",
    "description": "Get resources instances settings.",
    "lineNumber": 222,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} - resources instances list."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_type",
        "description": "resources type name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "resources instances list."
    }
  },
  {
    "__docId__": 1419,
    "kind": "method",
    "name": "find_rendering_function",
    "memberof": "js/topology/define/topology_define_application.js~TopologyDefineApplication",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_application.js~TopologyDefineApplication#find_rendering_function",
    "access": "public",
    "description": "Find a rendering function.\n@ TODO add a watchdog counter through all calls to prevent from recursive loops.",
    "lineNumber": 247,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} - rendering function."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_type",
        "description": "rendering item type."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "rendering function."
    }
  },
  {
    "__docId__": 1420,
    "kind": "file",
    "name": "js/topology/define/topology_define_command.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport TopologyDefineItem from './topology_define_item'\r\n\r\n\r\nlet context = 'common/topology/define/topology_define_command'\r\n\r\n\r\n\r\n/**\r\n * @file TopologyDefineCommand class: describe a node topology command (menu action for example).\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class TopologyDefineCommand extends TopologyDefineItem\r\n{\r\n\t/**\r\n\t * Create a TopologyDefineCommand instance.\r\n\t * @class TopologyDefineCommand\r\n\t * @extends TopologyDefineItem\r\n\t * \r\n\t * SETTINGS FORMAT:\r\n\t * \t\"commands\":\r\n\t * \t\t\"cmdA\":\r\n\t * \t\t\t\"url\":\"myUrl\",\r\n\t * \t\t\t\"view\":\"myView\",\r\n\t * \t\t\t\"menubar\":\"myMenubar\",\r\n\t * \t\t\t\"label\":\"myLabel\"\r\n\t * \t\t\"cmdB\":...\r\n\t * \r\n\t * @param {string} arg_name - instance name.\r\n\t * @param {object} arg_settings - instance settings map.\r\n\t * @param {string} arg_log_context - trace context string.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_name, arg_settings, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_name, arg_settings, 'TopologyDefineCommand', log_context)\r\n\t\t\r\n\t\tthis.is_topology_define_command = true\r\n\r\n\t\tthis.topology_type = 'commands'\r\n\t\t\r\n\t\tthis.command_type \t\t\t= this.get_setting('type', undefined)\r\n\t\tthis.command_url \t\t\t= this.get_setting('url', undefined)\r\n\t\tthis.command_url_target\t\t= this.get_setting('url_target', 'body')\r\n\t\tthis.command_view \t\t\t= this.get_setting('view', undefined)\r\n\t\tthis.command_menubar \t\t= this.get_setting('menubar', undefined)\r\n\t\tthis.command_label \t\t\t= this.get_setting('label', undefined)\r\n\r\n\t\tthis.info('Command is created')\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/define/topology_define_command.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1421,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/define/topology_define_command.js",
    "static": true,
    "longname": "js/topology/define/topology_define_command.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/define/topology_define_command.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1422,
    "kind": "class",
    "name": "TopologyDefineCommand",
    "memberof": "js/topology/define/topology_define_command.js",
    "static": true,
    "longname": "js/topology/define/topology_define_command.js~TopologyDefineCommand",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/define/topology_define_command.js",
    "importStyle": "TopologyDefineCommand",
    "description": "",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "TopologyDefineCommand class: describe a node topology command (menu action for example)."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/topology/define/topology_define_item.js~TopologyDefineItem"
    ]
  },
  {
    "__docId__": 1423,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/topology/define/topology_define_command.js~TopologyDefineCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_command.js~TopologyDefineCommand#constructor",
    "access": "public",
    "description": "Create a TopologyDefineCommand instance.",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TopologyDefineCommand"
      },
      {
        "tagName": "@extends",
        "tagValue": "TopologyDefineItem\n\nSETTINGS FORMAT:\n\t\"commands\":\n\t\t\"cmdA\":\n\t\t\t\"url\":\"myUrl\",\n\t\t\t\"view\":\"myView\",\n\t\t\t\"menubar\":\"myMenubar\",\n\t\t\t\"label\":\"myLabel\"\n\t\t\"cmdB\":..."
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "instance settings map."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1424,
    "kind": "member",
    "name": "is_topology_define_command",
    "memberof": "js/topology/define/topology_define_command.js~TopologyDefineCommand",
    "static": false,
    "longname": "js/topology/define/topology_define_command.js~TopologyDefineCommand#is_topology_define_command",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1425,
    "kind": "member",
    "name": "topology_type",
    "memberof": "js/topology/define/topology_define_command.js~TopologyDefineCommand",
    "static": false,
    "longname": "js/topology/define/topology_define_command.js~TopologyDefineCommand#topology_type",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1426,
    "kind": "member",
    "name": "command_type",
    "memberof": "js/topology/define/topology_define_command.js~TopologyDefineCommand",
    "static": false,
    "longname": "js/topology/define/topology_define_command.js~TopologyDefineCommand#command_type",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1427,
    "kind": "member",
    "name": "command_url",
    "memberof": "js/topology/define/topology_define_command.js~TopologyDefineCommand",
    "static": false,
    "longname": "js/topology/define/topology_define_command.js~TopologyDefineCommand#command_url",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1428,
    "kind": "member",
    "name": "command_url_target",
    "memberof": "js/topology/define/topology_define_command.js~TopologyDefineCommand",
    "static": false,
    "longname": "js/topology/define/topology_define_command.js~TopologyDefineCommand#command_url_target",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1429,
    "kind": "member",
    "name": "command_view",
    "memberof": "js/topology/define/topology_define_command.js~TopologyDefineCommand",
    "static": false,
    "longname": "js/topology/define/topology_define_command.js~TopologyDefineCommand#command_view",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1430,
    "kind": "member",
    "name": "command_menubar",
    "memberof": "js/topology/define/topology_define_command.js~TopologyDefineCommand",
    "static": false,
    "longname": "js/topology/define/topology_define_command.js~TopologyDefineCommand#command_menubar",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1431,
    "kind": "member",
    "name": "command_label",
    "memberof": "js/topology/define/topology_define_command.js~TopologyDefineCommand",
    "static": false,
    "longname": "js/topology/define/topology_define_command.js~TopologyDefineCommand#command_label",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1432,
    "kind": "file",
    "name": "js/topology/define/topology_define_datasource.js",
    "content": "// COMMON IMPORTS\r\nimport TopologyDefineItem from './topology_define_item'\r\n\r\n\r\nlet context = 'common/topology/define/topology_define_datasource'\r\n\r\n\r\n\r\n/**\r\n * @file Database class: describe a datasource topology item.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class TopologyDefineDatasource extends TopologyDefineItem\r\n{\r\n\t/**\r\n\t * Create a TopologyDefineDatasource instance.\r\n\t * @class TopologyDefineDatasource\r\n\t * @extends TopologyDefineItem\r\n\t * \r\n\t * SETTINGS FORMAT:\r\n\t * \t\"datasources\":\r\n\t * \t\t\"datasourceA\":...\r\n\t * \t\t\"datasourceB\":...\r\n\t * \t}\r\n\t * \r\n\t * @param {string} arg_name - instance name.\r\n\t * @param {object} arg_settings - instance settings map.\r\n\t * @param {string} arg_log_context - trace context string.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_name, arg_settings, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_name, arg_settings, 'TopologyDefineDatasource', log_context)\r\n\t\t\r\n\t\tthis.is_topology_define_datasource = true\r\n\r\n\t\tthis.topology_type = 'datasources'\r\n\r\n\t\tthis.db_engine    = this.get_setting('engine', undefined)\r\n\t\tthis.db_host      = this.get_setting('host', 'localhost')\r\n\t\tthis.db_port      = this.get_setting('port', undefined)\r\n\t\tthis.db_name      = this.get_setting('database', undefined)\r\n\t\tthis.db_charset   = this.get_setting('charset', 'utf8')\r\n\t\tthis.db_options   = this.get_setting('options', undefined)\r\n\t\tthis.db_user      = this.get_setting('user', undefined)\r\n\t\tthis.db_password  = this.get_setting('password', undefined)\r\n\r\n\t\tthis.info('Datasource is created')\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/define/topology_define_datasource.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1433,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/define/topology_define_datasource.js",
    "static": true,
    "longname": "js/topology/define/topology_define_datasource.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/define/topology_define_datasource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1434,
    "kind": "class",
    "name": "TopologyDefineDatasource",
    "memberof": "js/topology/define/topology_define_datasource.js",
    "static": true,
    "longname": "js/topology/define/topology_define_datasource.js~TopologyDefineDatasource",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/define/topology_define_datasource.js",
    "importStyle": "TopologyDefineDatasource",
    "description": "",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Database class: describe a datasource topology item."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/topology/define/topology_define_item.js~TopologyDefineItem"
    ]
  },
  {
    "__docId__": 1435,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/topology/define/topology_define_datasource.js~TopologyDefineDatasource",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_datasource.js~TopologyDefineDatasource#constructor",
    "access": "public",
    "description": "Create a TopologyDefineDatasource instance.",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TopologyDefineDatasource"
      },
      {
        "tagName": "@extends",
        "tagValue": "TopologyDefineItem\n\nSETTINGS FORMAT:\n\t\"datasources\":\n\t\t\"datasourceA\":...\n\t\t\"datasourceB\":...\n\t}"
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "instance settings map."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1436,
    "kind": "member",
    "name": "is_topology_define_datasource",
    "memberof": "js/topology/define/topology_define_datasource.js~TopologyDefineDatasource",
    "static": false,
    "longname": "js/topology/define/topology_define_datasource.js~TopologyDefineDatasource#is_topology_define_datasource",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1437,
    "kind": "member",
    "name": "topology_type",
    "memberof": "js/topology/define/topology_define_datasource.js~TopologyDefineDatasource",
    "static": false,
    "longname": "js/topology/define/topology_define_datasource.js~TopologyDefineDatasource#topology_type",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1438,
    "kind": "member",
    "name": "db_engine",
    "memberof": "js/topology/define/topology_define_datasource.js~TopologyDefineDatasource",
    "static": false,
    "longname": "js/topology/define/topology_define_datasource.js~TopologyDefineDatasource#db_engine",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1439,
    "kind": "member",
    "name": "db_host",
    "memberof": "js/topology/define/topology_define_datasource.js~TopologyDefineDatasource",
    "static": false,
    "longname": "js/topology/define/topology_define_datasource.js~TopologyDefineDatasource#db_host",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1440,
    "kind": "member",
    "name": "db_port",
    "memberof": "js/topology/define/topology_define_datasource.js~TopologyDefineDatasource",
    "static": false,
    "longname": "js/topology/define/topology_define_datasource.js~TopologyDefineDatasource#db_port",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1441,
    "kind": "member",
    "name": "db_name",
    "memberof": "js/topology/define/topology_define_datasource.js~TopologyDefineDatasource",
    "static": false,
    "longname": "js/topology/define/topology_define_datasource.js~TopologyDefineDatasource#db_name",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1442,
    "kind": "member",
    "name": "db_charset",
    "memberof": "js/topology/define/topology_define_datasource.js~TopologyDefineDatasource",
    "static": false,
    "longname": "js/topology/define/topology_define_datasource.js~TopologyDefineDatasource#db_charset",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1443,
    "kind": "member",
    "name": "db_options",
    "memberof": "js/topology/define/topology_define_datasource.js~TopologyDefineDatasource",
    "static": false,
    "longname": "js/topology/define/topology_define_datasource.js~TopologyDefineDatasource#db_options",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1444,
    "kind": "member",
    "name": "db_user",
    "memberof": "js/topology/define/topology_define_datasource.js~TopologyDefineDatasource",
    "static": false,
    "longname": "js/topology/define/topology_define_datasource.js~TopologyDefineDatasource#db_user",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1445,
    "kind": "member",
    "name": "db_password",
    "memberof": "js/topology/define/topology_define_datasource.js~TopologyDefineDatasource",
    "static": false,
    "longname": "js/topology/define/topology_define_datasource.js~TopologyDefineDatasource#db_password",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1446,
    "kind": "file",
    "name": "js/topology/define/topology_define_field.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../../utils/types'\r\nimport TopologyDefineItem from './topology_define_item'\r\n\r\n\r\nlet context = 'common/topology/define/topology_define_field'\r\n\r\n\r\n\r\n/**\r\n * @file TopologyDefineField class: describe a TopologyDefineField topology item.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class TopologyDefineField extends TopologyDefineItem\r\n{\r\n\t/**\r\n\t * Create a TopologyDefineField instance.\r\n\t * @class TopologyDefineField\r\n\t * @extends TopologyDefineItem\r\n\t * \r\n\t * SETTINGS FORMAT:\r\n\t * \t\"fields\":\r\n\t * \t\t\"fieldA\":\r\n\t *\t\t\t// DATA\r\n\t *\t\t\t\"type\": \"integer\",\r\n\t *\t\t\t\"auto_increment\": false,\r\n\t *\t\t\t\"allow_null\": false,\r\n\t *\t\t\t\"is_unique\":true,\r\n\t *\t\t\t\"is_primary_key\":true,\r\n\t *\t\t\t\"expression\":null,\r\n\t *\t\t\t\"column\":\"id\",\r\n\t *\t\t\t\"alias\":\"id_user\",\r\n\t *\r\n\t *\t\t\t// VALUE\r\n\t *\t\t\t\"default\":\"\",\r\n\t *\t\t\t\"hash\": \"md5\",\r\n\t *\t\t\t\"validate_rule\": \"alphaALPHAnum_-space\",\r\n\t *\t\t\t\"validate_error_label\": \"upper or lower alphanumeric and - and _ and space\"\r\n\t *\r\n\t *\t\t\t// VIEW\r\n\t *\t\t\t\"label\": \"Id\",\r\n\t *\t\t\t\"placeholder\": \"Enter lastname\",\r\n\t *\t\t\t\"is_editable\": \"0\",\r\n\t *\t\t\t\"is_visible\": \"0\"\r\n\t * \t\t\"fieldB\":...\r\n\t * \r\n\t * @param {string} arg_name - instance name.\r\n\t * @param {object} arg_settings - instance settings map.\r\n\t * @param {string} arg_log_context - trace context string.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_name, arg_settings, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_name, arg_settings, 'TopologyDefineField', log_context)\r\n\t\t\r\n\t\tthis.is_topology_define_field = true\r\n\r\n\t\tthis.topology_type = 'fields'\r\n\r\n\t\t// DATA\r\n\t\tthis.field_type\t\t\t\t= this.get_setting('type', 'string')\r\n\t\tthis.field_is_primary_key\t= this.get_setting('is_primary_key', false)\r\n\t\tthis.field_auto_increment\t= this.get_setting('auto_increment', false)\r\n\t\tthis.field_allow_null\t\t= this.get_setting('allow_null', true)\r\n\t\tthis.field_is_unique\t\t= this.get_setting('is_unique', false)\r\n\t\tthis.field_expression \t\t= this.get_setting('expression', undefined)\r\n\t\tthis.field_column \t\t\t= this.get_setting('column', undefined)\r\n\t\tthis.field_alias \t\t\t= this.get_setting('alias', arg_name)\r\n\r\n\t\t// VALUE\r\n\t\tthis.field_default \t\t\t= this.get_setting('default', undefined)\r\n\t\tthis.field_hash \t\t\t= this.get_setting('hash', 'md5')\r\n\t\tthis.field_validate_rule \t\t\t= this.get_setting('validate_rule', undefined)\r\n\t\tthis.field_validate_error_label \t= this.get_setting('validate_error_label', undefined)\r\n\r\n\t\t// VIEW\r\n\t\tthis.field_label \t\t\t= this.get_setting('label', arg_name)\r\n\t\tthis.field_placeholder \t\t= this.get_setting('placeholder', undefined)\r\n\t\tthis.field_is_editable \t\t= this.get_setting('is_editable', true)\r\n\t\tthis.field_is_visible \t\t= this.get_setting('is_visible', true)\r\n\r\n\t\tthis.info('Field is created')\r\n\t}\r\n\t\r\n\r\n\r\n\t/**\r\n\t * ...\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tis_valid() // TODO check and load collection schema\r\n\t{\r\n\t\ttry {\r\n\t\t\t// CHECK FIELD TYPE\r\n\t\t\tassert( T.isString(this.field_type) )\r\n\t\t\tswitch(this.field_type) {\r\n\t\t\t\tcase 'integer':\r\n\t\t\t\tcase 'boolean':\r\n\t\t\t\tcase 'string':\r\n\t\t\t\t// case 'object':\r\n\t\t\t\t\tbreak\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false\r\n\t\t\t}\r\n\r\n\t\t\t// CHECK PRIMARY KEY\r\n\t\t\tassert( T.isBoolean(this.field_is_primary_key) )\r\n\t\t\tassert( T.isBoolean(this.field_allow_null) )\r\n\t\t\tassert( T.isBoolean(this.field_is_unique) )\r\n\t\t\tassert( this.field_is_primary_key ? ! this.field_allow_null : true)\r\n\t\t} catch(e) {\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\treturn true\r\n\t}\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/define/topology_define_field.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1447,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/define/topology_define_field.js",
    "static": true,
    "longname": "js/topology/define/topology_define_field.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/define/topology_define_field.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1448,
    "kind": "class",
    "name": "TopologyDefineField",
    "memberof": "js/topology/define/topology_define_field.js",
    "static": true,
    "longname": "js/topology/define/topology_define_field.js~TopologyDefineField",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/define/topology_define_field.js",
    "importStyle": "TopologyDefineField",
    "description": "",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "TopologyDefineField class: describe a TopologyDefineField topology item."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/topology/define/topology_define_item.js~TopologyDefineItem"
    ]
  },
  {
    "__docId__": 1449,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/topology/define/topology_define_field.js~TopologyDefineField",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_field.js~TopologyDefineField#constructor",
    "access": "public",
    "description": "Create a TopologyDefineField instance.",
    "lineNumber": 59,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TopologyDefineField"
      },
      {
        "tagName": "@extends",
        "tagValue": "TopologyDefineItem\n\nSETTINGS FORMAT:\n\t\"fields\":\n\t\t\"fieldA\":\n\t\t// DATA\n\t\t\"type\": \"integer\",\n\t\t\"auto_increment\": false,\n\t\t\"allow_null\": false,\n\t\t\"is_unique\":true,\n\t\t\"is_primary_key\":true,\n\t\t\"expression\":null,\n\t\t\"column\":\"id\",\n\t\t\"alias\":\"id_user\",\n\n\t\t// VALUE\n\t\t\"default\":\"\",\n\t\t\"hash\": \"md5\",\n\t\t\"validate_rule\": \"alphaALPHAnum_-space\",\n\t\t\"validate_error_label\": \"upper or lower alphanumeric and - and _ and space\"\n\n\t\t// VIEW\n\t\t\"label\": \"Id\",\n\t\t\"placeholder\": \"Enter lastname\",\n\t\t\"is_editable\": \"0\",\n\t\t\"is_visible\": \"0\"\n\t\t\"fieldB\":..."
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "instance settings map."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1450,
    "kind": "member",
    "name": "is_topology_define_field",
    "memberof": "js/topology/define/topology_define_field.js~TopologyDefineField",
    "static": false,
    "longname": "js/topology/define/topology_define_field.js~TopologyDefineField#is_topology_define_field",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1451,
    "kind": "member",
    "name": "topology_type",
    "memberof": "js/topology/define/topology_define_field.js~TopologyDefineField",
    "static": false,
    "longname": "js/topology/define/topology_define_field.js~TopologyDefineField#topology_type",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1452,
    "kind": "member",
    "name": "field_type",
    "memberof": "js/topology/define/topology_define_field.js~TopologyDefineField",
    "static": false,
    "longname": "js/topology/define/topology_define_field.js~TopologyDefineField#field_type",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1453,
    "kind": "member",
    "name": "field_is_primary_key",
    "memberof": "js/topology/define/topology_define_field.js~TopologyDefineField",
    "static": false,
    "longname": "js/topology/define/topology_define_field.js~TopologyDefineField#field_is_primary_key",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1454,
    "kind": "member",
    "name": "field_auto_increment",
    "memberof": "js/topology/define/topology_define_field.js~TopologyDefineField",
    "static": false,
    "longname": "js/topology/define/topology_define_field.js~TopologyDefineField#field_auto_increment",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1455,
    "kind": "member",
    "name": "field_allow_null",
    "memberof": "js/topology/define/topology_define_field.js~TopologyDefineField",
    "static": false,
    "longname": "js/topology/define/topology_define_field.js~TopologyDefineField#field_allow_null",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1456,
    "kind": "member",
    "name": "field_is_unique",
    "memberof": "js/topology/define/topology_define_field.js~TopologyDefineField",
    "static": false,
    "longname": "js/topology/define/topology_define_field.js~TopologyDefineField#field_is_unique",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1457,
    "kind": "member",
    "name": "field_expression",
    "memberof": "js/topology/define/topology_define_field.js~TopologyDefineField",
    "static": false,
    "longname": "js/topology/define/topology_define_field.js~TopologyDefineField#field_expression",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1458,
    "kind": "member",
    "name": "field_column",
    "memberof": "js/topology/define/topology_define_field.js~TopologyDefineField",
    "static": false,
    "longname": "js/topology/define/topology_define_field.js~TopologyDefineField#field_column",
    "access": "public",
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1459,
    "kind": "member",
    "name": "field_alias",
    "memberof": "js/topology/define/topology_define_field.js~TopologyDefineField",
    "static": false,
    "longname": "js/topology/define/topology_define_field.js~TopologyDefineField#field_alias",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1460,
    "kind": "member",
    "name": "field_default",
    "memberof": "js/topology/define/topology_define_field.js~TopologyDefineField",
    "static": false,
    "longname": "js/topology/define/topology_define_field.js~TopologyDefineField#field_default",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1461,
    "kind": "member",
    "name": "field_hash",
    "memberof": "js/topology/define/topology_define_field.js~TopologyDefineField",
    "static": false,
    "longname": "js/topology/define/topology_define_field.js~TopologyDefineField#field_hash",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1462,
    "kind": "member",
    "name": "field_validate_rule",
    "memberof": "js/topology/define/topology_define_field.js~TopologyDefineField",
    "static": false,
    "longname": "js/topology/define/topology_define_field.js~TopologyDefineField#field_validate_rule",
    "access": "public",
    "description": null,
    "lineNumber": 81,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1463,
    "kind": "member",
    "name": "field_validate_error_label",
    "memberof": "js/topology/define/topology_define_field.js~TopologyDefineField",
    "static": false,
    "longname": "js/topology/define/topology_define_field.js~TopologyDefineField#field_validate_error_label",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1464,
    "kind": "member",
    "name": "field_label",
    "memberof": "js/topology/define/topology_define_field.js~TopologyDefineField",
    "static": false,
    "longname": "js/topology/define/topology_define_field.js~TopologyDefineField#field_label",
    "access": "public",
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1465,
    "kind": "member",
    "name": "field_placeholder",
    "memberof": "js/topology/define/topology_define_field.js~TopologyDefineField",
    "static": false,
    "longname": "js/topology/define/topology_define_field.js~TopologyDefineField#field_placeholder",
    "access": "public",
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1466,
    "kind": "member",
    "name": "field_is_editable",
    "memberof": "js/topology/define/topology_define_field.js~TopologyDefineField",
    "static": false,
    "longname": "js/topology/define/topology_define_field.js~TopologyDefineField#field_is_editable",
    "access": "public",
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1467,
    "kind": "member",
    "name": "field_is_visible",
    "memberof": "js/topology/define/topology_define_field.js~TopologyDefineField",
    "static": false,
    "longname": "js/topology/define/topology_define_field.js~TopologyDefineField#field_is_visible",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1468,
    "kind": "method",
    "name": "is_valid",
    "memberof": "js/topology/define/topology_define_field.js~TopologyDefineField",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_field.js~TopologyDefineField#is_valid",
    "access": "public",
    "description": "...",
    "lineNumber": 100,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1469,
    "kind": "file",
    "name": "js/topology/define/topology_define_item.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../../utils/types'\r\nimport {is_browser} from '../../utils/is_browser'\r\n\r\n\r\nlet  forge = undefined\r\nif ( is_browser() )\r\n{\r\n\tforge = require('forge-browser').forge\r\n} else {\r\n\tforge = require('node-forge')\r\n}\r\n\r\n// COMMON IMPORTS\r\nimport CollectionVersion from '../../base/collection_version'\r\nimport Instance from '../../base/instance'\r\n\r\n\r\nconst context = 'common/topology/define/topology_define_item'\r\n\r\n\r\n\r\n/**\r\n * TopologyDefineItem class.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n* A Topology item is a runtime dynamic object corresponding to a static topology registry item.\r\n* Each item has a name, a tenant, a package, a version and initial settings.\r\n* Item sub class instances can have collections of children items.\r\n* \r\n* Topology registry is shared and synchronized between all topology nodes with a master node to acknoledge changes.\r\n* Topology runtime is the dynamic corresponding part of a topology registry and is instancied on each node.\r\n* \r\n* API:\r\n* \t\t->load():nothing - load Topology item settings.\r\n* \t\t->get_topology_info(arg_deep=true, arg_visited={}):object - get topology item informations.\r\n* \t\t->get_children():object - gt topology children items.\r\n* \t\t\r\n* \t\t->get_topology_type():string     - get resource topology type.\r\n* \t\t->get_topology_tenant():string   - get resource topology tenant.\r\n* \t\t->get_topology_package():string  - get resource topology package.\r\n* \t\t->get_topology_version():string  - get resource topology version.\r\n* \t\t->get_topology_uid_desc():string - get resource topology uid description.\r\n* \t\t->get_topology_uid():string      - get resource topology uid.\r\n* \t\t->get_topology_security():object - get resource topology security.\r\n* \r\n* \r\n */\r\nexport default class TopologyDefineItem extends Instance\r\n{\r\n\t/**\r\n\t * Create a topology item instance.\r\n\t * \r\n\t * @param {string} arg_name - instance name.\r\n\t * @param {object} arg_settings - instance settings map.\r\n\t * @param {string} arg_class - class name.\r\n\t * @param {string} arg_log_context - trace context string.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_name, arg_settings, arg_class, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tassert( T.isObject(arg_settings), log_context + ':bad settings object')\r\n\t\t\r\n\t\t// DECORATE STATE WITH A VERSION\r\n\t\tif ( (! arg_settings.get) && arg_settings && arg_settings.state && !arg_settings.state.state_version)\r\n\t\t{\r\n\t\t\targ_settings.state.state_version = 0\r\n\t\t} else if ( arg_settings.setIn && arg_settings.has('state') && ! arg_settings.hasIn(['state', 'state_version']) )\r\n\t\t{\r\n\t\t\targ_settings = arg_settings.setIn(['state', 'state_version'], 0)\r\n\t\t}\r\n\r\n\t\tsuper('defined_topology', arg_class ? arg_class : 'TopologyDefineItem', arg_name, arg_settings, log_context)\r\n\t\t\r\n\t\tthis.is_topology_define_item = true\r\n\r\n\t\t// DEFINE DEFAULT ATTRIBUTES VALUES\r\n\t\tthis.DEFAULT_TYPE = 'item'\r\n\t\tthis.DEFAULT_TENANT = 'default'\r\n\t\tthis.DEFAULT_PACKAGE = 'default'\r\n\t\tthis.DEFAULT_VERSION = '0.0.0'\r\n\t\tthis.DEFAULT_SECURITY = {}\r\n\r\n\t\t// SET ATTRIBUTES VALUES\r\n\t\tthis.topology_type = this.get_setting('type', this.DEFAULT_TYPE)\r\n\t\tthis.topology_tenant = this.get_setting('tenant', this.DEFAULT_TENANT)\r\n\t\tthis.topology_package = this.get_setting('package', this.DEFAULT_PACKAGE)\r\n\t\tthis.topology_version = this.get_setting('version', this.DEFAULT_VERSION)\r\n\r\n\t\tthis.topology_uid_desc = 'uid:' + this.topology_tenant + '/' + this.topology_package + '/' + this.get_name() + '/' + this.topology_version\r\n\t\t\r\n\t\tconst md = forge.md.sha1.create()\r\n\t\tmd.update(this.topology_uid_desc)\r\n\t\tthis.topology_uid = md.digest().toHex()\r\n\r\n\t\tthis.topology_security = this.get_setting('security', this.DEFAULT_SECURITY)\r\n\t\t\r\n\t\tthis.topology_children = {}\r\n\t\tthis.topology_owner = undefined\r\n\r\n\t\t// console.log((arg_class ? arg_class : 'TopologyDefineItem') + ':' + arg_name, this.is_trace_enabled ? 'trace enabled' : 'trace disabled')\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Load Topology item settings.\r\n\t * \r\n\t * @returns {Promise} - Promise(boolean): true=success, false=failure\r\n\t */\r\n\tload()\r\n\t{\r\n\t\t// this.enable_trace()\r\n\t\tthis.enter_group('load')\r\n\t\t\r\n\t\tsuper.load()\r\n\t\t\r\n\t\tconst promises = []\r\n\t\tconst children_names = Object.keys(this.topology_children)\r\n\t\tthis.debug('load:children_names=' + children_names)\r\n\t\tchildren_names.forEach(\r\n\t\t\t(child_name)=>{\r\n\t\t\t\tthis.debug('load:child=' + child_name)\r\n\t\t\t\tconst child_collection = this.topology_children[child_name]\r\n\t\t\t\tconst child_promise = this.load_collection(child_collection.plural, child_collection, child_collection.item_class, child_collection.item_init)\r\n\t\t\t\tpromises.push(child_promise)\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\tif (promises.length == 0)\r\n\t\t{\r\n\t\t\tthis.leave_group('load:async is resolved without item children with success')\r\n\t\t\treturn Promise.resolve(true)\r\n\t\t}\r\n\t\t\r\n\t\tthis.leave_group('load:async wait')\r\n\t\treturn Promise.all(promises).then(\r\n\t\t\t(result)=>{\r\n\t\t\t\t// this.disable_trace()\r\n\t\t\t\tthis.leave_group('load:async is resolved with ' + (result ? 'success' : 'failure'))\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\t\r\n\r\n\r\n\t/**\r\n\t * Check functional format.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tis_valid()\r\n\t{\r\n\t\treturn true\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Compare two versions.\r\n\t * @TODO: use node-semver\r\n\t * \r\n\t * @param {string} arg_op - comparison operator (<, <=, =, >=, >).\r\n\t * @param {string} arg_version1 - left version.\r\n\t * @param {string} arg_version2 - right version.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tcompare_versions(arg_op, arg_version1, arg_version2)\r\n\t{\r\n\t\tswitch(arg_op)\r\n\t\t{\r\n\t\t\tcase '<':\treturn arg_version1 <  arg_version2\r\n\t\t\tcase '<=':\treturn arg_version1 <= arg_version2\r\n\t\t\tcase '>':\treturn arg_version1 >  arg_version2\r\n\t\t\tcase '>=':\treturn arg_version1 >= arg_version2\r\n\t\t\tcase '=':\treturn arg_version1 == arg_version2\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Load a collection of topology items.\r\n\t * \r\n\t * @param {string} arg_plural_name - plural name of the collection.\r\n\t * @param {string} arg_single_name - single name of the collection item.\r\n\t * @param {class} arg_topology_class - item TopologyDefineItem child class.\r\n\t * @param {function} arg_init_cb - optional callback to complete item loading:(name,settings)=>Promise(boolean).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdeclare_collection(arg_plural_name, arg_single_name, arg_topology_class, arg_init_cb)\r\n\t{\r\n\t\tthis.enter_group('declare_collection of ' + arg_plural_name)\r\n\r\n\t\t// CHECK ARGS\r\n\t\tassert( T.isString(arg_plural_name) && arg_plural_name.length > 0, context + ':declare_collection:bad plural name for plural=' + arg_plural_name + ',single=' + arg_single_name)\r\n\t\tassert( T.isString(arg_single_name) && arg_single_name.length > 0, context + ':declare_collection:bad single string for plural=' + arg_plural_name + ',single=' + arg_single_name)\r\n\t\tassert( T.isFunction(arg_topology_class), context + ':declare_collection:bad class object for plural=' + arg_plural_name + ',single=' + arg_single_name)\r\n\t\t\r\n\t\t// DECLARE COLLECTION\r\n\t\t// const filter_version = (arg_name, arg_version)=>{\r\n\t\t// \treturn (arg_item)=>{\r\n\t\t// \t\treturn arg_item.get_name() == arg_name && arg_item.get_topology_version() == arg_version\r\n\t\t// \t}\r\n\t\t// }\r\n\t\tthis.topology_children[arg_plural_name] = {\r\n\t\t\tis_versionned_collection: true,\r\n\t\t\tplural:arg_plural_name,\r\n\t\t\tsingle:arg_single_name,\r\n\t\t\titem_class:arg_topology_class,\r\n\t\t\titem_init:arg_init_cb,\r\n\r\n\t\t\tcollection:new CollectionVersion(),\r\n\t\t\t\r\n\t\t\thas:(arg_name, arg_version)=>{\r\n\t\t\t\tif (arg_version == 'latest')\r\n\t\t\t\t{\r\n\t\t\t\t\treturn this.topology_children[arg_plural_name].collection.has(arg_name)\r\n\t\t\t\t}\r\n\t\t\t\treturn this.topology_children[arg_plural_name].collection.has_version(arg_name, arg_version)\r\n\t\t\t},\r\n\t\t\tget:(arg_name, arg_version)=>{\r\n\t\t\t\tif (arg_version == 'latest')\r\n\t\t\t\t{\r\n\t\t\t\t\treturn this.topology_children[arg_plural_name].collection.get_latest_item(arg_name)\r\n\t\t\t\t}\r\n\t\t\t\treturn this.topology_children[arg_plural_name].collection.get_item_of_version(arg_name, arg_version)\r\n\t\t\t},\r\n\t\t\tadd:(arg_item)=>{\r\n\t\t\t\tthis.debug('collection[' + arg_plural_name + '].add item[' + arg_item.get_name() + ']')\r\n\t\t\t\tthis.topology_children[arg_plural_name].collection.add(arg_item)\r\n\t\t\t},\r\n\t\t\tremove:(arg_item)=>{\r\n\t\t\t\tthis.debug('collection[' + arg_plural_name + '].remove item[' + arg_item.get_name() + ']')\r\n\t\t\t\tthis.topology_children[arg_plural_name].collection.remove(arg_item)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// DECLARE ACCESSORS\r\n\t\tthis[arg_plural_name] = ()=>{\r\n\t\t\treturn this.topology_children[arg_plural_name].collection\r\n\t\t}\r\n\r\n\t\tthis[arg_single_name] = (arg_name, arg_version='latest')=>{\r\n\t\t\t// console.log('find item [' + arg_name + '] of version [' + arg_version + '] of collection [' + arg_plural_name + ']')\r\n\t\t\tif (arg_version == 'latest')\r\n\t\t\t{\r\n\t\t\t\treturn this.topology_children[arg_plural_name].collection.get_latest_item(arg_name)\r\n\t\t\t}\r\n\t\t\treturn this.topology_children[arg_plural_name].collection.get_item_of_version(arg_name, arg_version)\r\n\t\t}\r\n\r\n\t\tthis.leave_group('declare_collection of ' + arg_plural_name)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Load a collection of topology items.\r\n\t * \r\n\t * @param {string} arg_collection_name - name of the collection in the item settings.\r\n\t * @param {object} arg_collection - child collection of items.\r\n\t * @param {class} arg_topology_class - item TopologyDefineItem child class.\r\n\t * @param {function} arg_init_cb - optional callback to complete item loading:(name,settings)=>Promise(boolean).\r\n\t * \r\n\t * @returns {Promise} - Promise(boolean): true=success, false=failure.\r\n\t */\r\n\tload_collection(arg_collection_name, arg_collection, arg_topology_class, arg_init_cb)\r\n\t{\r\n\t\tthis.enter_group('load_collection of ' + arg_collection_name)\r\n\t\t// console.info('load_collection of ' + arg_collection_name)\r\n\t\t\r\n\t\tconst runtime = this.get_runtime()\r\n\t\tconst logger_manager = this.get_logger_manager()\r\n\t\tassert( T.isObject(runtime) && runtime.is_server_runtime, context + ':load_collection:bad runtime instance')\r\n\t\tassert( T.isObject(logger_manager) && logger_manager.is_logger_manager, context + ':load_collection:bad logger_manager instance')\r\n\r\n\t\tconst promises = []\r\n\t\t// TODO ???\r\n\t\tconst collection_settings = this.get_setting(arg_collection_name, this.get_setting(['resources_by_type', arg_collection_name], undefined))\r\n\t\tif (collection_settings)\r\n\t\t{\r\n\t\t\tconst all_map = collection_settings.toMap()\r\n\t\t\tall_map.forEach(\r\n\t\t\t\t(settings, name) => {\r\n\t\t\t\t\tthis.info('Processing ' + arg_collection_name + ' item creation of:' + name)\r\n\t\t\t\t\t// console.log(settings, 'settings')\r\n\t\t\t\t\t// console.log(name, 'name')\r\n\t\t\t\t\tif (! settings.has('tenant'))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsettings = settings.set('tenant', this.get_topology_tenant())\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (! settings.has('package'))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsettings = settings.set('package', this.get_topology_package())\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tsettings = settings.set('name', name)\r\n\t\t\t\t\tsettings = settings.set('runtime', runtime)\r\n\t\t\t\t\tsettings = settings.set('logger_manager', logger_manager)\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.info('Creating ' + arg_collection_name + ' item ' + name)\r\n\t\t\t\t\tconst item = new arg_topology_class(name, settings)\r\n\t\t\t\t\titem.topology_owner = this\r\n\r\n\t\t\t\t\targ_collection.add(item)\r\n\r\n\t\t\t\t\tthis.info('Loading ' + arg_collection_name + ' item ' + name)\r\n\t\t\t\t\tlet load_promise = item.load()\r\n\r\n\t\t\t\t\tif ( T.isFunction(arg_init_cb) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tload_promise = load_promise.then(\r\n\t\t\t\t\t\t\t(result)=>{\r\n\t\t\t\t\t\t\t\tif (result)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\treturn arg_init_cb(item)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn false\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tload_promise = load_promise.then(\r\n\t\t\t\t\t\t(result)=>{\r\n\t\t\t\t\t\t\treturn result && item.is_valid()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\r\n\t\t\t\t\tpromises.push(load_promise)\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t\t\r\n\t\tthis.leave_group('load_collection of ' + arg_collection_name + ':async wait')\r\n\t\treturn Promise.all(promises).then(\r\n\t\t\t(result)=>{\r\n\t\t\t\tthis.leave_group('load_collection of ' + arg_collection_name + ':async is resolved with ' + (result ? 'success' : 'failure'))\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get exporting settings.\r\n\t * \r\n\t * @returns {object} - exported settings for browser without sensitive values.\r\n\t */\r\n\texport_settings()\r\n\t{\r\n\t\tconst settings = this.get_settings_js()\r\n\r\n\t\treturn settings\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get topology item informations.\r\n\t * \r\n\t * @param {boolean} arg_deep - get deep sub items information on true (default:true).\r\n\t * @param {object} arg_visited - visited items plain object map (default:{}).\r\n\t * \r\n\t * @returns {object} - topology informations (plain object).\r\n\t */\r\n\tget_topology_info(arg_deep=true, arg_visited={})\r\n\t{\r\n\t\tconst info = {\r\n\t\t\tname:this.get_name(),\r\n\t\t\tuid_desc:this.topology_uid_desc,\r\n\t\t\tuid:this.topology_uid,\r\n\r\n\t\t\ttenant:this.topology_tenant,\r\n\t\t\tpackage:this.topology_package,\r\n\t\t\tversion:this.topology_version,\r\n\t\t\t\r\n\t\t\ttype:this.topology_type,\r\n\t\t\tsecurity:this.topology_security,\r\n\t\t\t\r\n\t\t\tchildren:this.get_children_names()\r\n\t\t}\r\n\r\n\t\tif ( arg_visited && (this.topology_uid in arg_visited) )\r\n\t\t{\r\n\t\t\treturn Object.assign(info, { note:'already dumped' } )\r\n\t\t}\r\n\r\n\t\targ_visited[this.topology_uid] = info\r\n\r\n\t\tif (arg_deep)\r\n\t\t{\r\n\t\t\tconst children_names = info.children\r\n\t\t\tinfo.children = []\r\n\t\t\tchildren_names.forEach(\r\n\t\t\t\t(child_name) => {\r\n\t\t\t\t\tlet child = this.topology_children[child_name]\r\n\r\n\t\t\t\t\t// CHILD IS NOT FOUND\r\n\t\t\t\t\tif (! child)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconsole.error(context + ':get_topology_info:child not found [' + child_name + '] for item [' + info.name + ']')\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// CHILD IS A TOPOLOGY DEFINE ITEM\r\n\t\t\t\t\tif ( child && T.isFunction(child.get_topology_info) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tinfo.children.push( child.get_topology_info(arg_deep, arg_visited) )\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// CHILD IS A VERSIONNED COLLECTION\r\n\t\t\t\t\tif ( T.isObject(child) && child.is_versionned_collection)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst all_versioned_items = child.collection.get_all()\r\n\t\t\t\t\t\tall_versioned_items.forEach(\r\n\t\t\t\t\t\t\t(item)=>{\r\n\t\t\t\t\t\t\t\tinfo.children.push( item.get_topology_info() )\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn info\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Dump topology item informations.\r\n\t * \r\n\t * @param {object}   arg_info  - topology info object.\r\n\t * @param {string}   arg_tabs  - separator.\r\n\t * @param {string}   arg_eol   - end of line char.\r\n\t * @param {function} arg_write - output function.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdump_topology_info(arg_info, arg_tabs=' ', arg_eol='\\n', arg_write = console.info)\r\n\t{\r\n\t\targ_write(arg_tabs + '-------------------------------------' + arg_eol)\r\n\t\targ_write(arg_tabs + 'name:'\t\t+ arg_info.name + arg_eol)\r\n\t\targ_write(arg_tabs + 'uid_desc:'\t+ arg_info.uid_desc + arg_eol)\r\n\t\targ_write(arg_tabs + 'uid:'\t\t\t+ arg_info.uid + arg_eol)\r\n\t\targ_write(arg_tabs + 'tenant:'\t\t+ arg_info.tenant + arg_eol)\r\n\t\targ_write(arg_tabs + 'package:'\t\t+ arg_info.package + arg_eol)\r\n\t\targ_write(arg_tabs + 'version:'\t\t+ arg_info.version + arg_eol)\r\n\t\targ_write(arg_tabs + 'type:'\t\t+ arg_info.type + arg_eol)\r\n\t\targ_write(arg_tabs + 'security:'\t+ arg_info.security + arg_eol)\r\n\t\t\r\n\t\targ_write(arg_tabs + 'children: [' + arg_eol)\r\n\t\targ_info.children.forEach(\r\n\t\t\t(child_info)=>{\r\n\t\t\t\tthis.dump_topology_info(child_info, arg_tabs + ' ', arg_eol, arg_write)\r\n\t\t\t}\r\n\t\t)\r\n\t\targ_write(arg_tabs + ']' + arg_eol)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get children names.\r\n\t * \r\n\t * @returns {array}\r\n\t */\r\n\tget_children_names()\r\n\t{\r\n\t\treturn Object.keys(this.topology_children)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get resource topology type.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_topology_type()\r\n\t{\r\n\t\treturn this.topology_type\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get resource topology tenant.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_topology_tenant()\r\n\t{\r\n\t\treturn this.topology_tenant\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get resource topology package.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_topology_package()\r\n\t{\r\n\t\treturn this.topology_package\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get resource topology version.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_topology_version()\r\n\t{\r\n\t\treturn this.topology_version\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get resource topology uid description.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_topology_uid_desc()\r\n\t{\r\n\t\treturn this.topology_uid_desc\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get resource topology uid.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_topology_uid()\r\n\t{\r\n\t\treturn this.topology_uid\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get resource topology security.\r\n\t * \r\n\t * @returns {object}\r\n\t */\r\n\tget_topology_security()\r\n\t{\r\n\t\treturn this.topology_security\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get topology children items.\r\n\t * \r\n\t * @returns {object} - map of children items.\r\n\t */\r\n\tget_children()\r\n\t{\r\n\t\treturn this.topology_children\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get topology owner.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_topology_owner()\r\n\t{\r\n\t\treturn this.topology_owner\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/define/topology_define_item.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1470,
    "kind": "variable",
    "name": "forge",
    "memberof": "js/topology/define/topology_define_item.js",
    "static": true,
    "longname": "js/topology/define/topology_define_item.js~forge",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/define/topology_define_item.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1471,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/define/topology_define_item.js",
    "static": true,
    "longname": "js/topology/define/topology_define_item.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/define/topology_define_item.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1472,
    "kind": "class",
    "name": "TopologyDefineItem",
    "memberof": "js/topology/define/topology_define_item.js",
    "static": true,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/define/topology_define_item.js",
    "importStyle": "TopologyDefineItem",
    "description": "TopologyDefineItem class.",
    "examples": [
      "A Topology item is a runtime dynamic object corresponding to a static topology registry item.\nEach item has a name, a tenant, a package, a version and initial settings.\nItem sub class instances can have collections of children items.\n\nTopology registry is shared and synchronized between all topology nodes with a master node to acknoledge changes.\nTopology runtime is the dynamic corresponding part of a topology registry and is instancied on each node.\n\nAPI:\n\t\t->load():nothing - load Topology item settings.\n\t\t->get_topology_info(arg_deep=true, arg_visited={}):object - get topology item informations.\n\t\t->get_children():object - gt topology children items.\n\t\t\n\t\t->get_topology_type():string     - get resource topology type.\n\t\t->get_topology_tenant():string   - get resource topology tenant.\n\t\t->get_topology_package():string  - get resource topology package.\n\t\t->get_topology_version():string  - get resource topology version.\n\t\t->get_topology_uid_desc():string - get resource topology uid description.\n\t\t->get_topology_uid():string      - get resource topology uid.\n\t\t->get_topology_security():object - get resource topology security."
    ],
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/instance.js~Instance"
    ]
  },
  {
    "__docId__": 1473,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#constructor",
    "access": "public",
    "description": "Create a topology item instance.",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "instance settings map."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_class",
        "description": "class name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1474,
    "kind": "member",
    "name": "is_topology_define_item",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#is_topology_define_item",
    "access": "public",
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1475,
    "kind": "member",
    "name": "DEFAULT_TYPE",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#DEFAULT_TYPE",
    "access": "public",
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1476,
    "kind": "member",
    "name": "DEFAULT_TENANT",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#DEFAULT_TENANT",
    "access": "public",
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1477,
    "kind": "member",
    "name": "DEFAULT_PACKAGE",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#DEFAULT_PACKAGE",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1478,
    "kind": "member",
    "name": "DEFAULT_VERSION",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#DEFAULT_VERSION",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1479,
    "kind": "member",
    "name": "DEFAULT_SECURITY",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#DEFAULT_SECURITY",
    "access": "public",
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 1480,
    "kind": "member",
    "name": "topology_type",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#topology_type",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1481,
    "kind": "member",
    "name": "topology_tenant",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#topology_tenant",
    "access": "public",
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1482,
    "kind": "member",
    "name": "topology_package",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#topology_package",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1483,
    "kind": "member",
    "name": "topology_version",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#topology_version",
    "access": "public",
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1484,
    "kind": "member",
    "name": "topology_uid_desc",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#topology_uid_desc",
    "access": "public",
    "description": null,
    "lineNumber": 98,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1485,
    "kind": "member",
    "name": "topology_uid",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#topology_uid",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1486,
    "kind": "member",
    "name": "topology_security",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#topology_security",
    "access": "public",
    "description": null,
    "lineNumber": 104,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1487,
    "kind": "member",
    "name": "topology_children",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#topology_children",
    "access": "public",
    "description": null,
    "lineNumber": 106,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 1488,
    "kind": "member",
    "name": "topology_owner",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#topology_owner",
    "access": "public",
    "description": null,
    "lineNumber": 107,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1489,
    "kind": "method",
    "name": "load",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#load",
    "access": "public",
    "description": "Load Topology item settings.",
    "lineNumber": 119,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise(boolean): true=success, false=failure"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise(boolean): true=success, false=failure"
    },
    "params": []
  },
  {
    "__docId__": 1490,
    "kind": "method",
    "name": "is_valid",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#is_valid",
    "access": "public",
    "description": "Check functional format.",
    "lineNumber": 161,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1491,
    "kind": "method",
    "name": "compare_versions",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#compare_versions",
    "access": "public",
    "description": "Compare two versions.\n@TODO: use node-semver",
    "lineNumber": 178,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_op",
        "description": "comparison operator (<, <=, =, >=, >)."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_version1",
        "description": "left version."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_version2",
        "description": "right version."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1492,
    "kind": "method",
    "name": "declare_collection",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#declare_collection",
    "access": "public",
    "description": "Load a collection of topology items.",
    "lineNumber": 203,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_plural_name",
        "description": "plural name of the collection."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_single_name",
        "description": "single name of the collection item."
      },
      {
        "nullable": null,
        "types": [
          "class"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_topology_class",
        "description": "item TopologyDefineItem child class."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_init_cb",
        "description": "optional callback to complete item loading:(name,settings)=>Promise(boolean)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1493,
    "kind": "member",
    "name": "[arg_plural_name]",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#[arg_plural_name]",
    "access": "public",
    "description": null,
    "lineNumber": 252,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1494,
    "kind": "member",
    "name": "[arg_single_name]",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#[arg_single_name]",
    "access": "public",
    "description": null,
    "lineNumber": 256,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1495,
    "kind": "method",
    "name": "load_collection",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#load_collection",
    "access": "public",
    "description": "Load a collection of topology items.",
    "lineNumber": 280,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise(boolean): true=success, false=failure."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_collection_name",
        "description": "name of the collection in the item settings."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_collection",
        "description": "child collection of items."
      },
      {
        "nullable": null,
        "types": [
          "class"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_topology_class",
        "description": "item TopologyDefineItem child class."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_init_cb",
        "description": "optional callback to complete item loading:(name,settings)=>Promise(boolean)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise(boolean): true=success, false=failure."
    }
  },
  {
    "__docId__": 1496,
    "kind": "method",
    "name": "export_settings",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#export_settings",
    "access": "public",
    "description": "Get exporting settings.",
    "lineNumber": 363,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - exported settings for browser without sensitive values."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "exported settings for browser without sensitive values."
    },
    "params": []
  },
  {
    "__docId__": 1497,
    "kind": "method",
    "name": "get_topology_info",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#get_topology_info",
    "access": "public",
    "description": "Get topology item informations.",
    "lineNumber": 380,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - topology informations (plain object)."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_deep",
        "description": "get deep sub items information on true (default:true)."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_visited",
        "description": "visited items plain object map (default:{})."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "topology informations (plain object)."
    }
  },
  {
    "__docId__": 1498,
    "kind": "method",
    "name": "dump_topology_info",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#dump_topology_info",
    "access": "public",
    "description": "Dump topology item informations.",
    "lineNumber": 455,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_info",
        "description": "topology info object."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_tabs",
        "description": "separator."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_eol",
        "description": "end of line char."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_write",
        "description": "output function."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1499,
    "kind": "method",
    "name": "get_children_names",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#get_children_names",
    "access": "public",
    "description": "Get children names.",
    "lineNumber": 483,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1500,
    "kind": "method",
    "name": "get_topology_type",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#get_topology_type",
    "access": "public",
    "description": "Get resource topology type.",
    "lineNumber": 495,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1501,
    "kind": "method",
    "name": "get_topology_tenant",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#get_topology_tenant",
    "access": "public",
    "description": "Get resource topology tenant.",
    "lineNumber": 507,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1502,
    "kind": "method",
    "name": "get_topology_package",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#get_topology_package",
    "access": "public",
    "description": "Get resource topology package.",
    "lineNumber": 519,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1503,
    "kind": "method",
    "name": "get_topology_version",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#get_topology_version",
    "access": "public",
    "description": "Get resource topology version.",
    "lineNumber": 531,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1504,
    "kind": "method",
    "name": "get_topology_uid_desc",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#get_topology_uid_desc",
    "access": "public",
    "description": "Get resource topology uid description.",
    "lineNumber": 543,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1505,
    "kind": "method",
    "name": "get_topology_uid",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#get_topology_uid",
    "access": "public",
    "description": "Get resource topology uid.",
    "lineNumber": 555,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1506,
    "kind": "method",
    "name": "get_topology_security",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#get_topology_security",
    "access": "public",
    "description": "Get resource topology security.",
    "lineNumber": 567,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1507,
    "kind": "method",
    "name": "get_children",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#get_children",
    "access": "public",
    "description": "Get topology children items.",
    "lineNumber": 579,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - map of children items."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "map of children items."
    },
    "params": []
  },
  {
    "__docId__": 1508,
    "kind": "method",
    "name": "get_topology_owner",
    "memberof": "js/topology/define/topology_define_item.js~TopologyDefineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_item.js~TopologyDefineItem#get_topology_owner",
    "access": "public",
    "description": "Get topology owner.",
    "lineNumber": 591,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1509,
    "kind": "file",
    "name": "js/topology/define/topology_define_menu.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport TopologyDefineItem from './topology_define_item'\r\n\r\n\r\nlet context = 'common/topology/define/topology_define_menu'\r\n\r\n\r\n\r\n/**\r\n * @file Menu class: describe a Menu topology item.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class TopologyDefineMenu extends TopologyDefineItem\r\n{\r\n\t/**\r\n\t * Create a TopologyDefineMenu instance.\r\n\t * @class TopologyDefineMenu\r\n\t * @extends TopologyDefineItem\r\n\t * \r\n\t * @param {string} arg_name - instance name.\r\n\t * @param {object} arg_settings - instance settings map.\r\n\t * @param {string} arg_log_context - trace context string.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_name, arg_settings, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_name, arg_settings, 'TopologyDefineMenu', log_context)\r\n\t\t\r\n\t\tthis.is_topology_define_menu = true\r\n\r\n\t\tthis.topology_type = 'menus'\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/define/topology_define_menu.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1510,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/define/topology_define_menu.js",
    "static": true,
    "longname": "js/topology/define/topology_define_menu.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/define/topology_define_menu.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1511,
    "kind": "class",
    "name": "TopologyDefineMenu",
    "memberof": "js/topology/define/topology_define_menu.js",
    "static": true,
    "longname": "js/topology/define/topology_define_menu.js~TopologyDefineMenu",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/define/topology_define_menu.js",
    "importStyle": "TopologyDefineMenu",
    "description": "",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Menu class: describe a Menu topology item."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/topology/define/topology_define_item.js~TopologyDefineItem"
    ]
  },
  {
    "__docId__": 1512,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/topology/define/topology_define_menu.js~TopologyDefineMenu",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_menu.js~TopologyDefineMenu#constructor",
    "access": "public",
    "description": "Create a TopologyDefineMenu instance.",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TopologyDefineMenu"
      },
      {
        "tagName": "@extends",
        "tagValue": "TopologyDefineItem"
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "instance settings map."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1513,
    "kind": "member",
    "name": "is_topology_define_menu",
    "memberof": "js/topology/define/topology_define_menu.js~TopologyDefineMenu",
    "static": false,
    "longname": "js/topology/define/topology_define_menu.js~TopologyDefineMenu#is_topology_define_menu",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1514,
    "kind": "member",
    "name": "topology_type",
    "memberof": "js/topology/define/topology_define_menu.js~TopologyDefineMenu",
    "static": false,
    "longname": "js/topology/define/topology_define_menu.js~TopologyDefineMenu#topology_type",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1515,
    "kind": "file",
    "name": "js/topology/define/topology_define_menubar.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport TopologyDefineItem from './topology_define_item'\r\nimport TopologyDefineMenu from './topology_define_menu'\r\n\r\n\r\nlet context = 'common/topology/define/topology_define_menubar'\r\n\r\n\r\n\r\n/**\r\n * @file Menubar class: describe a Menubar topology item.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class TopologyDefineMenubar extends TopologyDefineItem\r\n{\r\n\t/**\r\n\t * Create a TopologyDefineMenubar instance.\r\n\t * @class TopologyDefineMenubar\r\n\t * @extends TopologyDefineItem\r\n\t * \r\n\t * @param {string} arg_name - instance name.\r\n\t * @param {object} arg_settings - instance settings map.\r\n\t * @param {string} arg_log_context - trace context string.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_name, arg_settings, arg_log_context)\r\n\t{\r\n\t\t// console.log('TopologyDefineMenubar.arg_settings', arg_settings.toJS ? arg_settings.toJS() : arg_settings)\r\n\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_name, arg_settings, 'TopologyDefineMenubar', log_context)\r\n\t\t\r\n\t\tthis.is_topology_define_menubar = true\r\n\r\n\t\tthis.topology_type = 'menubars'\r\n\t\t\r\n\t\tthis.declare_collection('menus', 'menu', TopologyDefineMenu)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/define/topology_define_menubar.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1516,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/define/topology_define_menubar.js",
    "static": true,
    "longname": "js/topology/define/topology_define_menubar.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/define/topology_define_menubar.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1517,
    "kind": "class",
    "name": "TopologyDefineMenubar",
    "memberof": "js/topology/define/topology_define_menubar.js",
    "static": true,
    "longname": "js/topology/define/topology_define_menubar.js~TopologyDefineMenubar",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/define/topology_define_menubar.js",
    "importStyle": "TopologyDefineMenubar",
    "description": "",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Menubar class: describe a Menubar topology item."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/topology/define/topology_define_item.js~TopologyDefineItem"
    ]
  },
  {
    "__docId__": 1518,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/topology/define/topology_define_menubar.js~TopologyDefineMenubar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_menubar.js~TopologyDefineMenubar#constructor",
    "access": "public",
    "description": "Create a TopologyDefineMenubar instance.",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TopologyDefineMenubar"
      },
      {
        "tagName": "@extends",
        "tagValue": "TopologyDefineItem"
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "instance settings map."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1519,
    "kind": "member",
    "name": "is_topology_define_menubar",
    "memberof": "js/topology/define/topology_define_menubar.js~TopologyDefineMenubar",
    "static": false,
    "longname": "js/topology/define/topology_define_menubar.js~TopologyDefineMenubar#is_topology_define_menubar",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1520,
    "kind": "member",
    "name": "topology_type",
    "memberof": "js/topology/define/topology_define_menubar.js~TopologyDefineMenubar",
    "static": false,
    "longname": "js/topology/define/topology_define_menubar.js~TopologyDefineMenubar#topology_type",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1521,
    "kind": "file",
    "name": "js/topology/define/topology_define_model.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\n// import T from '../../utils/types'\r\nimport TopologyDefineItem       from './topology_define_item'\r\nimport TopologyDefineDatasource from './topology_define_datasource'\r\n\r\n\r\nconst context = 'common/topology/define/topology_define_model'\r\n\r\n/*\r\n * FORMAT: {\r\n * \t\t\r\n *\t\t\t{\r\n *\t\t\t\t\"single\":\"user\",\r\n *\t\t\t\t\"plural\":\"users\",\r\n *\t\t\t\t\r\n *\t\t\t\t\"datasource\": \"cx_auth\",\r\n *\t\t\t\t\"container\": \"users\",\r\n * \t\t\t\t\"cache\": { \"ttl\": 500 },\r\n *\r\n *\t\t\t\t\"security\":{\r\n *\t\t\t\t\t\"role_read\": \"ROLE_AUTH_USERS_READ\",\r\n *\t\t\t\t\t\"role_create\": \"ROLE_AUTH_USERS_CREATE\",\r\n *\t\t\t\t\t\"role_update\": \"ROLE_AUTH_USERS_UPDATE\",\r\n *\t\t\t\t\t\"role_delete\": \"ROLE_AUTH_USERS_DELETE\"\r\n *\t\t\t\t\t\"restrict\":{\r\n *\t\t\t\t\t\t\"where\":{\r\n *\t\t\t\t\t\t\t\"in\":{\r\n *\t\t\t\t\t\t\t\t\"{{application.credentials.user_name}}\",\r\n *\t\t\t\t\t\t\t\t\"login\"\r\n *\t\t\t\t\t\t}\r\n *\t\t\t\t\t}\r\n *\t\t\t\t},\r\n *\r\n *\t\t\t\t\"triggers\":{\r\n *\t\t\t\t\t\"before_create\":{\r\n *\t\t\t\t\t\t\"target\":\"my object name\",\r\n *\t\t\t\t\t\t\"method\":\"my method name\"\r\n *\t\t\t\t\t},\r\n *\t\t\t\t\t\"rules_agenda\":\"\"\r\n *\t\t\t\t},\r\n *\r\n *\t\t\t\t\"associations\": {\r\n *\t\t\t\t\t\"roles\": {\r\n *\t\t\t\t\t\t\"mode\": \"many_to_many\",\r\n *\t\t\t\t\t\t\"model\": \"MODEL_AUTH_MANY_USERS_PROFILES\",\r\n *\t\t\t\t\t\t\"left_key\": \"id_user\",\r\n *\t\t\t\t\t\t\"right_model\": \"MODEL_AUTH_PROFILES\",\r\n *\t\t\t\t\t\t\"right_key\": \"id_profile\",\r\n *\t\t\t\t\t\t\"right_fields\": [\r\n *\t\t\t\t\t\t\t\"id_profile\",\r\n *\t\t\t\t\t\t\t\"label\"\r\n *\t\t\t\t\t\t]\r\n *\t\t\t\t\t}\r\n *\t\t\t\t},\r\n *\r\n *\t\t\t\t\"fields\": {\r\n *\t\t\t\t\t\"users_id_user\": {\r\n *\t\t\t\t\t\t// DATA\r\n *\t\t\t\t\t\t\"type\": \"integer\",\r\n *\t\t\t\t\t\t\"auto_increment\": false,\r\n *\t\t\t\t\t\t\"aloow_null\": false,\r\n *\t\t\t\t\t\t\"is_unique\":true,\r\n *\t\t\t\t\t\t\"is_primary_key\":true,\r\n *\t\t\t\t\t\t\"expression\":null,\r\n *\t\t\t\t\t\t\"column\":\"id\",\r\n *\t\t\t\t\t\t\"alias\":\"id_user\",\r\n *\r\n *\t\t\t\t\t\t// VALUE\r\n *\t\t\t\t\t\t\"default\":\"\",\r\n *\t\t\t\t\t\t\"hash\": \"md5\",\r\n *\t\t\t\t\t\t\"validate_rule\": \"alphaALPHAnum_-space\",\r\n *\t\t\t\t\t\t\"validate_error_label\": \"upper or lower alphanumeric and - and _ and space\"\r\n *\r\n *\t\t\t\t\t\t// VIEW\r\n *\t\t\t\t\t\t\"label\": \"Id\",\r\n *\t\t\t\t\t\t\"placeholder\": \"Enter lastname\",\r\n *\t\t\t\t\t\t\"is_editable\": \"0\",\r\n *\t\t\t\t\t\t\"is_visible\": \"0\"\r\n *\t\t\t\t\t}\r\n *\t\t\t\t}\r\n *\t\t\t}\r\n*/\r\n\r\n/**\r\n * Model class: describe a Model topology item.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n* SETTINGS FORMAT:\r\n* \t\"modelss\":\r\n* \t\t\"modelA\":\r\n*\t\t\t\"plural\":\"users\",\r\n*\t\t\t\t\r\n*\t\t\t\"datasource\": \"cx_auth\",\r\n*\t\t\t\"container\": \"users\",\r\n* \t\t\t\"cache\": Object with \"ttl\": 500 ,\r\n*\r\n*\t\t\t\"security\":...,\r\n* \t\t\t\"triggers\":...,\r\n* \t\t\t\"associations\": ...,\r\n* \t\t\t\"fields\":...\r\n* \t\t\"modelB\":...\r\n* \r\n */\r\nexport default class TopologyDefineModel extends TopologyDefineItem\r\n{\r\n\t/**\r\n\t * Create a TopologyDefineModel instance.\r\n\t * \r\n\t * @param {string} arg_name - instance name.\r\n\t * @param {object} arg_settings - instance settings map.\r\n\t * @param {string} arg_log_context - trace context string.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_name, arg_settings, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_name, arg_settings, 'TopologyDefineModel', log_context)\r\n\t\t\r\n\t\tthis.is_topology_define_model = true\r\n\r\n\t\tthis.topology_type = 'models'\r\n\r\n\t\tthis.declare_collection('fields', 'field',  TopologyDefineDatasource)\r\n\t\t\r\n\t\tthis.info('Model is created')\r\n\r\n\t\t// SCHEMA\r\n\t\t// this._id_field_name = undefined\r\n\t\t// this._fields = {}\r\n\t\t// this._fields_names = undefined\r\n\t\t// this._fields_defaults = undefined\r\n\t}\r\n\t\r\n\r\n\r\n\t/**\r\n\t * Load Topology item settings.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tload() // TODO check and load collection schema\r\n\t{\r\n\t\tsuper.load()\r\n\t\r\n\t\t// const schema_format = \"\"\r\n\t}\r\n\t\r\n\r\n\r\n\t/**\r\n\t * Test given attributes against schema rules.\r\n\t * \r\n\t * @param {object} - fields values to check.\r\n\t * \r\n\t * @returns {Promise} - Promise of { is_valid:boolean, errors:{} }\r\n\t */\r\n\tvalidate(arg_attributes) // TODO check and load collection schema\r\n\t{\r\n\t\treturn { is_valid:true, errors:{} }\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get record id field name.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_id_field_name()\r\n\t{\r\n\t\treturn this._id_field_name || this.get_setting('pk_field', undefined)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get single name.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_single_name()\r\n\t{\r\n\t\treturn this.get_setting('single')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get plural name.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_plural_name()\r\n\t{\r\n\t\treturn this.get_setting('plural')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get cache TTL.\r\n\t * \r\n\t * @returns {Number} - default 3000ms.\r\n\t */\r\n\tget_ttl()\r\n\t{\r\n\t\treturn this.get_setting(['cache', 'ttl'], 3000)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get record fields names.\r\n\t * \r\n\t * @returns {array} - array of all schema fields names strings.\r\n\t */\r\n\tget_fields_names()\r\n\t{\r\n\t\tif (! this._fields_names)\r\n\t\t{\r\n\t\t\tthis._fields_names = Object.keys( this.get_setting_js('fields', new Map()) )\r\n\t\t}\r\n\t\treturn this._fields_names\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get record fields names.\r\n\t * \r\n\t * @returns {array} - array of all schema fields names strings.\r\n\t */\r\n\tget_defaults()\r\n\t{\r\n\t\tif (! this._fields_defaults)\r\n\t\t{\r\n\t\t\tthis._fields_defaults = {}\r\n\t\t\tconst fields_names = this.get_fields_names()\r\n\t\t\tfields_names.forEach(\r\n\t\t\t\t(field_name)=>{\r\n\t\t\t\t\tconst field_default = this.get_setting(['fields', field_name, 'default'], undefined)\r\n\t\t\t\t\tthis._fields_defaults[field_name] = field_default\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn this._fields_defaults\r\n\t}\r\n}\r\n\r\n\r\n\r\n/*\r\n\r\n// REGISTER A MODEL\r\n\tmodels[arg_model_name] = {\r\n\t  database:arg_cx_name,\r\n\t  name:arg_model_name,\r\n\t  model:arg_model,\r\n\t  roles:arg_roles,\r\n\t  includes: arg_includes\r\n\t}\r\n\r\n*/",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/define/topology_define_model.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1522,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/define/topology_define_model.js",
    "static": true,
    "longname": "js/topology/define/topology_define_model.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/define/topology_define_model.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1523,
    "kind": "class",
    "name": "TopologyDefineModel",
    "memberof": "js/topology/define/topology_define_model.js",
    "static": true,
    "longname": "js/topology/define/topology_define_model.js~TopologyDefineModel",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/define/topology_define_model.js",
    "importStyle": "TopologyDefineModel",
    "description": "Model class: describe a Model topology item.",
    "examples": [
      "SETTINGS FORMAT:\n\t\"modelss\":\n\t\t\"modelA\":\n\t\t\"plural\":\"users\",\n\t\t\t\n\t\t\"datasource\": \"cx_auth\",\n\t\t\"container\": \"users\",\n\t\t\t\"cache\": Object with \"ttl\": 500 ,\n\n\t\t\"security\":...,\n\t\t\t\"triggers\":...,\n\t\t\t\"associations\": ...,\n\t\t\t\"fields\":...\n\t\t\"modelB\":..."
    ],
    "lineNumber": 110,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/topology/define/topology_define_item.js~TopologyDefineItem"
    ]
  },
  {
    "__docId__": 1524,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/topology/define/topology_define_model.js~TopologyDefineModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_model.js~TopologyDefineModel#constructor",
    "access": "public",
    "description": "Create a TopologyDefineModel instance.",
    "lineNumber": 121,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "instance settings map."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1525,
    "kind": "member",
    "name": "is_topology_define_model",
    "memberof": "js/topology/define/topology_define_model.js~TopologyDefineModel",
    "static": false,
    "longname": "js/topology/define/topology_define_model.js~TopologyDefineModel#is_topology_define_model",
    "access": "public",
    "description": null,
    "lineNumber": 126,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1526,
    "kind": "member",
    "name": "topology_type",
    "memberof": "js/topology/define/topology_define_model.js~TopologyDefineModel",
    "static": false,
    "longname": "js/topology/define/topology_define_model.js~TopologyDefineModel#topology_type",
    "access": "public",
    "description": null,
    "lineNumber": 128,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1527,
    "kind": "method",
    "name": "load",
    "memberof": "js/topology/define/topology_define_model.js~TopologyDefineModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_model.js~TopologyDefineModel#load",
    "access": "public",
    "description": "Load Topology item settings.",
    "lineNumber": 148,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1528,
    "kind": "method",
    "name": "validate",
    "memberof": "js/topology/define/topology_define_model.js~TopologyDefineModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_model.js~TopologyDefineModel#validate",
    "access": "public",
    "description": "Test given attributes against schema rules.",
    "lineNumber": 164,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of { is_valid:boolean, errors:{} }"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "-",
        "description": "fields values to check."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of { is_valid:boolean, errors:{} }"
    }
  },
  {
    "__docId__": 1529,
    "kind": "method",
    "name": "get_id_field_name",
    "memberof": "js/topology/define/topology_define_model.js~TopologyDefineModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_model.js~TopologyDefineModel#get_id_field_name",
    "access": "public",
    "description": "Get record id field name.",
    "lineNumber": 176,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1530,
    "kind": "method",
    "name": "get_single_name",
    "memberof": "js/topology/define/topology_define_model.js~TopologyDefineModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_model.js~TopologyDefineModel#get_single_name",
    "access": "public",
    "description": "Get single name.",
    "lineNumber": 188,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1531,
    "kind": "method",
    "name": "get_plural_name",
    "memberof": "js/topology/define/topology_define_model.js~TopologyDefineModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_model.js~TopologyDefineModel#get_plural_name",
    "access": "public",
    "description": "Get plural name.",
    "lineNumber": 200,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1532,
    "kind": "method",
    "name": "get_ttl",
    "memberof": "js/topology/define/topology_define_model.js~TopologyDefineModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_model.js~TopologyDefineModel#get_ttl",
    "access": "public",
    "description": "Get cache TTL.",
    "lineNumber": 212,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Number} - default 3000ms."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "default 3000ms."
    },
    "params": []
  },
  {
    "__docId__": 1533,
    "kind": "method",
    "name": "get_fields_names",
    "memberof": "js/topology/define/topology_define_model.js~TopologyDefineModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_model.js~TopologyDefineModel#get_fields_names",
    "access": "public",
    "description": "Get record fields names.",
    "lineNumber": 224,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} - array of all schema fields names strings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "array of all schema fields names strings."
    },
    "params": []
  },
  {
    "__docId__": 1534,
    "kind": "member",
    "name": "_fields_names",
    "memberof": "js/topology/define/topology_define_model.js~TopologyDefineModel",
    "static": false,
    "longname": "js/topology/define/topology_define_model.js~TopologyDefineModel#_fields_names",
    "access": "private",
    "description": null,
    "lineNumber": 228,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1535,
    "kind": "method",
    "name": "get_defaults",
    "memberof": "js/topology/define/topology_define_model.js~TopologyDefineModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_model.js~TopologyDefineModel#get_defaults",
    "access": "public",
    "description": "Get record fields names.",
    "lineNumber": 240,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} - array of all schema fields names strings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "array of all schema fields names strings."
    },
    "params": []
  },
  {
    "__docId__": 1536,
    "kind": "member",
    "name": "_fields_defaults",
    "memberof": "js/topology/define/topology_define_model.js~TopologyDefineModel",
    "static": false,
    "longname": "js/topology/define/topology_define_model.js~TopologyDefineModel#_fields_defaults",
    "access": "private",
    "description": null,
    "lineNumber": 244,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 1537,
    "kind": "file",
    "name": "js/topology/define/topology_define_node.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport TopologyDefineItem from './topology_define_item'\r\nimport TopologyDefineServer from './topology_define_server'\r\n\r\n\r\nlet context = 'common/topology/define/topology_define_node'\r\n\r\n\r\n\r\n/**\r\n * @file TopologyDefineNode class: describe a node topology item.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class TopologyDefineNode extends TopologyDefineItem\r\n{\r\n\t/**\r\n\t * Create a TopologyDefineNode instance.\r\n\t * @class TopologyDefineNode\r\n\t * @extends TopologyDefineItem\r\n\t * \r\n\t * SETTINGS FORMAT:\r\n\t * \t\"nodes\":\r\n\t * \t\t\"nodeA\":...\r\n\t * \t\t\"nodeB\":...\r\n\t * \r\n\t * @param {string} arg_name - instance name.\r\n\t * @param {object} arg_settings - instance settings map.\r\n\t * @param {string} arg_log_context - trace context string.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_name, arg_settings, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_name, arg_settings, 'TopologyDefineNode', log_context)\r\n\t\t\r\n\t\tthis.is_topology_define_node = true\r\n\r\n\t\tthis.topology_type = 'nodes'\r\n\r\n\t\tthis.declare_collection('servers', 'server', TopologyDefineServer)\r\n\t\t\r\n\t\tthis.info('Node is created')\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/define/topology_define_node.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1538,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/define/topology_define_node.js",
    "static": true,
    "longname": "js/topology/define/topology_define_node.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/define/topology_define_node.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1539,
    "kind": "class",
    "name": "TopologyDefineNode",
    "memberof": "js/topology/define/topology_define_node.js",
    "static": true,
    "longname": "js/topology/define/topology_define_node.js~TopologyDefineNode",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/define/topology_define_node.js",
    "importStyle": "TopologyDefineNode",
    "description": "",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "TopologyDefineNode class: describe a node topology item."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/topology/define/topology_define_item.js~TopologyDefineItem"
    ]
  },
  {
    "__docId__": 1540,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/topology/define/topology_define_node.js~TopologyDefineNode",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_node.js~TopologyDefineNode#constructor",
    "access": "public",
    "description": "Create a TopologyDefineNode instance.",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TopologyDefineNode"
      },
      {
        "tagName": "@extends",
        "tagValue": "TopologyDefineItem\n\nSETTINGS FORMAT:\n\t\"nodes\":\n\t\t\"nodeA\":...\n\t\t\"nodeB\":..."
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "instance settings map."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1541,
    "kind": "member",
    "name": "is_topology_define_node",
    "memberof": "js/topology/define/topology_define_node.js~TopologyDefineNode",
    "static": false,
    "longname": "js/topology/define/topology_define_node.js~TopologyDefineNode#is_topology_define_node",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1542,
    "kind": "member",
    "name": "topology_type",
    "memberof": "js/topology/define/topology_define_node.js~TopologyDefineNode",
    "static": false,
    "longname": "js/topology/define/topology_define_node.js~TopologyDefineNode#topology_type",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1543,
    "kind": "file",
    "name": "js/topology/define/topology_define_package.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\nimport _ from 'lodash'\r\n\r\n// COMMON IMPORTS\r\nimport TopologyDefineItem from './topology_define_item'\r\nimport TopologyDefineDatasource from './topology_define_datasource'\r\nimport TopologyDefineModel from './topology_define_model'\r\nimport TopologyDefineView from './topology_define_view'\r\nimport TopologyDefineMenu from './topology_define_menu'\r\nimport TopologyDefineMenubar from './topology_define_menubar'\r\nimport TopologyDefineService from './topology_define_service'\r\nimport TopologyDefineCommand from './topology_define_command'\r\n\r\n\r\nconst context = 'common/topology/define/topology_define_package'\r\n\r\n\r\n\r\n/**\r\n * @file TopologyDefinePackage resource class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class TopologyDefinePackage extends TopologyDefineItem\r\n{\r\n\t/**\r\n\t * Create a package resource instance.\r\n\t * @class TopologyDefinePackage\r\n\t * @extends TopologyDefineItem\r\n\t * \r\n\t * SETTINGS FORMAT:\r\n\t * \t\"packages\":\r\n\t * \t\t\"packageA\":\r\n\t *\t\t\t\"services\":\"...\",\r\n\t * \t\t\t\"datasources\":\"...\",\r\n\t * \t\t\t\"models\":\"...\",\r\n\t * \t\t\t\"views\":\"...\",\r\n\t * \t\t\t\"menus\":\"...\",\r\n\t * \t\t\t\"menubars\":\"...\"\r\n\t * \t\t\"packageB\":...\r\n\t * \r\n\t * @param {string} arg_name - instance name.\r\n\t * @param {object} arg_settings - instance settings map.\r\n\t * @param {string} arg_log_context - trace context string.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_name, arg_settings, arg_log_context)\r\n\t{\r\n\t\t// console.log('TopologyDefinePackage.arg_settings', arg_settings.toJS ? arg_settings.toJS() : arg_settings)\r\n\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_name, arg_settings, 'TopologyDefinePackage', log_context)\r\n\t\t\r\n\t\tthis.is_topology_define_package = true\r\n\r\n\t\tthis.topology_type = 'packages'\r\n\r\n\t\tthis.declare_collection('commands',    'command',     TopologyDefineCommand)\r\n\t\tthis.declare_collection('services',    'service',     TopologyDefineService)\r\n\t\tthis.declare_collection('datasources', 'datasource',  TopologyDefineDatasource)\r\n\t\tthis.declare_collection('models',      'model',       TopologyDefineModel)\r\n\t\tthis.declare_collection('views',       'view',        TopologyDefineView)\r\n\t\tthis.declare_collection('menus',       'menu',        TopologyDefineMenu)\r\n\t\tthis.declare_collection('menubars',    'menubar',     TopologyDefineMenubar)\r\n\t\t\r\n\t\tthis.info('Package is created')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Find a resource.\r\n\t * \r\n\t * @param {string} arg_name - resource name (mandatory).\r\n\t * @param {string} arg_type - resource type name (optional).\r\n\t * \r\n\t * @returns {TopologyDefineItem|undefined} - resource instance.\r\n\t */\r\n\tfind_resource(arg_name, arg_type=undefined)\r\n\t{\r\n\t\t// console.log('package.find_resource ' + arg_name + ' in package ' + this.get_name() + ' for type ' + arg_type)\r\n\r\n\t\tif (arg_type)\r\n\t\t{\r\n\t\t\tlet result = undefined\r\n\t\t\tswitch(arg_type) {\r\n\t\t\t\tcase 'command':\r\n\t\t\t\tcase 'commands':    return this.command(arg_name)\r\n\r\n\t\t\t\tcase 'service':\r\n\t\t\t\tcase 'services':    return this.service(arg_name)\r\n\r\n\t\t\t\tcase 'datasource':\r\n\t\t\t\tcase 'datasources': return this.datasource(arg_name)\r\n\r\n\t\t\t\tcase 'model':\r\n\t\t\t\tcase 'models':      return this.model(arg_name)\r\n\t\t\t\t\r\n\t\t\t\tcase 'view':\r\n\t\t\t\tcase 'views':       result = this.view(arg_name)\r\n\t\t\t\t\tif (!result)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconsole.log('package.find_resource ' + arg_name + ' NOT FOUND')\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn result\r\n\r\n\t\t\t\tcase 'menu':\r\n\t\t\t\tcase 'menus':       return this.menu(arg_name)\r\n\r\n\t\t\t\tcase 'menubar':\r\n\t\t\t\tcase 'menubars':    result = this.menubar(arg_name)\r\n\t\t\t\t\t// console.log('package.find_resource ' + arg_name + ' in package ' + this.get_name() + ' for menubars', result)\r\n\t\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\treturn this.service(arg_name)\r\n\t\t\t|| this.datasource(arg_name)\r\n\t\t\t|| this.model(arg_name)\r\n\t\t\t|| this.view(arg_name)\r\n\t\t\t|| this.menu(arg_name)\r\n\t\t\t|| this.menubar(arg_name)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get resources names.\r\n\t * \r\n\t * @param {string} arg_type - resource type name (optional).\r\n\t * \r\n\t * @returns {array} - resources names list.\r\n\t */\r\n\tget_resources_names(arg_type=undefined)\r\n\t{\r\n\t\t// console.log(context + ':get_resources_names:get resources names for type=%s', arg_type)\r\n\r\n\t\tif (arg_type)\r\n\t\t{\r\n\t\t\tswitch(arg_type) {\r\n\t\t\t\tcase 'command':\r\n\t\t\t\tcase 'commands':    return this.commands().get_all_names()\r\n\t\t\t\t\r\n\t\t\t\tcase 'service':\r\n\t\t\t\tcase 'services':    return this.services().get_all_names()\r\n\r\n\t\t\t\tcase 'datasource':\r\n\t\t\t\tcase 'datasources': return this.datasources().get_all_names()\r\n\r\n\t\t\t\tcase 'model':\r\n\t\t\t\tcase 'models':      return this.models().get_all_names()\r\n\t\t\t\t\r\n\t\t\t\tcase 'view':\r\n\t\t\t\tcase 'views':       return this.views().get_all_names()\r\n\r\n\t\t\t\tcase 'menu':\r\n\t\t\t\tcase 'menus':       return this.menus().get_all_names()\r\n\r\n\t\t\t\tcase 'menubar':\r\n\t\t\t\tcase 'menubars':    return this.menubars().get_all_names()\r\n\t\t\t}\r\n\t\t\treturn []\r\n\t\t}\r\n\r\n\t\tconst types = ['commands', 'services', 'datasources', 'models', 'views', 'menus', 'menubars']\r\n\t\tlet names = []\r\n\t\t_.forEach(types,\r\n\t\t\t(type)=>{\r\n\t\t\t\tconst type_resources = this[type]().get_resources_names()\r\n\t\t\t\tnames = names.concat(type_resources)\r\n\r\n\t\t\t\t// DEBUG\r\n\t\t\t\t// console.log(context + ':get_resources_names:resources for type=%s', type, type_resources)\r\n\t\t\t\t// console.log(context + ':get_resources_names:resources all types', names)\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn names\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/define/topology_define_package.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1544,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/define/topology_define_package.js",
    "static": true,
    "longname": "js/topology/define/topology_define_package.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/define/topology_define_package.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1545,
    "kind": "class",
    "name": "TopologyDefinePackage",
    "memberof": "js/topology/define/topology_define_package.js",
    "static": true,
    "longname": "js/topology/define/topology_define_package.js~TopologyDefinePackage",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/define/topology_define_package.js",
    "importStyle": "TopologyDefinePackage",
    "description": "",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "TopologyDefinePackage resource class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/topology/define/topology_define_item.js~TopologyDefineItem"
    ]
  },
  {
    "__docId__": 1546,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/topology/define/topology_define_package.js~TopologyDefinePackage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_package.js~TopologyDefinePackage#constructor",
    "access": "public",
    "description": "Create a package resource instance.",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TopologyDefinePackage"
      },
      {
        "tagName": "@extends",
        "tagValue": "TopologyDefineItem\n\nSETTINGS FORMAT:\n\t\"packages\":\n\t\t\"packageA\":\n\t\t\"services\":\"...\",\n\t\t\t\"datasources\":\"...\",\n\t\t\t\"models\":\"...\",\n\t\t\t\"views\":\"...\",\n\t\t\t\"menus\":\"...\",\n\t\t\t\"menubars\":\"...\"\n\t\t\"packageB\":..."
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "instance settings map."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1547,
    "kind": "member",
    "name": "is_topology_define_package",
    "memberof": "js/topology/define/topology_define_package.js~TopologyDefinePackage",
    "static": false,
    "longname": "js/topology/define/topology_define_package.js~TopologyDefinePackage#is_topology_define_package",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1548,
    "kind": "member",
    "name": "topology_type",
    "memberof": "js/topology/define/topology_define_package.js~TopologyDefinePackage",
    "static": false,
    "longname": "js/topology/define/topology_define_package.js~TopologyDefinePackage#topology_type",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1549,
    "kind": "method",
    "name": "find_resource",
    "memberof": "js/topology/define/topology_define_package.js~TopologyDefinePackage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_package.js~TopologyDefinePackage#find_resource",
    "access": "public",
    "description": "Find a resource.",
    "lineNumber": 83,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{TopologyDefineItem|undefined} - resource instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "resource name (mandatory)."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_type",
        "description": "resource type name (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TopologyDefineItem",
        "undefined"
      ],
      "spread": false,
      "description": "resource instance."
    }
  },
  {
    "__docId__": 1550,
    "kind": "method",
    "name": "get_resources_names",
    "memberof": "js/topology/define/topology_define_package.js~TopologyDefinePackage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_package.js~TopologyDefinePackage#get_resources_names",
    "access": "public",
    "description": "Get resources names.",
    "lineNumber": 139,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} - resources names list."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_type",
        "description": "resource type name (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "resources names list."
    }
  },
  {
    "__docId__": 1551,
    "kind": "file",
    "name": "js/topology/define/topology_define_plugin.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport fs from 'fs'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../../utils/types'\r\nimport TopologyDefineItem from './topology_define_item'\r\n\r\n\r\nlet context = 'common/topology/define/topology_define_plugin'\r\n\r\n\r\n\r\n/**\r\n * TopologyDefinePlugin class: describe a Plugin topology item.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n* SETTINGS FORMAT:\r\n* \t\"plugins\":\r\n* \t\t\"pluginA\":\r\n*\t\t\t\"type\":\"...\", // rendering, services\r\n* \t\t\t\"file\":\"...\"\r\n* \t\t\"pluginB\":\r\n*\t\t\t\"type\":\"...\",\r\n* \t\t\t\"package\":\"...\"\r\n* \r\n */\r\nexport default class TopologyDefinePlugin extends TopologyDefineItem\r\n{\r\n\t/**\r\n\t * Create a TopologyDefinePlugin instance.\r\n\t * \r\n\t * @param {string} arg_name - instance name.\r\n\t * @param {object} arg_settings - instance settings map.\r\n\t * @param {string} arg_log_context - trace context string.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_name, arg_settings, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_name, arg_settings, 'TopologyDefinePlugin', log_context)\r\n\t\tthis.is_topology_define_plugin = true\r\n\r\n\t\tthis.topology_type = 'plugins'\r\n\t\t\r\n\t\tthis.topology_plugin_type = this.get_setting('type', undefined)\r\n\t\tthis.topology_plugin_file = this.get_setting('file', undefined)\r\n\t\tthis.topology_plugin_package = this.get_setting('package', undefined)\r\n\r\n\t\tthis.info('Plugin is created')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Load rendering plugins.\r\n\t * \r\n\t * @returns {Class} - Plugin class.\r\n\t */\r\n\tload_plugin_class()\r\n\t{\r\n\t\tconst self = this\r\n\t\tself.enter_group('load_plugin_class')\r\n\r\n\t\tthis.debug('plugin=%s', this.get_name())\r\n\r\n\t\tlet plugin_class = undefined\r\n\r\n\t\t// RENDERING PLUGIN IS LOADED FROM A NPM PACKAGE\r\n\t\tif ( T.isString(this.topology_plugin_package) && this.topology_plugin_package != 'default' )\r\n\t\t{\r\n\t\t\t// TODO : loading packages without full path?\r\n\t\t\tlet file_path = undefined\r\n\t\t\tconst pkg = this.topology_plugin_package\r\n\r\n\t\t\tfile_path = self.get_runtime().context.get_absolute_path('./node_modules/', pkg)\r\n\t\t\tlet file_path_stats = file_path ? fs.statSync(file_path) : undefined\r\n\t\t\tif ( ! file_path_stats || ! file_path_stats.isDirectory())\r\n\t\t\t{\r\n\t\t\t\tthis.debug('plugin=%s not found in [%s]', this.get_name(), './node_modules/')\r\n\r\n\t\t\t\tfile_path = self.get_runtime().context.get_absolute_path('../node_modules/', pkg)\r\n\t\t\t\tfile_path_stats = file_path ? fs.statSync(file_path) : undefined\r\n\t\t\t\tif ( ! file_path_stats || ! file_path_stats.isDirectory())\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.debug('plugin=%s not found in [%s]', this.get_name(), '../node_modules/')\r\n\r\n\t\t\t\t\tfile_path = self.get_runtime().context.get_absolute_path('../../node_modules/', pkg)\r\n\t\t\t\t\tfile_path_stats = file_path ? fs.statSync(file_path) : undefined\r\n\t\t\t\t\tif ( ! file_path_stats || ! file_path_stats.isDirectory())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.debug('plugin=%s not found in [%s]', this.get_name(), '../../node_modules/')\r\n\r\n\t\t\t\t\t\tfile_path = self.get_runtime().context.get_absolute_path('../../../node_modules/', pkg)\r\n\t\t\t\t\t\tfile_path_stats = file_path ? fs.statSync(file_path) : undefined\r\n\t\t\t\t\t\tif ( ! file_path_stats || ! file_path_stats.isDirectory())\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.debug('plugin=%s not found in [%s]', this.get_name(), '../../../node_modules/')\r\n\t\t\t\t\t\t\tfile_path = undefined\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (file_path)\r\n\t\t\t{\r\n\t\t\t\t// console.log(context + ':load_plugin_class:package=%s for plugin=%s at=%s', pkg, this.get_name(), file_path)\r\n\t\t\t\tthis.debug('plugin=%s found for path [%s]', this.get_name(), file_path)\r\n\t\t\t\tplugin_class = require(file_path)\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tfile_path = undefined\r\n\t\t\t\tconsole.error(context + ':load_plugin_class:not found package=%s for plugin=%s at=%s', pkg, this.get_name())\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// LOAD A PLUGIN FROM A PATH\r\n\t\telse if ( T.isString(this.topology_plugin_file) )\r\n\t\t{\r\n\t\t\tconst file_path = self.get_runtime().context.get_absolute_path(this.topology_plugin_file)\r\n\t\t\t// console.log(context + ':load_plugin_class:file_path=%s for plugin=%s', file_path, this.get_name())\r\n\r\n\t\t\tplugin_class = require(file_path)\r\n\t\t}\r\n\r\n\t\tif (plugin_class && plugin_class.default)\r\n\t\t{\r\n\t\t\tplugin_class = plugin_class.default\r\n\t\t}\r\n\r\n\t\tself.leave_group('load_plugin_class')\r\n\t\treturn plugin_class\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Create plugins.\r\n\t * \r\n\t * @param {RuntimeBase} - arg_runtime - Runtime instance.\r\n\t * @param {Class} - arg_plugin_class - Plugin class.\r\n\t * @param {PluginsManager} - arg_plugins_manager - PluginsManager instance.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tcreate_plugin(arg_runtime, arg_plugin_class, arg_plugins_manager)\r\n\t{\r\n\t\t// REGISTER PLUGIN CLASS\r\n\t\tif (arg_plugin_class)\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tconst plugin = new arg_plugin_class(arg_runtime, arg_plugins_manager)\r\n\t\t\t\targ_plugins_manager.load_at_first(plugin)\r\n\t\t\t\tplugin.$plugin_class = arg_plugin_class\r\n\r\n\t\t\t\tthis.topology_plugin_instance = plugin\r\n\r\n\t\t\t\t// console.log(context + ':create_plugin:plugin=%s is loaded', this.get_name())\r\n\t\t\t\treturn plugin\r\n\t\t\t}\r\n\t\t\tcatch(e) {\r\n\t\t\t\tconsole.error(context + ':create_plugin:plugin=%s error during load [%s]', this.get_name(), e.toString())\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn undefined\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Load rendering plugins.\r\n\t * \r\n\t * @param {RuntimeBase} - arg_runtime - Runtime instance.\r\n\t * \r\n\t * @returns {Promise} - Promise of Plugin instance.\r\n\t */\r\n\tload_rendering_plugin(arg_runtime)\r\n\t{\r\n\t\tconst self = this\r\n\t\tself.enter_group('load_rendering_plugin')\r\n\r\n\t\tassert( T.isObject(arg_runtime) && arg_runtime.is_base_runtime, context + ':load_rendering_plugin:bad runtime instance' )\r\n\t\tconst plugins_mgr = arg_runtime.get_plugins_factory().get_rendering_manager()\r\n\t\tassert( T.isObject(plugins_mgr) && plugins_mgr.is_plugins_manager, context + ':load_rendering_plugin:bad plugin manager object')\r\n\r\n\t\tconst plugin_class = this.load_plugin_class()\r\n\t\tconst plugin = this.create_plugin(arg_runtime, plugin_class, plugins_mgr)\r\n\t\t\r\n\t\tif (plugin && plugin.is_rendering_plugin)\r\n\t\t{\r\n\t\t\tplugin.find_rendering_function = (type)=>{\r\n\t\t\t\tif ( T.isFunction(plugin.$plugin_class.find_rendering_function) )\r\n\t\t\t\t{\r\n\t\t\t\t\t// console.log('plugin.$plugin_class.find_rendering_function FOUND')\r\n\t\t\t\t\treturn plugin.$plugin_class.find_rendering_function(type)\r\n\t\t\t\t}\r\n\t\t\t\t// console.log('plugin.$plugin_class.find_rendering_function NOT FOUND')\r\n\t\t\t\treturn undefined\r\n\t\t\t}\r\n\r\n\t\t\tself.leave_group('load_rendering_plugin')\r\n\t\t\treturn Promise.resolve(plugin)\r\n\t\t}\r\n\r\n\t\tself.leave_group('load_rendering_plugin:not found')\r\n\t\treturn Promise.resolve(undefined)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Load services plugins.\r\n\t * \r\n\t * @param {RuntimeBase} - arg_runtime - Runtime instance.\r\n\t * \r\n\t * @returns {Promise} - Promise of Plugin instance.\r\n\t */\r\n\tload_services_plugin(arg_runtime)\r\n\t{\r\n\t\tconst self = this\r\n\t\tself.enter_group('load_services_plugin')\r\n\r\n\t\tassert( T.isObject(arg_runtime) && arg_runtime.is_base_runtime, context + ':load_services_plugin:bad runtime instance' )\r\n\t\tconst plugins_mgr = arg_runtime.get_plugins_factory().get_services_manager()\r\n\t\tassert( T.isObject(plugins_mgr) && plugins_mgr.is_plugins_manager, context + ':load_services_plugin:bad plugin manager object')\r\n\r\n\t\tconst plugin_class = this.load_plugin_class()\r\n\t\tconst plugin = this.create_plugin(arg_runtime, plugin_class, plugins_mgr)\r\n\t\tplugins_mgr.register_plugin(plugin)\r\n\t\t\t\r\n\t\tself.leave_group('load_services_plugin')\r\n\t\treturn Promise.resolve(plugin)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Find a rendering function.\r\n\t * \r\n\t * @param {string} arg_type - rendering item type.\r\n\t * \r\n\t * @returns {Function} - rendering function.\r\n\t */\r\n\tfind_rendering_function(arg_type)\r\n\t{\r\n\t\tif ( this.topology_plugin_type != 'rendering')\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':find_rendering_function:not a rendering plugin:' + this.get_name())\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\tif ( ! T.isObject(this.topology_plugin_instance) || ! this.topology_plugin_instance.is_rendering_plugin )\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':find_rendering_function:no rendering plugin instance:' + this.get_name())\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\tif ( ! T.isFunction(this.topology_plugin_instance.find_rendering_function) )\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':find_rendering_function:no rendering plugin function:' + this.get_name())\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\tconst fn = this.topology_plugin_instance.find_rendering_function(arg_type)\r\n\t\t// console.log(fn, context + ':find_rendering_function:rendering function for ' + this.get_name())\r\n\r\n\t\treturn fn\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/define/topology_define_plugin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1552,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/define/topology_define_plugin.js",
    "static": true,
    "longname": "js/topology/define/topology_define_plugin.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/define/topology_define_plugin.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1553,
    "kind": "class",
    "name": "TopologyDefinePlugin",
    "memberof": "js/topology/define/topology_define_plugin.js",
    "static": true,
    "longname": "js/topology/define/topology_define_plugin.js~TopologyDefinePlugin",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/define/topology_define_plugin.js",
    "importStyle": "TopologyDefinePlugin",
    "description": "TopologyDefinePlugin class: describe a Plugin topology item.",
    "examples": [
      "SETTINGS FORMAT:\n\t\"plugins\":\n\t\t\"pluginA\":\n\t\t\"type\":\"...\", // rendering, services\n\t\t\t\"file\":\"...\"\n\t\t\"pluginB\":\n\t\t\"type\":\"...\",\n\t\t\t\"package\":\"...\""
    ],
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/topology/define/topology_define_item.js~TopologyDefineItem"
    ]
  },
  {
    "__docId__": 1554,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/topology/define/topology_define_plugin.js~TopologyDefinePlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_plugin.js~TopologyDefinePlugin#constructor",
    "access": "public",
    "description": "Create a TopologyDefinePlugin instance.",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "instance settings map."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1555,
    "kind": "member",
    "name": "is_topology_define_plugin",
    "memberof": "js/topology/define/topology_define_plugin.js~TopologyDefinePlugin",
    "static": false,
    "longname": "js/topology/define/topology_define_plugin.js~TopologyDefinePlugin#is_topology_define_plugin",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1556,
    "kind": "member",
    "name": "topology_type",
    "memberof": "js/topology/define/topology_define_plugin.js~TopologyDefinePlugin",
    "static": false,
    "longname": "js/topology/define/topology_define_plugin.js~TopologyDefinePlugin#topology_type",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1557,
    "kind": "member",
    "name": "topology_plugin_type",
    "memberof": "js/topology/define/topology_define_plugin.js~TopologyDefinePlugin",
    "static": false,
    "longname": "js/topology/define/topology_define_plugin.js~TopologyDefinePlugin#topology_plugin_type",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1558,
    "kind": "member",
    "name": "topology_plugin_file",
    "memberof": "js/topology/define/topology_define_plugin.js~TopologyDefinePlugin",
    "static": false,
    "longname": "js/topology/define/topology_define_plugin.js~TopologyDefinePlugin#topology_plugin_file",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1559,
    "kind": "member",
    "name": "topology_plugin_package",
    "memberof": "js/topology/define/topology_define_plugin.js~TopologyDefinePlugin",
    "static": false,
    "longname": "js/topology/define/topology_define_plugin.js~TopologyDefinePlugin#topology_plugin_package",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1560,
    "kind": "method",
    "name": "load_plugin_class",
    "memberof": "js/topology/define/topology_define_plugin.js~TopologyDefinePlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_plugin.js~TopologyDefinePlugin#load_plugin_class",
    "access": "public",
    "description": "Load rendering plugins.",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Class} - Plugin class."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Class"
      ],
      "spread": false,
      "description": "Plugin class."
    },
    "params": []
  },
  {
    "__docId__": 1561,
    "kind": "method",
    "name": "create_plugin",
    "memberof": "js/topology/define/topology_define_plugin.js~TopologyDefinePlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_plugin.js~TopologyDefinePlugin#create_plugin",
    "access": "public",
    "description": "Create plugins.",
    "lineNumber": 152,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "RuntimeBase"
        ],
        "spread": false,
        "optional": false,
        "name": "-",
        "description": "arg_runtime - Runtime instance."
      },
      {
        "nullable": null,
        "types": [
          "Class"
        ],
        "spread": false,
        "optional": false,
        "name": "-",
        "description": "arg_plugin_class - Plugin class."
      },
      {
        "nullable": null,
        "types": [
          "PluginsManager"
        ],
        "spread": false,
        "optional": false,
        "name": "-",
        "description": "arg_plugins_manager - PluginsManager instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1562,
    "kind": "member",
    "name": "topology_plugin_instance",
    "memberof": "js/topology/define/topology_define_plugin.js~TopologyDefinePlugin",
    "static": false,
    "longname": "js/topology/define/topology_define_plugin.js~TopologyDefinePlugin#topology_plugin_instance",
    "access": "public",
    "description": null,
    "lineNumber": 163,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1563,
    "kind": "method",
    "name": "load_rendering_plugin",
    "memberof": "js/topology/define/topology_define_plugin.js~TopologyDefinePlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_plugin.js~TopologyDefinePlugin#load_rendering_plugin",
    "access": "public",
    "description": "Load rendering plugins.",
    "lineNumber": 185,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of Plugin instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "RuntimeBase"
        ],
        "spread": false,
        "optional": false,
        "name": "-",
        "description": "arg_runtime - Runtime instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of Plugin instance."
    }
  },
  {
    "__docId__": 1564,
    "kind": "method",
    "name": "load_services_plugin",
    "memberof": "js/topology/define/topology_define_plugin.js~TopologyDefinePlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_plugin.js~TopologyDefinePlugin#load_services_plugin",
    "access": "public",
    "description": "Load services plugins.",
    "lineNumber": 226,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of Plugin instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "RuntimeBase"
        ],
        "spread": false,
        "optional": false,
        "name": "-",
        "description": "arg_runtime - Runtime instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of Plugin instance."
    }
  },
  {
    "__docId__": 1565,
    "kind": "method",
    "name": "find_rendering_function",
    "memberof": "js/topology/define/topology_define_plugin.js~TopologyDefinePlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_plugin.js~TopologyDefinePlugin#find_rendering_function",
    "access": "public",
    "description": "Find a rendering function.",
    "lineNumber": 252,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} - rendering function."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_type",
        "description": "rendering item type."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "rendering function."
    }
  },
  {
    "__docId__": 1566,
    "kind": "file",
    "name": "js/topology/define/topology_define_server.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport TopologyDefineItem from './topology_define_item'\r\n\r\n\r\nlet context = 'common/topology/define/topology_define_server'\r\n\r\n\r\n\r\n/**\r\n * @file TopologyDefineServer class: describe a node topology item.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class TopologyDefineServer extends TopologyDefineItem\r\n{\r\n\t/**\r\n\t * Create a TopologyDefineServer instance.\r\n\t * @class TopologyDefineServer\r\n\t * @extends TopologyDefineItem\r\n\t * \r\n\t * SETTINGS FORMAT:\r\n\t * \t\"servers\":\r\n\t * \t\t\"serverA\":\r\n\t * \t\t\t\"type\":\"express\",\r\n\t * \t\t\t\"port\":8080,\r\n\t * \t\t\t\"protocole\":\"http\",\r\n\t * \t\t\t\"middlewares\":[],\r\n\t * \t\t\t\"use_socketio\":true,\r\n\t * \t\t\t\r\n\t * \t\t\t\"security\":\r\n\t * \t\t\t\t\"authentication\":\r\n\t * \t\t\t\t\tObjects with:\r\n\t * \t\t\t\t\t\t\"enabled\":false,\r\n\t * \t\t\t\t\t\t\"plugins\":[\"file_users\"]\r\n\t * \t\t\"serverB\":...\r\n\t * \r\n\t * @param {string} arg_name - instance name.\r\n\t * @param {object} arg_settings - instance settings map.\r\n\t * @param {string} arg_log_context - trace context string.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_name, arg_settings, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_name, arg_settings, 'TopologyDefineServer', log_context)\r\n\t\t\r\n\t\tthis.is_topology_define_server = true\r\n\r\n\t\tthis.topology_type = 'servers'\r\n\t\t\r\n\t\tthis.server_type \t\t\t= this.get_setting('type', undefined)\r\n\t\tthis.server_port\t\t\t= this.get_setting('port', undefined)\r\n\t\tthis.server_protocole \t\t= this.get_setting('protocole', undefined)\r\n\t\tthis.server_middlewares \t= this.get_setting('middlewares', undefined)\r\n\t\tthis.server_use_socketio \t= this.get_setting('use_socketio', false)\r\n\t\t// this.server_security = this.get_setting('security', undefined)\r\n\r\n\t\tthis.info('Server is created')\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/define/topology_define_server.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1567,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/define/topology_define_server.js",
    "static": true,
    "longname": "js/topology/define/topology_define_server.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/define/topology_define_server.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1568,
    "kind": "class",
    "name": "TopologyDefineServer",
    "memberof": "js/topology/define/topology_define_server.js",
    "static": true,
    "longname": "js/topology/define/topology_define_server.js~TopologyDefineServer",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/define/topology_define_server.js",
    "importStyle": "TopologyDefineServer",
    "description": "",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "TopologyDefineServer class: describe a node topology item."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/topology/define/topology_define_item.js~TopologyDefineItem"
    ]
  },
  {
    "__docId__": 1569,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/topology/define/topology_define_server.js~TopologyDefineServer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_server.js~TopologyDefineServer#constructor",
    "access": "public",
    "description": "Create a TopologyDefineServer instance.",
    "lineNumber": 48,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TopologyDefineServer"
      },
      {
        "tagName": "@extends",
        "tagValue": "TopologyDefineItem\n\nSETTINGS FORMAT:\n\t\"servers\":\n\t\t\"serverA\":\n\t\t\t\"type\":\"express\",\n\t\t\t\"port\":8080,\n\t\t\t\"protocole\":\"http\",\n\t\t\t\"middlewares\":[],\n\t\t\t\"use_socketio\":true,\n\t\t\t\n\t\t\t\"security\":\n\t\t\t\t\"authentication\":\n\t\t\t\t\tObjects with:\n\t\t\t\t\t\t\"enabled\":false,\n\t\t\t\t\t\t\"plugins\":[\"file_users\"]\n\t\t\"serverB\":..."
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "instance settings map."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1570,
    "kind": "member",
    "name": "is_topology_define_server",
    "memberof": "js/topology/define/topology_define_server.js~TopologyDefineServer",
    "static": false,
    "longname": "js/topology/define/topology_define_server.js~TopologyDefineServer#is_topology_define_server",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1571,
    "kind": "member",
    "name": "topology_type",
    "memberof": "js/topology/define/topology_define_server.js~TopologyDefineServer",
    "static": false,
    "longname": "js/topology/define/topology_define_server.js~TopologyDefineServer#topology_type",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1572,
    "kind": "member",
    "name": "server_type",
    "memberof": "js/topology/define/topology_define_server.js~TopologyDefineServer",
    "static": false,
    "longname": "js/topology/define/topology_define_server.js~TopologyDefineServer#server_type",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1573,
    "kind": "member",
    "name": "server_port",
    "memberof": "js/topology/define/topology_define_server.js~TopologyDefineServer",
    "static": false,
    "longname": "js/topology/define/topology_define_server.js~TopologyDefineServer#server_port",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1574,
    "kind": "member",
    "name": "server_protocole",
    "memberof": "js/topology/define/topology_define_server.js~TopologyDefineServer",
    "static": false,
    "longname": "js/topology/define/topology_define_server.js~TopologyDefineServer#server_protocole",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1575,
    "kind": "member",
    "name": "server_middlewares",
    "memberof": "js/topology/define/topology_define_server.js~TopologyDefineServer",
    "static": false,
    "longname": "js/topology/define/topology_define_server.js~TopologyDefineServer#server_middlewares",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1576,
    "kind": "member",
    "name": "server_use_socketio",
    "memberof": "js/topology/define/topology_define_server.js~TopologyDefineServer",
    "static": false,
    "longname": "js/topology/define/topology_define_server.js~TopologyDefineServer#server_use_socketio",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1577,
    "kind": "file",
    "name": "js/topology/define/topology_define_service.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../../utils/types'\r\nimport TopologyDefineItem from './topology_define_item'\r\n\r\n\r\nlet context = 'common/topology/define/topology_define_service'\r\n\r\n\r\n\r\n/**\r\n * @file TopologyDefineService class: describe a service topology item.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class TopologyDefineService extends TopologyDefineItem\r\n{\r\n\t/**\r\n\t * Create a TopologyDefineService instance.\r\n\t * @class TopologyDefineService\r\n\t * @extends TopologyDefineItem\r\n\t * \r\n\t * SETTINGS FORMAT:\r\n\t * \t\"services\":\r\n\t * \t\t\"serviceA\":\r\n\t * \t\t\t\"type\":\"security\",\r\n\t * \t\t\t\"routes\":[\r\n\t * \t\t\t\tObjects with:\r\n\t * \t\t\t\t\t\"route\":\"/login\",\r\n\t * \t\t\t\t\t\"action\":\"login\"\r\n\t * \t\t\t]\r\n\t * \t\t\"serviceB\":\r\n\t * \t\t\t\"type\":\"html_assets\",\r\n\t * \t\t\t\"routes\":[\r\n\t * \t\t\t\tObjects with:\r\n\t * \t\t\t\t\t\"route\":\"/assets2\",\r\n\t * \t\t\t\t\t\"directory\":\"./public/tutorial-1\",\r\n\t * \t\t\t\t\t\"default_file\":\"index.html\"\r\n\t * \t\t\t]\r\n\t * \t\t\"serviceC\":\r\n\t * \t\t\t\"type\":\"messages\"\r\n\t * \t\t\"serviceCDe\":\"middleware\",\r\n\t * \t\t\t\"routes\":[\r\n\t * \t\t\t\tObjects with:\r\n\t * \t\t\t\t\t\"route\":\"/home\",\r\n\t * \t\t\t\t\t\"page_view\":\"metrics_tabs\",\r\n\t * \t\t\t\t\t\"page_menubar\":\"default_menubar\"=\r\n\t * \t\t\t]\r\n\t * \r\n\t * @param {string} arg_name - instance name.\r\n\t * @param {object} arg_settings - instance settings map.\r\n\t * @param {string} arg_log_context - trace context string.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_name, arg_settings, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_name, arg_settings, 'TopologyDefineService', log_context)\r\n\t\t\r\n\t\tthis.is_topology_define_service = true\r\n\r\n\t\tthis.topology_type = 'services'\r\n\t\t\r\n\t\tthis.topology_service_type         = this.get_setting_js('type', undefined)\r\n\t\tthis.topology_service_routes       = this.get_setting_js('routes', undefined)\r\n\t\tthis.topology_service_action       = this.get_setting_js('action', undefined)\r\n\t\tthis.topology_service_app_base_dir = this.get_setting_js('app_base_dir', undefined)\r\n\t\tthis.topology_service_pkg_base_dir = this.get_setting_js('pkg_base_dir', undefined)\r\n\t\tthis.topology_service_directory    = this.get_setting_js('directory', undefined)\r\n\t\tthis.topology_service_default_file = this.get_setting_js('default_file', undefined)\r\n\t\tthis.topology_service_page_view    = this.get_setting_js('page_view', undefined)\r\n\t\tthis.topology_service_page_menubar = this.get_setting_js('page_menubar', undefined)\r\n\t\tthis.topology_service_on_browser   = this.get_setting_js('execute_on_browser', false)\r\n\t\t\r\n\t\tthis._errors = undefined\r\n\t\t\r\n\t\tthis.info('Service is created')\r\n\t}\r\n\t\r\n\r\n\r\n\t/**\r\n\t * Check functional format.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tis_valid()\r\n\t{\r\n\t\ttry{\r\n\t\t\t// TODO: CHECK TYPE\r\n\t\t\tassert( T.isString(this.topology_service_type), context)\r\n\t\t\t// switch(this.topology_service_type) {\r\n\t\t\t// \tcase 'security':\r\n\t\t\t// \tcase 'html_assets':\r\n\t\t\t// \tcase 'middleware':\r\n\t\t\t// \tcase 'messages':\r\n\t\t\t// \tcase 'resources_query':\r\n\t\t\t// \tcase 'rest_api_resources_query':\r\n\t\t\t// \tcase 'rest_api_models_modifier':\r\n\t\t\t// \t\tbreak\r\n\t\t\t// \tdefault: return false\r\n\t\t\t// }\r\n\r\n\t\t\t// CHECK ROUTES\r\n\t\t\tif (this.topology_service_routes)\r\n\t\t\t{\r\n\t\t\t\tassert( T.isArray(this.topology_service_routes), context)\r\n\r\n\t\t\t\tthis.topology_service_routes.forEach(\r\n\t\t\t\t\t(route_settings)=>{\r\n\t\t\t\t\t\tassert( T.isString(route_settings.route), context)\r\n\r\n\t\t\t\t\t\tlet valid = this.topology_service_action\r\n\t\t\t\t\t\tvalid = valid || (this.topology_service_directory && this.topology_service_default_file)\r\n\t\t\t\t\t\tvalid = valid || this.topology_service_directory\r\n\t\t\t\t\t\tvalid = valid || (this.topology_service_page_view && this.topology_service_page_menubar)\r\n\r\n\t\t\t\t\t\tif (! valid)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (! this._errors)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis._errors = []\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis._errors.push(route_settings)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(e)\r\n\t\t{\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\treturn ! T.isArray(this._errors)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/define/topology_define_service.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1578,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/define/topology_define_service.js",
    "static": true,
    "longname": "js/topology/define/topology_define_service.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/define/topology_define_service.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1579,
    "kind": "class",
    "name": "TopologyDefineService",
    "memberof": "js/topology/define/topology_define_service.js",
    "static": true,
    "longname": "js/topology/define/topology_define_service.js~TopologyDefineService",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/define/topology_define_service.js",
    "importStyle": "TopologyDefineService",
    "description": "",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "TopologyDefineService class: describe a service topology item."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/topology/define/topology_define_item.js~TopologyDefineItem"
    ]
  },
  {
    "__docId__": 1580,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/topology/define/topology_define_service.js~TopologyDefineService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_service.js~TopologyDefineService#constructor",
    "access": "public",
    "description": "Create a TopologyDefineService instance.",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TopologyDefineService"
      },
      {
        "tagName": "@extends",
        "tagValue": "TopologyDefineItem\n\nSETTINGS FORMAT:\n\t\"services\":\n\t\t\"serviceA\":\n\t\t\t\"type\":\"security\",\n\t\t\t\"routes\":[\n\t\t\t\tObjects with:\n\t\t\t\t\t\"route\":\"/login\",\n\t\t\t\t\t\"action\":\"login\"\n\t\t\t]\n\t\t\"serviceB\":\n\t\t\t\"type\":\"html_assets\",\n\t\t\t\"routes\":[\n\t\t\t\tObjects with:\n\t\t\t\t\t\"route\":\"/assets2\",\n\t\t\t\t\t\"directory\":\"./public/tutorial-1\",\n\t\t\t\t\t\"default_file\":\"index.html\"\n\t\t\t]\n\t\t\"serviceC\":\n\t\t\t\"type\":\"messages\"\n\t\t\"serviceCDe\":\"middleware\",\n\t\t\t\"routes\":[\n\t\t\t\tObjects with:\n\t\t\t\t\t\"route\":\"/home\",\n\t\t\t\t\t\"page_view\":\"metrics_tabs\",\n\t\t\t\t\t\"page_menubar\":\"default_menubar\"=\n\t\t\t]"
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "instance settings map."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1581,
    "kind": "member",
    "name": "is_topology_define_service",
    "memberof": "js/topology/define/topology_define_service.js~TopologyDefineService",
    "static": false,
    "longname": "js/topology/define/topology_define_service.js~TopologyDefineService#is_topology_define_service",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1582,
    "kind": "member",
    "name": "topology_type",
    "memberof": "js/topology/define/topology_define_service.js~TopologyDefineService",
    "static": false,
    "longname": "js/topology/define/topology_define_service.js~TopologyDefineService#topology_type",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1583,
    "kind": "member",
    "name": "topology_service_type",
    "memberof": "js/topology/define/topology_define_service.js~TopologyDefineService",
    "static": false,
    "longname": "js/topology/define/topology_define_service.js~TopologyDefineService#topology_service_type",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1584,
    "kind": "member",
    "name": "topology_service_routes",
    "memberof": "js/topology/define/topology_define_service.js~TopologyDefineService",
    "static": false,
    "longname": "js/topology/define/topology_define_service.js~TopologyDefineService#topology_service_routes",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1585,
    "kind": "member",
    "name": "topology_service_action",
    "memberof": "js/topology/define/topology_define_service.js~TopologyDefineService",
    "static": false,
    "longname": "js/topology/define/topology_define_service.js~TopologyDefineService#topology_service_action",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1586,
    "kind": "member",
    "name": "topology_service_app_base_dir",
    "memberof": "js/topology/define/topology_define_service.js~TopologyDefineService",
    "static": false,
    "longname": "js/topology/define/topology_define_service.js~TopologyDefineService#topology_service_app_base_dir",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1587,
    "kind": "member",
    "name": "topology_service_pkg_base_dir",
    "memberof": "js/topology/define/topology_define_service.js~TopologyDefineService",
    "static": false,
    "longname": "js/topology/define/topology_define_service.js~TopologyDefineService#topology_service_pkg_base_dir",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1588,
    "kind": "member",
    "name": "topology_service_directory",
    "memberof": "js/topology/define/topology_define_service.js~TopologyDefineService",
    "static": false,
    "longname": "js/topology/define/topology_define_service.js~TopologyDefineService#topology_service_directory",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1589,
    "kind": "member",
    "name": "topology_service_default_file",
    "memberof": "js/topology/define/topology_define_service.js~TopologyDefineService",
    "static": false,
    "longname": "js/topology/define/topology_define_service.js~TopologyDefineService#topology_service_default_file",
    "access": "public",
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1590,
    "kind": "member",
    "name": "topology_service_page_view",
    "memberof": "js/topology/define/topology_define_service.js~TopologyDefineService",
    "static": false,
    "longname": "js/topology/define/topology_define_service.js~TopologyDefineService#topology_service_page_view",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1591,
    "kind": "member",
    "name": "topology_service_page_menubar",
    "memberof": "js/topology/define/topology_define_service.js~TopologyDefineService",
    "static": false,
    "longname": "js/topology/define/topology_define_service.js~TopologyDefineService#topology_service_page_menubar",
    "access": "public",
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1592,
    "kind": "member",
    "name": "topology_service_on_browser",
    "memberof": "js/topology/define/topology_define_service.js~TopologyDefineService",
    "static": false,
    "longname": "js/topology/define/topology_define_service.js~TopologyDefineService#topology_service_on_browser",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1593,
    "kind": "member",
    "name": "_errors",
    "memberof": "js/topology/define/topology_define_service.js~TopologyDefineService",
    "static": false,
    "longname": "js/topology/define/topology_define_service.js~TopologyDefineService#_errors",
    "access": "private",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1594,
    "kind": "method",
    "name": "is_valid",
    "memberof": "js/topology/define/topology_define_service.js~TopologyDefineService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_service.js~TopologyDefineService#is_valid",
    "access": "public",
    "description": "Check functional format.",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1596,
    "kind": "file",
    "name": "js/topology/define/topology_define_tenant.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport TopologyDefineItem from './topology_define_item'\r\nimport TopologyDefinePackage from './topology_define_package'\r\nimport TopologyDefineApplication from './topology_define_application'\r\n\r\n\r\nlet context = 'common/topology/define/topology_define_tenant'\r\n\r\n\r\n\r\n/**\r\n * @file TopologyDefineTenant class: describe a Tenant topology item.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class TopologyDefineTenant extends TopologyDefineItem\r\n{\r\n\t/**\r\n\t * Create a TopologyDefineTenant instance.\r\n\t * @class TopologyDefineTenant\r\n\t * @extends TopologyDefineItem\r\n\t * \r\n\t * SETTINGS FORMAT:\r\n\t * \t  Object with:\r\n\t * \t\t\"packages\":\r\n\t *\t\t\t\"packageA\":...\r\n\t * \t\t\"applications\":\r\n\t *\t\t\t\"applicationA\":...\r\n\t * \t\t\"security\":...\r\n\t * \t}\r\n\t * \r\n\t * @param {string} arg_name - instance name.\r\n\t * @param {object} arg_settings - instance settings map.\r\n\t * @param {string} arg_log_context - trace context string.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_name, arg_settings, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_name, arg_settings, 'TopologyDefineTenant', log_context)\r\n\t\t\r\n\t\tthis.is_topology_define_tenant = true\r\n\r\n\t\tthis.topology_type = 'tenants'\r\n\r\n\t\tthis.declare_collection('packages', 'package', TopologyDefinePackage)\r\n\t\tthis.declare_collection('applications', 'application', TopologyDefineApplication)\r\n\t\t\r\n\t\tthis.info('Tenant is created')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Find a service.\r\n\t * \r\n\t * @param {string} arg_svc_name - service name.\r\n\t * \r\n\t * @returns {TopologyDefineService|undefined}\r\n\t */\r\n\tget_service(arg_svc_name)\r\n\t{\r\n\t\tconst packages = this.packages().get_latest_items()\r\n\t\tlet i = 0\r\n\t\tlet count = packages.length\r\n\t\tthis.debug('get_service:svc [' + arg_svc_name + '] with packages count [' + count + ']')\r\n\t\t\r\n\t\tfor( ; i < count ; ++i)\r\n\t\t{\r\n\t\t\tconst pkg = packages[i]\r\n\t\t\tthis.debug('get_service:svc [' + arg_svc_name + '] loop on package [' + pkg.get_name() + ']')\r\n\r\n\t\t\tconst svc = pkg.service(arg_svc_name)\r\n\t\t\tif (svc)\r\n\t\t\t{\r\n\t\t\t\tthis.debug('get_service:svc found [' + arg_svc_name + '] on package [' + pkg.get_name() + ']')\r\n\t\t\t\treturn svc\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.debug('get_service:svc not found [' + arg_svc_name + '] on package [' + pkg.get_name() + ']')\r\n\t\t}\r\n\t\treturn undefined\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/define/topology_define_tenant.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1597,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/define/topology_define_tenant.js",
    "static": true,
    "longname": "js/topology/define/topology_define_tenant.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/define/topology_define_tenant.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1598,
    "kind": "class",
    "name": "TopologyDefineTenant",
    "memberof": "js/topology/define/topology_define_tenant.js",
    "static": true,
    "longname": "js/topology/define/topology_define_tenant.js~TopologyDefineTenant",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/define/topology_define_tenant.js",
    "importStyle": "TopologyDefineTenant",
    "description": "",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "TopologyDefineTenant class: describe a Tenant topology item."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/topology/define/topology_define_item.js~TopologyDefineItem"
    ]
  },
  {
    "__docId__": 1599,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/topology/define/topology_define_tenant.js~TopologyDefineTenant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_tenant.js~TopologyDefineTenant#constructor",
    "access": "public",
    "description": "Create a TopologyDefineTenant instance.",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TopologyDefineTenant"
      },
      {
        "tagName": "@extends",
        "tagValue": "TopologyDefineItem\n\nSETTINGS FORMAT:\n\t  Object with:\n\t\t\"packages\":\n\t\t\"packageA\":...\n\t\t\"applications\":\n\t\t\"applicationA\":...\n\t\t\"security\":...\n\t}"
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "instance settings map."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1600,
    "kind": "member",
    "name": "is_topology_define_tenant",
    "memberof": "js/topology/define/topology_define_tenant.js~TopologyDefineTenant",
    "static": false,
    "longname": "js/topology/define/topology_define_tenant.js~TopologyDefineTenant#is_topology_define_tenant",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1601,
    "kind": "member",
    "name": "topology_type",
    "memberof": "js/topology/define/topology_define_tenant.js~TopologyDefineTenant",
    "static": false,
    "longname": "js/topology/define/topology_define_tenant.js~TopologyDefineTenant#topology_type",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1602,
    "kind": "method",
    "name": "get_service",
    "memberof": "js/topology/define/topology_define_tenant.js~TopologyDefineTenant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_tenant.js~TopologyDefineTenant#get_service",
    "access": "public",
    "description": "Find a service.",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{TopologyDefineService|undefined}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_name",
        "description": "service name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TopologyDefineService",
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1603,
    "kind": "file",
    "name": "js/topology/define/topology_define_view.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport TopologyDefineItem from './topology_define_item'\r\n\r\n\r\nlet context = 'common/topology/define/topology_define_view'\r\n\r\n\r\n\r\n/**\r\n * @file View class: describe a View topology item.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class TopologyDefineView extends TopologyDefineItem\r\n{\r\n\t/**\r\n\t * Create a TopologyDefineView instance.\r\n\t * @class TopologyDefineView\r\n\t * @extends TopologyDefineItem\r\n\t * \r\n\t * @param {string} arg_name - instance name.\r\n\t * @param {object} arg_settings - instance settings map.\r\n\t * @param {string} arg_log_context - trace context string.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_name, arg_settings, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_name, arg_settings, 'TopologyDefineView', log_context)\r\n\t\t\r\n\t\tthis.is_topology_define_view = true\r\n\r\n\t\tthis.topology_type = 'views'\r\n\t\t\r\n\t\tthis.info('View is created')\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/define/topology_define_view.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1604,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/define/topology_define_view.js",
    "static": true,
    "longname": "js/topology/define/topology_define_view.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/define/topology_define_view.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1605,
    "kind": "class",
    "name": "TopologyDefineView",
    "memberof": "js/topology/define/topology_define_view.js",
    "static": true,
    "longname": "js/topology/define/topology_define_view.js~TopologyDefineView",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/define/topology_define_view.js",
    "importStyle": "TopologyDefineView",
    "description": "",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "View class: describe a View topology item."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/topology/define/topology_define_item.js~TopologyDefineItem"
    ]
  },
  {
    "__docId__": 1606,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/topology/define/topology_define_view.js~TopologyDefineView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_view.js~TopologyDefineView#constructor",
    "access": "public",
    "description": "Create a TopologyDefineView instance.",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TopologyDefineView"
      },
      {
        "tagName": "@extends",
        "tagValue": "TopologyDefineItem"
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "instance settings map."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1607,
    "kind": "member",
    "name": "is_topology_define_view",
    "memberof": "js/topology/define/topology_define_view.js~TopologyDefineView",
    "static": false,
    "longname": "js/topology/define/topology_define_view.js~TopologyDefineView#is_topology_define_view",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1608,
    "kind": "member",
    "name": "topology_type",
    "memberof": "js/topology/define/topology_define_view.js~TopologyDefineView",
    "static": false,
    "longname": "js/topology/define/topology_define_view.js~TopologyDefineView#topology_type",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1609,
    "kind": "file",
    "name": "js/topology/define/topology_define_world.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../../utils/types'\r\nimport TopologyDefineItem from './topology_define_item'\r\nimport TopologyDefineTenant from './topology_define_tenant'\r\nimport TopologyDefineNode from './topology_define_node'\r\nimport TopologyDefinePlugin from './topology_define_plugin'\r\n\r\n\r\nlet context = 'common/topology/define/topology_define_world'\r\n\r\n\r\n\r\n/**\r\n * TopologyDefineWorld class.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class TopologyDefineWorld extends TopologyDefineItem\r\n{\r\n\t/**\r\n\t * Create a TopologyDefineWorld instance.\r\n\t * @class TopologyDefineWorld\r\n\t * @extends TopologyDefineItem\r\n\t * \r\n\t * SETTINGS FORMAT:\r\n\t * \t  Object with:\r\n\t * \t\t\"tenants\":...,\r\n\t * \t\t\"nodes\":...,\r\n\t * \t\t\"plugins\":...,\r\n\t * \r\n\t * \t\t\"security\":...,\r\n\t * \r\n\t * \t\t\"loggers\":...,\r\n\t * \t\t\"traces\":...\r\n\t * \t\r\n\t * \r\n\t * @param {string} arg_name - instance name.\r\n\t * @param {Immutable.Map|object} arg_settings - instance settings map.\r\n\t * @param {Runtime} arg_runtime - runtime instance.\r\n\t * @param {LoggerManager} arg_logger_manager - logger manager object.\r\n\t * @param {string} arg_log_context - trace context string.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_name, arg_settings, arg_runtime, arg_logger_manager, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\r\n\t\tif (arg_settings.get)\r\n\t\t{\r\n\t\t\targ_settings = arg_settings.set('runtime', arg_runtime)\r\n\t\t\targ_settings = arg_settings.set('logger_manager', arg_logger_manager)\r\n\t\t} else {\r\n\t\t\targ_settings.runtime = arg_runtime\r\n\t\t\targ_settings.logger_manager = arg_logger_manager\r\n\t\t}\r\n\r\n\t\tsuper(arg_name, arg_settings, 'TopologyDefineWorld', log_context)\r\n\t\t\r\n\t\tthis.is_topology_define_world = true\r\n\r\n\t\tthis.topology_type = 'world'\r\n\t\t\r\n\t\tthis._runtime = arg_runtime\r\n\t\tassert( T.isObject(this._runtime) && this._runtime.is_server_runtime, context + ':constructor:bad runtime instance')\r\n\r\n\t\tthis.load_loggers()\r\n\t\tthis.load_security()\r\n\t\t\r\n\t\tthis.declare_collection('plugins', 'plugin', TopologyDefinePlugin, this.load_plugin.bind(this))\r\n\t\tthis.declare_collection('tenants', 'tenant', TopologyDefineTenant)\r\n\t\tthis.declare_collection('nodes',   'node',   TopologyDefineNode)\r\n\t\t\r\n\t\tthis.info('World is created')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Load topology world loggers.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tload_loggers()\r\n\t{\r\n\t\tthis.info('load_loggers')\r\n\t\t\r\n\t\tconst loggers_settings = this.get_setting_js('loggers', {})\r\n\t\tconst traces_settings = this.get_setting_js('traces', {})\r\n\t\t\r\n\t\tloggers_settings.traces = traces_settings\r\n\t\tconst logger_manager = this._runtime.get_logger_manager()\r\n\t\tlogger_manager.load(loggers_settings)\r\n\t\tlogger_manager.enable_trace()\r\n\r\n\t\tthis.info('load_loggers:async is resolved with success')\r\n\t\treturn Promise.resolve(true)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Load topology world security.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tload_security()\r\n\t{\r\n\t\tthis.enter_group('load_security')\r\n\t\t\r\n\t\tconst security_settings = this._runtime.get_registry().root.get('security')\r\n\t\t// console.log(security_settings, context + ':load_security:security_settings')\r\n\t\t\r\n\t\tthis._runtime.security().load(security_settings)\r\n\r\n\t\tthis.leave_group('load_security:async is resolved with success')\r\n\t\treturn Promise.resolve(true)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Load rendering plugins.\r\n\t * \r\n\t * @param {TopologyDefinePlugin} arg_plugin - plugin definition instance.\r\n\t * \r\n\t * @returns {Promise} - Promise of Plugin instance.\r\n\t */\r\n\tload_plugin(arg_plugin)\r\n\t{\r\n\t\tthis.enter_group('load_plugin')\r\n\r\n\t\tassert( T.isObject(arg_plugin) && arg_plugin.is_topology_define_plugin, context + ':load_plugin: bad plugin definition instance²')\r\n\t\tconst name = arg_plugin.get_name()\r\n\t\tthis.debug('plugin name', name)\r\n\t\tthis.debug('plugin type', arg_plugin.topology_plugin_type)\r\n\r\n\t\tlet promise = undefined\r\n\t\tswitch(arg_plugin.topology_plugin_type){\r\n\t\t\tcase 'rendering': {\r\n\t\t\t\tassert( T.isObject(arg_plugin) && arg_plugin.is_topology_define_plugin, context + ':load_plugin:bad plugin object for [' + name + ']')\r\n\t\t\t\tassert( T.isObject(this._runtime) && this._runtime.is_base_runtime, context + ':load_plugin:bad runtime instance for [' + name + ']' )\r\n\t\t\t\t\r\n\t\t\t\tpromise = arg_plugin.load_rendering_plugin(this._runtime)\r\n\t\t\t\tthis.leave_group('load_plugin:rendering:async for [' + name + ']')\r\n\t\t\t\treturn promise\r\n\t\t\t}\r\n\t\t\tcase 'services': {\r\n\t\t\t\tassert( T.isObject(arg_plugin) && arg_plugin.is_topology_define_plugin, context + ':load_plugin:bad plugin object for [' + name + ']')\r\n\t\t\t\tassert( T.isObject(this._runtime) && this._runtime.is_base_runtime, context + ':load_plugin:bad runtime instance for [' + name + ']' )\r\n\t\t\t\t\r\n\t\t\t\tpromise = arg_plugin.load_services_plugin(this._runtime)\r\n\t\t\t\tthis.leave_group('load_plugin:services:async for [' + name + ']')\r\n\t\t\t\treturn promise\r\n\t\t\t}\r\n\t\t\tcase '...':{\r\n\t\t\t\tthis.leave_group('load_plugin:unknow:async for [' + name + ']')\r\n\t\t\t\treturn Promise.resolve(false)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.leave_group('load_plugin:bad plugin type [' + arg_plugin.topology_plugin_type + '] for [' + name + ']')\r\n\t\treturn Promise.reject('world.load_plugin:bad plugin type [' + arg_plugin.topology_plugin_type + '] for [' + name + ']')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Find a Tenant / Application / service.\r\n\t * \r\n\t * @param {string} arg_tenant_name - tenant name.\r\n\t * //@param {string} arg_env_name - environment name. (TODO)\r\n\t * @param {string} arg_application_name - application name.\r\n\t * @param {string} arg_svc_name - service name.\r\n\t * \r\n\t * @returns {TopologyDefineService|undefined}\r\n\t */\r\n\tfind_service(arg_tenant_name, arg_application_name, arg_svc_name)\r\n\t{\r\n\t\tconst tenant = this.tenant(arg_tenant_name)\r\n\t\tif(! tenant)\r\n\t\t{\r\n\t\t\tself.error('tenant not found for ' + arg_tenant_name)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst application = tenant.application(arg_application_name)\r\n\t\tif(! application)\r\n\t\t{\r\n\t\t\tself.error('application not found for ' + arg_application_name + ' for tenant ' + arg_tenant_name)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst defined_svc = application.find_resource(arg_svc_name, 'services')\r\n\t\treturn defined_svc\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Find a Tenant / Application.\r\n\t * \r\n\t * @param {Credentials} arg_credentials - credentials instance.\r\n\t * \r\n\t * @returns {TopologyDefineApplication|undefined}\r\n\t */\r\n\tfind_application_with_credentials(arg_credentials)\r\n\t{\r\n\t\tconst tenant_name = arg_credentials.get_tenant()\r\n\t\t// const env_name = arg_credentials.get_env()// TODO\r\n\t\tconst application_name = arg_credentials.get_application()\r\n\r\n\t\tconst tenant = this.tenant(tenant_name)\r\n\t\tif(! tenant)\r\n\t\t{\r\n\t\t\tself.error('tenant not found for ' + tenant_name)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst application = tenant.application(application_name)\r\n\t\treturn application\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Find a Tenant / Application / service.\r\n\t * \r\n\t * @param {Credentials} arg_credentials - credentials instance.\r\n\t * @param {string} arg_resource_name - resource name.\r\n\t * @param {string} arg_resource_type - resource type.\r\n\t * \r\n\t * @returns {TopologyDefineService|undefined}\r\n\t */\r\n\tfind_resource_with_credentials(arg_credentials, arg_resource_name, arg_resource_type)\r\n\t{\r\n\t\tconst tenant_name = arg_credentials.get_tenant()\r\n\t\t// const env_name = arg_credentials.get_env() // TODO\r\n\t\tconst application_name = arg_credentials.get_application()\r\n\r\n\t\tconst tenant = this.tenant(tenant_name)\r\n\t\tif(! tenant)\r\n\t\t{\r\n\t\t\tself.error('tenant not found for ' + tenant_name)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst application = tenant.application(application_name)\r\n\t\tif(! application)\r\n\t\t{\r\n\t\t\tself.error('resource of type ' + arg_resource_type + ' with name ' + arg_resource_name + 'not found for ' + application_name + ' for tenant ' + tenant_name)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst defined_svc = application.find_resource(arg_resource_name, arg_resource_type)\r\n\t\treturn defined_svc\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Find a Tenant / Application / service.\r\n\t * \r\n\t * @param {Credentials} arg_credentials - credentials instance.\r\n\t * @param {string} arg_svc_name - service name.\r\n\t * \r\n\t * @returns {TopologyDefineService|undefined}\r\n\t */\r\n\tfind_service_with_credentials(arg_credentials, arg_svc_name)\r\n\t{\r\n\t\treturn this.find_resource_with_credentials(arg_credentials, arg_svc_name, 'services')\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/define/topology_define_world.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1610,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/define/topology_define_world.js",
    "static": true,
    "longname": "js/topology/define/topology_define_world.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/define/topology_define_world.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1611,
    "kind": "class",
    "name": "TopologyDefineWorld",
    "memberof": "js/topology/define/topology_define_world.js",
    "static": true,
    "longname": "js/topology/define/topology_define_world.js~TopologyDefineWorld",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/define/topology_define_world.js",
    "importStyle": "TopologyDefineWorld",
    "description": "TopologyDefineWorld class.",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/topology/define/topology_define_item.js~TopologyDefineItem"
    ]
  },
  {
    "__docId__": 1612,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/topology/define/topology_define_world.js~TopologyDefineWorld",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_world.js~TopologyDefineWorld#constructor",
    "access": "public",
    "description": "Create a TopologyDefineWorld instance.",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TopologyDefineWorld"
      },
      {
        "tagName": "@extends",
        "tagValue": "TopologyDefineItem\n\nSETTINGS FORMAT:\n\t  Object with:\n\t\t\"tenants\":...,\n\t\t\"nodes\":...,\n\t\t\"plugins\":...,\n\n\t\t\"security\":...,\n\n\t\t\"loggers\":...,\n\t\t\"traces\":...\n\t"
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      },
      {
        "nullable": null,
        "types": [
          "Immutable.Map",
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "instance settings map."
      },
      {
        "nullable": null,
        "types": [
          "Runtime"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "runtime instance."
      },
      {
        "nullable": null,
        "types": [
          "LoggerManager"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_logger_manager",
        "description": "logger manager object."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1613,
    "kind": "member",
    "name": "is_topology_define_world",
    "memberof": "js/topology/define/topology_define_world.js~TopologyDefineWorld",
    "static": false,
    "longname": "js/topology/define/topology_define_world.js~TopologyDefineWorld#is_topology_define_world",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1614,
    "kind": "member",
    "name": "topology_type",
    "memberof": "js/topology/define/topology_define_world.js~TopologyDefineWorld",
    "static": false,
    "longname": "js/topology/define/topology_define_world.js~TopologyDefineWorld#topology_type",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1615,
    "kind": "member",
    "name": "_runtime",
    "memberof": "js/topology/define/topology_define_world.js~TopologyDefineWorld",
    "static": false,
    "longname": "js/topology/define/topology_define_world.js~TopologyDefineWorld#_runtime",
    "access": "private",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1616,
    "kind": "method",
    "name": "load_loggers",
    "memberof": "js/topology/define/topology_define_world.js~TopologyDefineWorld",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_world.js~TopologyDefineWorld#load_loggers",
    "access": "public",
    "description": "Load topology world loggers.",
    "lineNumber": 88,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1617,
    "kind": "method",
    "name": "load_security",
    "memberof": "js/topology/define/topology_define_world.js~TopologyDefineWorld",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_world.js~TopologyDefineWorld#load_security",
    "access": "public",
    "description": "Load topology world security.",
    "lineNumber": 111,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1618,
    "kind": "method",
    "name": "load_plugin",
    "memberof": "js/topology/define/topology_define_world.js~TopologyDefineWorld",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_world.js~TopologyDefineWorld#load_plugin",
    "access": "public",
    "description": "Load rendering plugins.",
    "lineNumber": 133,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of Plugin instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "TopologyDefinePlugin"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_plugin",
        "description": "plugin definition instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of Plugin instance."
    }
  },
  {
    "__docId__": 1619,
    "kind": "method",
    "name": "find_service",
    "memberof": "js/topology/define/topology_define_world.js~TopologyDefineWorld",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_world.js~TopologyDefineWorld#find_service",
    "access": "public",
    "description": "Find a Tenant / Application / service.",
    "lineNumber": 182,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{TopologyDefineService|undefined}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_tenant_name",
        "description": "tenant name.\n//@param {string} arg_env_name - environment name. (TODO)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_application_name",
        "description": "application name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_name",
        "description": "service name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TopologyDefineService",
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1620,
    "kind": "method",
    "name": "find_application_with_credentials",
    "memberof": "js/topology/define/topology_define_world.js~TopologyDefineWorld",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_world.js~TopologyDefineWorld#find_application_with_credentials",
    "access": "public",
    "description": "Find a Tenant / Application.",
    "lineNumber": 211,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{TopologyDefineApplication|undefined}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Credentials"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "credentials instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TopologyDefineApplication",
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1621,
    "kind": "method",
    "name": "find_resource_with_credentials",
    "memberof": "js/topology/define/topology_define_world.js~TopologyDefineWorld",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_world.js~TopologyDefineWorld#find_resource_with_credentials",
    "access": "public",
    "description": "Find a Tenant / Application / service.",
    "lineNumber": 239,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{TopologyDefineService|undefined}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Credentials"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "credentials instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_resource_name",
        "description": "resource name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_resource_type",
        "description": "resource type."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TopologyDefineService",
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1622,
    "kind": "method",
    "name": "find_service_with_credentials",
    "memberof": "js/topology/define/topology_define_world.js~TopologyDefineWorld",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/define/topology_define_world.js~TopologyDefineWorld#find_service_with_credentials",
    "access": "public",
    "description": "Find a Tenant / Application / service.",
    "lineNumber": 273,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{TopologyDefineService|undefined}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Credentials"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "credentials instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_name",
        "description": "service name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TopologyDefineService",
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1623,
    "kind": "file",
    "name": "js/topology/deploy/topology_deploy_item.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../../utils/types'\r\n\r\n// COMMON IMPORTS\r\nimport Collection from '../../base/collection'\r\nimport DistributedInstance from '../../base/distributed_instance'\r\n\r\n\r\nlet context = 'common/topology/deploy/topology_deploy_item'\r\n\r\n\r\n\r\n/**\r\n * @file TopologyDeployItem class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class TopologyDeployItem extends DistributedInstance\r\n{\r\n\t/**\r\n\t * Create a topology deploy item instance.\r\n\t * @class TopologyDeployItem\r\n\t * @extends DistributedInstance\r\n\t * \r\n\t * A deployment item is a runtime dynamic object corresponding to a deployed topology definition item.\r\n\t * Each deployment item has one corresponding definition item.\r\n\t * One definition item could have many deployment items.\r\n\t * \r\n\t * API:\r\n\t * \t\t->load():nothing - load Topology item settings.\r\n\t * \r\n\t * \t\t->get_owner():TopologyDeployItem - deployment container\r\n\t * \t\t->get_topology_define_item():object - get topology definition item.\r\n\t * \t\t\r\n\t * \t\t->deploy():Promise(boolean) - .\r\n\t * \t\t->undeploy():Promise(boolean) - .\r\n\t * \r\n\t * \r\n\t * @param {string} arg_name - instance name.\r\n\t * @param {TopologyDefineItem} arg_definition_item - topology definition item.\r\n\t * @param {object} arg_deploy_settings - deployment settings map.\r\n\t * @param {class} arg_topology_class - item TopologyDefineItem child class.\r\n\t * @param {string} arg_log_context - trace context string.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_name, arg_definition_item, arg_deploy_settings, arg_topology_class, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tassert( T.isObject(arg_deploy_settings), log_context + ':bad settings object')\r\n\t\t\r\n\t\tsuper('deployed_topology', arg_topology_class ? arg_topology_class : 'TopologyDeployItem', arg_name, arg_deploy_settings, log_context)\r\n\t\t\r\n\t\tthis.is_topology_deploy_item = true\r\n\r\n\t\t// TOPOLOGY INFORMATIONS\r\n\t\tthis.topology_definition_item = arg_definition_item\r\n\t\tthis.topology_children = {}\r\n\t\tthis.topology_owner = undefined\r\n\r\n\t\tthis.enable_trace()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get topology definition item.\r\n\t * \r\n\t * return {TopologyDefineItem}\r\n\t */\r\n\tget_topology_definition_item()\r\n\t{\r\n\t\treturn this.topology_definition_item\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get topology owner.\r\n\t * \r\n\t * returns {TopologyDeployItem}\r\n\t */\r\n\tget_topology_owner()\r\n\t{\r\n\t\treturn this.topology_owner\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Load Topology item settings.\r\n\t * \r\n\t * @returns {Promise} - Promise(boolean): true=success, false=failure\r\n\t */\r\n\tload()\r\n\t{\r\n\t\tthis.enter_group('load')\r\n\t\t\r\n\t\tsuper.load()\r\n\t\t\r\n\t\tconst promises = []\r\n\t\tconst children_names = Object.keys(this.topology_children)\r\n\t\tthis.debug('load:children_names [' + children_names.toString() + ']')\r\n\t\t\r\n\t\tchildren_names.forEach(\r\n\t\t\t(child_name)=>{\r\n\t\t\t\tthis.debug('loop on child [' + child_name + ']')\r\n\r\n\t\t\t\tconst child_collection = this.topology_children[child_name]\r\n\t\t\t\tconst child_promise = this.load_collection(child_collection.plural, child_collection, child_collection.item_class, child_collection.item_init)\r\n\t\t\t\tpromises.push(child_promise)\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\tthis.leave_group('load:async wait')\r\n\t\treturn Promise.all(promises).then(\r\n\t\t\t(result)=>{\r\n\t\t\t\tthis.leave_group('load:async is resolved with ' + (result ? 'success' : 'failure'))\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\t\r\n\r\n\r\n\t/**\r\n\t * Check functional format.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tis_valid()\r\n\t{\r\n\t\treturn true\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Load a collection of topology items.\r\n\t * \r\n\t * @param {string} arg_plural_name - plural name of the collection.\r\n\t * @param {string} arg_single_name - single name of the collection item.\r\n\t * @param {class} arg_topology_class - item TopologyDeployItem child class.\r\n\t * @param {function} arg_init_cb - optional callback to complete item loading:(name,settings)=>Promise(boolean).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdeclare_collection(arg_plural_name, arg_single_name, arg_topology_class, arg_init_cb)\r\n\t{\r\n\t\tthis.enter_group('declare_collection of ' + arg_plural_name)\r\n\r\n\t\t// CHECK ARGS\r\n\t\tassert( T.isString(arg_plural_name) && arg_plural_name.length > 0, context + ':declare_collection:bad plural name for plural=' + arg_plural_name + ',single=' + arg_single_name)\r\n\t\tassert( T.isString(arg_single_name) && arg_single_name.length > 0, context + ':declare_collection:bad single string for plural=' + arg_plural_name + ',single=' + arg_single_name)\r\n\t\tassert( T.isFunction(arg_topology_class), context + ':declare_collection:bad class object for plural=' + arg_plural_name + ',single=' + arg_single_name)\r\n\t\t\r\n\t\t// DECLARE COLLECTION\r\n\t\tthis.topology_children[arg_plural_name] = {\r\n\t\t\t// TODO : create a VersionnedCollection class\r\n\t\t\tis_versionned_collection: true,\r\n\t\t\tplural:arg_plural_name,\r\n\t\t\tsingle:arg_single_name,\r\n\t\t\titem_class:arg_topology_class,\r\n\t\t\titem_init:arg_init_cb,\r\n\r\n\t\t\tlatest:new Collection(),   // KEY is name@latest\r\n\t\t\tversions:new Collection(), // KEY is name@version\r\n\t\t\t\r\n\t\t\thas:(arg_name, arg_version)=>{\r\n\t\t\t\tif (arg_version == 'latest')\r\n\t\t\t\t{\r\n\t\t\t\t\treturn this.topology_children[arg_plural_name].latest.has(arg_name + '@latest')\r\n\t\t\t\t}\r\n\t\t\t\treturn this.topology_children[arg_plural_name].versions.has(arg_name + '@' + arg_version)\r\n\t\t\t},\r\n\t\t\tget:(arg_name, arg_version)=>{\r\n\t\t\t\tif (arg_version == 'latest')\r\n\t\t\t\t{\r\n\t\t\t\t\treturn this.topology_children[arg_plural_name].latest.find_by_name(arg_name + '@latest')\r\n\t\t\t\t}\r\n\t\t\t\treturn this.topology_children[arg_plural_name].versions.find_by_name(arg_name + '@' + arg_version)\r\n\t\t\t},\r\n\t\t\tadd:(arg_item)=>{\r\n\t\t\t\tif ( T.isObject(arg_item) && arg_item.is_topology_deploy_item )\r\n\t\t\t\t{\r\n\t\t\t\t\tconst name = arg_item.get_name()\r\n\t\t\t\t\tif ( this.topology_children[arg_plural_name].latest.has(name) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst latest = this.topology_children[arg_plural_name].latest.get(name)\r\n\t\t\t\t\t\tif ( latest.get_topology_version() < arg_item.get_topology_version() )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.topology_children[arg_plural_name].latest.remove(latest)\r\n\t\t\t\t\t\t\tthis.topology_children[arg_plural_name].latest.add(arg_item)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.topology_children[arg_plural_name].latest.add(arg_item)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.topology_children[arg_plural_name].versions.add(arg_item)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tremove:(arg_item)=>{\r\n\t\t\t\tif ( T.isObject(arg_item) && arg_item.is_topology_item )\r\n\t\t\t\t{\r\n\t\t\t\t\tconst name = arg_item.get_name()\r\n\t\t\t\t\tif ( this.topology_children[arg_plural_name].latest.has(name) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.topology_children[arg_plural_name].latest.remove(arg_item)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( this.topology_children[arg_plural_name].versions.has(name) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.topology_children[arg_plural_name].versions.remove(arg_item)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// DECLARE ACCESSORS\r\n\t\tthis[arg_plural_name] = ()=>{\r\n\t\t\treturn this.topology_children[arg_plural_name]\r\n\t\t}\r\n\r\n\t\tthis[arg_single_name] = (arg_name, arg_version='latest')=>{\r\n\t\t\tif (arg_version == 'latest')\r\n\t\t\t{\r\n\t\t\t\treturn this.topology_children[arg_plural_name].latest.find_by_name(arg_name + '@latest')\r\n\t\t\t}\r\n\t\t\treturn this.topology_children[arg_plural_name].versions.find_by_name(arg_name + '@' + arg_version)\r\n\t\t}\r\n\r\n\t\tthis.leave_group('declare_collection of ' + arg_plural_name)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Load a collection of topology items.\r\n\t * \r\n\t * @param {string} arg_collection_name - name of the collection in the item settings.\r\n\t * @param {object} arg_collection - child collection of items.\r\n\t * @param {class} arg_topology_class - item TopologyDeployItem child class.\r\n\t * @param {function} arg_init_cb - optional callback to complete item loading:(name,settings)=>Promise(boolean).\r\n\t * \r\n\t * @returns {Promise} - Promise(boolean): true=success, false=failure.\r\n\t */\r\n\tload_collection(arg_collection_name, arg_collection, arg_topology_class, arg_init_cb)\r\n\t{\r\n\t\tthis.enter_group('load_collection of ' + arg_collection_name)\r\n\t\t\r\n\t\tconst promises = []\r\n\t\tconst collection_settings = this.get_setting(arg_collection_name, undefined)\r\n\t\tif (collection_settings)\r\n\t\t{\r\n\t\t\tconst all_map = collection_settings.toMap()\r\n\t\t\tall_map.forEach(\r\n\t\t\t\t(settings, name) => {\r\n\t\t\t\t\tthis.info('load_collection:Processing collection [' + arg_collection_name + '] item creation of [' + name + ']')\r\n\t\t\t\t\t// console.log(settings, 'settings')\r\n\t\t\t\t\t// console.log(name, 'name')\r\n\t\t\t\t\tif (! settings.has('tenant'))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsettings.set('tenant', this.get_topology_tenant)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (! settings.has('package'))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsettings.set('package', this.get_topology_package)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst item = new arg_topology_class(name, settings)\r\n\t\t\t\t\titem.topology_owner = this\r\n\r\n\t\t\t\t\targ_collection.add(item)\r\n\r\n\t\t\t\t\tlet load_promise = item.load()\r\n\r\n\t\t\t\t\tif ( T.isFunction(arg_init_cb) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tload_promise = load_promise.then(\r\n\t\t\t\t\t\t\t(result)=>{\r\n\t\t\t\t\t\t\t\tif (result)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\treturn arg_init_cb(name, settings)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn false\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tload_promise = load_promise.then(\r\n\t\t\t\t\t\t(result)=>{\r\n\t\t\t\t\t\t\treturn result && item.is_valid()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\r\n\t\t\t\t\tpromises.push(load_promise)\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t\t\r\n\t\tthis.leave_group('load_collection of ' + arg_collection_name + ':async wait')\r\n\t\treturn Promise.all(promises).then(\r\n\t\t\t(result)=>{\r\n\t\t\t\tthis.leave_group('load_collection of ' + arg_collection_name + ':async is resolved with ' + (result ? 'success' : 'failure'))\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get topology item informations.\r\n\t * \r\n\t * @param {boolean} arg_deep - get deep sub items information on true (default:true).\r\n\t * @param {object} arg_visited - visited items plain object map (default:{}).\r\n\t * \r\n\t * @returns {object} - topology informations (plain object).\r\n\t */\r\n\tget_topology_info(arg_deep=true, arg_visited={})\r\n\t{\r\n\t\tconst info = {\r\n\t\t\tname:this.get_name(),\r\n\t\t\tuid_desc:this.topology_uid_desc,\r\n\t\t\tuid:this.topology_uid,\r\n\r\n\t\t\ttenant:this.topology_tenant,\r\n\t\t\tpackage:this.topology_package,\r\n\t\t\tversion:this.topology_version,\r\n\t\t\t\r\n\t\t\ttype:this.topology_type,\r\n\t\t\tsecurity:this.topology_security,\r\n\t\t\t\r\n\t\t\tchildren:this.get_children_names()\r\n\t\t}\r\n\r\n\t\tif ( arg_visited && (this.topology_uid in arg_visited) )\r\n\t\t{\r\n\t\t\treturn Object.assign(info, { note:'already dumped' } )\r\n\t\t}\r\n\r\n\t\targ_visited[this.topology_uid] = info\r\n\r\n\t\tif (arg_deep)\r\n\t\t{\r\n\t\t\tconst children_names = info.children\r\n\t\t\tinfo.children = []\r\n\t\t\tchildren_names.forEach(\r\n\t\t\t\t(child_name) => {\r\n\t\t\t\t\tlet child = this.topology_children[child_name]\r\n\r\n\t\t\t\t\t// CHILD IS NOT FOUND\r\n\t\t\t\t\tif (! child)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconsole.error(context + ':get_topology_info:child not found [' + child_name + '] for item [' + info.name + ']')\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// CHILD IS A TOPOLOGY DEFINE ITEM\r\n\t\t\t\t\tif ( child && T.isFunction(child.get_topology_info) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tinfo.children.push( child.get_topology_info(arg_deep, arg_visited) )\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// CHILD IS A VERSIONNED COLLECTION\r\n\t\t\t\t\tif ( T.isObject(child) && child.is_versionned_collection)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst all_versioned_items = child.collection.get_all()\r\n\t\t\t\t\t\tall_versioned_items.forEach(\r\n\t\t\t\t\t\t\t(item)=>{\r\n\t\t\t\t\t\t\t\tinfo.children.push( item.get_topology_info() )\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn info\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Dump topology item informations.\r\n\t * \r\n\t * @param {object} arg_info - topology info object.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdump_topology_info(arg_info, arg_tabs=' ', arg_eol='\\n', arg_write = console.info)\r\n\t{\r\n\t\targ_write(arg_tabs + '-------------------------------------' + arg_eol)\r\n\t\targ_write(arg_tabs + 'name:'\t\t+ arg_info.name + arg_eol)\r\n\t\targ_write(arg_tabs + 'uid_desc:'\t+ arg_info.uid_desc + arg_eol)\r\n\t\targ_write(arg_tabs + 'uid:'\t\t\t+ arg_info.uid + arg_eol)\r\n\t\targ_write(arg_tabs + 'tenant:'\t\t+ arg_info.tenant + arg_eol)\r\n\t\targ_write(arg_tabs + 'package:'\t\t+ arg_info.package + arg_eol)\r\n\t\targ_write(arg_tabs + 'version:'\t\t+ arg_info.version + arg_eol)\r\n\t\targ_write(arg_tabs + 'type:'\t\t+ arg_info.type + arg_eol)\r\n\t\targ_write(arg_tabs + 'security:'\t+ arg_info.security + arg_eol)\r\n\t\t\r\n\t\targ_write(arg_tabs + 'children: [' + arg_eol)\r\n\t\targ_info.children.forEach(\r\n\t\t\t(child_info)=>{\r\n\t\t\t\tthis.dump_topology_info(child_info, arg_tabs + ' ', arg_eol, arg_write)\r\n\t\t\t}\r\n\t\t)\r\n\t\targ_write(arg_tabs + ']' + arg_eol)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get children names\r\n\t */\r\n\tget_children_names()\r\n\t{\r\n\t\treturn Object.keys(this.topology_children)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get resource topology type.\r\n\t */\r\n\tget_topology_type()\r\n\t{\r\n\t\treturn this.topology_type\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get resource topology tenant.\r\n\t */\r\n\tget_topology_tenant()\r\n\t{\r\n\t\treturn this.topology_tenant\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get resource topology package.\r\n\t */\r\n\tget_topology_package()\r\n\t{\r\n\t\treturn this.topology_package\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get resource topology version.\r\n\t */\r\n\tget_topology_version()\r\n\t{\r\n\t\treturn this.topology_version\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get resource topology uid description.\r\n\t */\r\n\tget_topology_uid_desc()\r\n\t{\r\n\t\treturn this.topology_uid_desc\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get resource topology uid.\r\n\t */\r\n\tget_topology_uid()\r\n\t{\r\n\t\treturn this.topology_uid\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get resource topology security.\r\n\t */\r\n\tget_topology_security()\r\n\t{\r\n\t\treturn this.topology_security\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get topology children items.\r\n\t * \r\n\t * @returns {object} - map of children items.\r\n\t */\r\n\tget_children()\r\n\t{\r\n\t\treturn this.topology_children\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/deploy/topology_deploy_item.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1624,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/deploy/topology_deploy_item.js",
    "static": true,
    "longname": "js/topology/deploy/topology_deploy_item.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/deploy/topology_deploy_item.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1625,
    "kind": "class",
    "name": "TopologyDeployItem",
    "memberof": "js/topology/deploy/topology_deploy_item.js",
    "static": true,
    "longname": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/deploy/topology_deploy_item.js",
    "importStyle": "TopologyDeployItem",
    "description": "",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "TopologyDeployItem class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/distributed_instance.js~DistributedInstance"
    ]
  },
  {
    "__docId__": 1626,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem#constructor",
    "access": "public",
    "description": "Create a topology deploy item instance.",
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TopologyDeployItem"
      },
      {
        "tagName": "@extends",
        "tagValue": "DistributedInstance\n\nA deployment item is a runtime dynamic object corresponding to a deployed topology definition item.\nEach deployment item has one corresponding definition item.\nOne definition item could have many deployment items.\n\nAPI:\n\t\t->load():nothing - load Topology item settings.\n\n\t\t->get_owner():TopologyDeployItem - deployment container\n\t\t->get_topology_define_item():object - get topology definition item.\n\t\t\n\t\t->deploy():Promise(boolean) - .\n\t\t->undeploy():Promise(boolean) - ."
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      },
      {
        "nullable": null,
        "types": [
          "TopologyDefineItem"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_definition_item",
        "description": "topology definition item."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_deploy_settings",
        "description": "deployment settings map."
      },
      {
        "nullable": null,
        "types": [
          "class"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_topology_class",
        "description": "item TopologyDefineItem child class."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1627,
    "kind": "member",
    "name": "is_topology_deploy_item",
    "memberof": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem",
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem#is_topology_deploy_item",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1628,
    "kind": "member",
    "name": "topology_definition_item",
    "memberof": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem",
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem#topology_definition_item",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1629,
    "kind": "member",
    "name": "topology_children",
    "memberof": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem",
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem#topology_children",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 1630,
    "kind": "member",
    "name": "topology_owner",
    "memberof": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem",
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem#topology_owner",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1631,
    "kind": "method",
    "name": "get_topology_definition_item",
    "memberof": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem#get_topology_definition_item",
    "access": "public",
    "description": "Get topology definition item.\n\nreturn {TopologyDefineItem}",
    "lineNumber": 76,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1632,
    "kind": "method",
    "name": "get_topology_owner",
    "memberof": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem#get_topology_owner",
    "access": "public",
    "description": "Get topology owner.\n\nreturns {TopologyDeployItem}",
    "lineNumber": 88,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1633,
    "kind": "method",
    "name": "load",
    "memberof": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem#load",
    "access": "public",
    "description": "Load Topology item settings.",
    "lineNumber": 100,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise(boolean): true=success, false=failure"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise(boolean): true=success, false=failure"
    },
    "params": []
  },
  {
    "__docId__": 1634,
    "kind": "method",
    "name": "is_valid",
    "memberof": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem#is_valid",
    "access": "public",
    "description": "Check functional format.",
    "lineNumber": 136,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 1635,
    "kind": "method",
    "name": "declare_collection",
    "memberof": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem#declare_collection",
    "access": "public",
    "description": "Load a collection of topology items.",
    "lineNumber": 153,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_plural_name",
        "description": "plural name of the collection."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_single_name",
        "description": "single name of the collection item."
      },
      {
        "nullable": null,
        "types": [
          "class"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_topology_class",
        "description": "item TopologyDeployItem child class."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_init_cb",
        "description": "optional callback to complete item loading:(name,settings)=>Promise(boolean)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1636,
    "kind": "member",
    "name": "[arg_plural_name]",
    "memberof": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem",
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem#[arg_plural_name]",
    "access": "public",
    "description": null,
    "lineNumber": 223,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1637,
    "kind": "member",
    "name": "[arg_single_name]",
    "memberof": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem",
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem#[arg_single_name]",
    "access": "public",
    "description": null,
    "lineNumber": 227,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1638,
    "kind": "method",
    "name": "load_collection",
    "memberof": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem#load_collection",
    "access": "public",
    "description": "Load a collection of topology items.",
    "lineNumber": 250,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise(boolean): true=success, false=failure."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_collection_name",
        "description": "name of the collection in the item settings."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_collection",
        "description": "child collection of items."
      },
      {
        "nullable": null,
        "types": [
          "class"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_topology_class",
        "description": "item TopologyDeployItem child class."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_init_cb",
        "description": "optional callback to complete item loading:(name,settings)=>Promise(boolean)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise(boolean): true=success, false=failure."
    }
  },
  {
    "__docId__": 1639,
    "kind": "method",
    "name": "get_topology_info",
    "memberof": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem#get_topology_info",
    "access": "public",
    "description": "Get topology item informations.",
    "lineNumber": 323,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - topology informations (plain object)."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_deep",
        "description": "get deep sub items information on true (default:true)."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_visited",
        "description": "visited items plain object map (default:{})."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "topology informations (plain object)."
    }
  },
  {
    "__docId__": 1640,
    "kind": "method",
    "name": "dump_topology_info",
    "memberof": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem#dump_topology_info",
    "access": "public",
    "description": "Dump topology item informations.",
    "lineNumber": 395,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_info",
        "description": "topology info object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1641,
    "kind": "method",
    "name": "get_children_names",
    "memberof": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem#get_children_names",
    "access": "public",
    "description": "Get children names",
    "lineNumber": 421,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1642,
    "kind": "method",
    "name": "get_topology_type",
    "memberof": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem#get_topology_type",
    "access": "public",
    "description": "Get resource topology type.",
    "lineNumber": 431,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1643,
    "kind": "method",
    "name": "get_topology_tenant",
    "memberof": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem#get_topology_tenant",
    "access": "public",
    "description": "Get resource topology tenant.",
    "lineNumber": 441,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1644,
    "kind": "method",
    "name": "get_topology_package",
    "memberof": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem#get_topology_package",
    "access": "public",
    "description": "Get resource topology package.",
    "lineNumber": 451,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1645,
    "kind": "method",
    "name": "get_topology_version",
    "memberof": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem#get_topology_version",
    "access": "public",
    "description": "Get resource topology version.",
    "lineNumber": 461,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1646,
    "kind": "method",
    "name": "get_topology_uid_desc",
    "memberof": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem#get_topology_uid_desc",
    "access": "public",
    "description": "Get resource topology uid description.",
    "lineNumber": 471,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1647,
    "kind": "method",
    "name": "get_topology_uid",
    "memberof": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem#get_topology_uid",
    "access": "public",
    "description": "Get resource topology uid.",
    "lineNumber": 481,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1648,
    "kind": "method",
    "name": "get_topology_security",
    "memberof": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem#get_topology_security",
    "access": "public",
    "description": "Get resource topology security.",
    "lineNumber": 491,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1649,
    "kind": "method",
    "name": "get_children",
    "memberof": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem#get_children",
    "access": "public",
    "description": "Get topology children items.",
    "lineNumber": 503,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - map of children items."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "map of children items."
    },
    "params": []
  },
  {
    "__docId__": 1650,
    "kind": "file",
    "name": "js/topology/deploy/topology_deploy_local_node.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport _ from 'lodash'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../../utils/types'\r\nimport TopologyDeployItem from './topology_deploy_item'\r\n\r\n\r\nconst context = 'common/topology/deploy/topology_deploy_local_node'\r\n\r\n\r\n\r\n/**\r\n * TopologyDeployLocalNode class.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n* \tAPI:\r\n* \t\tthis.deployed_tenants[deployed_tenant_name] = \r\n*\t\t\t\tname:deployed_tenant_name,\t\t// String\r\n*\t\t\t\ttenant:defined_tenant,\t\t\t// TopologyDefineTenant instance\r\n*\t\t\t\tservices:\r\n*\t\t\t\t\tsvc_name:svc\t\t\t\t// TopologyDefinedService instance\r\n*\t\t\t\tapplications:\r\n*\t\t\t\t\tapp_name:\r\n*\t\t\t\t\t\tname:app_name,\t\t\t\t// String\r\n*\t\t\t\t\t\ttenant:defined_tenant,\t\t// TopologyDefineTenant instance\r\n*\t\t\t\t\t\tappplication:defined_app,\t// TopologyDefinedApplication instance\r\n*\t\t\t\t\t\tservices:\r\n*\t\t\t\t\t\t\tsvc_name:svc\t\t\t// TopologyDefinedService instance\r\n*\t\t\t\t\t\tassets:\r\n*\t\t\t\t\t\t\t...\t\t\t\t\t\t// See TopologyDefinedApplication instance assets\r\n* \r\n */\r\nexport default class TopologyDeployLocalNode extends TopologyDeployItem\r\n{\r\n\t/**\r\n\t * Create a TopologyDeployNode instance.\r\n\t * \r\n\t * @param {string} arg_name - instance name.\r\n\t * @param {TopologyDefineItem} arg_definition_item - topology definition item.\r\n\t * @param {object} arg_settings - instance settings map.\r\n\t * @param {object} arg_deploy_factory - factory object { create(type, name, settings) { return TopologyDeployItem } }\r\n\t * @param {string} arg_log_context - trace context string.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_name, arg_definition_item, arg_settings, arg_deploy_factory, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_name, arg_definition_item, arg_settings, 'TopologyDeployLocalNode', log_context)\r\n\t\t\r\n\t\tassert( T.isObject(arg_definition_item) && arg_definition_item.is_topology_define_node, context + ':constructor:bad node topology definition object')\r\n\t\tassert( T.isObject(arg_deploy_factory), context + ':constructor:bad factory object')\r\n\t\tassert( T.isFunction(arg_deploy_factory.create), context + ':constructor:bad factory.create function')\r\n\r\n\t\tthis.is_topology_deploy_local_node = true\r\n\r\n\t\tthis.topology_type = 'local_nodes'\r\n\r\n\t\tthis.deployed_factory = arg_deploy_factory\r\n\t\tthis.deployed_tenants = {}\r\n\t\t\r\n\t\tthis.info('Local Node is created')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get deployed tenants.\r\n\t * \r\n\t * @returns {array} - deployed tenants.\r\n\t */\r\n\tget_deployed_tenants_names()\r\n\t{\r\n\t\tthis.enter_group('get_deployed_tenants')\r\n\r\n\t\tconst tenants = Object.keys(this.deployed_tenants)\r\n\r\n\t\tthis.leave_group('get_deployed_tenants')\r\n\t\treturn tenants\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get deployed tenant informations.\r\n\t * \r\n\t * @param {string} arg_tenant_name - tenant name.\r\n\t * \r\n\t * @returns {object} - deployed tenant infos.\r\n\t */\r\n\tget_deployed_tenant_topology(arg_tenant_name)\r\n\t{\r\n\t\tthis.enter_group('get_deployed_tenant_topology')\r\n\r\n\t\t// CHECK TENANT NAME\r\n\t\tif (! this.deployed_tenants || ! (arg_tenant_name in this.deployed_tenants) )\r\n\t\t{\r\n\t\t\tthis.leave_group('get_deployed_tenant_topology:tenant not found')\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\tconst deployed_tenant_topology = this.deployed_tenants[arg_tenant_name]\r\n\t\tif (! deployed_tenant_topology)\r\n\t\t{\r\n\t\t\tthis.leave_group('get_deployed_tenant_topology:bad tenant topology')\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\tthis.leave_group('get_deployed_tenant_topology')\r\n\t\treturn deployed_tenant_topology\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get deployed tenants informations.\r\n\t * \r\n\t * @param {boolean} arg_deep - get deep sub items information on true (default:true).\r\n\t * \r\n\t * @returns {object} - deployed tenant infos.\r\n\t */\r\n\tget_deployed_tenants_infos(arg_deep=true)\r\n\t{\r\n\t\tthis.enter_group('get_deployed_tenants_infos')\r\n\r\n\t\tconst deployed_tenants_infos = {}\r\n\r\n\t\t_.forEach(this.deployed_tenants,\r\n\t\t\t(deployed_tenant_topology, tenant_name)=>{\r\n\t\t\t\tif (! deployed_tenant_topology)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.leave_group('get_deployed_tenants_infos:bad tenant topology')\r\n\t\t\t\t\treturn undefined\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst tenant = deployed_tenant_topology.tenant\r\n\r\n\t\t\t\tif (! tenant)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.leave_group('get_deployed_tenants_infos:bad tenant instance')\r\n\t\t\t\t\treturn undefined\r\n\t\t\t\t}\r\n\t\t\t\tdeployed_tenants_infos[tenant_name] = tenant.get_topology_info(arg_deep)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tthis.leave_group('get_deployed_tenants_infos')\r\n\t\treturn deployed_tenants_infos\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get deployed tenant informations.\r\n\t * \r\n\t * @param {string} arg_tenant_name - tenant name.\r\n\t * @param {boolean} arg_deep - get deep sub items information on true (default:true).\r\n\t * \r\n\t * @returns {object} - deployed tenant infos.\r\n\t */\r\n\tget_deployed_tenant_infos(arg_tenant_name, arg_deep=true)\r\n\t{\r\n\t\tthis.enter_group('get_deployed_tenant_infos')\r\n\r\n\t\tconst deployed_tenant_topology = this.get_deployed_tenant_topology(arg_tenant_name)\r\n\t\tif (! deployed_tenant_topology)\r\n\t\t{\r\n\t\t\tthis.leave_group('get_deployed_tenant_infos:bad tenant topology')\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\tconst tenant = deployed_tenant_topology.tenant\r\n\r\n\t\tif (! tenant)\r\n\t\t{\r\n\t\t\tthis.leave_group('get_deployed_tenant_infos:bad tenant instance')\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\tthis.leave_group('get_deployed_tenant_infos')\r\n\t\treturn tenant.get_topology_info(arg_deep)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get deployed tenant applications names.\r\n\t * \r\n\t * @param {string} arg_tenant_name - tenant name.\r\n\t * \r\n\t * @returns {array} - deployed tenant applications names.\r\n\t */\r\n\tget_deployed_tenant_applications_names(arg_tenant_name)\r\n\t{\r\n\t\tthis.enter_group('get_deployed_tenant_applications_names')\r\n\r\n\t\tconst deployed_tenant_topology = this.get_deployed_tenant_topology(arg_tenant_name)\r\n\t\tif (! deployed_tenant_topology)\r\n\t\t{\r\n\t\t\tthis.leave_group('get_deployed_tenant_applications_names:bad tenant topology')\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\tconst apps_names = Object.keys(deployed_tenant_topology.applications)\r\n\r\n\t\tthis.leave_group('get_deployed_tenant_applications_names')\r\n\t\treturn apps_names\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get deployed tenant applications infos.\r\n\t * \r\n\t * @param {string} arg_tenant_name - tenant name.\r\n\t * @param {boolean} arg_deep - get deep sub items information on true (default:true).\r\n\t * \r\n\t * @returns {object} - deployed tenant applications infos.\r\n\t */\r\n\tget_deployed_tenant_applications_infos(arg_tenant_name, arg_deep=true)\r\n\t{\r\n\t\tthis.enter_group('get_deployed_tenant_applications_infos')\r\n\r\n\t\tconst deployed_tenant_topology = this.get_deployed_tenant_topology(arg_tenant_name)\r\n\t\tif (! deployed_tenant_topology)\r\n\t\t{\r\n\t\t\tthis.leave_group('get_deployed_tenant_applications_infos:bad tenant topology')\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\tconst apps_infos = {}\r\n\t\t_.forEach(deployed_tenant_topology.applications,\r\n\t\t\t(app, app_name)=>{\r\n\t\t\t\tapps_infos[app_name] = app.get_topology_info(arg_deep)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tthis.leave_group('get_deployed_tenant_applications_infos')\r\n\t\treturn apps_infos\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get deployed tenant services names.\r\n\t * \r\n\t * @param {string} arg_tenant_name - tenant name.\r\n\t * \r\n\t * @returns {array} - deployed tenant services names.\r\n\t */\r\n\tget_deployed_tenant_services_names(arg_tenant_name)\r\n\t{\r\n\t\tthis.enter_group('get_deployed_tenant_services_names')\r\n\r\n\t\tconst deployed_tenant_topology = this.get_deployed_tenant_topology(arg_tenant_name)\r\n\t\tif (! deployed_tenant_topology)\r\n\t\t{\r\n\t\t\tthis.leave_group('get_deployed_tenant_services_names:bad tenant topology')\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\tconst services_names = Object.keys(deployed_tenant_topology.services)\r\n\r\n\t\tthis.leave_group('get_deployed_tenant_services_names')\r\n\t\treturn services_names\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get deployed tenant services infos.\r\n\t * \r\n\t * @param {string} arg_tenant_name - tenant name.\r\n\t * @param {boolean} arg_deep - get deep sub items information on true (default:true).\r\n\t * \r\n\t * @returns {object} - deployed tenant services infos.\r\n\t */\r\n\tget_deployed_tenant_services_infos(arg_tenant_name, arg_deep=true)\r\n\t{\r\n\t\tthis.enter_group('get_deployed_tenant_services_infos')\r\n\r\n\t\tconst deployed_tenant_topology = this.get_deployed_tenant_topology(arg_tenant_name)\r\n\t\tif (! deployed_tenant_topology)\r\n\t\t{\r\n\t\t\tthis.leave_group('get_deployed_tenant_services_infos:bad tenant topology')\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\tconst svcs_infos = {}\r\n\t\t_.forEach(deployed_tenant_topology.services,\r\n\t\t\t(svc, svc_name)=>{\r\n\t\t\t\tsvcs_infos[svc_name] = svc.get_topology_info(arg_deep)\r\n\t\t\t\tsvcs_infos[svc_name].operations = svc.get_a_provider().get_operations_names()\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tthis.leave_group('get_deployed_tenant_services_infos')\r\n\t\treturn svcs_infos\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get deployed tenant services infos.\r\n\t * \r\n\t * @param {string} arg_tenant_name - tenant name.\r\n\t * @param {string} arg_svc_name - service name.\r\n\t * @param {boolean} arg_deep - get deep sub items information on true (default:true).\r\n\t * \r\n\t * @returns {object} - deployed tenant services infos.\r\n\t */\r\n\tget_deployed_tenant_service_infos(arg_tenant_name, arg_svc_name, arg_deep=true)\r\n\t{\r\n\t\tthis.enter_group('get_deployed_tenant_service_infos')\r\n\r\n\t\tconst deployed_tenant_topology = this.get_deployed_tenant_topology(arg_tenant_name)\r\n\t\tif (! deployed_tenant_topology)\r\n\t\t{\r\n\t\t\tthis.leave_group('get_deployed_tenant_service_infos:bad tenant topology')\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\tif (arg_svc_name in deployed_tenant_topology.services)\r\n\t\t{\r\n\t\t\tconst svc = deployed_tenant_topology.services[arg_svc_name]\r\n\t\t\tconst svc_infos = svc.get_topology_info(arg_deep)\r\n\t\t\tsvc_infos.operations = svc.get_a_provider().get_operations_names()\r\n\t\t\t\r\n\t\t\tthis.leave_group('get_deployed_tenant_service_infos')\r\n\t\t\treturn svc_infos\r\n\t\t}\r\n\r\n\t\tthis.leave_group('get_deployed_tenant_service_infos:service not found for [' + arg_svc_name + ']')\r\n\t\treturn undefined\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get deployed nodes names.\r\n\t * \r\n\t * @returns {array} - nodes names.\r\n\t */\r\n\tget_deployed_nodes_names()\r\n\t{\r\n\t\tthis.enter_group('get_deployed_nodes_names')\r\n\r\n\t\tconst defined_node = this.get_topology_definition_item()\r\n\t\tconst defined_world = defined_node.get_topology_owner()\r\n\t\tconst nodes = defined_world.nodes()\r\n\t\tconst nodes_names = nodes.get_all_names()\r\n\r\n\t\tthis.leave_group('get_deployed_nodes_names')\r\n\t\treturn nodes_names\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Find a deployed service in tenants services.\r\n\t * \r\n\t * @param {string} arg_svc_name - service name.\r\n\t * \r\n\t * @returns {Service} - deployed service instance.\r\n\t */\r\n\tfind_deployed_service(arg_svc_name)\r\n\t{\r\n\t\tthis.enter_group('find_deployed_service')\r\n\r\n\t\tthis.debug('find_deployed_service', 'service', arg_svc_name)\r\n\r\n\t\t// LOOP ON TENANTS\r\n\t\tconst tenants_names = this.get_deployed_tenants_names()\r\n\t\tfor(const tenant_name of tenants_names)\r\n\t\t{\r\n\t\t\tconst svc = this.get_deployed_service(tenant_name, arg_svc_name)\r\n\t\t\tif (svc && svc.is_service)\r\n\t\t\t{\r\n\t\t\t\tthis.debug('find_deployed_service', 'tenant', tenant_name)\r\n\t\t\t\tthis.leave_group('find_deployed_service:found')\r\n\t\t\t\treturn svc\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.leave_group('find_deployed_service:not found')\r\n\t\treturn undefined\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get or create a deployed service.\r\n\t * \r\n\t * @param {string} arg_tenant_name - tenant name.\r\n\t * @param {string} arg_svc_name - service name.\r\n\t * \r\n\t * @returns {Service} - deployed service instance.\r\n\t */\r\n\tget_deployed_service(arg_tenant_name, arg_svc_name)\r\n\t{\r\n\t\tthis.enter_group('get_deployed_service')\r\n\r\n\t\tthis.debug('get_deployed_service', 'tenant', arg_tenant_name)\r\n\t\tthis.debug('get_deployed_service', 'service', arg_svc_name)\r\n\r\n\t\t// GET TENANT\r\n\t\tconst defined_node = this.get_topology_definition_item()\r\n\t\tconst defined_world = defined_node.get_topology_owner()\r\n\t\tconst defined_tenant = defined_world.tenant(arg_tenant_name)\r\n\t\tassert( T.isObject(defined_tenant) && defined_tenant.is_topology_define_tenant, context + ':get_deployed_service:bad tenant object for [' + arg_tenant_name + ']')\r\n\r\n\t\t// GET TENANT DEPLOYMENT\r\n\t\tif (! T.isObject(this.deployed_tenants[arg_tenant_name]) )\r\n\t\t{\r\n\t\t\tthis.deployed_tenants[arg_tenant_name] = {\r\n\t\t\t\tname:arg_tenant_name,\r\n\t\t\t\ttenant:defined_tenant,\r\n\t\t\t\tservices:{},\r\n\t\t\t\tapplications:{}\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst deployed_tenant = this.deployed_tenants[arg_tenant_name]\r\n\r\n\t\t// SERVICE IS ALREADY DEPLOYED ON TENANT\r\n\t\tif (arg_svc_name in deployed_tenant.services)\r\n\t\t{\r\n\t\t\tthis.leave_group('get_deployed_service (already deployed)')\r\n\t\t\treturn deployed_tenant.services[arg_svc_name]\r\n\t\t}\r\n\r\n\t\t// GET SERVICE DEFINITION\r\n\t\tconst defined_service = defined_tenant.get_service(arg_svc_name)\r\n\t\tthis.debug('get_deployed_service:defined_service', defined_service)\r\n\t\tif (! defined_service)\r\n\t\t{\r\n\t\t\tthis.error(context + ':get_deployed_service:definition not found for service [' + arg_svc_name + '] for tenant [' + arg_tenant_name + ']')\r\n\t\t\t\r\n\t\t\tthis.leave_group('get_deployed_service (error)')\r\n\t\t\treturn undefined\r\n\t\t}\r\n\t\tthis.debug('get_deployed_service:defined service found [' + arg_svc_name + ']')\r\n\r\n\t\t// CREATE SERVICE\r\n\t\tlet service = undefined\r\n\t\tconst settings = defined_service.get_settings()\r\n\t\tservice = this.deployed_factory.create('service', arg_svc_name, settings)\r\n\t\tif (! service)\r\n\t\t{\r\n\t\t\tthis.error(context + ':get_deployed_service:creation failed for service [' + arg_svc_name + '] for tenant [' + arg_tenant_name + ']')\r\n\t\t\t\r\n\t\t\tthis.leave_group('get_deployed_service (error)')\r\n\t\t\treturn undefined\r\n\t\t}\r\n\t\tthis.debug('get_deployed_service:service instance created [' + arg_svc_name + '] for tenant [' + arg_tenant_name + ']')\r\n\t\t\r\n\t\t// ENABLE SERVICE\r\n\t\tservice.enable()\r\n\t\tthis.debug('get_deployed_service:service is enabled')\r\n\t\tthis.deployed_tenants[arg_tenant_name].services[arg_svc_name] = service\r\n\r\n\t\tthis.leave_group('get_deployed_service')\r\n\t\treturn service\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Deploy defined topology on this local node.\r\n\t * \r\n\t * @returns {Promise} - Promise(boolean)\r\n\t */\r\n\tdeploy()\r\n\t{\r\n\t\tthis.enter_group('deploy')\r\n\r\n\t\tconst defined_world = this.get_topology_definition_item().get_topology_owner()\r\n\r\n\t\t// LOOP ON TENANTS TO DEPLOY\r\n\t\tconst deployed_tenants = this.get_settings().toJS()\r\n\t\t_.forEach(deployed_tenants,\r\n\t\t\t(deployed_apps, deployed_tenant_name)=>{\r\n\t\t\t\t// SKIP SPECIAL CASES\r\n\t\t\t\tif (deployed_tenant_name == 'runtime' || deployed_tenant_name == 'logger_manager')\r\n\t\t\t\t{\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.info('deploy:loop on tenant:' + deployed_tenant_name)\r\n\r\n\t\t\t\t\r\n\t\t\t\t// GET DEFINED TENANT\r\n\t\t\t\tconst defined_tenant = defined_world.tenant(deployed_tenant_name)\r\n\t\t\t\tif (! defined_tenant)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.leave_group('deploy (error):bad tenant for ' + deployed_tenant_name)\r\n\t\t\t\t\treturn Promise.reject('deploy:tenant ' + deployed_tenant_name + ' not found for world')\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// INIT TENANT\r\n\t\t\t\tthis.deployed_tenants[deployed_tenant_name] = {\r\n\t\t\t\t\tname:deployed_tenant_name,\r\n\t\t\t\t\ttenant:defined_tenant,\r\n\t\t\t\t\tservices:{},\r\n\t\t\t\t\tapplications:{}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// LOOP ON APPLICATIONS TO DEPLOY\r\n\t\t\t\t// const deployed_apps = deployed_tenants[deployed_tenant_name]\r\n\t\t\t\t_.forEach(deployed_apps,\r\n\t\t\t\t\t(deployed_app, deployed_app_name)=>{\r\n\t\t\t\t\t\tthis.info('deploy:loop on application:' + deployed_app_name)\r\n\r\n\t\t\t\t\t\t// GET DEFINED APPLICATION\r\n\t\t\t\t\t\tconst defined_app = defined_tenant.application(deployed_app_name)\r\n\t\t\t\t\t\tif (! defined_app)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.leave_group('deploy (error):bad application for ' + deployed_app_name)\r\n\t\t\t\t\t\t\treturn Promise.reject('deploy:application ' + deployed_app_name + ' not found for tenant ' + deployed_tenant_name)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// INIT TENANT APPLICATION\r\n\t\t\t\t\t\tconst deployed_app_topology = {\r\n\t\t\t\t\t\t\tname:deployed_app_name,\r\n\t\t\t\t\t\t\ttenant:defined_tenant,\r\n\t\t\t\t\t\t\tapplication:defined_app,\r\n\t\t\t\t\t\t\tservices:{},\r\n\t\t\t\t\t\t\tassets:{}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// LOOP ON APPLICATION SERVICES TO DEPLOY\r\n\t\t\t\t\t\tconst deployed_app_services = deployed_app.services\r\n\t\t\t\t\t\t_.forEach(deployed_app_services,\r\n\t\t\t\t\t\t\t(deployed_app_svc, deployed_svc_name)=>{\r\n\t\t\t\t\t\t\t\tthis.info('deploy:loop on service:' + deployed_svc_name)\r\n\r\n\t\t\t\t\t\t\t\t// const deployed_app_svc = deployed_app_services[deployed_svc_name]\r\n\t\t\t\t\t\t\t\tconst service = this.get_deployed_service(deployed_tenant_name, deployed_svc_name)\r\n\r\n\t\t\t\t\t\t\t\tif (! service || ! service.is_service)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tthis.error('deploy:services:service not found [' + deployed_svc_name + '] for tenant [' + deployed_tenant_name + ']')\r\n\t\t\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// LOOP ON DEPLOYED APPLICATION SERVICE SERVERS\r\n\t\t\t\t\t\t\t\tservice.activate(defined_app, deployed_app_svc)\r\n\t\t\t\t\t\t\t\tservice.enable()\r\n\r\n\t\t\t\t\t\t\t\tdeployed_app_topology.services[deployed_svc_name] = service\r\n\t\t\t\t\t\t\t\tthis.deployed_tenants[deployed_tenant_name].services[deployed_svc_name] = service\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// LOOP ON APPLICATION ASSETS TO DEPLOY\r\n\t\t\t\t\t\tlet deployed_assets = {}\r\n\t\t\t\t\t\tconst deployed_app_assets = deployed_apps[deployed_app_name].assets\r\n\t\t\t\t\t\tassert( T.isObject(deployed_app_assets), context + ':deploy:bad assets object')\r\n\t\t\t\t\t\tif ( T.isObject(deployed_app_assets.regions) )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tassert( T.isObject(deployed_app_assets.regions), context + ':deploy:bad assets.regions object')\r\n\t\t\t\t\t\t\t_.forEach(deployed_app_assets.regions,\r\n\t\t\t\t\t\t\t\t(deployed_region, deployed_region_name)=>{\r\n\t\t\t\t\t\t\t\t\tthis.info('deploy:loop on assets region:' + deployed_region_name)\r\n\r\n\t\t\t\t\t\t\t\t\t// const deployed_region = deployed_app_assets.regions[deployed_region_name]\r\n\t\t\t\t\t\t\t\t\tassert( T.isObject(deployed_region), context + ':deploy:bad assets.regions.* object for region ' + deployed_region_name)\r\n\r\n\t\t\t\t\t\t\t\t\tconst style_svc_array  = T.isArray(deployed_region.style)  ? deployed_region.style  : []\r\n\t\t\t\t\t\t\t\t\tconst script_svc_array = T.isArray(deployed_region.script) ? deployed_region.script : []\r\n\t\t\t\t\t\t\t\t\tconst image_svc_array  = T.isArray(deployed_region.image)  ? deployed_region.image  : []\r\n\t\t\t\t\t\t\t\t\tconst html_svc_array   = T.isArray(deployed_region.html)   ? deployed_region.html   : []\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tdeployed_assets[deployed_region_name] = {\r\n\t\t\t\t\t\t\t\t\t\tstyle:style_svc_array,\r\n\t\t\t\t\t\t\t\t\t\tscript:script_svc_array,\r\n\t\t\t\t\t\t\t\t\t\timage:image_svc_array,\r\n\t\t\t\t\t\t\t\t\t\thtml:html_svc_array\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdeployed_app_topology.assets = deployed_app_assets\r\n\t\t\t\t\t\tthis.deployed_tenants[deployed_tenant_name].applications[deployed_app_name] = deployed_app_topology\r\n\r\n\t\t\t\t\t\t// REGISTER ASSETS ON DEPLOYED SERVICES\r\n\t\t\t\t\t\t_.forEach(deployed_app_services,\r\n\t\t\t\t\t\t\t(service_cfg, svc_name)=>{\r\n\t\t\t\t\t\t\t\tconst service = this.deployed_tenants[deployed_tenant_name].services[svc_name]\r\n\t\t\t\t\t\t\t\tif (! service || ! service.is_service)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tthis.error('deploy:assets:service not found [' + svc_name + '] for tenant [' + deployed_tenant_name + ']')\r\n\t\t\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tservice.topology_deploy_assets = deployed_assets\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tthis.leave_group('deploy')\r\n\t\treturn Promise.resolve(true)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/deploy/topology_deploy_local_node.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1651,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/deploy/topology_deploy_local_node.js",
    "static": true,
    "longname": "js/topology/deploy/topology_deploy_local_node.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/deploy/topology_deploy_local_node.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1652,
    "kind": "class",
    "name": "TopologyDeployLocalNode",
    "memberof": "js/topology/deploy/topology_deploy_local_node.js",
    "static": true,
    "longname": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/deploy/topology_deploy_local_node.js",
    "importStyle": "TopologyDeployLocalNode",
    "description": "TopologyDeployLocalNode class.",
    "examples": [
      "\tAPI:\n\t\tthis.deployed_tenants[deployed_tenant_name] = \n\t\t\tname:deployed_tenant_name,\t\t// String\n\t\t\ttenant:defined_tenant,\t\t\t// TopologyDefineTenant instance\n\t\t\tservices:\n\t\t\t\tsvc_name:svc\t\t\t\t// TopologyDefinedService instance\n\t\t\tapplications:\n\t\t\t\tapp_name:\n\t\t\t\t\tname:app_name,\t\t\t\t// String\n\t\t\t\t\ttenant:defined_tenant,\t\t// TopologyDefineTenant instance\n\t\t\t\t\tappplication:defined_app,\t// TopologyDefinedApplication instance\n\t\t\t\t\tservices:\n\t\t\t\t\t\tsvc_name:svc\t\t\t// TopologyDefinedService instance\n\t\t\t\t\tassets:\n\t\t\t\t\t\t...\t\t\t\t\t\t// See TopologyDefinedApplication instance assets"
    ],
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/topology/deploy/topology_deploy_item.js~TopologyDeployItem"
    ]
  },
  {
    "__docId__": 1653,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode#constructor",
    "access": "public",
    "description": "Create a TopologyDeployNode instance.",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "instance name."
      },
      {
        "nullable": null,
        "types": [
          "TopologyDefineItem"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_definition_item",
        "description": "topology definition item."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "instance settings map."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_deploy_factory",
        "description": "factory object { create(type, name, settings) { return TopologyDeployItem } }"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1654,
    "kind": "member",
    "name": "is_topology_deploy_local_node",
    "memberof": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode",
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode#is_topology_deploy_local_node",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1655,
    "kind": "member",
    "name": "topology_type",
    "memberof": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode",
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode#topology_type",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1656,
    "kind": "member",
    "name": "deployed_factory",
    "memberof": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode",
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode#deployed_factory",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1657,
    "kind": "member",
    "name": "deployed_tenants",
    "memberof": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode",
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode#deployed_tenants",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 1658,
    "kind": "method",
    "name": "get_deployed_tenants_names",
    "memberof": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode#get_deployed_tenants_names",
    "access": "public",
    "description": "Get deployed tenants.",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} - deployed tenants."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "deployed tenants."
    },
    "params": []
  },
  {
    "__docId__": 1659,
    "kind": "method",
    "name": "get_deployed_tenant_topology",
    "memberof": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode#get_deployed_tenant_topology",
    "access": "public",
    "description": "Get deployed tenant informations.",
    "lineNumber": 96,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - deployed tenant infos."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_tenant_name",
        "description": "tenant name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "deployed tenant infos."
    }
  },
  {
    "__docId__": 1660,
    "kind": "method",
    "name": "get_deployed_tenants_infos",
    "memberof": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode#get_deployed_tenants_infos",
    "access": "public",
    "description": "Get deployed tenants informations.",
    "lineNumber": 127,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - deployed tenant infos."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_deep",
        "description": "get deep sub items information on true (default:true)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "deployed tenant infos."
    }
  },
  {
    "__docId__": 1661,
    "kind": "method",
    "name": "get_deployed_tenant_infos",
    "memberof": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode#get_deployed_tenant_infos",
    "access": "public",
    "description": "Get deployed tenant informations.",
    "lineNumber": 166,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - deployed tenant infos."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_tenant_name",
        "description": "tenant name."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_deep",
        "description": "get deep sub items information on true (default:true)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "deployed tenant infos."
    }
  },
  {
    "__docId__": 1662,
    "kind": "method",
    "name": "get_deployed_tenant_applications_names",
    "memberof": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode#get_deployed_tenant_applications_names",
    "access": "public",
    "description": "Get deployed tenant applications names.",
    "lineNumber": 198,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} - deployed tenant applications names."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_tenant_name",
        "description": "tenant name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "deployed tenant applications names."
    }
  },
  {
    "__docId__": 1663,
    "kind": "method",
    "name": "get_deployed_tenant_applications_infos",
    "memberof": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode#get_deployed_tenant_applications_infos",
    "access": "public",
    "description": "Get deployed tenant applications infos.",
    "lineNumber": 225,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - deployed tenant applications infos."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_tenant_name",
        "description": "tenant name."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_deep",
        "description": "get deep sub items information on true (default:true)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "deployed tenant applications infos."
    }
  },
  {
    "__docId__": 1664,
    "kind": "method",
    "name": "get_deployed_tenant_services_names",
    "memberof": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode#get_deployed_tenant_services_names",
    "access": "public",
    "description": "Get deployed tenant services names.",
    "lineNumber": 256,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} - deployed tenant services names."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_tenant_name",
        "description": "tenant name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "deployed tenant services names."
    }
  },
  {
    "__docId__": 1665,
    "kind": "method",
    "name": "get_deployed_tenant_services_infos",
    "memberof": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode#get_deployed_tenant_services_infos",
    "access": "public",
    "description": "Get deployed tenant services infos.",
    "lineNumber": 283,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - deployed tenant services infos."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_tenant_name",
        "description": "tenant name."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_deep",
        "description": "get deep sub items information on true (default:true)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "deployed tenant services infos."
    }
  },
  {
    "__docId__": 1666,
    "kind": "method",
    "name": "get_deployed_tenant_service_infos",
    "memberof": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode#get_deployed_tenant_service_infos",
    "access": "public",
    "description": "Get deployed tenant services infos.",
    "lineNumber": 317,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - deployed tenant services infos."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_tenant_name",
        "description": "tenant name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_name",
        "description": "service name."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_deep",
        "description": "get deep sub items information on true (default:true)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "deployed tenant services infos."
    }
  },
  {
    "__docId__": 1667,
    "kind": "method",
    "name": "get_deployed_nodes_names",
    "memberof": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode#get_deployed_nodes_names",
    "access": "public",
    "description": "Get deployed nodes names.",
    "lineNumber": 349,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} - nodes names."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "nodes names."
    },
    "params": []
  },
  {
    "__docId__": 1668,
    "kind": "method",
    "name": "find_deployed_service",
    "memberof": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode#find_deployed_service",
    "access": "public",
    "description": "Find a deployed service in tenants services.",
    "lineNumber": 371,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Service} - deployed service instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_name",
        "description": "service name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Service"
      ],
      "spread": false,
      "description": "deployed service instance."
    }
  },
  {
    "__docId__": 1669,
    "kind": "method",
    "name": "get_deployed_service",
    "memberof": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode#get_deployed_service",
    "access": "public",
    "description": "Get or create a deployed service.",
    "lineNumber": 404,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Service} - deployed service instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_tenant_name",
        "description": "tenant name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_name",
        "description": "service name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Service"
      ],
      "spread": false,
      "description": "deployed service instance."
    }
  },
  {
    "__docId__": 1670,
    "kind": "method",
    "name": "deploy",
    "memberof": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/deploy/topology_deploy_local_node.js~TopologyDeployLocalNode#deploy",
    "access": "public",
    "description": "Deploy defined topology on this local node.",
    "lineNumber": 477,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise(boolean)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise(boolean)"
    },
    "params": []
  },
  {
    "__docId__": 1671,
    "kind": "file",
    "name": "js/topology/registry/index.js",
    "content": "// COMMON IMPORTS\r\nimport TopologyRegistry from './topology_registry'\r\nimport runtime from '../../base/runtime'\r\n\r\n\r\nconst logger_manager = runtime ? runtime.get_logger_manager() : undefined\r\n\r\n\r\n// CREATE DEFAULT RUNTIME STORE\r\nconst TRACE_TOPOLOGY_LOADING = false\r\nexport const store = new TopologyRegistry(logger_manager, TRACE_TOPOLOGY_LOADING)\r\nexport default store",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/registry/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1672,
    "kind": "variable",
    "name": "logger_manager",
    "memberof": "js/topology/registry/index.js",
    "static": true,
    "longname": "js/topology/registry/index.js~logger_manager",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1673,
    "kind": "variable",
    "name": "TRACE_TOPOLOGY_LOADING",
    "memberof": "js/topology/registry/index.js",
    "static": true,
    "longname": "js/topology/registry/index.js~TRACE_TOPOLOGY_LOADING",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1674,
    "kind": "variable",
    "name": "store",
    "memberof": "js/topology/registry/index.js",
    "static": true,
    "longname": "js/topology/registry/index.js~store",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/registry/index.js",
    "importStyle": "{store}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "js/topology/registry/topology_registry.js~TopologyRegistry"
      ]
    }
  },
  {
    "__docId__": 1675,
    "kind": "file",
    "name": "js/topology/registry/loaders/default_config_app.js",
    "content": "export const default_config = {\r\n\t'nodes':{},\r\n\r\n\t'tenants':{\r\n\t\t'default':{\r\n\t\t\t'applications':{},\r\n\t\t\t'packages':{}\r\n\t\t}\r\n\t},\r\n\r\n\t'deployments':{},\r\n\t\r\n\t'security':{\r\n\t\t'is_readonly':false,\r\n\t\t\r\n\t\t'authentication': {\r\n\t\t\t'enabled':false,\r\n\t\t\t'plugins':[],\r\n\t\t\t'default_plugins':[]\r\n\t\t},\r\n\t\t\r\n\t\t'authorization': {\r\n\t\t\t'enabled':false,\r\n\t\t\t'plugins':[],\r\n\t\t\t'default_plugins':[]\r\n\t\t},\r\n\t\t\r\n\t\t'datasources':[]\r\n\t},\r\n\t\r\n\t'plugins':{},\r\n\t\r\n\t'loggers':{},\r\n\t'traces':{}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/registry/loaders/default_config_app.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1676,
    "kind": "variable",
    "name": "default_config",
    "memberof": "js/topology/registry/loaders/default_config_app.js",
    "static": true,
    "longname": "js/topology/registry/loaders/default_config_app.js~default_config",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/registry/loaders/default_config_app.js",
    "importStyle": "{default_config}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{\"nodes\": *, \"tenants\": *, \"deployments\": *, \"security\": *, \"plugins\": *, \"loggers\": *, \"traces\": *}"
      ]
    }
  },
  {
    "__docId__": 1677,
    "kind": "file",
    "name": "js/topology/registry/loaders/load_application.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport path from 'path'\r\n\r\n// COMMON IMPORTS\r\nimport T      from '../../../utils/types'\r\nimport parser from '../../../utils/parser/parser'\r\n\r\n\r\nconst context = 'common/topology/registry/loaders/load_application'\r\n\r\n\r\n\r\nlet error_msg_bad_config = context + ':bad config - world.tenants.*.applications.* should be a plain object'\r\nlet error_msg_bad_from_file = context + ':bad config - world.tenants.*.applications.*.from_file should be a string'\r\nlet error_msg_bad_license = context + ':bad config - world.tenants.*.applications.*.license should be a string'\r\nlet error_msg_bad_url = context + ':bad config - world.tenants.*.applications.*.url should be a string'\r\nlet error_msg_bad_file_config = context + ':bad config - world.tenants.*.applications.*.from_file content should be an object'\r\n\r\nlet error_msg_bad_packages = context + ':bad config - world.tenants.*.applications.*: packages should be an object'\r\nlet error_msg_bad_plugins = context + ':bad config - world.tenants.*.applications.*: plugins should be an object'\r\nlet error_msg_bad_services = context + ':bad config - world.tenants.*.applications.*: services should be an object'\r\n\r\nlet error_msg_bad_used_packages = context + ':bad config - world.tenants.*.applications.*.used_packages should be an array'\r\nlet error_msg_bad_used_plugins = context + ':bad config - world.tenants.*.applications.*.used_plugins should be an array'\r\nlet error_msg_bad_used_services = context + ':bad config - world.tenants.*.applications.*.used_services should be an array'\r\nlet error_msg_bad_provided_services = context + ':bad config - world.tenants.*.applications.*.provided_services should be an array'\r\n\r\nlet error_msg_bad_service_name = context + ':bad config - world.tenants.*.applications.*.used_services|provided_services.* should be a string'\r\nlet error_msg_bad_package_name = context + ':bad config - world.tenants.*.applications.*.used_packages.* should be a string'\r\nlet error_msg_bad_plugin_name = context + ':bad config - world.tenants.*.applications.*.used_plugins.* should be a string'\r\n\r\nlet error_msg_used_plugin_not_found = context + ':bad config - world.tenants.*.applications.*.used_plugins.* not found in world.plugins'\r\nlet error_msg_used_package_not_found = context + ':bad config - world.tenants.*.applications.*.used_packages.* not found in world.tenants.*.packages'\r\nlet error_msg_used_service_not_found = context + ':bad config - world.tenants.*.applications.*.used_service.* not found in world.tenants.*.packages.*.resources'\r\nlet error_msg_provided_service_not_found = context + ':bad config - world.tenants...provided_service.* not found in world...packages.*.resources'\r\n\r\n\r\n\r\n/**\r\n * Load the 'config.applications.*' keys of the final state\r\n * Pure function: (Plain Object) => (mutated Plain Object)\r\n */\r\nfunction load_application(logs, arg_app_name, arg_app_config, arg_config_packages, arg_config_plugins, arg_config_services, arg_base_dir)\r\n{\r\n\tlogs.info(context, 'loading world.tenants.*.applications.' + arg_app_name)\r\n\t\r\n\tassert(arg_config_packages, error_msg_bad_packages)\r\n\tassert(arg_config_plugins, error_msg_bad_plugins)\r\n\tassert(arg_config_services, error_msg_bad_services)\r\n\r\n\ttry{\r\n\t\t// LOAD FROM FILE\r\n\t\tif ( T.isString(arg_app_config.from_file) )\r\n\t\t{\r\n\t\t\tlogs.info(context, 'loading world.tenants.*.applications.' + arg_app_name + '.from_file')\r\n\t\t\tassert(T.isString(arg_app_config.from_file), error_msg_bad_from_file)\r\n\t\t\t\r\n\t\t\tlet file_path_name = path.join(arg_base_dir, arg_app_config.from_file)\r\n\t\t\t\r\n\t\t\tlet app_file_config = parser.read(file_path_name, 'utf8')\r\n\t\t\t// console.log(config, 'config')\r\n\t\t\tassert(T.isObject(app_file_config), error_msg_bad_file_config)\r\n\t\t\t\r\n\t\t\targ_app_config = Object.assign(arg_app_config, app_file_config)\r\n\t\t}\r\n\r\n\t\tassert(T.isObject(arg_app_config), error_msg_bad_config)\r\n\r\n\t\t// CHECK APPLICATION\r\n\t\tassert(T.isString(arg_app_config.url), error_msg_bad_url)\r\n\t\tassert(T.isString(arg_app_config.license), error_msg_bad_license)\r\n\t\t\r\n\t\tassert(T.isArray(arg_app_config.provided_services), error_msg_bad_provided_services)\r\n\t\tassert(T.isArray(arg_app_config.used_services), error_msg_bad_used_services)\r\n\t\tassert(T.isArray(arg_app_config.used_packages), error_msg_bad_used_packages)\r\n\t\tassert(T.isArray(arg_app_config.used_plugins), error_msg_bad_used_plugins)\r\n\t\t\r\n\t\t// assert(T.isObject(arg_app_config.assets), error_msg_bad_assets)\r\n\t\t// assert(T.isArray(arg_app_config.assets.css), error_msg_bad_assets_css)\r\n\t\t// assert(T.isArray(arg_app_config.assets.js), error_msg_bad_assets_js)\r\n\t\t// assert(T.isArray(arg_app_config.assets.img), error_msg_bad_assets_img)\r\n\t\t// assert(T.isString(arg_app_config.assets.index), error_msg_bad_assets_index)\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t// LOOP ON PROVIDED SERVICES\r\n\t\tlogs.info(context, 'loading world.tenants.*.applications.' + arg_app_name + '.provided_services')\r\n\t\targ_app_config.provided_services.forEach(\r\n\t\t\tfunction(service_name)\r\n\t\t\t{\r\n\t\t\t\tassert(T.isString(service_name), error_msg_bad_service_name)\r\n\t\t\t\tassert(service_name in arg_config_services, error_msg_provided_service_not_found + ' for ' + service_name)\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\t// LOOP ON USED SERVICES\r\n\t\tlogs.info(context, 'loading world.tenants.*.applications.' + arg_app_name + '.used_services')\r\n\t\targ_app_config.used_services.forEach(\r\n\t\t\tfunction(service_name)\r\n\t\t\t{\r\n\t\t\t\tassert(T.isString(service_name), error_msg_bad_service_name)\r\n\t\t\t\tassert(service_name in arg_config_services, error_msg_used_service_not_found + ' for ' + service_name)\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\t// LOOP ON USED PACKAGES\r\n\t\tlogs.info(context, 'loading world.tenants.*.applications.' + arg_app_name + '.used_packages')\r\n\t\targ_app_config.used_packages.forEach(\r\n\t\t\tfunction(package_name)\r\n\t\t\t{\r\n\t\t\t\tassert(T.isString(package_name), error_msg_bad_package_name)\r\n\t\t\t\tassert(package_name in arg_config_packages, error_msg_used_package_not_found + ' for ' + package_name)\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\t// LOOP ON USED PLUGINS\r\n\t\tlogs.info(context, 'loading world.tenants.*.applications.' + arg_app_name + '.used_plugins')\r\n\t\targ_app_config.used_plugins.forEach(\r\n\t\t\tfunction(plugin_name)\r\n\t\t\t{\r\n\t\t\t\tassert(T.isString(plugin_name), error_msg_bad_plugin_name)\r\n\t\t\t\tassert(plugin_name in arg_config_plugins, error_msg_used_plugin_not_found + ' for ' + plugin_name)\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\t// // LOOP ON ASSETS CSS\r\n\t\t// arg_app_config.assets.css.forEach(\r\n\t\t// \tfunction(asset)\r\n\t\t// \t{\r\n\t\t// \t\tassert(T.isString(asset), error_msg_bad_asset)\r\n\t\t// \t}\r\n\t\t// )\r\n\t\t\r\n\t\t// // LOOP ON ASSETS JS\r\n\t\t// arg_app_config.assets.js.forEach(\r\n\t\t// \tfunction(asset)\r\n\t\t// \t{\r\n\t\t// \t\tassert(T.isString(asset), error_msg_bad_asset)\r\n\t\t// \t}\r\n\t\t// )\r\n\t\t\r\n\t\t// // LOOP ON ASSETS IMG\r\n\t\t// arg_app_config.assets.img.forEach(\r\n\t\t// \tfunction(asset)\r\n\t\t// \t{\r\n\t\t// \t\tassert(T.isString(asset), error_msg_bad_asset)\r\n\t\t// \t}\r\n\t\t// )\r\n\t}\r\n\tcatch(e)\r\n\t{\r\n\t\t// console.error(context + ' has error:' + e)\r\n\t\targ_app_config = { error: { context:context, exception:e } }\r\n\t}\r\n\t\r\n\treturn arg_app_config\r\n}\r\n\r\nexport default load_application\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/registry/loaders/load_application.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1678,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/registry/loaders/load_application.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_application.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_application.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1679,
    "kind": "variable",
    "name": "error_msg_bad_config",
    "memberof": "js/topology/registry/loaders/load_application.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_application.js~error_msg_bad_config",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_application.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1680,
    "kind": "variable",
    "name": "error_msg_bad_from_file",
    "memberof": "js/topology/registry/loaders/load_application.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_application.js~error_msg_bad_from_file",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_application.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1681,
    "kind": "variable",
    "name": "error_msg_bad_license",
    "memberof": "js/topology/registry/loaders/load_application.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_application.js~error_msg_bad_license",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_application.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1682,
    "kind": "variable",
    "name": "error_msg_bad_url",
    "memberof": "js/topology/registry/loaders/load_application.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_application.js~error_msg_bad_url",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_application.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1683,
    "kind": "variable",
    "name": "error_msg_bad_file_config",
    "memberof": "js/topology/registry/loaders/load_application.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_application.js~error_msg_bad_file_config",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_application.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1684,
    "kind": "variable",
    "name": "error_msg_bad_packages",
    "memberof": "js/topology/registry/loaders/load_application.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_application.js~error_msg_bad_packages",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_application.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1685,
    "kind": "variable",
    "name": "error_msg_bad_plugins",
    "memberof": "js/topology/registry/loaders/load_application.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_application.js~error_msg_bad_plugins",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_application.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1686,
    "kind": "variable",
    "name": "error_msg_bad_services",
    "memberof": "js/topology/registry/loaders/load_application.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_application.js~error_msg_bad_services",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_application.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1687,
    "kind": "variable",
    "name": "error_msg_bad_used_packages",
    "memberof": "js/topology/registry/loaders/load_application.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_application.js~error_msg_bad_used_packages",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_application.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1688,
    "kind": "variable",
    "name": "error_msg_bad_used_plugins",
    "memberof": "js/topology/registry/loaders/load_application.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_application.js~error_msg_bad_used_plugins",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_application.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1689,
    "kind": "variable",
    "name": "error_msg_bad_used_services",
    "memberof": "js/topology/registry/loaders/load_application.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_application.js~error_msg_bad_used_services",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_application.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1690,
    "kind": "variable",
    "name": "error_msg_bad_provided_services",
    "memberof": "js/topology/registry/loaders/load_application.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_application.js~error_msg_bad_provided_services",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_application.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1691,
    "kind": "variable",
    "name": "error_msg_bad_service_name",
    "memberof": "js/topology/registry/loaders/load_application.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_application.js~error_msg_bad_service_name",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_application.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1692,
    "kind": "variable",
    "name": "error_msg_bad_package_name",
    "memberof": "js/topology/registry/loaders/load_application.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_application.js~error_msg_bad_package_name",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_application.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1693,
    "kind": "variable",
    "name": "error_msg_bad_plugin_name",
    "memberof": "js/topology/registry/loaders/load_application.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_application.js~error_msg_bad_plugin_name",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_application.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1694,
    "kind": "variable",
    "name": "error_msg_used_plugin_not_found",
    "memberof": "js/topology/registry/loaders/load_application.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_application.js~error_msg_used_plugin_not_found",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_application.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1695,
    "kind": "variable",
    "name": "error_msg_used_package_not_found",
    "memberof": "js/topology/registry/loaders/load_application.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_application.js~error_msg_used_package_not_found",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_application.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1696,
    "kind": "variable",
    "name": "error_msg_used_service_not_found",
    "memberof": "js/topology/registry/loaders/load_application.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_application.js~error_msg_used_service_not_found",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_application.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1697,
    "kind": "variable",
    "name": "error_msg_provided_service_not_found",
    "memberof": "js/topology/registry/loaders/load_application.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_application.js~error_msg_provided_service_not_found",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_application.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1698,
    "kind": "function",
    "name": "load_application",
    "memberof": "js/topology/registry/loaders/load_application.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/topology/registry/loaders/load_application.js~load_application",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_application.js",
    "importStyle": "load_application",
    "description": "Load the 'config.applications.*' keys of the final state\nPure function: (Plain Object) => (mutated Plain Object)",
    "lineNumber": 44,
    "params": [
      {
        "name": "logs",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_app_name",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_app_config",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_config_packages",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_config_plugins",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_config_services",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_base_dir",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1699,
    "kind": "file",
    "name": "js/topology/registry/loaders/load_applications.js",
    "content": "// SERVER IMPORTS\r\nimport load_application from './load_application'\r\n\r\n\r\nconst context = 'common/topology/registry/loaders/load_applications'\r\n\r\n\r\n\r\n/**\r\n * Load the 'config.applications' key of the final state\r\n * Pure function: (Plain Object) => (mutated Plain Object)\r\n */\r\nfunction load_applications(logs, arg_config, arg_config_packages, arg_config_plugins, arg_config_services, arg_base_dir)\r\n{\r\n\tlogs.info(context, 'loading world.tenants.*.applications')\r\n\t\r\n\ttry{\r\n\t\t// LOOP ON APPLICATIONS\r\n\t\tlet error = undefined\r\n\t\tObject.keys(arg_config).forEach(\r\n\t\t\tfunction(app_name)\r\n\t\t\t{\r\n\t\t\t\tif (arg_config.error)\r\n\t\t\t\t{\r\n\t\t\t\t\terror = arg_config.error\r\n\t\t\t\t}\r\n\t\t\t\tif (error)\r\n\t\t\t\t{\r\n\t\t\t\t\tlogs.info(context, 'skip applications.' + app_name + ' because an error occured.')\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlogs.info(context, 'loading world.tenants.*.applications.' + app_name)\r\n\r\n\t\t\t\tlet app_cfg = arg_config[app_name]\r\n\t\t\t\tapp_cfg = load_application(logs, app_name, app_cfg, arg_config_packages, arg_config_plugins, arg_config_services, arg_base_dir)\r\n\t\t\t\t// console.error(context, app_cfg)\r\n\r\n\t\t\t\t// PROCESS ERRORS\r\n\t\t\t\tif (app_cfg.error)\r\n\t\t\t\t{\r\n\t\t\t\t\terror = app_cfg.error\r\n\t\t\t\t\terror.context = error.context + ' for ' + app_name\r\n\t\t\t\t\t// console.log(context + ' has error for ' + app_name, app_cfg.error)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tif (error)\r\n\t\t{\r\n\t\t\targ_config = { error: error }\r\n\t\t\t// console.error(context, error)\r\n\t\t}\r\n\t}\r\n\tcatch(e)\r\n\t{\r\n\t\targ_config = { error: { context:context, exception:e } }\r\n\t}\r\n\t\r\n\treturn arg_config\r\n}\r\n\r\nexport default load_applications\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/registry/loaders/load_applications.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1700,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/registry/loaders/load_applications.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_applications.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_applications.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1701,
    "kind": "function",
    "name": "load_applications",
    "memberof": "js/topology/registry/loaders/load_applications.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/topology/registry/loaders/load_applications.js~load_applications",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_applications.js",
    "importStyle": "load_applications",
    "description": "Load the 'config.applications' key of the final state\nPure function: (Plain Object) => (mutated Plain Object)",
    "lineNumber": 13,
    "params": [
      {
        "name": "logs",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_config",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_config_packages",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_config_plugins",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_config_services",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_base_dir",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1702,
    "kind": "file",
    "name": "js/topology/registry/loaders/load_config.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport path from 'path'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../../../utils/types'\r\nimport LoggerConsole from '../../../loggers/logger_console_standalone'\r\n\r\n// SERVER IMPORTS\r\nimport load_nodes from './load_nodes'\r\nimport load_tenants from './load_tenants'\r\nimport load_plugins from './load_plugins'\r\nimport load_security from './load_security'\r\nimport load_deployments from './load_deployments'\r\n\r\n\r\nconst context = 'common/topology/registry/loaders/load_config'\r\n\r\n\r\n\r\n/**\r\n * Load the 'config' key of the final state\r\n * Pure function: (Plain Object) => (new Plain Object)\r\n */\r\nfunction load_config(arg_state, arg_initial_config, arg_base_dir, arg_world_dir, arg_trace)\r\n{\r\n\tconst logs = new LoggerConsole(arg_trace)\r\n\tlet should_toggle_trace = false\r\n\t\r\n\tlogs.info(context, 'loading config')\r\n\t\r\n\t\r\n\targ_world_dir = arg_world_dir ? arg_world_dir : (arg_base_dir ? path.join(arg_base_dir, 'resources') : undefined)\r\n\r\n\t\r\n\t// LOAD JSON\r\n\ttry {\r\n\t\t// GET CONFIG JSON\r\n\t\tif (! arg_initial_config)\r\n\t\t{\r\n\t\t\targ_initial_config = require('./default_config_app').default_config\r\n\t\t}\r\n\t\t\r\n\t\tlet config = arg_initial_config\r\n\t\tconfig.resources = config.resources || {}\r\n\t\t\r\n\t\t// LOAD OTHERS FILES\r\n\t\tif (T.isString(config.nodes))\r\n\t\t{\r\n\t\t\tconst file_path_name = path.join(arg_world_dir, config.nodes)\r\n\t\t\tconfig.nodes = require(file_path_name).nodes\r\n\t\t}\r\n\t\tif (T.isString(config.tenants))\r\n\t\t{\r\n\t\t\tconst file_path_name = path.join(arg_world_dir, config.tenants)\r\n\t\t\tconfig.tenants = require(file_path_name).tenants\r\n\t\t}\r\n\t\tif (T.isString(config.plugins))\r\n\t\t{\r\n\t\t\tconst file_path_name = path.join(arg_world_dir, config.plugins)\r\n\t\t\tconfig.plugins = require(file_path_name).plugins\r\n\t\t}\r\n\t\tif (T.isString(config.deployments))\r\n\t\t{\r\n\t\t\tconst file_path_name = path.join(arg_world_dir, config.deployments)\r\n\t\t\tconfig.deployments = require(file_path_name).deployments\r\n\t\t}\r\n\t\tif (T.isString(config.security))\r\n\t\t{\r\n\t\t\tconst file_path_name = path.join(arg_world_dir, config.security)\r\n\t\t\tconfig.security = require(file_path_name).security\r\n\t\t}\r\n\t\tif (T.isString(config.loggers))\r\n\t\t{\r\n\t\t\tconst file_path_name = path.join(arg_world_dir, config.loggers)\r\n\t\t\tconfig.loggers = require(file_path_name).loggers\r\n\t\t}\r\n\t\tif (T.isString(config.traces))\r\n\t\t{\r\n\t\t\tconst file_path_name = path.join(arg_world_dir, config.traces)\r\n\t\t\tconfig.traces = require(file_path_name).traces\r\n\t\t}\r\n\t\t\r\n        \r\n\t\t// CHECK CONFIG PARTS\r\n\t\tassert(T.isObject(config), 'load_config should be a plain object')\r\n\t\tassert(T.isObject(config.nodes), 'load_config:nodes should be a plain object')\r\n\t\tassert(T.isObject(config.tenants), 'load_config:tenants should be a plain object')\r\n\t\tassert(T.isObject(config.plugins), 'load_config:plugins should be a plain object')\r\n\t\tassert(T.isObject(config.deployments), 'load_config:deployments should be a plain object')\r\n\t\tassert(T.isObject(config.security), 'load_config:security should be a plain object')\r\n\t\tassert(T.isObject(config.loggers), 'load_config:loggers should be a plain object')\r\n\t\tassert(T.isObject(config.traces), 'load_config:traces should be a plain object')\r\n\t\t\r\n\t\tconfig.traces.loading = T.isBoolean(config.traces.loading) ? config.traces.loading : false\r\n\t\tif (arg_trace != config.traces.loading)\r\n\t\t{\r\n\t\t\tshould_toggle_trace = true\r\n\t\t\tlogs.toggle_trace()\r\n\t\t}\r\n\r\n\t\t// LOAD CONFIG PARTS\r\n\t\tlogs.info(context, 'loading config parts')\r\n\t\targ_state.config = {}\r\n\t\t\r\n\t\targ_state.config.resources = {}\r\n\t\targ_state.config.resources.by_name = {} // Resource plain object definitions\r\n\t\targ_state.config.resources.by_file = {} // Resource names (map name:name)\r\n\t\targ_state.config.resources.by_package = {} // Resource names (map name:name)\r\n\t\targ_state.config.resources.by_type = {}\r\n\t\targ_state.config.resources.by_type.commands = {} // Resource names (map name:name)\r\n\t\targ_state.config.resources.by_type.services = {} // Resource names (map name:name)\r\n\t\targ_state.config.resources.by_type.views = {} // Resource names (map name:name)\r\n\t\targ_state.config.resources.by_type.models = {} // Resource names (map name:name)\r\n\t\targ_state.config.resources.by_type.menubars = {} // Resource names (map name:name)\r\n\t\targ_state.config.resources.by_type.menus = {} // Resource names (map name:name)\r\n\t\targ_state.config.resources.by_type.datasources = {} // Resource names (map name:name)\r\n\t\targ_state.config.resources.by_type.loggers = {} // Resource names (map name:name)\r\n\t\targ_state.config.resources.by_type.templates = {} // Resource names (map name:name)\r\n\t\t\r\n\t\targ_state.config.nodes = load_nodes(logs, config.nodes, arg_world_dir)\r\n\t\tif (arg_state.config.nodes && ! arg_state.config.nodes.error)\r\n\t\t{\r\n\t\t\targ_state.config.tenants = load_tenants(logs, config.tenants, config.plugins, arg_world_dir)\r\n\r\n\t\t\tif (arg_state.config.tenants && ! arg_state.config.tenants.error)\r\n\t\t\t{\r\n\t\t\t\targ_state.config.plugins = load_plugins(logs, config.plugins, arg_world_dir)\r\n\r\n\t\t\t\tif (arg_state.config.plugins && ! arg_state.config.plugins.error)\r\n\t\t\t\t{\r\n\t\t\t\t\targ_state.config.deployments  = load_deployments(logs, config.deployments, arg_world_dir)\r\n\t\t\t\t\targ_state.config.security     = load_security(logs, config.security, arg_world_dir)\r\n\t\t\t\t\targ_state.config.loggers      = config.loggers\r\n\t\t\t\t\targ_state.config.traces       = config.traces\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\targ_state.config.nodes       = arg_state.config.nodes       ? arg_state.config.nodes : {}\r\n\t\targ_state.config.tenants     = arg_state.config.tenants     ? arg_state.config.tenants : {}\r\n\t\targ_state.config.plugins     = arg_state.config.plugins     ? arg_state.config.plugins : {}\r\n\t\targ_state.config.deployments = arg_state.config.deployments ? arg_state.config.deployments : {}\r\n\t\targ_state.config.security    = arg_state.config.security    ? arg_state.config.security : {}\r\n\t\targ_state.config.loggers     = arg_state.config.loggers     ? arg_state.config.loggers : {}\r\n\t\targ_state.config.traces      = arg_state.config.traces      ? arg_state.config.traces : {}\r\n\t\t\r\n\t\t// POPULATE STORE RESOURCES\r\n\t\tconst has_error = arg_state.config.nodes.error || arg_state.config.tenants.error || arg_state.config.plugins.error || arg_state.config.security.error \r\n\t\tif ( ! has_error)\r\n\t\t{\r\n\t\t\tlogs.info(context, 'populate store resources, loop on tenants packages')\r\n\t\t\tObject.keys(arg_state.config.tenants).forEach(\r\n\t\t\t\t(tenant_name)=>{\r\n\t\t\t\t\tconst tenant_cfg = arg_state.config.tenants[tenant_name]\r\n\t\t\t\t\tObject.keys(tenant_cfg.packages).forEach(\r\n\t\t\t\t\t\t(package_name) => {\r\n\t\t\t\t\t\t\tif (package_name === 'error' || package_name === 'error_msg' || package_name === 'files')\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tlogs.info(context, 'loading config for package ' + package_name)\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tlet package_obj = tenant_cfg.packages[package_name]\r\n\t\t\t\t\t\t\targ_state.config.resources.by_package[package_name] = {}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// REGISTER RESOURCE BY NAME\r\n\t\t\t\t\t\t\tlogs.info(context, 'storing resources by name for package ' + package_name)\r\n\t\t\t\t\t\t\tObject.keys(package_obj.resources_by_name).forEach(\r\n\t\t\t\t\t\t\t\t(resource_name) => {\r\n\t\t\t\t\t\t\t\t\t// logs.debug(context, 'loading config for package ' + package_name + ' for register resource by name for ' + resource_name)\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tlet resource_obj = package_obj.resources_by_name[resource_name]\r\n\t\t\t\t\t\t\t\t\targ_state.config.resources.by_name[resource_name] = resource_obj\r\n\t\t\t\t\t\t\t\t\targ_state.config.resources.by_package[package_name][resource_name] = resource_name\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// REGISTER RESOURCE BY FILE\r\n\t\t\t\t\t\t\tlogs.info(context, 'storing resources by file for package ' + package_name)\r\n\t\t\t\t\t\t\tObject.keys(package_obj.resources_by_file).forEach(\r\n\t\t\t\t\t\t\t\t(file_name) => {\r\n\t\t\t\t\t\t\t\t\t// logs.info(context, 'loading config for package ' + package_name + ' for register resource by file:' + file_name)\r\n\t\t\t\t\t\t\t\t\targ_state.config.resources.by_file[file_name] = {}\r\n\t\t\t\t\t\t\t\t\tObject.keys(package_obj.resources_by_file[file_name]).forEach(\r\n\t\t\t\t\t\t\t\t\t\t(resource_name) => {\r\n\t\t\t\t\t\t\t\t\t\t\t// logs.info(context, 'loading config for package ' + package_name + ' for register resource by file:' + file_name + ' for ' + resource_name)\r\n\t\t\t\t\t\t\t\t\t\t\targ_state.config.resources.by_file[file_name][resource_name] = resource_name\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// REGISTER RESOURCE BY TYPE\r\n\t\t\t\t\t\t\tlogs.info(context, 'storing resources by type for package ' + package_name)\r\n\t\t\t\t\t\t\tObject.keys(package_obj.resources_by_type).forEach(\r\n\t\t\t\t\t\t\t\t(type_name) => {\r\n\t\t\t\t\t\t\t\t\t// logs.info(context, 'loading config for package ' + package_name + ' for register resource by type:' + type_name)\r\n\t\t\t\t\t\t\t\t\tObject.keys(package_obj.resources_by_type[type_name]).forEach(\r\n\t\t\t\t\t\t\t\t\t\t(resource_name) => {\r\n\t\t\t\t\t\t\t\t\t\t\t// logs.debug(context, 'loading config for package ' + package_name + ' for register resource by type for ' + resource_name)\r\n\t\t\t\t\t\t\t\t\t\t\targ_state.config.resources.by_type[type_name][resource_name] = resource_name\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tlogs.info(context, 'storing resources end for package ' + package_name)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\t\r\n\t\t// PROCESS ERROR\r\n\t\tlogs.info(context, 'processing errors')\r\n\t\tconst add_sub_error = (arg_type, arg_error) => {\r\n\t\t\tif (! arg_state.config.error)\r\n\t\t\t{\r\n\t\t\t\targ_state.config.error = { context:context, exception:'has sub errors', error_msg:'see sub errors' }\r\n\t\t\t}\r\n\t\t\tif (! arg_state.config.suberrors)\r\n\t\t\t{\r\n\t\t\t\targ_state.config.error.suberrors = []\r\n\t\t\t}\r\n\t\t\tconst msg = arg_error.error_msg ? arg_error.error_msg : arg_error.exception\r\n\t\t\targ_state.config.error.suberrors.push( {type:arg_type, context:arg_error.context, error_msg:msg} )\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (arg_state.config.nodes.error)\r\n\t\t{\r\n\t\t\tadd_sub_error('nodes', arg_state.config.nodes.error)\r\n\t\t}\r\n\t\tif (arg_state.config.tenants.error)\r\n\t\t{\r\n\t\t\tadd_sub_error('tenants', arg_state.config.tenants.error)\r\n\t\t}\r\n\t\tif (arg_state.config.plugins.error)\r\n\t\t{\r\n\t\t\tadd_sub_error('plugins', arg_state.config.plugins.error)\r\n\t\t}\r\n\t\tif (arg_state.config.deployments.error)\r\n\t\t{\r\n\t\t\tadd_sub_error('deployments', arg_state.config.deployments.error)\r\n\t\t}\r\n\t\tif (arg_state.config.security.error)\r\n\t\t{\r\n\t\t\tadd_sub_error('security', arg_state.config.security.error)\r\n\t\t}\r\n\t}\r\n\tcatch(e)\r\n\t{\r\n\t\targ_state.config = { error: { context:context, exception:e, error_msg:e.toString() } }\r\n\t\t// console.error(e, context)\r\n\t}\r\n\t\r\n    // console.log( Object.keys(arg_state.config.resources.by_name), 'resources' )\r\n\t\r\n\tif (should_toggle_trace)\r\n\t{\r\n\t\tlogs.toggle_trace()\r\n\t}\r\n\t\r\n\tlogs.info(context, 'loading config is finished, returns state')\r\n\treturn arg_state\r\n}\r\n\r\nexport default load_config\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/registry/loaders/load_config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1703,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/registry/loaders/load_config.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_config.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1704,
    "kind": "function",
    "name": "load_config",
    "memberof": "js/topology/registry/loaders/load_config.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/topology/registry/loaders/load_config.js~load_config",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_config.js",
    "importStyle": "load_config",
    "description": "Load the 'config' key of the final state\nPure function: (Plain Object) => (new Plain Object)",
    "lineNumber": 25,
    "params": [
      {
        "name": "arg_state",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_initial_config",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_base_dir",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_world_dir",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_trace",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1705,
    "kind": "file",
    "name": "js/topology/registry/loaders/load_deployments.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../../../utils/types'\r\n\r\n\r\nconst context = 'common/topology/registry/loaders/load_deployments'\r\n\r\n\r\n\r\nlet error_msg_bad_config                    = context + ':deployments should be an object'\r\nlet error_msg_bad_deployed_tenant           = context + ':deployments.tenantA should be an object'\r\nlet error_msg_bad_deployed_app              = context + ':deployments.tenantA.appA should be an object'\r\nlet error_msg_bad_deployed_app_services     = context + ':deployments.tenantA.appA.services should be an object'\r\nlet error_msg_bad_deployed_app_assets       = context + ':deployments.tenantA.appA.assets should be an object'\r\nlet error_msg_bad_deployed_svc              = context + ':deployments.tenantA.appA.services.svc1 should be an object'\r\nlet error_msg_bad_deployed_svc_servers      = context + ':deployments.tenantA.appA.services.svc1.servers should be an array'\r\nlet error_msg_bad_deployed_svc_servers_item = context + ':deployments.tenantA.appA.services.svc1.servers.* should be a string'\r\n\r\n\r\n/*\r\nExample:\r\n{\r\n\t\"deployments\":{\r\n\t\t\"tenantA\":{\r\n\t\t\t\"assets\":{\r\n\t\t\t\t\"services\":{\r\n\t\t\t\t\t\"html_assets_1\": { \"filters\":[\"*:8080\"] }\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t\"devtools\":{\r\n\t\t\t\t\"services\":{\r\n\t\t\t\t\t\"devtools_store\": { \"servers\":[\"NodeALocal8080\", \"NodeB\"] },\r\n\t\t\t\t\t\"devtools_panel\": { \"servers\":[\"ClusterC\"] },\r\n\t\t\t\t\t\"topology\": { \"servers\":[\"GroupAA\"] },\r\n\t\t\t\t\t\"logs\": { \"servers\":[\"NodeALocal8080\"] },\r\n\t\t\t\t\t\"messages\": { \"servers\":[\"NodeALocal8080\"] }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n*/\r\nfunction load_deployments(logs, arg_deploy_config, arg_base_dir)\r\n{\r\n\tlogs.info(context, 'loading world.deployments from ' + arg_base_dir)\r\n\t\r\n\ttry{\r\n\t\t// CHECK MODULES\r\n\t\tassert(T.isObject(arg_deploy_config), error_msg_bad_config)\r\n\t\t\r\n\t\t// LOOP ON TENANTS\r\n\t\tObject.keys(arg_deploy_config).forEach(\r\n\t\t\tfunction(tenant_name)\r\n\t\t\t{\r\n\t\t\t\t// LOOP ON TENANT APPLICATIONS\r\n\t\t\t\tconst deployed_tenant_apps = arg_deploy_config[tenant_name]\r\n\t\t\t\tassert(T.isObject(deployed_tenant_apps), error_msg_bad_deployed_tenant)\r\n\r\n\t\t\t\tObject.keys(deployed_tenant_apps).forEach(\r\n\t\t\t\t\tfunction(app_name)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst deployed_app_obj = deployed_tenant_apps[app_name]\r\n\t\t\t\t\t\tassert(T.isObject(deployed_app_obj), error_msg_bad_deployed_app)\r\n\r\n\t\t\t\t\t\tconst services = deployed_app_obj.services\r\n\t\t\t\t\t\tassert(T.isObject(services), error_msg_bad_deployed_app_services)\r\n\r\n\t\t\t\t\t\tconst assets = deployed_app_obj.assets\r\n\t\t\t\t\t\tassert(T.isObject(assets), error_msg_bad_deployed_app_assets)\r\n\r\n\t\t\t\t\t\tObject.keys(services).forEach(\r\n\t\t\t\t\t\t\tfunction(svc_name)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tlet deployed_svc_obj = services[svc_name]\r\n\t\t\t\t\t\t\t\tassert(T.isObject(deployed_svc_obj), error_msg_bad_deployed_svc)\r\n\r\n\t\t\t\t\t\t\t\tload_service(logs, app_name, svc_name, deployed_svc_obj, arg_base_dir)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\tcatch(e)\r\n\t{\r\n\t\targ_deploy_config = { error: { context:context, exception:e } }\r\n\t}\r\n\t\r\n\treturn arg_deploy_config\r\n}\r\n\r\n\r\nfunction load_service(logs, arg_app_name, arg_svc_name, arg_deployed_svc_obj, arg_base_dir)\r\n{\r\n\tlogs.info(context, 'loading world.deployment.' + arg_app_name + '.' + arg_svc_name)\r\n\t\r\n\t// CHECK MODULES\r\n\tassert(T.isObject(arg_deployed_svc_obj), error_msg_bad_deployed_svc)\r\n\t\r\n\t// LOOP ON SERVERS\r\n\tconst servers = arg_deployed_svc_obj.servers\r\n\tassert(T.isArray(servers), error_msg_bad_deployed_svc_servers)\r\n\r\n\tservers.forEach(\r\n\t\tfunction(server_item, server_index)\r\n\t\t{\r\n\t\t\tassert(T.isString(server_item), error_msg_bad_deployed_svc_servers_item)\r\n\r\n\t\t\tlogs.info(context, 'loading world.deployment.' + arg_app_name + '.' + arg_svc_name + ':' + server_index + ':' + server_item)\r\n\t\t}\r\n\t)\r\n}\r\n\r\n\r\nexport default load_deployments\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/registry/loaders/load_deployments.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1706,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/registry/loaders/load_deployments.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_deployments.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_deployments.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1707,
    "kind": "variable",
    "name": "error_msg_bad_config",
    "memberof": "js/topology/registry/loaders/load_deployments.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_deployments.js~error_msg_bad_config",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_deployments.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1708,
    "kind": "variable",
    "name": "error_msg_bad_deployed_tenant",
    "memberof": "js/topology/registry/loaders/load_deployments.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_deployments.js~error_msg_bad_deployed_tenant",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_deployments.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1709,
    "kind": "variable",
    "name": "error_msg_bad_deployed_app",
    "memberof": "js/topology/registry/loaders/load_deployments.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_deployments.js~error_msg_bad_deployed_app",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_deployments.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1710,
    "kind": "variable",
    "name": "error_msg_bad_deployed_app_services",
    "memberof": "js/topology/registry/loaders/load_deployments.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_deployments.js~error_msg_bad_deployed_app_services",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_deployments.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1711,
    "kind": "variable",
    "name": "error_msg_bad_deployed_app_assets",
    "memberof": "js/topology/registry/loaders/load_deployments.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_deployments.js~error_msg_bad_deployed_app_assets",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_deployments.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1712,
    "kind": "variable",
    "name": "error_msg_bad_deployed_svc",
    "memberof": "js/topology/registry/loaders/load_deployments.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_deployments.js~error_msg_bad_deployed_svc",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_deployments.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1713,
    "kind": "variable",
    "name": "error_msg_bad_deployed_svc_servers",
    "memberof": "js/topology/registry/loaders/load_deployments.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_deployments.js~error_msg_bad_deployed_svc_servers",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_deployments.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1714,
    "kind": "variable",
    "name": "error_msg_bad_deployed_svc_servers_item",
    "memberof": "js/topology/registry/loaders/load_deployments.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_deployments.js~error_msg_bad_deployed_svc_servers_item",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_deployments.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1715,
    "kind": "function",
    "name": "load_service",
    "memberof": "js/topology/registry/loaders/load_deployments.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/topology/registry/loaders/load_deployments.js~load_service",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_deployments.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "params": [
      {
        "name": "logs",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_app_name",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_svc_name",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_deployed_svc_obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_base_dir",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 1716,
    "kind": "function",
    "name": "load_deployments",
    "memberof": "js/topology/registry/loaders/load_deployments.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/topology/registry/loaders/load_deployments.js~load_deployments",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_deployments.js",
    "importStyle": "load_deployments",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "params": [
      {
        "name": "logs",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_deploy_config",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_base_dir",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1717,
    "kind": "file",
    "name": "js/topology/registry/loaders/load_nodes.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../../../utils/types'\r\n\r\n\r\nconst context = 'common/topology/registry/loaders/load_nodes'\r\n\r\n\r\n\r\nlet error_msg_bad_config = context + ':bad config'\r\n// let error_msg_bad_node = context + ':nodes.* should be an object'\r\nlet error_msg_bad_node_host = context + ':nodes.*.host should be a string'\r\n// let error_msg_bad_node_port = context + ':nodes.*.port should be an integer'\r\nlet error_msg_bad_node_is_master = context + ':nodes.*.is_master should be a boolean'\r\nlet error_msg_bad_node_servers = context + ':nodes.*.servers should be an object'\r\nlet error_msg_bad_node_servers_server = context + ':nodes.*.servers.* should be an object'\r\nlet error_msg_bad_node_servers_server_port = context + ':nodes.*.servers.*.port should be an integer'\r\nlet error_msg_bad_node_servers_server_type = context + ':nodes.*.servers.*.type should be a string'\r\nlet error_msg_bad_node_servers_server_protocole = context + ':nodes.*.servers.*.protocole should be a string'\r\n\r\n\r\n\r\nfunction load_nodes(logs, arg_nodes_config, arg_base_dir)\r\n{\r\n\tlogs.info(context, 'loading world.nodes from ' + arg_base_dir)\r\n\t\r\n\ttry{\r\n\t\t// CHECK MODULES\r\n\t\tassert(T.isObject(arg_nodes_config), error_msg_bad_config)\r\n\t\t\r\n\t\t// LOOP ON NODES\r\n\t\tlet has_error = false\r\n\t\tObject.keys(arg_nodes_config).forEach(\r\n\t\t\tfunction(node_name)\r\n\t\t\t{\r\n\t\t\t\t// SKIP PROCESSING ON ERROR\r\n\t\t\t\tif (has_error)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet node_obj = arg_nodes_config[node_name]\r\n\t\t\t\t\r\n\t\t\t\t// CHECK ATTRIBUTES\r\n\t\t\t\tassert(T.isString(node_obj.host), error_msg_bad_node_host)\r\n\t\t\t\t// assert(T.isNumber(node_obj.port), error_msg_bad_node_port)\r\n\t\t\t\tassert(T.isBoolean(node_obj.is_master), error_msg_bad_node_is_master)\r\n\t\t\t\tassert(T.isObject(node_obj.servers), error_msg_bad_node_servers)\r\n\t\t\t\t\r\n\t\t\t\tload_node_servers(logs, node_obj.servers, node_name, node_obj.host, arg_base_dir)\r\n\t\t\t\t// console.log(context + ':load_nodes:servers=[%s]', JSON.stringify(node_obj.servers))\r\n\r\n\t\t\t\tif (node_obj.servers.error)\r\n\t\t\t\t{\r\n\t\t\t\t\targ_nodes_config = { error: node_obj.servers.error }\r\n\t\t\t\t\thas_error = true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\tcatch(e)\r\n\t{\r\n\t\targ_nodes_config = { error: { context:context, exception:e } }\r\n\t}\r\n\t\r\n\treturn arg_nodes_config\r\n}\r\n\r\n\r\nfunction load_node_servers(logs, arg_servers_config, arg_node_name, arg_host/*, arg_base_dir*/)\r\n{\r\n\tlogs.info(context, 'loading config.nodes.' + arg_node_name + '.servers')\r\n\t\r\n\tlet current_server = undefined\r\n\ttry{\r\n\t\t// CHECK MODULES\r\n\t\tassert(T.isObject(arg_servers_config), error_msg_bad_config)\r\n\t\t\r\n\t\t// LOOP ON PLUGINS\r\n\t\tObject.keys(arg_servers_config).forEach(\r\n\t\t\tfunction(server_name)\r\n\t\t\t{\r\n\t\t\t\tcurrent_server = server_name\r\n\r\n\t\t\t\tlogs.info(context, 'loading config.nodes.' + arg_node_name + '.servers.' + server_name)\r\n\r\n\t\t\t\tlet server_obj = arg_servers_config[server_name]\r\n\t\t\t\t\r\n\t\t\t\t// CHECK ATTRIBUTES\r\n\t\t\t\tassert(T.isObject(server_obj), error_msg_bad_node_servers_server)\r\n\t\t\t\tassert(T.isNotEmptyStringOrNumber(server_obj.port), error_msg_bad_node_servers_server_port)\r\n\t\t\t\tassert(T.isString(server_obj.type), error_msg_bad_node_servers_server_type)\r\n\t\t\t\tassert(T.isString(server_obj.protocole), error_msg_bad_node_servers_server_protocole)\r\n\t\t\t\t\r\n\t\t\t\t// TODO: CHECK OTHER SERVER ATTRIBUTES\r\n\t\t\t\t\r\n\t\t\t\tserver_obj.node = arg_node_name\r\n\t\t\t\tserver_obj.host = arg_host\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\tcatch(e)\r\n\t{\r\n\t\targ_servers_config = { error: { context:context + ':load servers for node [' + arg_node_name + '] server [' + current_server + ']', exception:e } }\r\n\t}\r\n\t\r\n\t// console.log(context + ':load_node_servers:servers=[%s]', JSON.stringify(arg_servers_config))\r\n\treturn arg_servers_config\r\n}\r\n\r\n\r\nexport default load_nodes\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/registry/loaders/load_nodes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1718,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/registry/loaders/load_nodes.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_nodes.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_nodes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1719,
    "kind": "variable",
    "name": "error_msg_bad_config",
    "memberof": "js/topology/registry/loaders/load_nodes.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_nodes.js~error_msg_bad_config",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_nodes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1720,
    "kind": "variable",
    "name": "error_msg_bad_node_host",
    "memberof": "js/topology/registry/loaders/load_nodes.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_nodes.js~error_msg_bad_node_host",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_nodes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1721,
    "kind": "variable",
    "name": "error_msg_bad_node_is_master",
    "memberof": "js/topology/registry/loaders/load_nodes.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_nodes.js~error_msg_bad_node_is_master",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_nodes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1722,
    "kind": "variable",
    "name": "error_msg_bad_node_servers",
    "memberof": "js/topology/registry/loaders/load_nodes.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_nodes.js~error_msg_bad_node_servers",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_nodes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1723,
    "kind": "variable",
    "name": "error_msg_bad_node_servers_server",
    "memberof": "js/topology/registry/loaders/load_nodes.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_nodes.js~error_msg_bad_node_servers_server",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_nodes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1724,
    "kind": "variable",
    "name": "error_msg_bad_node_servers_server_port",
    "memberof": "js/topology/registry/loaders/load_nodes.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_nodes.js~error_msg_bad_node_servers_server_port",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_nodes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1725,
    "kind": "variable",
    "name": "error_msg_bad_node_servers_server_type",
    "memberof": "js/topology/registry/loaders/load_nodes.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_nodes.js~error_msg_bad_node_servers_server_type",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_nodes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1726,
    "kind": "variable",
    "name": "error_msg_bad_node_servers_server_protocole",
    "memberof": "js/topology/registry/loaders/load_nodes.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_nodes.js~error_msg_bad_node_servers_server_protocole",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_nodes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1727,
    "kind": "function",
    "name": "load_node_servers",
    "memberof": "js/topology/registry/loaders/load_nodes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/topology/registry/loaders/load_nodes.js~load_node_servers",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_nodes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "params": [
      {
        "name": "logs",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_servers_config",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_node_name",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_host",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1728,
    "kind": "function",
    "name": "load_nodes",
    "memberof": "js/topology/registry/loaders/load_nodes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/topology/registry/loaders/load_nodes.js~load_nodes",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_nodes.js",
    "importStyle": "load_nodes",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [
      {
        "name": "logs",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_nodes_config",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_base_dir",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1729,
    "kind": "file",
    "name": "js/topology/registry/loaders/load_packages.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport path from 'path'\r\nimport _ from 'lodash'\r\n\r\n// COMMON IMPORTS\r\nimport T         from '../../../utils/types'\r\nimport attr_iter from '../../../utils/attributes_iterator'\r\nimport parser    from '../../../utils/parser/parser'\r\n\r\n\r\nconst context = 'common/topology/registry/loaders/load_packages'\r\n\r\n\r\n\r\nlet error_msg_bad_config = context + ':bad config'\r\n\r\nlet error_msg_bad_base_dir = context + ':package.base_dir should be a string'\r\nlet error_msg_bad_resources = context + ':package.resources should be an array'\r\nlet error_msg_bad_templates = context + ':package.templates should be an array'\r\nlet error_msg_bad_includes = context + ':package.includes should be an array'\r\n\r\nlet error_msg_bad_service = context + ':package.services.* should be an object'\r\nlet error_msg_bad_resource = context + ':package.resources.* should be a string'\r\nlet error_msg_bad_template = context + ':package.templates.* should be a string'\r\nlet error_msg_bad_include = context + ':package.includes.* should be a string'\r\n\r\nlet error_msg_bad_package_config = context + ':bad package config'\r\nlet error_msg_bad_resource_config = context + ':bad resource config'\r\n\r\n\r\n\r\nfunction load_packages(logs, arg_packages_config, arg_base_dir)\r\n{\r\n\tlogs.info(context, 'loading world...packages')\r\n\t\r\n\ttry{\r\n\t\t// CHECK PACKAGES\r\n\t\tassert(T.isObject(arg_packages_config), error_msg_bad_config)\r\n\t\t\r\n\t\t// LOOP ON PACKAGES\r\n\t\tlet files = {}\r\n\t\tconst load_one_package_fn = (package_name, package_obj, package_dir)=>{\r\n\t\t\t// BAD FORMAT\r\n\t\t\tif ( ! T.isObject(package_obj) )\r\n\t\t\t{\r\n\t\t\t\tthrow 'error in packages.' + package_name + ':bad format, not a file name nor an object'\r\n\t\t\t}\r\n\r\n\t\t\targ_packages_config[package_name] = load_package(logs, package_name, package_obj, package_dir, files)\r\n\t\t\t// console.log(package_obj, 'package_obj')\r\n\r\n\t\t\t// PROCESS ERRORS\r\n\t\t\tif (package_obj.commands && package_obj.commands.error)\r\n\t\t\t{\r\n\t\t\t\tthrow 'error in packages.' + package_name + '.commands:' + package_obj.commands.error\r\n\t\t\t}\r\n\t\t\tif (package_obj.services && package_obj.services.error)\r\n\t\t\t{\r\n\t\t\t\tthrow 'error in packages.' + package_name + '.services:' + package_obj.services.error \r\n\t\t\t}\r\n\t\t\tif (package_obj.datasources && package_obj.datasources.error)\r\n\t\t\t{\r\n\t\t\t\tthrow 'error in packages.' + package_name + '.datasources:' + package_obj.datasources.error \r\n\t\t\t}\r\n\t\t\tif (package_obj.models && package_obj.models.error)\r\n\t\t\t{\r\n\t\t\t\tthrow 'error in packages.' + package_name + '.models:' + package_obj.models.error \r\n\t\t\t}\r\n\t\t\tif (package_obj.views && package_obj.views.error)\r\n\t\t\t{\r\n\t\t\t\tthrow 'error in packages.' + package_name + '.views:' + package_obj.views.error\r\n\t\t\t}\r\n\t\t\tif (package_obj.menus && package_obj.menus.error)\r\n\t\t\t{\r\n\t\t\t\tthrow 'error in packages.' + package_name + '.menus:' + package_obj.menus.error\r\n\t\t\t}\r\n\t\t\tif (package_obj.menubars && package_obj.menubars.error)\r\n\t\t\t{\r\n\t\t\t\tthrow 'error in packages.' + package_name + '.menubars:' + package_obj.menubars.error\r\n\t\t\t}\r\n\t\t}\r\n\t\tObject.keys(arg_packages_config).forEach(\r\n\t\t\tfunction(arg_package_name)\r\n\t\t\t{\r\n\t\t\t\tif (arg_package_name == 'files')\r\n\t\t\t\t{\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tlogs.info(context, 'loading world...packages.' + arg_package_name)\r\n\t\t\t\t\r\n\t\t\t\tlet package_obj = arg_packages_config[arg_package_name]\r\n\r\n\t\t\t\t// LOAD A FILE NAME\r\n\t\t\t\tif ( T.isString(package_obj) )\r\n\t\t\t\t{\r\n\t\t\t\t\tconst pkg_name = package_obj\r\n\t\t\t\t\tconst file_path_name = path.join(arg_base_dir, pkg_name)\r\n\t\t\t\t\t\r\n\t\t\t\t\tpackage_obj = require(file_path_name).packages\r\n\r\n\t\t\t\t\tconst pkg_dir = path.dirname(file_path_name)\r\n\r\n\t\t\t\t\t// DEBUG\r\n\t\t\t\t\tlogs.info(context + ':file=[%s] package_obj:', file_path_name, package_obj)\r\n\r\n\t\t\t\t\tObject.keys(package_obj).forEach(\r\n\t\t\t\t\t\tfunction(arg_sub_name)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tconst sub_pkg = package_obj[arg_sub_name]\r\n\t\t\t\t\t\t\tload_one_package_fn(arg_sub_name, sub_pkg, pkg_dir)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// BAD FORMAT\r\n\t\t\t\tif ( ! T.isObject(package_obj) )\r\n\t\t\t\t{\r\n\t\t\t\t\tthrow 'error in packages.' + arg_package_name + ':bad format, not a file name nor an object'\r\n\t\t\t\t}\r\n\r\n\t\t\t\tload_one_package_fn(arg_package_name, package_obj, arg_base_dir)\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\t// CACHE FILES CONTENT\r\n\t\t// arg_packages_config.files = files\r\n\t}\r\n\tcatch(e)\r\n\t{\r\n\t\targ_packages_config = { error: { context:context, exception:e, error_msg:e.toString() } }\r\n\t\t// console.error(context, arg_packages_config)\r\n\t}\r\n\t\r\n\treturn arg_packages_config\r\n}\r\n\r\n\r\nfunction load_package(logs, arg_package_name, arg_package_config, arg_base_dir, files)\r\n{\r\n\tlogs.info(context, 'loading world...packages.' + arg_package_name + ':BEGIN')\r\n\t\r\n\t// CHECK PACKAGES\r\n\tassert(T.isObject(arg_package_config), error_msg_bad_config)\r\n\targ_package_config.base_dir  = arg_package_config.base_dir  ? arg_package_config.base_dir  : ''\r\n\targ_package_config.commands  = arg_package_config.commands  ? arg_package_config.commands  : {}\r\n\targ_package_config.services  = arg_package_config.services  ? arg_package_config.services  : {}\r\n\targ_package_config.resources = arg_package_config.resources ? arg_package_config.resources : {}\r\n\targ_package_config.templates = arg_package_config.templates ? arg_package_config.templates : {}\r\n\targ_package_config.includes  = arg_package_config.includes  ? arg_package_config.includes  : {}\r\n\t\r\n\t// LOAD COMMANDS\r\n\tif (T.isString(arg_package_config.commands))\r\n\t{\r\n\t\tlogs.info(context, 'loading world...packages.' + arg_package_name + '.commands is a string')\r\n\t\t\r\n\t\tconst absolute_path_name = path.join(arg_base_dir, arg_package_config.base_dir, arg_package_config.commands)\r\n\t\targ_package_config.commands = parser.read(absolute_path_name, 'utf8').commands\r\n\r\n\t\t// const file_path_name = path.join(arg_base_dir, arg_package_config.commands)\r\n\t\t// arg_package_config.commands = require(file_path_name).commands\r\n\t}\r\n\t// console.log( Object.keys(arg_package_config.commands), 'arg_package_config.commands for ' + arg_package_name)\r\n\r\n\t// LOAD SERVICES\r\n\tif (T.isString(arg_package_config.services))\r\n\t{\r\n\t\tlogs.info(context, 'loading world...packages.' + arg_package_name + '.services is a string')\r\n\t\t\r\n\t\tconst absolute_path_name = path.join(arg_base_dir, arg_package_config.base_dir, arg_package_config.services)\r\n\t\targ_package_config.services = parser.read(absolute_path_name, 'utf8').services\r\n\r\n\t\t// const file_path_name = path.join(arg_base_dir, arg_package_config.services)\r\n\t\t// arg_package_config.services = require(file_path_name).services\r\n\t}\r\n\tif ( T.isObject(arg_package_config.services) )\r\n\t{\r\n\t\tlogs.info(context, 'loading world...packages.' + arg_package_name + '.services is now an object')\r\n\t\t// load_services(arg_package_config.services)\r\n\t}\r\n\t// console.log( Object.keys(arg_package_config.services), 'arg_package_config.services for ' + arg_package_name)\r\n\r\n\t// CHECK ATTRIBUTES\r\n\tassert(T.isString(arg_package_config.base_dir), error_msg_bad_base_dir  + ' for package ' + arg_package_name)\r\n\tassert(T.isArray(arg_package_config.resources), error_msg_bad_resources + ' for package ' + arg_package_name)\r\n\tassert(T.isArray(arg_package_config.templates), error_msg_bad_templates + ' for package ' + arg_package_name)\r\n\tassert(T.isArray(arg_package_config.includes),  error_msg_bad_includes  + ' for package ' + arg_package_name)\r\n\t\r\n\t// CHECK ATTRIBUTES ITEMS\r\n\targ_package_config.resources.forEach( (resource) => { assert(T.isString(resource), error_msg_bad_resource) } )\r\n\targ_package_config.templates.forEach( (template) => { assert(T.isString(template), error_msg_bad_template) } )\r\n\targ_package_config.includes.forEach(  (include) => { assert(T.isString(include), error_msg_bad_include) } )\r\n\t\r\n\t// INIT RESOURCES REPOSITORY\r\n\targ_package_config.resources_by_name = {}\r\n\targ_package_config.resources_by_type = {}\r\n\targ_package_config.resources_by_file = {}\r\n\targ_package_config.resources_by_type.templates = {}\r\n\targ_package_config.resources_by_type.views = {}\r\n\targ_package_config.resources_by_type.models = {}\r\n\targ_package_config.resources_by_type.menubars = {}\r\n\targ_package_config.resources_by_type.menus = {}\r\n\targ_package_config.resources_by_type.datasources = {}\r\n\targ_package_config.resources_by_type.services = {}\r\n\targ_package_config.resources_by_type.commands = {}\r\n\targ_package_config.views = {}\r\n\targ_package_config.models = {}\r\n\targ_package_config.menubars = {}\r\n\targ_package_config.menus = {}\r\n\targ_package_config.datasources = {}\r\n\r\n\t// REGISTER SERVICES AS RESOURCES\r\n\tObject.keys(arg_package_config.services).forEach(\r\n\t\t(svc_name) => {\r\n\t\t\tconst svc = arg_package_config.services[svc_name]\r\n\t\t\tassert(T.isObject(svc), error_msg_bad_service)\r\n\t\t\tlogs.info(context, 'loading world...packages.' + arg_package_name + '.services.' + svc_name + ' is registered')\r\n\t\t\t\r\n\t\t\t// REGISTER BASE DIRECTORIES\r\n\t\t\tsvc.app_base_dir = arg_base_dir\r\n\t\t\tsvc.pkg_base_dir = arg_package_config.base_dir\r\n\r\n\t\t\targ_package_config.resources_by_name[svc_name] = svc\r\n\t\t\targ_package_config.resources_by_type['services'][svc_name] = svc\r\n\t\t}\r\n\t)\r\n\r\n\t// REGISTER COMMANDS AS RESOURCES\r\n\tObject.keys(arg_package_config.commands).forEach(\r\n\t\t(cmd_name) => {\r\n\t\t\tconst cmd = arg_package_config.commands[cmd_name]\r\n\t\t\tassert(T.isObject(cmd), error_msg_bad_service)\r\n\t\t\tlogs.info(context, 'loading world...packages.' + arg_package_name + '.commands.' + cmd_name + ' is registered')\r\n\r\n\t\t\targ_package_config.resources_by_name[cmd_name] = cmd\r\n\t\t\targ_package_config.resources_by_type['commands'][cmd_name] = cmd\r\n\t\t}\r\n\t)\r\n\t\r\n\t// LOAD TEMPLATES\r\n\tconst templates = arg_package_config.templates\r\n\ttemplates.forEach(\r\n\t\t(template_file) => {\r\n\t\t\tlogs.info(context, 'loading world...packages.' + arg_package_name + ' arg_base_dir:' + arg_base_dir)\r\n\t\t\tlogs.info(context, 'loading world...packages.' + arg_package_name + ' templates file:' + template_file)\r\n\t\t\tlogs.info(context, 'loading world...packages.' + arg_package_name + ' arg_package_config.base_dir:' + arg_package_config.base_dir)\r\n\t\t\t\r\n\t\t\tif ( ! T.isNotEmptyString(template_file) )\r\n\t\t\t{\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet relative_path_name = T.isNotEmptyString(arg_package_config.base_dir) ? path.join(arg_package_config.base_dir, template_file) : template_file\r\n\t\t\tlogs.info(context, 'loading world...packages.' + arg_package_name + ' relative_path_name:' + relative_path_name)\r\n\r\n\t\t\tlet absolute_path_name = path.join(arg_base_dir , relative_path_name)\r\n\t\t\t\r\n\t\t\tlet config = parser.read(absolute_path_name, 'utf8')\r\n\t\t\t// console.log(config, 'config')\r\n\t\t\t\r\n\t\t\t// GET TEMPLATES\r\n\t\t\tif (! config.templates )\r\n\t\t\t{\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tconfig = config.templates\r\n\r\n\t\t\tfiles[relative_path_name] = config\r\n\t\t\targ_package_config.resources_by_file[relative_path_name] = {}\r\n\t\t\t\r\n\t\t\t// CHECK package\r\n\t\t\tassert(T.isObject(config), error_msg_bad_package_config + ' for file ' + template_file)\r\n\t\t\t\r\n\t\t\tconst types = ['views', 'models', 'menubars', 'menus', 'datasources']\r\n\t\t\ttypes.forEach(\r\n\t\t\t\t(type_name)=>{\r\n\t\t\t\t\tlogs.info(context, 'loading begin world...packages.' + arg_package_name + ' templates file:' + template_file + ' of type:' + type_name)\r\n\t\t\t\t\t\r\n\t\t\t\t\tif ( config[type_name] && T.isObject(config[type_name]) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tload_package_template(logs, arg_package_name, arg_package_config, config[type_name], type_name, relative_path_name)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlogs.info(context, 'loading end world...packages.' + arg_package_name + ' templates file:' + template_file + ' of type:' + type_name)\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t)\r\n\t\r\n\t// LOAD RESOURCES\r\n\tconst resources = arg_package_config.resources\r\n\tresources.forEach(\r\n\t\t(resource_file) => {\r\n\t\t\tlogs.info(context, 'loading world...packages.' + arg_package_name + ' resources file:' + resource_file)\r\n\t\t\t\r\n\t\t\tlet relative_path_name = path.join(arg_package_config.base_dir, resource_file)\r\n\t\t\tlet absolute_path_name = path.join(arg_base_dir , relative_path_name)\r\n\t\t\t\r\n\t\t\tlet config = parser.read(absolute_path_name, 'utf8')\r\n\t\t\t// console.log(config, 'config')\r\n\t\t\t\r\n\t\t\tfiles[relative_path_name] = config\r\n\t\t\targ_package_config.resources_by_file[relative_path_name] = {}\r\n\t\t\t\r\n\t\t\t// CHECK package\r\n\t\t\tassert(T.isObject(config), error_msg_bad_package_config + ' for file ' + resource_file)\r\n\t\t\t\r\n\t\t\tconst types = ['views', 'models', 'menubars', 'menus', 'datasources']\r\n\t\t\ttypes.forEach(\r\n\t\t\t\t(type_name)=>{\r\n\t\t\t\t\tlogs.info(context, 'loading world...packages.' + arg_package_name + ' resources file:' + resource_file + ' of type:' + type_name)\r\n\t\t\t\t\t\r\n\t\t\t\t\tif ( config[type_name] && T.isObject(config[type_name]) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tload_package_children(logs, arg_package_name, arg_package_config, config[type_name], type_name, relative_path_name)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t)\r\n\t\r\n\tlogs.info(context, 'loading world...packages.' + arg_package_name + ':END')\r\n\treturn arg_package_config\r\n}\r\n\r\n\r\nfunction load_package_children(logs, arg_package_name, arg_package_config, arg_children, type_name, relative_path_name)\r\n{\r\n\tObject.keys(arg_children).forEach(\r\n\t\t(res_name) => {\r\n\t\t\tlogs.debug(context, 'loading world...packages.' + arg_package_name + ' resource children for ' + res_name)\r\n\t\t\t\r\n\t\t\tlet res_obj = arg_children[res_name]\r\n\t\t\t\r\n\t\t\t// DEBUG\r\n\t\t\t// console.log('load_package_children:res_obj=', JSON.stringify(res_obj) )\r\n\r\n\t\t\t// TEMPLATE\r\n\t\t\tif ( T.isNotEmptyString(res_obj.template) )\r\n\t\t\t{\r\n\t\t\t\t// console.log('load_package_children:res_obj=', JSON.stringify(res_obj) )\r\n\r\n\t\t\t\tconst template_name = res_obj.template\r\n\t\t\t\tconst template_resource = arg_package_config.templates[template_name]\r\n\t\t\t\tassert(T.isObject(template_resource), error_msg_bad_resource_config + ' for ' + res_name + ' with template ' + template_name)\r\n\r\n\t\t\t\tconst template_clone = _.clone(template_resource)\r\n\t\t\t\tconst res_clone = _.clone(res_obj)\r\n\r\n\t\t\t\tres_obj = _.merge(template_clone, res_clone)\r\n\t\t\t\tconst xform_fn = (v)=>{\r\n\t\t\t\t\tif ( T.isNotEmptyString(v) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn v.replace('{{devapt-template-id}}', res_name)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn v\r\n\t\t\t\t}\r\n\t\t\t\tres_obj = attr_iter(res_obj, xform_fn)\r\n\t\t\t\targ_children[res_name] = res_obj\r\n\r\n\t\t\t\t// DEBUG\r\n\t\t\t\t// console.log(context + ':load_package_children:' + arg_package_name + ' resource [%s] of collection [%s] from template [%s]:', res_name, type_name, template_name, res_obj)\r\n\t\t\t\t// if (res_obj && res_obj.state && res_obj.state.space)\r\n\t\t\t\t// {\r\n\t\t\t\t// \tconsole.log(context + ':load_package_children:' + arg_package_name + ' resource [%s] of collection [%s] from template [%s]', res_name, type_name, template_name)\r\n\t\t\t\t\t\r\n\t\t\t\t// \tconsole.log(context + ':load_package_children:' + arg_package_name + ':source=')\r\n\t\t\t\t// \tconsole.log(res_clone.state.space)\r\n\t\t\t\t\t\r\n\t\t\t\t// \tconsole.log(context + ':load_package_children:' + arg_package_name + ':template=')\r\n\t\t\t\t// \tconsole.log(template_clone.state.space)\r\n\t\t\t\t\t\r\n\t\t\t\t// \tconsole.log(context + ':load_package_children:' + arg_package_name + ':merge=')\r\n\t\t\t\t// \tconsole.log(res_obj.state.space)\r\n\t\t\t\t// }\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// GET RESOURCE TYPE\r\n\t\t\tif (type_name !== 'menus' && type_name !== 'models')\r\n\t\t\t{\r\n\t\t\t\tres_obj.class_name = res_obj.class_name ? res_obj.class_name : res_obj.type\r\n\t\t\t\tassert(T.isString(res_obj.class_name), error_msg_bad_resource_config + ' for resource ' + res_name)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tres_obj.collection = type_name\r\n\t\t\tres_obj.name = res_name\r\n\t\t\t\r\n\t\t\targ_package_config.resources_by_name[res_name] = res_obj\r\n\t\t\targ_package_config.resources_by_type[type_name][res_name] = res_obj\r\n\t\t\targ_package_config.resources_by_file[relative_path_name][res_name] = res_obj\r\n\t\t\targ_package_config[type_name][res_name] = res_obj\r\n\r\n\t\t\tif ( T.isObject(res_obj.children) )\r\n\t\t\t{\r\n\t\t\t\tload_package_children(logs, arg_package_name, arg_package_config, res_obj.children, type_name, relative_path_name)\r\n\t\t\t}\r\n\t\t}\r\n\t)\r\n}\r\n\r\n\r\nfunction load_package_template(logs, arg_package_name, arg_package_config, arg_children, type_name, relative_path_name)\r\n{\r\n\tObject.keys(arg_children).forEach(\r\n\t\t(res_name) => {\r\n\t\t\tlogs.debug(context, 'loading begin world...packages.' + arg_package_name + ' resource template for ' + res_name)\r\n\t\t\t\r\n\t\t\tlet res_obj = arg_children[res_name]\r\n\t\t\t\r\n\t\t\t// DEBUG\r\n\t\t\t// console.log('load_package_template:res_obj=', JSON.stringify(res_obj.state) )\r\n\t\t\t\r\n\t\t\t// TEMPLATE\r\n\t\t\tif ( T.isNotEmptyString(res_obj.template) )\r\n\t\t\t{\r\n\t\t\t\tconst template_name = res_obj.template\r\n\t\t\t\tlet template_resource = arg_package_config.templates[template_name]\r\n\t\t\t\tif (! template_resource)\r\n\t\t\t\t{\r\n\t\t\t\t\ttemplate_resource = arg_children[template_name]\r\n\t\t\t\t}\r\n\t\t\t\tif (! template_resource)\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.error(context + ':load_package_template:package=[' + arg_package_name + '] resource=[' + res_name + ']: template not found for [' + template_name + ']')\r\n\t\t\t\t}\r\n\t\t\t\tassert(T.isObject(template_resource), error_msg_bad_resource_config + ' for ' + res_name + ' with template ' + template_name)\r\n\t\t\t\tconst template_clone = _.clone(template_resource)\r\n\t\t\t\tconst res_clone = _.clone(res_obj)\r\n\t\t\t\tres_obj = _.merge(template_clone, res_clone)\r\n\r\n\t\t\t\t// DEBUG\r\n\t\t\t\t// console.log(context + ':load_package_template world...packages.' + arg_package_name + ' resource [%s] of collection [%s] from template [%s] src[%o] template[%o] merg[%o]:', res_name, type_name, template_name, tmp, clone, res_obj)\r\n\t\t\t\t// if (res_obj && res_obj.state && res_obj.state.space)\r\n\t\t\t\t// {\r\n\t\t\t\t// \tconsole.log(context + ':load_package_template world...packages.' + arg_package_name + ' resource [%s] of collection [%s] from template [%s]', res_name, type_name, template_name)\r\n\t\t\t\t\t\r\n\t\t\t\t// \tconsole.log(context + ':load_package_template world...packages.' + arg_package_name + ':source=')\r\n\t\t\t\t// \tconsole.log(res_clone.state.space)\r\n\t\t\t\t\t\r\n\t\t\t\t// \tconsole.log(context + ':load_package_template world...packages.' + arg_package_name + ':template=')\r\n\t\t\t\t// \tconsole.log(template_clone.state.space)\r\n\t\t\t\t\t\r\n\t\t\t\t// \tconsole.log(context + ':load_package_template world...packages.' + arg_package_name + ':merge=')\r\n\t\t\t\t// \tconsole.log(res_obj.state.space)\r\n\t\t\t\t// }\r\n\t\t\t}\r\n\r\n\t\t\tif (type_name !== 'menus' && type_name !== 'models')\r\n\t\t\t{\r\n\t\t\t\tres_obj.class_name = res_obj.class_name ? res_obj.class_name : res_obj.type\r\n\t\t\t\tassert(T.isString(res_obj.class_name), error_msg_bad_resource_config + ' for resource ' + res_name)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tres_obj.collection = type_name\r\n\t\t\tres_obj.name = res_name\r\n\r\n\t\t\t// console.log('arg_package_config.templates', arg_package_config.templates)\r\n\t\t\t// console.log('arg_package_config.resources_by_type.templates', arg_package_config.resources_by_type.templates)\r\n\t\t\t// console.log('arg_package_config.resources_by_file[relative_path_name]', arg_package_config.resources_by_file[relative_path_name])\r\n\r\n\t\t\targ_package_config.resources_by_type.templates[res_name] = res_obj\r\n\t\t\targ_package_config.resources_by_file[relative_path_name][res_name] = res_obj\r\n\t\t\targ_package_config.templates[res_name] = res_obj\r\n\r\n\t\t\t// if ( T.isObject(res_obj.children) )\r\n\t\t\t// {\r\n\t\t\t// \tload_package_template(logs, arg_package_name, arg_package_config, res_obj.children, type_name, relative_path_name)\r\n\t\t\t// }\r\n\t\t\tlogs.debug(context, 'loading end world...packages.' + arg_package_name + ' resource template for ' + res_name)\r\n\t\t}\r\n\t)\r\n}\r\n\r\n\r\nexport default load_packages\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/registry/loaders/load_packages.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1730,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/registry/loaders/load_packages.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_packages.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_packages.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1731,
    "kind": "variable",
    "name": "error_msg_bad_config",
    "memberof": "js/topology/registry/loaders/load_packages.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_packages.js~error_msg_bad_config",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_packages.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1732,
    "kind": "variable",
    "name": "error_msg_bad_base_dir",
    "memberof": "js/topology/registry/loaders/load_packages.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_packages.js~error_msg_bad_base_dir",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_packages.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1733,
    "kind": "variable",
    "name": "error_msg_bad_resources",
    "memberof": "js/topology/registry/loaders/load_packages.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_packages.js~error_msg_bad_resources",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_packages.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1734,
    "kind": "variable",
    "name": "error_msg_bad_templates",
    "memberof": "js/topology/registry/loaders/load_packages.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_packages.js~error_msg_bad_templates",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_packages.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1735,
    "kind": "variable",
    "name": "error_msg_bad_includes",
    "memberof": "js/topology/registry/loaders/load_packages.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_packages.js~error_msg_bad_includes",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_packages.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1736,
    "kind": "variable",
    "name": "error_msg_bad_service",
    "memberof": "js/topology/registry/loaders/load_packages.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_packages.js~error_msg_bad_service",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_packages.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1737,
    "kind": "variable",
    "name": "error_msg_bad_resource",
    "memberof": "js/topology/registry/loaders/load_packages.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_packages.js~error_msg_bad_resource",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_packages.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1738,
    "kind": "variable",
    "name": "error_msg_bad_template",
    "memberof": "js/topology/registry/loaders/load_packages.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_packages.js~error_msg_bad_template",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_packages.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1739,
    "kind": "variable",
    "name": "error_msg_bad_include",
    "memberof": "js/topology/registry/loaders/load_packages.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_packages.js~error_msg_bad_include",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_packages.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1740,
    "kind": "variable",
    "name": "error_msg_bad_package_config",
    "memberof": "js/topology/registry/loaders/load_packages.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_packages.js~error_msg_bad_package_config",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_packages.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1741,
    "kind": "variable",
    "name": "error_msg_bad_resource_config",
    "memberof": "js/topology/registry/loaders/load_packages.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_packages.js~error_msg_bad_resource_config",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_packages.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1742,
    "kind": "function",
    "name": "load_package",
    "memberof": "js/topology/registry/loaders/load_packages.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/topology/registry/loaders/load_packages.js~load_package",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_packages.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 141,
    "undocument": true,
    "params": [
      {
        "name": "logs",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_package_name",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_package_config",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_base_dir",
        "types": [
          "*"
        ]
      },
      {
        "name": "files",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1743,
    "kind": "function",
    "name": "load_package_children",
    "memberof": "js/topology/registry/loaders/load_packages.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/topology/registry/loaders/load_packages.js~load_package_children",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_packages.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 329,
    "undocument": true,
    "params": [
      {
        "name": "logs",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_package_name",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_package_config",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_children",
        "types": [
          "*"
        ]
      },
      {
        "name": "type_name",
        "types": [
          "*"
        ]
      },
      {
        "name": "relative_path_name",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 1744,
    "kind": "function",
    "name": "load_package_template",
    "memberof": "js/topology/registry/loaders/load_packages.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/topology/registry/loaders/load_packages.js~load_package_template",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_packages.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 404,
    "undocument": true,
    "params": [
      {
        "name": "logs",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_package_name",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_package_config",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_children",
        "types": [
          "*"
        ]
      },
      {
        "name": "type_name",
        "types": [
          "*"
        ]
      },
      {
        "name": "relative_path_name",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 1745,
    "kind": "function",
    "name": "load_packages",
    "memberof": "js/topology/registry/loaders/load_packages.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/topology/registry/loaders/load_packages.js~load_packages",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_packages.js",
    "importStyle": "load_packages",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [
      {
        "name": "logs",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_packages_config",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_base_dir",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1746,
    "kind": "file",
    "name": "js/topology/registry/loaders/load_plugins.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../../../utils/types'\r\n\r\n\r\nconst context = 'common/topology/registry/loaders/load_plugins'\r\n\r\n\r\n\r\nlet error_msg_bad_config = context + ':bad config'\r\n// let error_msg_bad_plugin = context + ':plugins.* should be an object'\r\n// let error_msg_bad_js = context + ':plugins.*.js should be a string'\r\n// let error_msg_bad_css = context + ':plugins.*.css should be an array'\r\n// let error_msg_bad_autoload = context + ':plugins.*.autoload should be a boolean'\r\n\r\n\r\n\r\nfunction load_plugins(logs, arg_plugins_config/*, arg_base_dir*/)\r\n{\r\n\tlogs.info(context, 'loading world.plugins')\r\n\t\r\n\ttry{\r\n\t\t// CHECK MODULES\r\n\t\tassert(T.isObject(arg_plugins_config), error_msg_bad_config)\r\n\t\t\r\n\t\t// LOOP ON PLUGINS\r\n\t\tconst plugins_types = ['rendering', 'services']\r\n\t\tObject.keys(arg_plugins_config).forEach(\r\n\t\t\tfunction(plugin_name)\r\n\t\t\t{\r\n\t\t\t\tconst plugin_cfg = arg_plugins_config[plugin_name]\r\n\r\n\t\t\t\t// CHECK TYPE\r\n\t\t\t\tassert( T.isString(plugin_cfg.type), 'bad plugin type string')\r\n\t\t\t\tassert( plugins_types.indexOf(plugin_cfg.type) > -1, context + ':bad plugin.type [' + plugin_cfg.type + '] not in [' + plugins_types.toString() + ']')\r\n\r\n\t\t\t\t// CHECK SOURCE: FILE OR PACKAGE\r\n\t\t\t\tassert( T.isString(plugin_cfg.file) || T.isString(plugin_cfg.package), 'bad plugin source (plugin.file or plugin.package) string')\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\tcatch(e)\r\n\t{\r\n\t\targ_plugins_config = { error: { context:context, exception:e} }\r\n\t}\r\n\t\r\n\treturn arg_plugins_config\r\n}\r\n\r\nexport default load_plugins\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/registry/loaders/load_plugins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1747,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/registry/loaders/load_plugins.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_plugins.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_plugins.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1748,
    "kind": "variable",
    "name": "error_msg_bad_config",
    "memberof": "js/topology/registry/loaders/load_plugins.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_plugins.js~error_msg_bad_config",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_plugins.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1749,
    "kind": "function",
    "name": "load_plugins",
    "memberof": "js/topology/registry/loaders/load_plugins.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/topology/registry/loaders/load_plugins.js~load_plugins",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_plugins.js",
    "importStyle": "load_plugins",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "logs",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_plugins_config",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1750,
    "kind": "file",
    "name": "js/topology/registry/loaders/load_security.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport path from 'path'\r\n\r\n// COMMON IMPORTS\r\nimport T      from '../../../utils/types'\r\nimport parser from '../../../utils/parser/parser'\r\n\r\n// SERVER IMPORTS\r\nimport load_security_authorization from './load_security_authorization'\r\nimport load_security_authentication from './load_security_authentication'\r\n\r\n\r\nconst context = 'common/topology/registry/loaders/load_security'\r\n\r\n\r\n\r\nlet error_msg_bad_config = context + ':bad config'\r\nlet error_msg_bad_is_readonly = context + ':security.is_readonly should be a boolean'\r\nlet error_msg_bad_datasources = context + ':security.datasources should be an array'\r\nlet error_msg_bad_authentication = context + ':security.authentication should be an object'\r\nlet error_msg_bad_authorization = context + ':security.authorization should be an object'\r\nlet error_msg_bad_datasource = context + ':security.datasources.* should be a string'\r\nlet error_msg_bad_cx_config = context + ':security.datasources.*.* should be a valid datasource'\r\n\r\n// const apps_dir = '../../../../apps/'\r\n\t\r\n\r\nfunction load_security(logs, arg_security_config, arg_base_dir)\r\n{\r\n\t// console.log('LOADING CONFIG SECURITY', arg_security_config)\r\n\tlogs.info(context, 'loading config.security')\r\n    \r\n\ttry\r\n    {\r\n\t\t// CHECK SECURITY\r\n\t\tassert(T.isObject(arg_security_config), error_msg_bad_config)\r\n\t\tassert(T.isBoolean(arg_security_config.is_readonly), error_msg_bad_is_readonly)\r\n\t\tassert(T.isArray(arg_security_config.datasources), error_msg_bad_datasources)\r\n\t\tassert(T.isObject(arg_security_config.authentication), error_msg_bad_authentication)\r\n\t\tassert(T.isObject(arg_security_config.authorization), error_msg_bad_authorization)\r\n\r\n\t\t// LOAD DATASOURCES\r\n\t\targ_security_config.files = {}\r\n\t\targ_security_config.resources_by_name = {}\r\n\t\targ_security_config.resources_by_file = {}\r\n\t\targ_security_config.datasources.forEach(\r\n\t\t\t(file_name)=> {\r\n\t\t\t\t// CHECK DATASOURCES\r\n\t\t\t\tassert(T.isString(file_name), error_msg_bad_datasource)\r\n\t\t\t\t\r\n\t\t\t\tlet file_path_name = path.join(arg_base_dir, 'resources', file_name)\r\n\t\t\t\t// console.log(file_path_name, 'datasources file_path_name')\r\n\t\t\t\t\r\n\t\t\t\tlet config = parser.read(file_path_name, 'utf8')\r\n\t\t\t\t// console.log(config, 'config')\r\n\t\t\t\t\r\n\t\t\t\targ_security_config.files[file_name] = config\r\n\t\t\t\targ_security_config.resources_by_file[file_name] = {}\r\n\t\t\t\t\r\n\t\t\t\t// LOOP ON CONNEXIONS\r\n\t\t\t\tObject.keys(config).forEach(\r\n\t\t\t\t\t(res_name) => {\r\n\t\t\t\t\t\tlet res_obj = config[res_name]\r\n\t\t\t\t\t\tres_obj.name = res_name\r\n\t\t\t\t\t\tres_obj.type = 'datasources'\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// CHECK CONNEXION\r\n\t\t\t\t\t\tassert(T.isString(res_obj.engine),        error_msg_bad_cx_config + '(engine) for file ' + file_name)\r\n\t\t\t\t\t\tassert(T.isString(res_obj.host),          error_msg_bad_cx_config + '(host) for file ' + file_name)\r\n\t\t\t\t\t\tassert(T.isString(res_obj.port),          error_msg_bad_cx_config + '(port) for file ' + file_name)\r\n\t\t\t\t\t\tassert(T.isString(res_obj.database_name), error_msg_bad_cx_config + '(database_name) for file ' + file_name)\r\n\t\t\t\t\t\tassert(T.isString(res_obj.user_name),     error_msg_bad_cx_config + '(user_name) for file ' + file_name)\r\n\t\t\t\t\t\tassert(T.isString(res_obj.user_pwd),      error_msg_bad_cx_config + '(user_pwd) for file ' + file_name)\r\n\t\t\t\t\t\t// OPTS: options, charset\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\targ_security_config.resources_by_name[res_name] = res_obj\r\n\t\t\t\t\t\targ_security_config.resources_by_file[file_name][res_name] = res_obj\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\t// CHECK AUTHENTICATION\r\n\t\targ_security_config.authentication = load_security_authentication(logs, arg_security_config.authentication, arg_base_dir)\r\n\r\n\t\t// CHECK AUTHORIZATION\r\n\t\targ_security_config.authorization = load_security_authorization(logs, arg_security_config.authorization, arg_base_dir)\r\n\t}\r\n\tcatch(e)\r\n\t{\r\n\t\targ_security_config = { error: { context:context, exception:e } }\r\n\t}\r\n\t\r\n\treturn arg_security_config\r\n}\r\n\r\nexport default load_security\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/registry/loaders/load_security.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1751,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/registry/loaders/load_security.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_security.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_security.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1752,
    "kind": "variable",
    "name": "error_msg_bad_config",
    "memberof": "js/topology/registry/loaders/load_security.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_security.js~error_msg_bad_config",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_security.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1753,
    "kind": "variable",
    "name": "error_msg_bad_is_readonly",
    "memberof": "js/topology/registry/loaders/load_security.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_security.js~error_msg_bad_is_readonly",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_security.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1754,
    "kind": "variable",
    "name": "error_msg_bad_datasources",
    "memberof": "js/topology/registry/loaders/load_security.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_security.js~error_msg_bad_datasources",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_security.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1755,
    "kind": "variable",
    "name": "error_msg_bad_authentication",
    "memberof": "js/topology/registry/loaders/load_security.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_security.js~error_msg_bad_authentication",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_security.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1756,
    "kind": "variable",
    "name": "error_msg_bad_authorization",
    "memberof": "js/topology/registry/loaders/load_security.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_security.js~error_msg_bad_authorization",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_security.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1757,
    "kind": "variable",
    "name": "error_msg_bad_datasource",
    "memberof": "js/topology/registry/loaders/load_security.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_security.js~error_msg_bad_datasource",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_security.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1758,
    "kind": "variable",
    "name": "error_msg_bad_cx_config",
    "memberof": "js/topology/registry/loaders/load_security.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_security.js~error_msg_bad_cx_config",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_security.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1759,
    "kind": "function",
    "name": "load_security",
    "memberof": "js/topology/registry/loaders/load_security.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/topology/registry/loaders/load_security.js~load_security",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_security.js",
    "importStyle": "load_security",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "logs",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_security_config",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_base_dir",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1760,
    "kind": "file",
    "name": "js/topology/registry/loaders/load_security_authentication.js",
    "content": "\r\n\r\nlet context = 'common/topology/registry/loaders/load_security_authentication'\r\n\r\n\r\n\r\nfunction load_security_authentication(logs, arg_auth_config/*, arg_base_dir*/)\r\n{\r\n\tlogs.info(context, 'loading config.security.load_security_authentication')\r\n\t\r\n\ttry{\r\n\t\t// CHECK SECURITY\r\n\t\t/*assert(T.isObject(arg_auth_config), error_msg_bad_config)\r\n\t\tassert(T.isBoolean(arg_auth_config.enabled), error_msg_bad_enabled)\r\n\t\tassert(T.isString(arg_auth_config.mode), error_msg_bad_mode)\r\n\t\tassert(T.isObject(arg_auth_config.alt), error_msg_bad_alt)\r\n\t\t\r\n\t\t// CHECK SECURITY\r\n\t\tif (arg_auth_config.mode === 'database')\r\n\t\t{\r\n\t\t\tassert(T.isString(arg_auth_config.model), error_msg_bad_model)\r\n\t\t\tassert(T.isString(arg_auth_config.role), error_msg_bad_role)\r\n\t\t\tassert(T.isString(arg_auth_config.username), error_msg_bad_username)\r\n\t\t\t\r\n\t\t\t// CHECK CONNEXIONS\r\n\t\t\t// arg_security_config.datasources.forEach( (datasource)=> { assert(T.isString(datasource), error_msg_bad_datasource) } )\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tassert(false, error_msg_bad_mode)\r\n\t\t}*/\r\n\t}\r\n\tcatch(e)\r\n\t{\r\n\t\targ_auth_config = { error: { context:context, exception:e } }\r\n\t}\r\n\t\r\n\treturn arg_auth_config\r\n}\r\n\r\nexport default load_security_authentication\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/registry/loaders/load_security_authentication.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1761,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/registry/loaders/load_security_authentication.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_security_authentication.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_security_authentication.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1762,
    "kind": "function",
    "name": "load_security_authentication",
    "memberof": "js/topology/registry/loaders/load_security_authentication.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/topology/registry/loaders/load_security_authentication.js~load_security_authentication",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_security_authentication.js",
    "importStyle": "load_security_authentication",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "logs",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_auth_config",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1763,
    "kind": "file",
    "name": "js/topology/registry/loaders/load_security_authorization.js",
    "content": "\r\n\r\nconst context = 'common/topology/registry/loaders/load_security_authorization'\r\n\r\n\r\n\r\nfunction load_security_authorization(logs, arg_auth_config/*, arg_base_dir*/)\r\n{\r\n\tlogs.info(context, 'loading config.security.load_security_authorization')\r\n\t\r\n\ttry{\r\n\t\t// CHECK SECURITY\r\n\t/*\tassert(T.isObject(arg_auth_config), error_msg_bad_config)\r\n\t\tassert(T.isBoolean(arg_auth_config.enabled), error_msg_bad_enabled)\r\n\t\tassert(T.isString(arg_auth_config.mode), error_msg_bad_mode)\r\n\t\tassert(T.isObject(arg_auth_config.alt), error_msg_bad_alt)\r\n\t\t\r\n\t\t// CHECK SECURITY\r\n\t\tif (arg_auth_config.mode === 'database')\r\n\t\t{\r\n\t\t\tassert(T.isString(arg_auth_config.model), error_msg_bad_model)\r\n\t\t\tassert(T.isString(arg_auth_config.role), error_msg_bad_role)\r\n\t\t\tassert(T.isString(arg_auth_config.username), error_msg_bad_username)\r\n\t\t\t\r\n\t\t\t// CHECK CONNEXIONS\r\n\t\t\t// arg_security_config.datasources.forEach( (datasource)=> { assert(T.isString(datasource), error_msg_bad_datasource) } )\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tassert(false, error_msg_bad_mode)\r\n\t\t}*/\r\n\t}\r\n\tcatch(e)\r\n\t{\r\n\t\targ_auth_config = { error: { context:context, exception:e } }\r\n\t}\r\n\t\r\n\treturn arg_auth_config\r\n}\r\n\r\nexport default load_security_authorization\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/registry/loaders/load_security_authorization.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1764,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/registry/loaders/load_security_authorization.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_security_authorization.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_security_authorization.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1765,
    "kind": "function",
    "name": "load_security_authorization",
    "memberof": "js/topology/registry/loaders/load_security_authorization.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/topology/registry/loaders/load_security_authorization.js~load_security_authorization",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_security_authorization.js",
    "importStyle": "load_security_authorization",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "logs",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_auth_config",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1766,
    "kind": "file",
    "name": "js/topology/registry/loaders/load_tenants.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport path from 'path'\r\nimport _ from 'lodash'\r\n\r\n// COMMON IMPORTS\r\nimport T                 from '../../../utils/types'\r\nimport load_applications from './load_applications'\r\nimport load_packages     from './load_packages'\r\n\r\n\r\nconst context = 'common/topology/registry/loaders/load_tenants'\r\n\r\n\r\nconst error_msg_bad_config = context + ':bad config'\r\n\r\n\r\nfunction load_tenants(logs, arg_tenants_config, arg_plugins, arg_base_dir)\r\n{\r\n\tlogs.info(context, 'loading world.tenants from ' + arg_base_dir)\r\n\t\r\n\ttry{\r\n\t\t// CHECK ARGS\r\n\t\tassert(T.isObject(arg_tenants_config), error_msg_bad_config)\r\n\t\t\r\n\t\t// LOOP ON TENANTS\r\n\t\tlet error = undefined\r\n\t\tObject.keys(arg_tenants_config).forEach(\r\n\t\t\tfunction(tenant_name)\r\n\t\t\t{\r\n\t\t\t\tif (arg_tenants_config.error)\r\n\t\t\t\t{\r\n\t\t\t\t\terror = arg_tenants_config.error\r\n\t\t\t\t}\r\n\t\t\t\tif (error)\r\n\t\t\t\t{\r\n\t\t\t\t\tlogs.info(context, 'skip tenants.' + tenant_name + ' because an error occured.')\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// logs.info(context, 'loading config.tenants.' + tenant_name)\r\n\r\n\t\t\t\tlet tenant_obj = arg_tenants_config[tenant_name]\r\n\t\t\t\ttenant_obj = load_tenant(logs, tenant_name, tenant_obj, arg_plugins, arg_base_dir)\r\n\t\t\t\t// console.log(tenant_obj, 'tenant_obj')\r\n\r\n\t\t\t\t// PROCESS ERRORS\r\n\t\t\t\tif (tenant_obj.error)\r\n\t\t\t\t{\r\n\t\t\t\t\terror = tenant_obj.error\r\n\t\t\t\t\terror.context = error.context + ' for ' + tenant_name\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tif (error)\r\n\t\t{\r\n\t\t\targ_tenants_config = { error: error }\r\n\t\t\t// console.error(context, error)\r\n\t\t}\r\n\t}\r\n\tcatch(e)\r\n\t{\r\n\t\targ_tenants_config = { error: { context:context, exception:e } }\r\n\t\t// console.error(arg_tenants_config)\r\n\t}\r\n\t\r\n\treturn arg_tenants_config\r\n}\r\n\r\n\r\nfunction load_tenant(logs, arg_tenant_name, arg_tenant_config, arg_plugins, arg_base_dir)\r\n{\r\n\tlogs.info(context, 'loading world.tenants.' + arg_tenant_name + ' from ' + arg_base_dir)\r\n\t// console.log(arg_tenant_config, 'arg_tenant_config')\r\n\r\n\t// CHECK ARGS\r\n\tassert(T.isObject(arg_tenant_config), error_msg_bad_config)\r\n\r\n\t// LOAD PACKAGES\r\n\tconst packages_array = T.isArray(arg_tenant_config.packages) ? arg_tenant_config.packages : [arg_tenant_config.packages]\r\n\tconst loaded_packages = { packages:{} }\r\n\tlet loaded_errors = undefined\r\n\tlet loaded_basedir = arg_base_dir\r\n\tpackages_array.forEach(\r\n\t\t(pkg_item)=>{\r\n\t\t\tif ( T.isString(pkg_item) )\r\n\t\t\t{\r\n\t\t\t\tconst file_path_name = path.join(loaded_basedir, pkg_item)\r\n\t\t\t\tlogs.info(context, 'loading world.tenants.' + arg_tenant_name + '.packages: loading file with file_path_name=' + file_path_name)\r\n\t\t\t\tpkg_item = {}\r\n\t\t\t\tpkg_item.packages = require(file_path_name).packages\r\n\t\t\t\tloaded_basedir = path.dirname(file_path_name)\r\n\t\t\t\tlogs.info(context, 'loading world.tenants.' + arg_tenant_name + '.packages: loading file with base dir=' + loaded_basedir)\r\n\t\t\t}\r\n\t\t\tif ( T.isObject(pkg_item.packages) )\r\n\t\t\t{\r\n\t\t\t\tlogs.info(context, 'loading world.tenants.' + arg_tenant_name + '.packages with base dir=' + loaded_basedir)\r\n\t\t\t\tconst pkgs = load_packages(logs, pkg_item.packages, loaded_basedir)\r\n\t\t\t\t_.forEach(pkgs,\r\n\t\t\t\t\t(pkg, pkg_name)=>{\r\n\t\t\t\t\t\tloaded_packages.packages[pkg_name] = pkg\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\t\r\n\t\t\t\t// PROCESS ERROR\r\n\t\t\t\tif (loaded_packages.packages.error)\r\n\t\t\t\t{\r\n\t\t\t\t\tloaded_errors = {\r\n\t\t\t\t\t\terror:loaded_packages.packages.error\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t)\r\n\t// PROCESS ERROR\r\n\tif (loaded_errors)\r\n\t{\r\n\t\treturn loaded_errors\r\n\t}\r\n\targ_tenant_config.packages = loaded_packages.packages\r\n\t\r\n\t// CONSOLID SERVICES\r\n\tlet services = {}\r\n\tObject.keys(arg_tenant_config.packages).forEach(\r\n\t\t(pkg_name)=>{\r\n\t\t\tif (pkg_name != 'files')\r\n\t\t\t{\r\n\t\t\t\tlogs.info(context, 'loading world.tenants.' + arg_tenant_name + ' consolidated services for pkg ' + pkg_name)\r\n\t\t\t\tconst pkg = arg_tenant_config.packages[pkg_name]\r\n\r\n\t\t\t\tObject.keys(pkg.services).forEach(\r\n\t\t\t\t\t(svc_name)=>{\r\n\t\t\t\t\t\tservices[svc_name] = pkg.services[svc_name]\r\n\t\t\t\t\t\tlogs.info(context, 'loading world.tenants.' + arg_tenant_name + ' consolid service for ' + svc_name)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t)\r\n\tlogs.info(context, 'loading world.tenants.' + arg_tenant_name + ' consolidated services:' + Object.keys(services).toString())\r\n\r\n\t// LOAD APPLICATIONS\r\n\tif (T.isString(arg_tenant_config.applications))\r\n\t{\r\n\t\tconst file_path_name = path.join(arg_base_dir, arg_tenant_config.applications)\r\n\t\targ_tenant_config.applications = require(file_path_name).applications\r\n\t}\r\n\tif ( T.isObject(arg_tenant_config.applications) )\r\n\t{\r\n\t\tlogs.info(context, 'loading world.tenants.' + arg_tenant_name + '.applications')\r\n\t\targ_tenant_config.applications = load_applications(logs, arg_tenant_config.applications, arg_tenant_config.packages, arg_plugins, services, arg_base_dir)\r\n\t\t\r\n\t\t// PROCESS ERROR\r\n\t\tif (arg_tenant_config.applications.error)\r\n\t\t{\r\n\t\t\targ_tenant_config = {\r\n\t\t\t\terror:arg_tenant_config.applications.error\r\n\t\t\t}\r\n\t\t\treturn arg_tenant_config\r\n\t\t}\r\n\t}\r\n\r\n\treturn arg_tenant_config\r\n}\r\n\r\n\r\nexport default load_tenants\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/registry/loaders/load_tenants.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1767,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/registry/loaders/load_tenants.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_tenants.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_tenants.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1768,
    "kind": "variable",
    "name": "error_msg_bad_config",
    "memberof": "js/topology/registry/loaders/load_tenants.js",
    "static": true,
    "longname": "js/topology/registry/loaders/load_tenants.js~error_msg_bad_config",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_tenants.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1769,
    "kind": "function",
    "name": "load_tenant",
    "memberof": "js/topology/registry/loaders/load_tenants.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/topology/registry/loaders/load_tenants.js~load_tenant",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_tenants.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "params": [
      {
        "name": "logs",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_tenant_name",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_tenant_config",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_plugins",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_base_dir",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1770,
    "kind": "function",
    "name": "load_tenants",
    "memberof": "js/topology/registry/loaders/load_tenants.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/topology/registry/loaders/load_tenants.js~load_tenants",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/registry/loaders/load_tenants.js",
    "importStyle": "load_tenants",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "logs",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_tenants_config",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_plugins",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_base_dir",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1771,
    "kind": "file",
    "name": "js/topology/registry/registry_store.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T        from '../../utils/types'\r\nimport MapStore from '../../state_store/map_store'\r\n\r\n\r\nconst context = 'common/topology/resgistry/registry_store'\r\n\r\n\r\n\r\n/**\r\n * @file Registry class to deal with state storing and mutations.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class RegistryStore extends MapStore\r\n{\r\n\t/**\r\n\t * Create RegistryStore instance.\r\n\t * \r\n\t * @param {object} arg_initial_state - initial state to populate registry.\r\n\t * @param {string} arg_log_context - trace context.\r\n\t * @param {LoggerManager} arg_logger_manager - logger manager object (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_initial_state, arg_log_context, arg_logger_manager)\r\n\t{\r\n\t\tconst my_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_initial_state, my_context, arg_logger_manager)\r\n\t\t\r\n\t\t\r\n\t\tthis.collections = ['nodes', 'servers', 'applications', 'modules', 'plugins',\r\n\t\t\t'resources', 'security', 'views', 'models', 'menubars', 'menus', 'loggers',\r\n\t\t\t'services', 'transactions', 'datasources']\r\n\r\n\t\tthis.register_collection('nodes', 'node')\r\n\t\tthis.register_collection('servers', 'server')\r\n\t\tthis.register_collection('applications', 'application')\r\n\t\tthis.register_collection('modules', 'module')\r\n\t\tthis.register_collection('plugins', 'plugin')\r\n\r\n\t\t// this.register_collection('resources', 'resource')\r\n\r\n\t\tthis.register_resources_collection('views', 'view')\r\n\t\tthis.register_resources_collection('models', 'model')\r\n\t\tthis.register_resources_collection('menubars', 'menubar')\r\n\t\tthis.register_resources_collection('menus', 'menu')\r\n\t\tthis.register_resources_collection('loggers', 'logger')\r\n\t\tthis.register_resources_collection('services', 'service')\r\n\t\tthis.register_resources_collection('transactions', 'transaction')\r\n\t\tthis.register_resources_collection('datasources', 'datasource')\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\tget_path_array(arg_path)\r\n\t{\r\n\t\tif ( T.isString(arg_path) )\r\n\t\t{\r\n\t\t\targ_path = arg_path.split('.')\r\n\t\t}\r\n\r\n\t\tif ( T.isArray(arg_path) )\r\n\t\t{\r\n\t\t\treturn arg_path.length > 0 ? arg_path : null\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t}\r\n\t\r\n\r\n\r\n\tset_item(arg_path, arg_item)\r\n\t{\r\n\t\tconst path = this.get_path_array(arg_path)\r\n\t\tif (path)\r\n\t\t{\r\n\t\t\tthis.root = this.root.setIn(path, arg_item)\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\r\n\thas_collection(arg_name)\r\n\t{\r\n\t\treturn this.collections.indexOf(arg_name) > -1\r\n\t}\r\n\r\n\r\n\r\n\t// DEFINE CONFIG COLLECTIONS ACCESSORS\r\n\tget_collection(arg_name)\r\n\t{\r\n\t\treturn this.root.has(arg_name) ? this.root.get(arg_name).toMap() : new Map()\r\n\t}\r\n\t\r\n\r\n\r\n\tget_collection_names(arg_name)\r\n\t{\r\n\t\treturn this.root.has(arg_name) ? this.root.get(arg_name).toMap().keySeq().toArray() : [] \r\n\t}\r\n\t\r\n\r\n\r\n\tget_collection_item(arg_name, arg_item_name)\r\n\t{\r\n\t\tif ( ! this.root.hasIn( [arg_name, arg_item_name] ) )\r\n\t\t{\r\n\t\t\treturn null\r\n\t\t}\r\n\t\t\r\n\t\tconst r= this.root.getIn( [arg_name, arg_item_name] )\r\n\t\t\r\n\t\treturn r ? r.toMap() : null\r\n\t}\r\n\t\r\n\r\n\r\n\thas_collection_item(arg_name, arg_item_name)\r\n\t{\r\n\t\treturn this.root.hasIn( [arg_name, arg_item_name] )\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Register collection methods.\r\n\t * \r\n\t * @param {string} arg_collection_name - valid collection name.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tregister_collection(arg_collection_name, arg_item_name)\r\n\t{\r\n\t\tassert( T.isString(arg_collection_name) && arg_collection_name.length > 0, context + ':register_collection:bad collection name string')\r\n\t\tassert( T.isString(arg_item_name) && arg_item_name.length > 0, context + ':register_collection:bad item name string')\r\n\t\tassert( this.collections.indexOf(arg_collection_name) > -1, context + ':register_collection:collection name not found in collections list:' + arg_collection_name)\r\n\t\t\r\n\t\tthis['get_' + arg_collection_name] = () => {\r\n\t\t\treturn this.root.getIn( [arg_collection_name] ).toMap().keySeq().toArray()\r\n\t\t}\r\n\t\t\r\n\t\tthis['has_' + arg_item_name] = (arg_name) => {\r\n\t\t\treturn this.root.hasIn( [arg_collection_name, arg_name] )\r\n\t\t}\r\n\t\t\r\n\t\tthis['get_' + arg_item_name] = (arg_name) => {\r\n\t\t\tconst result = this.root.getIn( [arg_collection_name, arg_name] ).toMap()\r\n\t\t\treturn (result && T.isFunction(result.toJS) ) ? result.toJS() : result\r\n\t\t}\r\n\t\t\r\n\t\tthis['get_' + arg_item_name + '_js'] = (arg_name) => {\r\n\t\t\tconst result = this.root.getIn( [arg_collection_name, arg_name] )\r\n\t\t\treturn (result && T.isFunction(result.toJS) ) ? result.toJS() : result\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Register resources collection methods.\r\n\t * \r\n\t * @param {string} arg_collection_name - valid collection name (plural form).\r\n\t * @param {string} arg_item_name - valid collection name (single form).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tregister_resources_collection(arg_collection_name, arg_item_name)\r\n\t{\r\n\t\tassert( T.isString(arg_collection_name) && arg_collection_name.length > 0, context + ':register_collection:bad collection name')\r\n\t\tassert( T.isString(arg_item_name) && arg_item_name.length > 0, context + ':register_collection:bad item name')\r\n\t\tassert( this.collections.indexOf(arg_collection_name) > -1, context + ':register_collection:collection name not found in collections list')\r\n\t\t\r\n\t\tthis['get_' + arg_collection_name] = () => {\r\n\t\t\treturn this.root.getIn( ['resources', 'by_type', arg_collection_name] ).toMap().keySeq().toArray()\r\n\t\t}\r\n\t\t\r\n\t\tthis['has_' + arg_item_name] = (arg_name) => {\r\n\t\t\treturn this.has_resource_by_type(arg_collection_name, arg_name)\r\n\t\t}\r\n\t\t\r\n\t\tthis['get_' + arg_item_name] = (arg_name) => {\r\n\t\t\treturn this.get_resource_of_type(arg_collection_name, arg_name)\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\r\n\t// CONFIG: GET RESOURCES LIST\r\n\tget_resources(arg_set_name)\r\n\t{\r\n\t\tlet path = ['resources', 'by_name']\r\n\t\tif (arg_set_name)\r\n\t\t{\r\n\t\t\tpath = ['resources', 'by_type', arg_set_name]\r\n\t\t}\r\n\t\treturn this.root.getIn(path).toMap().keySeq().toArray()\r\n\t}\r\n\r\n\r\n\r\n\t// CONFIG: HAS A RESOURCE\r\n\thas_resource(arg_name) { return this.root.hasIn( ['resources', 'by_name',  arg_name] ) }\r\n\t\r\n\thas_resource_by_type(arg_type, arg_name)\r\n\t{\r\n\t\tlet name = this.root.getIn( ['resources', 'by_type', arg_type, arg_name] )\r\n\t\treturn name ? this.has_resource(name) : null\r\n\t}\r\n\r\n\r\n\r\n\t// CONFIG: GET A RESOURCE\r\n\tget_resource(arg_name)\r\n\t{\r\n\t\tif ( this.root.hasIn( ['resources', 'by_name', arg_name] ) )\r\n\t\t{\r\n\t\t\treturn this.root.getIn( ['resources', 'by_name', arg_name] ).toMap().toJS()\r\n\t\t}\r\n\t\treturn undefined\r\n\t}\r\n\t\r\n\tget_resource_of_type(arg_type, arg_name)\r\n\t{\r\n\t\tif ( this.has_resource_by_type(arg_type, arg_name) )\r\n\t\t{\r\n\t\t\treturn this.get_resource(arg_name)\r\n\t\t}\r\n\t\treturn undefined\r\n\t}\r\n\t\r\n\tget_resource_by_type(arg_type, arg_name)\r\n\t{\r\n\t\tlet name = this.root.getIn( ['resources', 'by_type', arg_type, arg_name] )\r\n\t\treturn name ? this.get_resource(name) : undefined\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/registry/registry_store.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1772,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/registry/registry_store.js",
    "static": true,
    "longname": "js/topology/registry/registry_store.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/registry_store.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1773,
    "kind": "class",
    "name": "RegistryStore",
    "memberof": "js/topology/registry/registry_store.js",
    "static": true,
    "longname": "js/topology/registry/registry_store.js~RegistryStore",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/registry/registry_store.js",
    "importStyle": "RegistryStore",
    "description": "",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Registry class to deal with state storing and mutations."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/state_store/map_store.js~MapStore"
    ]
  },
  {
    "__docId__": 1774,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/topology/registry/registry_store.js~RegistryStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/registry/registry_store.js~RegistryStore#constructor",
    "access": "public",
    "description": "Create RegistryStore instance.",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_initial_state",
        "description": "initial state to populate registry."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "trace context."
      },
      {
        "nullable": null,
        "types": [
          "LoggerManager"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_logger_manager",
        "description": "logger manager object (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1775,
    "kind": "member",
    "name": "collections",
    "memberof": "js/topology/registry/registry_store.js~RegistryStore",
    "static": false,
    "longname": "js/topology/registry/registry_store.js~RegistryStore#collections",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 1776,
    "kind": "method",
    "name": "get_path_array",
    "memberof": "js/topology/registry/registry_store.js~RegistryStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/registry/registry_store.js~RegistryStore#get_path_array",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "params": [
      {
        "name": "arg_path",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1777,
    "kind": "method",
    "name": "set_item",
    "memberof": "js/topology/registry/registry_store.js~RegistryStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/registry/registry_store.js~RegistryStore#set_item",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "params": [
      {
        "name": "arg_path",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_item",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1778,
    "kind": "member",
    "name": "root",
    "memberof": "js/topology/registry/registry_store.js~RegistryStore",
    "static": false,
    "longname": "js/topology/registry/registry_store.js~RegistryStore#root",
    "access": "public",
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1779,
    "kind": "method",
    "name": "has_collection",
    "memberof": "js/topology/registry/registry_store.js~RegistryStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/registry/registry_store.js~RegistryStore#has_collection",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "params": [
      {
        "name": "arg_name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1780,
    "kind": "method",
    "name": "get_collection",
    "memberof": "js/topology/registry/registry_store.js~RegistryStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/registry/registry_store.js~RegistryStore#get_collection",
    "access": "public",
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "params": [
      {
        "name": "arg_name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1781,
    "kind": "method",
    "name": "get_collection_names",
    "memberof": "js/topology/registry/registry_store.js~RegistryStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/registry/registry_store.js~RegistryStore#get_collection_names",
    "access": "public",
    "description": null,
    "lineNumber": 104,
    "undocument": true,
    "params": [
      {
        "name": "arg_name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1782,
    "kind": "method",
    "name": "get_collection_item",
    "memberof": "js/topology/registry/registry_store.js~RegistryStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/registry/registry_store.js~RegistryStore#get_collection_item",
    "access": "public",
    "description": null,
    "lineNumber": 111,
    "undocument": true,
    "params": [
      {
        "name": "arg_name",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_item_name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1783,
    "kind": "method",
    "name": "has_collection_item",
    "memberof": "js/topology/registry/registry_store.js~RegistryStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/registry/registry_store.js~RegistryStore#has_collection_item",
    "access": "public",
    "description": null,
    "lineNumber": 125,
    "undocument": true,
    "params": [
      {
        "name": "arg_name",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_item_name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1784,
    "kind": "method",
    "name": "register_collection",
    "memberof": "js/topology/registry/registry_store.js~RegistryStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/registry/registry_store.js~RegistryStore#register_collection",
    "access": "public",
    "description": "Register collection methods.",
    "lineNumber": 139,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_collection_name",
        "description": "valid collection name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1785,
    "kind": "member",
    "name": "['get_' + arg_collection_name]",
    "memberof": "js/topology/registry/registry_store.js~RegistryStore",
    "static": false,
    "longname": "js/topology/registry/registry_store.js~RegistryStore#['get_' + arg_collection_name]",
    "access": "public",
    "description": null,
    "lineNumber": 145,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1786,
    "kind": "member",
    "name": "['has_' + arg_item_name]",
    "memberof": "js/topology/registry/registry_store.js~RegistryStore",
    "static": false,
    "longname": "js/topology/registry/registry_store.js~RegistryStore#['has_' + arg_item_name]",
    "access": "public",
    "description": null,
    "lineNumber": 149,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1787,
    "kind": "member",
    "name": "['get_' + arg_item_name]",
    "memberof": "js/topology/registry/registry_store.js~RegistryStore",
    "static": false,
    "longname": "js/topology/registry/registry_store.js~RegistryStore#['get_' + arg_item_name]",
    "access": "public",
    "description": null,
    "lineNumber": 153,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1788,
    "kind": "member",
    "name": "['get_' + arg_item_name + '_js']",
    "memberof": "js/topology/registry/registry_store.js~RegistryStore",
    "static": false,
    "longname": "js/topology/registry/registry_store.js~RegistryStore#['get_' + arg_item_name + '_js']",
    "access": "public",
    "description": null,
    "lineNumber": 158,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1789,
    "kind": "method",
    "name": "register_resources_collection",
    "memberof": "js/topology/registry/registry_store.js~RegistryStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/registry/registry_store.js~RegistryStore#register_resources_collection",
    "access": "public",
    "description": "Register resources collection methods.",
    "lineNumber": 174,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_collection_name",
        "description": "valid collection name (plural form)."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_item_name",
        "description": "valid collection name (single form)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1793,
    "kind": "method",
    "name": "get_resources",
    "memberof": "js/topology/registry/registry_store.js~RegistryStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/registry/registry_store.js~RegistryStore#get_resources",
    "access": "public",
    "description": null,
    "lineNumber": 196,
    "undocument": true,
    "params": [
      {
        "name": "arg_set_name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1794,
    "kind": "method",
    "name": "has_resource",
    "memberof": "js/topology/registry/registry_store.js~RegistryStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/registry/registry_store.js~RegistryStore#has_resource",
    "access": "public",
    "description": null,
    "lineNumber": 209,
    "undocument": true,
    "params": [
      {
        "name": "arg_name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1795,
    "kind": "method",
    "name": "has_resource_by_type",
    "memberof": "js/topology/registry/registry_store.js~RegistryStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/registry/registry_store.js~RegistryStore#has_resource_by_type",
    "access": "public",
    "description": null,
    "lineNumber": 211,
    "undocument": true,
    "params": [
      {
        "name": "arg_type",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1796,
    "kind": "method",
    "name": "get_resource",
    "memberof": "js/topology/registry/registry_store.js~RegistryStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/registry/registry_store.js~RegistryStore#get_resource",
    "access": "public",
    "description": null,
    "lineNumber": 220,
    "undocument": true,
    "params": [
      {
        "name": "arg_name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1797,
    "kind": "method",
    "name": "get_resource_of_type",
    "memberof": "js/topology/registry/registry_store.js~RegistryStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/registry/registry_store.js~RegistryStore#get_resource_of_type",
    "access": "public",
    "description": null,
    "lineNumber": 229,
    "undocument": true,
    "params": [
      {
        "name": "arg_type",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1798,
    "kind": "method",
    "name": "get_resource_by_type",
    "memberof": "js/topology/registry/registry_store.js~RegistryStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/registry/registry_store.js~RegistryStore#get_resource_by_type",
    "access": "public",
    "description": null,
    "lineNumber": 238,
    "undocument": true,
    "params": [
      {
        "name": "arg_type",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1799,
    "kind": "file",
    "name": "js/topology/registry/topology_registry.js",
    "content": "// NPM IMPORTS\r\nimport {fromJS } from 'immutable'\r\n\r\n// COMMON IMPORTS\r\nimport RegistryStore from './registry_store'\r\nimport load_config   from './loaders/load_config'\r\n\r\n\r\nconst context = 'common/topology/registry/topology_registry'\r\n\r\n\r\n\r\n/**\r\n * TopologyRegistryStore class, a RegistryStore loading topology.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class TopologyRegistry extends RegistryStore\r\n{\r\n\t/**\r\n\t * Create a TopologyRegistry instance.\r\n\t * \r\n\t * @param {LoggerManager} arg_logger_manager - logger manager object.\r\n\t * @param {boolean} arg_trace - load config trace flag\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_logger_manager, arg_trace=false)\r\n\t{\r\n\t\t// DEBUG\r\n\t\tconsole.log(context + ':constructor:trace=[%s]', arg_trace ? 'Yes': 'No')\r\n\r\n\t\tconst default_config = load_config({}, undefined, undefined, arg_trace)\r\n\t\tsuper(default_config.config, context, arg_logger_manager)\r\n\r\n\t\tthis.error = undefined\r\n\t\tthis.initial_config = undefined\r\n\t\tthis._trace = arg_trace\r\n\t}\r\n\t\r\n\r\n\r\n\t/**\r\n\t * Load a topology configuration.\r\n\t * \r\n\t * @param {object} arg_config - object configuration.\r\n\t * @param {string} arg_base_dir - project base directory.\r\n\t * @param {string} arg_topology_dir - topology settings base directory.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tload(arg_config, arg_base_dir, arg_topology_dir)\r\n\t{\r\n\t\tthis.initial_config = arg_config\r\n\r\n\t\t// LOAD AND CHECK CONFIG\r\n\t\tlet checked_config = load_config({}, arg_config, arg_base_dir, arg_topology_dir, this._trace)\r\n\t\tif (checked_config.config.error)\r\n\t\t{\r\n\t\t\tthis.error = checked_config.config.error\r\n\t\t\t// console.error(context + ':load:error', this.format_error(checked_config.config.error))\r\n\t\t\treturn false\r\n\t\t}\r\n\t\t\r\n\t\t// DEBUG\r\n\t\t// console.log(checked_config.config.resources.by_name['default_menubar'], 'store.checked_config.config default_menubar')\r\n\t\t\r\n\t\tconst immutable_config = fromJS(checked_config.config)\r\n\t\tthis.root = immutable_config\r\n\t\t\r\n\t\treturn true\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get potential error.\r\n\t * \r\n\t * @returns {object} - error record.\r\n\t */\r\n\tget_error()\r\n\t{\r\n\t\treturn this.error\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Format an error record.\r\n\t * \r\n\t * @param {object} arg_error - error record.\r\n\t * \r\n\t * @returns {string} - human readable error.\r\n\t */\r\n\tformat_error(arg_error)\r\n\t{\r\n\t\tlet str = '\\n'\r\n\t\tstr += '*****************************************************************************************\\n'\r\n\t\t\r\n\t\t// FORMAT MAIN ERROR\r\n\t\tstr += '\\n\\nError:\\n'\r\n\t\tstr += '* context:   ' + arg_error.context + '\\n'\r\n\t\tstr += '* exception: ' + arg_error.exception + '\\n'\r\n\t\tstr += '* message:   ' + arg_error.error_msg + '\\n'\r\n\t\t\r\n\t\t// FORMAT SUB ERRORS\r\n\t\tif ('suberrors' in arg_error)\r\n\t\t{\r\n\t\t\tstr += '\\nsub errors:\\n'\r\n\t\t\targ_error.suberrors.map(\r\n\t\t\t\t(suberror) => {\r\n\t\t\t\t\tstr += '------------------------------------------------------------------------\\n'\r\n\t\t\t\t\tstr += '* context: ' + suberror.context + '\\n'\r\n\t\t\t\t\tstr += '* message: ' + suberror.error_msg + '\\n'\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t\t\r\n\t\tstr += '\\n*****************************************************************************************\\n'\r\n\t\t\r\n\t\treturn str\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/topology/registry/topology_registry.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1800,
    "kind": "variable",
    "name": "context",
    "memberof": "js/topology/registry/topology_registry.js",
    "static": true,
    "longname": "js/topology/registry/topology_registry.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/topology/registry/topology_registry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1801,
    "kind": "class",
    "name": "TopologyRegistry",
    "memberof": "js/topology/registry/topology_registry.js",
    "static": true,
    "longname": "js/topology/registry/topology_registry.js~TopologyRegistry",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/topology/registry/topology_registry.js",
    "importStyle": "TopologyRegistry",
    "description": "TopologyRegistryStore class, a RegistryStore loading topology.",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/topology/registry/registry_store.js~RegistryStore"
    ]
  },
  {
    "__docId__": 1802,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/topology/registry/topology_registry.js~TopologyRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/registry/topology_registry.js~TopologyRegistry#constructor",
    "access": "public",
    "description": "Create a TopologyRegistry instance.",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "LoggerManager"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_logger_manager",
        "description": "logger manager object."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_trace",
        "description": "load config trace flag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1803,
    "kind": "member",
    "name": "error",
    "memberof": "js/topology/registry/topology_registry.js~TopologyRegistry",
    "static": false,
    "longname": "js/topology/registry/topology_registry.js~TopologyRegistry#error",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1804,
    "kind": "member",
    "name": "initial_config",
    "memberof": "js/topology/registry/topology_registry.js~TopologyRegistry",
    "static": false,
    "longname": "js/topology/registry/topology_registry.js~TopologyRegistry#initial_config",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1805,
    "kind": "member",
    "name": "_trace",
    "memberof": "js/topology/registry/topology_registry.js~TopologyRegistry",
    "static": false,
    "longname": "js/topology/registry/topology_registry.js~TopologyRegistry#_trace",
    "access": "private",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1806,
    "kind": "method",
    "name": "load",
    "memberof": "js/topology/registry/topology_registry.js~TopologyRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/registry/topology_registry.js~TopologyRegistry#load",
    "access": "public",
    "description": "Load a topology configuration.",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_config",
        "description": "object configuration."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_base_dir",
        "description": "project base directory."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_topology_dir",
        "description": "topology settings base directory."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1809,
    "kind": "member",
    "name": "root",
    "memberof": "js/topology/registry/topology_registry.js~TopologyRegistry",
    "static": false,
    "longname": "js/topology/registry/topology_registry.js~TopologyRegistry#root",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1810,
    "kind": "method",
    "name": "get_error",
    "memberof": "js/topology/registry/topology_registry.js~TopologyRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/registry/topology_registry.js~TopologyRegistry#get_error",
    "access": "public",
    "description": "Get potential error.",
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - error record."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "error record."
    },
    "params": []
  },
  {
    "__docId__": 1811,
    "kind": "method",
    "name": "format_error",
    "memberof": "js/topology/registry/topology_registry.js~TopologyRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/topology/registry/topology_registry.js~TopologyRegistry#format_error",
    "access": "public",
    "description": "Format an error record.",
    "lineNumber": 96,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - human readable error."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_error",
        "description": "error record."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "human readable error."
    }
  },
  {
    "__docId__": 1812,
    "kind": "file",
    "name": "js/utils/attributes_iterator.js",
    "content": "\r\n// NPM IMPORTS\r\nimport _ from 'lodash'\r\n\r\n// COMMON IMPORTS\r\nimport T from './types'\r\n\r\nconst iterator_fn = (arg_value, arg_fn)=>{\r\n\tif ( T.isArray(arg_value) || T.isObject(arg_value) )\r\n\t{\r\n\t\t_.forEach(arg_value,\r\n\t\t\t(item, key)=>{\r\n\t\t\t\tconst new_key = arg_fn(key)\r\n\t\t\t\tif (key != new_key)\r\n\t\t\t\t{\r\n\t\t\t\t\tdelete arg_value[key]\r\n\t\t\t\t\tkey = new_key\r\n\t\t\t\t}\r\n\t\t\t\targ_value[key] = iterator_fn(item, arg_fn)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\treturn arg_value\r\n\t}\r\n\r\n\treturn arg_fn(arg_value)\r\n}\r\n\r\nexport default iterator_fn",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/utils/attributes_iterator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1813,
    "kind": "function",
    "name": "iterator_fn",
    "memberof": "js/utils/attributes_iterator.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/attributes_iterator.js~iterator_fn",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/utils/attributes_iterator.js",
    "importStyle": "iterator_fn",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "arg_value",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_fn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1814,
    "kind": "file",
    "name": "js/utils/diff.js",
    "content": "\r\n/**\r\n * Source : http://jsfiddle.net/sbgoran/kySNu/\r\n * \r\n */\r\nexport const diff = () => {\r\n\treturn {\r\n\t\tVALUE_CREATED: 'created',\r\n\t\tVALUE_UPDATED: 'updated',\r\n\t\tVALUE_DELETED: 'deleted',\r\n\t\tVALUE_UNCHANGED: 'unchanged',\r\n\t\t\r\n\t\tmap: (obj1, obj2) => {\r\n\t\t\tif ( this.isFunction(obj1) || this.isFunction(obj2) )\r\n\t\t\t{\r\n\t\t\t\tthrow 'Invalid argument. Function given, object expected.'\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif ( this.isValue(obj1) || this.isValue(obj2) )\r\n\t\t\t{\r\n\t\t\t\treturn {type: this.compareValues(obj1, obj2), data: obj1 || obj2}\r\n\t\t\t}\r\n\r\n\t\t\tlet diff = {}\r\n\t\t\tlet key = undefined\r\n\t\t\tfor (key in obj1)\r\n\t\t\t{\r\n\t\t\t\tif ( this.isFunction( obj1[key] ) )\r\n\t\t\t\t{\r\n\t\t\t\t\tcontinue\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tlet value2 = undefined\r\n\t\t\t\tif ( 'undefined' != typeof(obj2[key]) )\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue2 = obj2[key]\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdiff[key] = this.map(obj1[key], value2)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (key in obj2)\r\n\t\t\t{\r\n\t\t\t\tif ( this.isFunction(obj2[key]) || ('undefined' != typeof( diff[key] ) ) )\r\n\t\t\t\t{\r\n\t\t\t\t\tcontinue\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdiff[key] = this.map(undefined, obj2[key])\r\n\t\t\t}\r\n\r\n\t\t\treturn diff\r\n\r\n\t\t},\r\n\t\t\r\n\t\t\r\n\t\tcompareValues: (value1, value2) => {\r\n\t\t\tif (value1 === value2)\r\n\t\t\t{\r\n\t\t\t\treturn this.VALUE_UNCHANGED\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif ('undefined' == typeof(value1))\r\n\t\t\t{\r\n\t\t\t\treturn this.VALUE_CREATED\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif ('undefined' == typeof(value2))\r\n\t\t\t{\r\n\t\t\t\treturn this.VALUE_DELETED\r\n\t\t\t}\r\n\r\n\t\t\treturn this.VALUE_UPDATED\r\n\t\t},\r\n\t\t\r\n\t\t\r\n\t\tisFunction: (obj) => {\r\n\t\t\treturn {}.toString.apply(obj) === '[object Function]'\r\n\t\t},\r\n\t\t\r\n\t\t\r\n\t\tisArray: (obj) => {\r\n\t\t\treturn {}.toString.apply(obj) === '[object Array]'\r\n\t\t},\r\n\t\t\r\n\t\t\r\n\t\tisObject: (obj) => {\r\n\t\t\treturn {}.toString.apply(obj) === '[object Object]'\r\n\t\t},\r\n\t\t\r\n\t\t\r\n\t\tisValue: (obj) => {\r\n\t\t\treturn !this.isObject(obj) && !this.isArray(obj)\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/*\r\nconst result = deepDiffMapper.map(\r\n\t{\r\n      a:'i am unchanged',\r\n      b:'i am deleted',\r\n      e:{ a: 1,b:false, c: null},\r\n      f: [1,{a: 'same',b:[{a:'same'},{d: 'delete'}]}]\r\n  },\r\n  {\r\n      a:'i am unchanged',\r\n      c:'i am created',\r\n      e:{ a: '1', b: '', d:'created'},\r\n      f: [{a: 'same',b:[{a:'same'},{c: 'create'}]},1]\r\n  \r\n  }\r\n)\r\n\r\nconsole.log(result)*/\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/utils/diff.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1815,
    "kind": "function",
    "name": "diff",
    "memberof": "js/utils/diff.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/diff.js~diff",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/utils/diff.js",
    "importStyle": "{diff}",
    "description": "Source : http://jsfiddle.net/sbgoran/kySNu/",
    "lineNumber": 6,
    "params": [],
    "return": {
      "types": [
        "{\"VALUE_CREATED\": string, \"VALUE_UPDATED\": string, \"VALUE_DELETED\": string, \"VALUE_UNCHANGED\": string, \"map\": *, \"compareValues\": *, \"isFunction\": *, \"isArray\": *, \"isObject\": *, \"isValue\": *}"
      ]
    }
  },
  {
    "__docId__": 1816,
    "kind": "file",
    "name": "js/utils/digest.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport { is_browser } from './is_browser'\r\n\r\nlet  forge = undefined\r\nif ( is_browser() )\r\n{\r\n\tforge = require('forge-browser').forge\r\n} else {\r\n\tforge = require('node-forge')\r\n}\r\n\r\n\r\nconst context = 'common/utils/digest'\r\n\r\n\r\n\r\n/**\r\n * @file Digest class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class Digest\r\n{\r\n    /**\r\n     * Create a Digest instance.\r\n\t * \r\n\t * \tAPI:\r\n\t * \t\t->hash():string - \r\n\t * \r\n     * @returns {nothing}\r\n     */\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Hash a string.\r\n\t * \r\n\t * @param {string} arg_string - string to hash.\r\n\t * @param {string|undefined} arg_digest_method - digest method name (sha1,sha256,sha384,sha512,md5)\r\n\t * @param {string|undefined} arg_encoding_method - encoding method name (hex,utf8,utf16,binary,base64,hexstr)\r\n\t * \r\n\t * @returns {string} - hashed string\r\n\t */\r\n\tstatic hash(arg_string, arg_digest_method, arg_encoding_method)\r\n\t{\r\n\t\tassert(T.isString(arg_string), context + ':bad input string')\r\n\t\targ_digest_method = T.isString(arg_digest_method) ? arg_digest_method : 'sha1'\r\n\t\targ_encoding_method = T.isString(arg_encoding_method) ? arg_encoding_method : 'hex'\r\n\t\t\r\n\t\t// const buffer = forge.util.createBuffer(arg_string, 'utf8')\r\n\t\t// return buffer.toString('base64')\r\n\t\t\r\n\t\t// GET MESSAGE DIGEST FUNCTION\r\n\t\tlet md = null\r\n\t\tswitch(arg_digest_method.toLocaleLowerCase())\r\n\t\t{\r\n\t\t\tcase 'sha1':   md = forge.md.sha1.create(); break\r\n\t\t\tcase 'sha256': md = forge.md.sha256.create(); break\r\n\t\t\tcase 'sha384': md = forge.md.sha384.create(); break\r\n\t\t\tcase 'sha512': md = forge.md.sha512.create(); break\r\n\t\t\tcase 'md5':\t   md = forge.md.md5.create(); break\r\n\t\t\tdefault: this.error_bad_digest_method(arg_digest_method); return null\r\n\t\t}\r\n\t\tassert(md, context + ':bad message digest object')\r\n\t\tmd.update(arg_string)\r\n\t\t\r\n\t\t// GET ENCODED MESSAGE\r\n\t\tlet encoded = null\r\n\t\tswitch(arg_encoding_method.toLocaleLowerCase())\r\n\t\t{\r\n\t\t\tcase 'hex':\r\n\t\t\t\tencoded = md.digest().toHex(); break\r\n\t\t\tcase 'utf8':\r\n\t\t\tcase 'utf-8':\r\n\t\t\t\t// encoded = md.digest().toString('utf8'); break\r\n\t\t\t\tencoded = forge.util.createBuffer(md.digest().toHex(), 'hex')\r\n\t\t\t\tencoded = encoded.toString('utf8'); break\r\n\t\t\tcase 'utf16':\r\n\t\t\tcase 'utf-16':\r\n\t\t\t\t// encoded = md.digest().toString('utf16'); break\r\n\t\t\t\tencoded = forge.util.createBuffer(md.digest().toHex(), 'hex')\r\n\t\t\t\tencoded = encoded.toString('utf16'); break\r\n\t\t\tcase 'binary':\r\n\t\t\t\t// encoded = md.digest().toString('binary'); break\r\n\t\t\t\tencoded = forge.util.createBuffer(md.digest().toHex(), 'hex')\r\n\t\t\t\tencoded = encoded.toString('binary'); break\r\n\t\t\tcase 'base64':\r\n\t\t\t\t// encoded = md.digest().toString('base64'); break\r\n\t\t\t\tencoded = forge.util.createBuffer(md.digest().toHex(), 'hex')\r\n\t\t\t\tencoded = encoded.toString('base64'); break\r\n\t\t\tcase 'hexstr':\r\n\t\t\t\tencoded = md.digest().toString('hex'); break\r\n\t\t\tdefault: this.error_bad_encoding_method(arg_encoding_method); return null\r\n\t\t}\r\n\t\tassert(encoded, context + ':bad message encoding result')\r\n\t\t\r\n\t\treturn encoded\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Hash a string with SHA1.\r\n\t * \r\n\t * @param {string} arg_string - string to hash.\r\n\t * @param {string|undefined} arg_encoding_method - encoding (default:hex or utf8,utf16,binary,base64,hexstr)\r\n\t * \r\n\t * @returns {string} - hashed string\r\n\t */\r\n\tstatic sha1(arg_string, arg_encoding_method='hex')\r\n\t{\r\n\t\treturn Digest.hash(arg_string, 'sha1', arg_encoding_method)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Hash a string with SHA256.\r\n\t * \r\n\t * @param {string} arg_string - string to hash.\r\n\t * @param {string|undefined} arg_encoding_method - encoding (default:hex or utf8,utf16,binary,base64,hexstr)\r\n\t * \r\n\t * @returns {string} - hashed string\r\n\t */\r\n\tstatic sha256(arg_string, arg_encoding_method='hex')\r\n\t{\r\n\t\treturn Digest.hash(arg_string, 'sha256', arg_encoding_method)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Hash a string with SHA384.\r\n\t * \r\n\t * @param {string} arg_string - string to hash.\r\n\t * @param {string|undefined} arg_encoding_method - encoding (default:hex or utf8,utf16,binary,base64,hexstr)\r\n\t * \r\n\t * @returns {string} - hashed string\r\n\t */\r\n\tstatic sha384(arg_string, arg_encoding_method='hex')\r\n\t{\r\n\t\treturn Digest.hash(arg_string, 'sha384', arg_encoding_method)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Hash a string with SHA512.\r\n\t * \r\n\t * @param {string} arg_string - string to hash.\r\n\t * @param {string|undefined} arg_encoding_method - encoding (default:hex or utf8,utf16,binary,base64,hexstr)\r\n\t * \r\n\t * @returns {string} - hashed string\r\n\t */\r\n\tstatic sha512(arg_string, arg_encoding_method='hex')\r\n\t{\r\n\t\treturn Digest.hash(arg_string, 'sha512', arg_encoding_method)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Hash a string with MD5.\r\n\t * \r\n\t * @param {string} arg_string - string to hash.\r\n\t * @param {string|undefined} arg_encoding_method - encoding (default:hex or utf8,utf16,binary,base64,hexstr)\r\n\t * \r\n\t * @returns {string} - hashed string\r\n\t */\r\n\tstatic md5(arg_string, arg_encoding_method='hex')\r\n\t{\r\n\t\treturn Digest.hash(arg_string, 'md5', arg_encoding_method)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/utils/digest.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1817,
    "kind": "variable",
    "name": "forge",
    "memberof": "js/utils/digest.js",
    "static": true,
    "longname": "js/utils/digest.js~forge",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/digest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1818,
    "kind": "variable",
    "name": "context",
    "memberof": "js/utils/digest.js",
    "static": true,
    "longname": "js/utils/digest.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/digest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1819,
    "kind": "class",
    "name": "Digest",
    "memberof": "js/utils/digest.js",
    "static": true,
    "longname": "js/utils/digest.js~Digest",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/utils/digest.js",
    "importStyle": "Digest",
    "description": "",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Digest class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 1820,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/utils/digest.js~Digest",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/utils/digest.js~Digest#constructor",
    "access": "public",
    "description": "Create a Digest instance.\n\n\tAPI:\n\t\t->hash():string - ",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1821,
    "kind": "method",
    "name": "hash",
    "memberof": "js/utils/digest.js~Digest",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/digest.js~Digest.hash",
    "access": "public",
    "description": "Hash a string.",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - hashed string"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_string",
        "description": "string to hash."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_digest_method",
        "description": "digest method name (sha1,sha256,sha384,sha512,md5)"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_encoding_method",
        "description": "encoding method name (hex,utf8,utf16,binary,base64,hexstr)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "hashed string"
    }
  },
  {
    "__docId__": 1822,
    "kind": "method",
    "name": "sha1",
    "memberof": "js/utils/digest.js~Digest",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/digest.js~Digest.sha1",
    "access": "public",
    "description": "Hash a string with SHA1.",
    "lineNumber": 119,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - hashed string"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_string",
        "description": "string to hash."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_encoding_method",
        "description": "encoding (default:hex or utf8,utf16,binary,base64,hexstr)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "hashed string"
    }
  },
  {
    "__docId__": 1823,
    "kind": "method",
    "name": "sha256",
    "memberof": "js/utils/digest.js~Digest",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/digest.js~Digest.sha256",
    "access": "public",
    "description": "Hash a string with SHA256.",
    "lineNumber": 134,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - hashed string"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_string",
        "description": "string to hash."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_encoding_method",
        "description": "encoding (default:hex or utf8,utf16,binary,base64,hexstr)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "hashed string"
    }
  },
  {
    "__docId__": 1824,
    "kind": "method",
    "name": "sha384",
    "memberof": "js/utils/digest.js~Digest",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/digest.js~Digest.sha384",
    "access": "public",
    "description": "Hash a string with SHA384.",
    "lineNumber": 149,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - hashed string"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_string",
        "description": "string to hash."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_encoding_method",
        "description": "encoding (default:hex or utf8,utf16,binary,base64,hexstr)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "hashed string"
    }
  },
  {
    "__docId__": 1825,
    "kind": "method",
    "name": "sha512",
    "memberof": "js/utils/digest.js~Digest",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/digest.js~Digest.sha512",
    "access": "public",
    "description": "Hash a string with SHA512.",
    "lineNumber": 164,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - hashed string"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_string",
        "description": "string to hash."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_encoding_method",
        "description": "encoding (default:hex or utf8,utf16,binary,base64,hexstr)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "hashed string"
    }
  },
  {
    "__docId__": 1826,
    "kind": "method",
    "name": "md5",
    "memberof": "js/utils/digest.js~Digest",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/digest.js~Digest.md5",
    "access": "public",
    "description": "Hash a string with MD5.",
    "lineNumber": 179,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - hashed string"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_string",
        "description": "string to hash."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_encoding_method",
        "description": "encoding (default:hex or utf8,utf16,binary,base64,hexstr)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "hashed string"
    }
  },
  {
    "__docId__": 1827,
    "kind": "file",
    "name": "js/utils/encode_decode.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport {is_browser} from './is_browser'\r\n\r\nlet  forge = undefined\r\nif ( is_browser() )\r\n{\r\n\tforge = require('forge-browser').forge\r\n} else {\r\n\tforge = require('node-forge')\r\n}\r\n\r\n\r\nconst context = 'common/utils/encode_decode'\r\n\r\n\r\n\r\n/**\r\n * @file EncodeDecode class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class EncodeDecode\r\n{\r\n    /**\r\n     * Create a EncodeDecode instance.\r\n\t * \r\n\t * \tAPI:\r\n\t * \t\t->hash():string - \r\n\t * \r\n     * @returns {nothing}\r\n     */\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Encode a string.\r\n\t * \r\n\t * @param {string} arg_string - utf8 string to hash.\r\n\t * @param {string|undefined} arg_encoding_method - encoding method (default:hex or utf8,utf16,binary,base64,hexstr)\r\n\t * \r\n\t * @returns {string} - encoded string\r\n\t */\r\n\tstatic encode(arg_string, arg_encoding_method='hex')\r\n\t{\r\n\t\tassert(T.isString(arg_string), context + ':bad input string')\r\n\t\targ_encoding_method = T.isString(arg_encoding_method) ? arg_encoding_method : 'hex'\r\n\t\t\r\n\t\tconst buffer = forge.util.createBuffer(arg_string, 'utf8')\r\n\t\t\r\n\t\t// GET ENCODED MESSAGE\r\n\t\tlet encoded = null\r\n\t\tswitch(arg_encoding_method.toLocaleLowerCase())\r\n\t\t{\r\n\t\t\tcase 'hex':\r\n\t\t\t\tencoded = buffer.toHex(); break\r\n\t\t\tcase 'utf8':\r\n\t\t\tcase 'utf-8':\r\n\t\t\t\tencoded = buffer.toString('utf8'); break\r\n\t\t\tcase 'utf16':\r\n\t\t\tcase 'utf-16':\r\n\t\t\t\tencoded = buffer.toString('utf16'); break\r\n\t\t\tcase 'binary':\r\n\t\t\t\tencoded = buffer.toString('binary'); break\r\n\t\t\tcase 'base64':\r\n\t\t\t\tencoded = buffer.toString('base64'); break\r\n\t\t\tcase 'hexstr':\r\n\t\t\t\tencoded = buffer.toString('hex'); break\r\n\t\t\tdefault: this.error_bad_encoding_method(arg_encoding_method); return null\r\n\t\t}\r\n\t\tassert(encoded, context + ':bad message encoding result')\r\n\t\t\r\n\t\treturn encoded\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Decode a string.\r\n\t * \r\n\t * @param {string} arg_string - string to hash.\r\n\t * @param {string|undefined} arg_encoding_method - encoding method (default:hex,utf8,utf16,binary,base64,hexstr)\r\n\t * \r\n\t * @returns {string} - decoded string in utf8\r\n\t */\r\n\tstatic decode(arg_string, arg_encoding_method='hex')\r\n\t{\r\n\t\tassert(T.isString(arg_string), context + ':bad input string')\r\n\t\targ_encoding_method = T.isString(arg_encoding_method) ? arg_encoding_method : 'hex'\r\n\t\t\r\n\t\tlet buffer = null\r\n\t\tswitch(arg_encoding_method.toLocaleLowerCase())\r\n\t\t{\r\n\t\t\tcase 'hex':\r\n\t\t\t\tbuffer = forge.util.createBuffer(arg_string, 'hex'); break\r\n\t\t\tcase 'utf8':\r\n\t\t\tcase 'utf-8':\r\n\t\t\t\tbuffer = forge.util.createBuffer(arg_string, 'utf8'); break\r\n\t\t\tcase 'utf16':\r\n\t\t\tcase 'utf-16':\r\n\t\t\t\tbuffer = forge.util.createBuffer(arg_string, 'utf16'); break\r\n\t\t\tcase 'binary':\r\n\t\t\t\tbuffer = forge.util.createBuffer(arg_string, 'binary'); break\r\n\t\t\tcase 'base64':\r\n\t\t\t\tbuffer = forge.util.createBuffer(arg_string, 'base64'); break\r\n\t\t\tcase 'hexstr':\r\n\t\t\t\tbuffer = forge.util.createBuffer(arg_string, 'hex'); break\r\n\t\t\tdefault: this.error_bad_encoding_method(arg_encoding_method); return null\r\n\t\t}\r\n\t\tassert(buffer, context + ':bad message decoding result')\r\n\t\t\r\n\t\treturn buffer.toString('utf8')\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/utils/encode_decode.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1828,
    "kind": "variable",
    "name": "forge",
    "memberof": "js/utils/encode_decode.js",
    "static": true,
    "longname": "js/utils/encode_decode.js~forge",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/encode_decode.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1829,
    "kind": "variable",
    "name": "context",
    "memberof": "js/utils/encode_decode.js",
    "static": true,
    "longname": "js/utils/encode_decode.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/encode_decode.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1830,
    "kind": "class",
    "name": "EncodeDecode",
    "memberof": "js/utils/encode_decode.js",
    "static": true,
    "longname": "js/utils/encode_decode.js~EncodeDecode",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/utils/encode_decode.js",
    "importStyle": "EncodeDecode",
    "description": "",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "EncodeDecode class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 1831,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/utils/encode_decode.js~EncodeDecode",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/utils/encode_decode.js~EncodeDecode#constructor",
    "access": "public",
    "description": "Create a EncodeDecode instance.\n\n\tAPI:\n\t\t->hash():string - ",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1832,
    "kind": "method",
    "name": "encode",
    "memberof": "js/utils/encode_decode.js~EncodeDecode",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/encode_decode.js~EncodeDecode.encode",
    "access": "public",
    "description": "Encode a string.",
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - encoded string"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_string",
        "description": "utf8 string to hash."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_encoding_method",
        "description": "encoding method (default:hex or utf8,utf16,binary,base64,hexstr)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "encoded string"
    }
  },
  {
    "__docId__": 1833,
    "kind": "method",
    "name": "decode",
    "memberof": "js/utils/encode_decode.js~EncodeDecode",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/encode_decode.js~EncodeDecode.decode",
    "access": "public",
    "description": "Decode a string.",
    "lineNumber": 94,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - decoded string in utf8"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_string",
        "description": "string to hash."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_encoding_method",
        "description": "encoding method (default:hex,utf8,utf16,binary,base64,hexstr)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "decoded string in utf8"
    }
  },
  {
    "__docId__": 1834,
    "kind": "file",
    "name": "js/utils/encrypt_decrypt.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport {is_browser} from './is_browser'\r\n\r\nlet  forge = undefined\r\nif ( is_browser() )\r\n{\r\n\tforge = require('forge-browser').forge\r\n} else {\r\n\tforge = require('node-forge')\r\n}\r\n\r\n\r\nconst context = 'common/utils/encrypt_decrypt'\r\n\r\n\r\n\r\n/**\r\n * @file EncryptDecrypt class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class EncryptDecrypt\r\n{\r\n    /**\r\n     * Create a EncryptDecrypt instance.\r\n\t * \r\n\t * \tAPI:\r\n\t * \t\t->hash():string - \r\n\t * \r\n     * @returns {nothing}\r\n     */\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Generate an encryption key from a secret.\r\n\t * \r\n\t * @param {string} arg_app_secret - application cryptographic secret.\r\n\t * @param {number} arg_num_iterations - iterations count.\r\n\t * @param {number} arg_key_length - key length.\r\n\t * @param {number} arg_iv_length - iv length.\r\n\t * \r\n\t * @returns {string} - encrypted string.\r\n\t */\r\n\tstatic key(arg_app_secret, arg_num_iterations=10, arg_key_length=32)\r\n\t{\r\n\t\tassert( T.isString(arg_app_secret) && arg_app_secret.length > 0, context + ':encrypt:bad secret string')\r\n\t\tassert( T.isNumber(arg_num_iterations) && arg_num_iterations > 3, context + ':encrypt:bad key length')\r\n\t\tassert( T.isNumber(arg_key_length) && arg_key_length > 15, context + ':encrypt:bad key length')\r\n\r\n\t\tconst salt = forge.random.getBytesSync(128)\r\n\r\n\t\treturn forge.pkcs5.pbkdf2(arg_app_secret, salt, arg_num_iterations, arg_key_length)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Transform to a string with encryption.\r\n\t * \r\n\t * @param {string} arg_string - string to encrypt.\r\n\t * @param {string} arg_key - encryotion key.\r\n\t * @param {string} arg_mode - cryptographic mode AES-ECB,AES-CBC,AES-CFB,AES-OFB,AES-CTR,AES-GCM,3DES-ECB,3DES-CBC,DES-ECB,DES-CBC.\r\n\t * @param {number} arg_iv_length - iv length.\r\n\t * \r\n\t * @returns {string} - encrypted string.\r\n\t */\r\n\tstatic encrypt(arg_string, arg_key, arg_mode='AES-ECB', arg_iv_length=8)\r\n\t{\r\n\t\tassert( T.isString(arg_string) && arg_string.length > 0, context + ':encrypt:bad input string')\r\n\t\tassert( T.isNumber(arg_iv_length)  && arg_iv_length > 7, context + ':encrypt:bad iv length')\r\n\r\n\t\tconst iv = forge.random.getBytesSync(arg_iv_length)\r\n\r\n\t\tconst buffer = forge.util.createBuffer(arg_string)\r\n\t\tconst cipher = forge.cipher.createCipher(arg_mode, arg_key)\r\n\t\tcipher.start({iv: iv})\r\n\t\tcipher.update(buffer)\r\n\t\tcipher.finish()\r\n\t\tconst encrypted = cipher.output\r\n\r\n\t\treturn encrypted.toHex()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Transform to a string without encryption.\r\n\t * \r\n\t * @param {string} arg_string - encrypted string.\r\n\t * @param {string} arg_key - encryption key.\r\n\t * @param {string} arg_mode - cryptographic mode AES-ECB,AES-CBC,AES-CFB,AES-OFB,AES-CTR,AES-GCM,3DES-ECB,3DES-CBC,DES-ECB,DES-CBC.\r\n\t * @param {number} arg_iv_length - iv length.\r\n\t * \r\n\t * @returns {string} - decrypted string.\r\n\t */\r\n\tstatic decrypt(arg_string, arg_key, arg_mode='AES-ECB', arg_iv_length=8)\r\n\t{\r\n\t\tassert( T.isString(arg_string) && arg_string.length > 0, context + ':encrypt:bad encrypted string')\r\n\t\tassert( T.isString(arg_mode)   && arg_mode.length > 0, context + ':encrypt:bad mode string')\r\n\t\tassert( T.isString(arg_key)   && arg_mode.length > 0, context + ':encrypt:bad key string')\r\n\t\tassert( T.isNumber(arg_iv_length)  && arg_iv_length > 7, context + ':encrypt:bad iv length')\r\n\r\n\t\tconst iv = forge.random.getBytesSync(arg_iv_length)\r\n\r\n\t\tconst buffer = forge.util.createBuffer(arg_string)\r\n\t\tconst decipher = forge.cipher.createDecipher(arg_mode, arg_key)\r\n\t\tdecipher.start({iv: iv})\r\n\t\tdecipher.update(buffer)\r\n\t\tdecipher.finish()\r\n\t\tconst decrypted = decipher.output\r\n\r\n\t\treturn decrypted.toHex()\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/utils/encrypt_decrypt.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1835,
    "kind": "variable",
    "name": "forge",
    "memberof": "js/utils/encrypt_decrypt.js",
    "static": true,
    "longname": "js/utils/encrypt_decrypt.js~forge",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/encrypt_decrypt.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1836,
    "kind": "variable",
    "name": "context",
    "memberof": "js/utils/encrypt_decrypt.js",
    "static": true,
    "longname": "js/utils/encrypt_decrypt.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/encrypt_decrypt.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1837,
    "kind": "class",
    "name": "EncryptDecrypt",
    "memberof": "js/utils/encrypt_decrypt.js",
    "static": true,
    "longname": "js/utils/encrypt_decrypt.js~EncryptDecrypt",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/utils/encrypt_decrypt.js",
    "importStyle": "EncryptDecrypt",
    "description": "",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "EncryptDecrypt class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 1838,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/utils/encrypt_decrypt.js~EncryptDecrypt",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/utils/encrypt_decrypt.js~EncryptDecrypt#constructor",
    "access": "public",
    "description": "Create a EncryptDecrypt instance.\n\n\tAPI:\n\t\t->hash():string - ",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1839,
    "kind": "method",
    "name": "key",
    "memberof": "js/utils/encrypt_decrypt.js~EncryptDecrypt",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/encrypt_decrypt.js~EncryptDecrypt.key",
    "access": "public",
    "description": "Generate an encryption key from a secret.",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - encrypted string."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_app_secret",
        "description": "application cryptographic secret."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_num_iterations",
        "description": "iterations count."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_key_length",
        "description": "key length."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_iv_length",
        "description": "iv length."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "encrypted string."
    }
  },
  {
    "__docId__": 1840,
    "kind": "method",
    "name": "encrypt",
    "memberof": "js/utils/encrypt_decrypt.js~EncryptDecrypt",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/encrypt_decrypt.js~EncryptDecrypt.encrypt",
    "access": "public",
    "description": "Transform to a string with encryption.",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - encrypted string."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_string",
        "description": "string to encrypt."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_key",
        "description": "encryotion key."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_mode",
        "description": "cryptographic mode AES-ECB,AES-CBC,AES-CFB,AES-OFB,AES-CTR,AES-GCM,3DES-ECB,3DES-CBC,DES-ECB,DES-CBC."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_iv_length",
        "description": "iv length."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "encrypted string."
    }
  },
  {
    "__docId__": 1841,
    "kind": "method",
    "name": "decrypt",
    "memberof": "js/utils/encrypt_decrypt.js~EncryptDecrypt",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/encrypt_decrypt.js~EncryptDecrypt.decrypt",
    "access": "public",
    "description": "Transform to a string without encryption.",
    "lineNumber": 106,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - decrypted string."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_string",
        "description": "encrypted string."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_key",
        "description": "encryption key."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_mode",
        "description": "cryptographic mode AES-ECB,AES-CBC,AES-CFB,AES-OFB,AES-CTR,AES-GCM,3DES-ECB,3DES-CBC,DES-ECB,DES-CBC."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_iv_length",
        "description": "iv length."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "decrypted string."
    }
  },
  {
    "__docId__": 1842,
    "kind": "file",
    "name": "js/utils/es5-compat.js",
    "content": "\r\n\r\n// POLYFILL FOR PROMISE\r\n// FOR NODE 0.10\r\n// if (! Promise)\r\nif (!Array.prototype.find)\r\n{\r\n\t// var Promise = require('es6-promise').Promise\r\n\t// require('es6-promise').polyfill()\r\n\trequire(\"babel-polyfill\")\r\n}\r\n\r\n\r\n\r\n// POLYFILL FOR SYMBOL\r\n// FOR NODE 0.10\r\n// if (! Symbol)\r\nif (!Array.prototype.find)\r\n{\r\n\t// var Symbol = require('es6-symbol')\r\n\trequire('es6-symbol/implement')\r\n}\r\n\r\n\r\n\r\n// POLYFILL FOR PATH.ISABSOLUTE\r\n// FOR NODE 0.10\r\nvar path = require('path')\r\nif (typeof path.isAbsolute != 'function')\r\n{\r\n\tvar pathIsAbsolute = require('path-is-absolute')\r\n\t{\r\n\t\tpath.isAbsolute = pathIsAbsolute\r\n\t}\r\n}\r\n\r\n\r\n\r\n// POLYFILL FOR ARRAY.FIND\r\n// FOR NODE 0.10\r\nif (!Array.prototype.find)\r\n{\r\n\tArray.prototype.find = function(predicate)\r\n\t{\r\n\t\tif (this == null)\r\n\t\t{\r\n\t\t\tthrow new TypeError('Array.prototype.find a été appelé sur null ou undefined');\r\n\t\t}\r\n\t\tif (typeof predicate !== 'function')\r\n\t\t{\r\n\t\t\tthrow new TypeError('predicate doit être une fonction');\r\n\t\t}\r\n\t\tvar list = Object(this)\r\n\t\tvar length = list.length >>> 0\r\n\t\tvar thisArg = arguments[1]\r\n\t\tvar value\r\n\r\n\t\tfor (var i = 0; i < length; i++)\r\n\t\t{\r\n\t\t\tvalue = list[i]\r\n\t\t\tif (predicate.call(thisArg, value, i, list))\r\n\t\t\t{\r\n\t\t\t\treturn value\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn undefined\r\n\t}\r\n}\r\n\r\n\r\n\r\n// POLYFILL OBJECT.ASSIGN\r\n// FOR NODE 0.10\r\nif (typeof Object.assign != 'function')\r\n{\r\n\tObject.assign = function(target) {\r\n\t\t'use strict'\r\n\t\tif (target == null)\r\n\t\t{\r\n\t\t\tthrow new TypeError('Cannot convert undefined or null to object');\r\n\t\t}\r\n\r\n\t\ttarget = Object(target)\r\n\t\tfor (var index = 1; index < arguments.length; index++)\r\n\t\t{\r\n\t\t\tvar source = arguments[index]\r\n\t\t\tif (source != null)\r\n\t\t\t{\r\n\t\t\t\tfor (var key in source)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(source, key))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttarget[key] = source[key];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/utils/es5-compat.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1843,
    "kind": "variable",
    "name": "path",
    "memberof": "js/utils/es5-compat.js",
    "static": true,
    "longname": "js/utils/es5-compat.js~path",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/es5-compat.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1844,
    "kind": "file",
    "name": "js/utils/hot_reloading.js",
    "content": "",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/utils/hot_reloading.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1845,
    "kind": "file",
    "name": "js/utils/html_entities.js",
    "content": "// NPM IMPORTS\r\nimport { AllHtmlEntities } from 'html-entities'\r\n\r\nconst html_entities = new AllHtmlEntities()\r\n\r\nexport default {\r\n\tencode:           (x)=>html_entities.encode(x),\r\n\tencode_non_utf:   (x)=>html_entities.encodeNonUTF(x),\r\n\tencode_non_ascii: (x)=>html_entities.encodeNonASCII(x),\r\n\tdecode:           (x)=>html_entities.decode(x)\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/utils/html_entities.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1846,
    "kind": "variable",
    "name": "html_entities",
    "memberof": "js/utils/html_entities.js",
    "static": true,
    "longname": "js/utils/html_entities.js~html_entities",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/html_entities.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1847,
    "kind": "file",
    "name": "js/utils/is_browser.js",
    "content": "\r\nconst has_window = new Function('try {return this===window;}catch(e){ return false;}')\r\n\r\nconst is_node = new Function('try {return this===global;}catch(e){return false;}')\r\n\r\n\r\nexport function is_server() { return is_node() }\r\n\r\nexport function is_browser() { return has_window() }\r\n\r\nexport default { is_server, is_browser }\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/utils/is_browser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1848,
    "kind": "variable",
    "name": "has_window",
    "memberof": "js/utils/is_browser.js",
    "static": true,
    "longname": "js/utils/is_browser.js~has_window",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/is_browser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1849,
    "kind": "variable",
    "name": "is_node",
    "memberof": "js/utils/is_browser.js",
    "static": true,
    "longname": "js/utils/is_browser.js~is_node",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/is_browser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1850,
    "kind": "function",
    "name": "is_server",
    "memberof": "js/utils/is_browser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/is_browser.js~is_server",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/utils/is_browser.js",
    "importStyle": "{is_server}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1851,
    "kind": "function",
    "name": "is_browser",
    "memberof": "js/utils/is_browser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/is_browser.js~is_browser",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/utils/is_browser.js",
    "importStyle": "{is_browser}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1852,
    "kind": "file",
    "name": "js/utils/is_remote.js",
    "content": "\r\nimport Net from 'net'\r\n\r\n\r\nexport function is_remote(arg_host, arg_port)\r\n{\r\n\treturn Net.localAddress != arg_host && (arg_port ? Net.localPort != arg_port : true)\r\n}\r\n\r\n\r\nexport function is_locale(arg_host, arg_port)\r\n{\r\n\treturn ! is_remote(arg_host)\r\n}\r\n\r\n\r\nexport default { is_remote, is_locale }\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/utils/is_remote.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1853,
    "kind": "function",
    "name": "is_remote",
    "memberof": "js/utils/is_remote.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/is_remote.js~is_remote",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/utils/is_remote.js",
    "importStyle": "{is_remote}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "arg_host",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_port",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1854,
    "kind": "function",
    "name": "is_locale",
    "memberof": "js/utils/is_remote.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/is_remote.js~is_locale",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/utils/is_remote.js",
    "importStyle": "{is_locale}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "arg_host",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_port",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1855,
    "kind": "file",
    "name": "js/utils/obj_diff.js",
    "content": "\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\n\r\n\r\n\r\n// RETURN DIFFERENT (KEYS PATH, VALUE) BETWEEN TWO JS CONFIG\r\nconst diff = function(config_1, config_2)\r\n{\r\n\tif (! config_1)\r\n\t{\r\n\t\treturn config_2 ? config_2 : null\r\n\t}\r\n\t\r\n\tif (! config_2)\r\n\t{\r\n\t\treturn config_1 ? config_1 : null\r\n\t}\r\n\t\r\n\tif ( T.isObject(config_1) && ! T.isObject(config_2) )\r\n\t{\r\n\t\treturn null\r\n\t}\r\n\t\r\n\tif ( ! T.isObject(config_1) && T.isObject(config_2) )\r\n\t{\r\n\t\treturn null\r\n\t}\r\n\t\r\n\tif ( T.isArray(config_1) && ! T.isArray(config_2) )\r\n\t{\r\n\t\treturn null\r\n\t}\r\n\t\r\n\tif ( ! T.isArray(config_1) && T.isArray(config_2) )\r\n\t{\r\n\t\treturn null\r\n\t}\r\n\t\r\n\tlet keys_1 = Object.keys(config_1)\r\n\tlet keys_2 = Object.keys(config_2)\r\n\t\r\n\t// LOOP ON CONFIG 1\r\n\tkeys_1.forEach(\r\n\t\t(key_1) => {\r\n\t\t\tlet value_1 = config_1[key_1]\r\n\t\t\tif (keys_2.indexOf(key_1) < 0)\r\n\t\t\t{\r\n\t\t\t\treturn value_1\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet value_2 = config_2[key_1]\r\n\t\t\tif ( T.isObject(value_2) )\r\n\t\t\t{\r\n\t\t\t\treturn diff(value_1, value_2)\r\n\t\t\t}\r\n\t\t}\r\n\t)\r\n}\r\n\r\nexport default diff\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/utils/obj_diff.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1856,
    "kind": "function",
    "name": "diff",
    "memberof": "js/utils/obj_diff.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/obj_diff.js~diff",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/utils/obj_diff.js",
    "importStyle": "diff",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "config_1",
        "types": [
          "*"
        ]
      },
      {
        "name": "config_2",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1857,
    "kind": "file",
    "name": "js/utils/old_logs.js",
    "content": "\r\n// var API = require('./logs_console');\r\nimport * as API_winston from './logs_winston'\r\nimport * as API_console from './logs_console'\r\n\r\n\r\n\r\nconst mw = API_winston\r\n\r\n\r\nlet API = {}\r\n// API.enabled = true\r\n\r\n\r\nAPI.enable_trace = function()\r\n{\r\n\tAPI.enabled = true\r\n}\r\n// mw.enable_trace = API.enable_trace\r\n\r\n\r\nAPI.disable_trace = function()\r\n{\r\n\tAPI.enabled = false\r\n}\r\n// mw.disable_trace = API.disable_trace\r\n\r\n\t\r\nAPI.get_trace = function()\r\n{\r\n\treturn API.enabled\r\n}\r\n// mw.get_trace = API.get_trace\r\n\r\n\r\nAPI.set_trace = function(arg_value)\r\n{\r\n\tAPI.enabled = arg_value\r\n}\r\n// mw.set_trace = API.set_trace\r\n\r\n\r\nAPI.toggle_trace = function()\r\n{\r\n\tAPI.enabled = ! API.enabled\r\n}\r\n// mw.toggle_trace = API.toggle_trace\r\n\r\n\r\nfunction should_trace(arg_level, arg_module)\r\n{\r\n\treturn API.enabled ? API.enabled : false // && ! /executable_route/.test(arg_module)\r\n}\r\n// mw.should_trace = API.should_trace\r\nAPI.should_trace = should_trace\r\n\r\n\r\nAPI.debug = function(arg_module, arg_msg, arg_val_1, arg_val_2, arg_val_3)\r\n{\r\n\tif ( should_trace('debug', arg_module) )\r\n\t{\r\n\t\tmw.debug(arg_module, arg_msg, arg_val_1, arg_val_2, arg_val_3)\r\n\t}\r\n}\r\n\r\n\r\nAPI.info = function(arg_module, arg_msg, arg_val_1, arg_val_2, arg_val_3)\r\n{\r\n\tif ( should_trace('info', arg_module) )\r\n\t{\r\n\t\tmw.info(arg_module, arg_msg, arg_val_1, arg_val_2, arg_val_3)\r\n\t}\r\n}\r\n\r\n\r\nAPI.warn = function(arg_module, arg_msg, arg_val_1, arg_val_2, arg_val_3)\r\n{\r\n\tif ( should_trace('warn', arg_module) )\r\n\t{\r\n\t\tmw.warn(arg_module, arg_msg, arg_val_1, arg_val_2, arg_val_3)\r\n\t}\r\n}\r\n\r\n\r\nAPI.error = function(arg_module, arg_msg)\r\n{\r\n\tif ( should_trace('error', arg_module) )\r\n\t{\r\n\t\tmw.error(arg_module, arg_msg)\r\n\t}\r\n}\r\n\r\nmodule.exports = API\r\nexport default API",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/utils/old_logs.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1858,
    "kind": "variable",
    "name": "mw",
    "memberof": "js/utils/old_logs.js",
    "static": true,
    "longname": "js/utils/old_logs.js~mw",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/old_logs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1859,
    "kind": "function",
    "name": "enable_trace",
    "memberof": "js/utils/old_logs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/old_logs.js~enable_trace",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/old_logs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 1860,
    "kind": "function",
    "name": "disable_trace",
    "memberof": "js/utils/old_logs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/old_logs.js~disable_trace",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/old_logs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 1861,
    "kind": "function",
    "name": "get_trace",
    "memberof": "js/utils/old_logs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/old_logs.js~get_trace",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/old_logs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1862,
    "kind": "function",
    "name": "set_trace",
    "memberof": "js/utils/old_logs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/old_logs.js~set_trace",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/old_logs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "params": [
      {
        "name": "arg_value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 1863,
    "kind": "function",
    "name": "toggle_trace",
    "memberof": "js/utils/old_logs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/old_logs.js~toggle_trace",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/old_logs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 1864,
    "kind": "function",
    "name": "should_trace",
    "memberof": "js/utils/old_logs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/old_logs.js~should_trace",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/old_logs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [
      {
        "name": "arg_level",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_module",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1865,
    "kind": "function",
    "name": "debug",
    "memberof": "js/utils/old_logs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/old_logs.js~debug",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/old_logs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "params": [
      {
        "name": "arg_module",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_msg",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_1",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_2",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_3",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 1866,
    "kind": "function",
    "name": "info",
    "memberof": "js/utils/old_logs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/old_logs.js~info",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/old_logs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "params": [
      {
        "name": "arg_module",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_msg",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_1",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_2",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_3",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 1867,
    "kind": "function",
    "name": "warn",
    "memberof": "js/utils/old_logs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/old_logs.js~warn",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/old_logs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "params": [
      {
        "name": "arg_module",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_msg",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_1",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_2",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_3",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 1868,
    "kind": "function",
    "name": "error",
    "memberof": "js/utils/old_logs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/old_logs.js~error",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/old_logs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "params": [
      {
        "name": "arg_module",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_msg",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 1869,
    "kind": "variable",
    "name": "API",
    "memberof": "js/utils/old_logs.js",
    "static": true,
    "longname": "js/utils/old_logs.js~API",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/utils/old_logs.js",
    "importStyle": "API",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 1870,
    "kind": "file",
    "name": "js/utils/old_logs_console.js",
    "content": "\r\n\r\nvar API = {}\r\n\r\n\r\nvar trace = function(arg_trace_cb, arg_module, arg_msg, arg_val_1, arg_val_2, arg_val_3)\r\n{\r\n\tif (arg_val_1 && arg_val_2 && arg_val_3)\r\n\t{\r\n\t\treturn arg_trace_cb(arg_module, arg_msg, arg_val_1, arg_val_2, arg_val_3);\r\n\t}\r\n\t\r\n\tif (arg_val_1 && arg_val_2)\r\n\t{\r\n\t\treturn arg_trace_cb(arg_module, arg_msg, arg_val_1, arg_val_2);\r\n\t}\r\n\t\r\n\tif (arg_val_1)\r\n\t{\r\n\t\treturn arg_trace_cb(arg_module, arg_msg, arg_val_1);\r\n\t}\r\n\t\r\n\treturn arg_trace_cb(arg_module, arg_msg);\r\n}\r\n\r\n\r\nAPI.debug = function(arg_module, arg_msg, arg_val_1, arg_val_2, arg_val_3)\r\n{\r\n\treturn trace(console.debug, arg_module, arg_msg, arg_val_1, arg_val_2, arg_val_3);\r\n}\r\n\r\n\r\nAPI.info = function(arg_module, arg_msg, arg_val_1, arg_val_2, arg_val_3)\r\n{\r\n\treturn trace(console.info, arg_module, arg_msg, arg_val_1, arg_val_2, arg_val_3);\r\n}\r\n\r\n\r\nAPI.warn = function(arg_module, arg_msg, arg_val_1, arg_val_2, arg_val_3)\r\n{\r\n\treturn trace(console.warn, arg_module, arg_msg, arg_val_1, arg_val_2, arg_val_3);\r\n}\r\n\r\n\r\nAPI.error = function(arg_module, arg_msg)\r\n{\r\n\treturn trace(console.error, arg_module, arg_msg);\r\n}\r\n\r\n\r\nmodule.exports = API\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/utils/old_logs_console.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1871,
    "kind": "variable",
    "name": "API",
    "memberof": "js/utils/old_logs_console.js",
    "static": true,
    "longname": "js/utils/old_logs_console.js~API",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/old_logs_console.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1872,
    "kind": "function",
    "name": "trace",
    "memberof": "js/utils/old_logs_console.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/old_logs_console.js~trace",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/old_logs_console.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "arg_trace_cb",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_module",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_msg",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_1",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_2",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_3",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1873,
    "kind": "function",
    "name": "debug",
    "memberof": "js/utils/old_logs_console.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/old_logs_console.js~debug",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/old_logs_console.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [
      {
        "name": "arg_module",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_msg",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_1",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_2",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_3",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1874,
    "kind": "function",
    "name": "info",
    "memberof": "js/utils/old_logs_console.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/old_logs_console.js~info",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/old_logs_console.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [
      {
        "name": "arg_module",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_msg",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_1",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_2",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_3",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1875,
    "kind": "function",
    "name": "warn",
    "memberof": "js/utils/old_logs_console.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/old_logs_console.js~warn",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/old_logs_console.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [
      {
        "name": "arg_module",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_msg",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_1",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_2",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_3",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1876,
    "kind": "function",
    "name": "error",
    "memberof": "js/utils/old_logs_console.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/old_logs_console.js~error",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/old_logs_console.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "params": [
      {
        "name": "arg_module",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_msg",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1877,
    "kind": "file",
    "name": "js/utils/old_logs_winston.js",
    "content": "\r\nvar winston = require('winston')\r\n\r\nvar myCustomLevels = {\r\n\tlevels: {\r\n\t\tdebug: 0,\r\n\t\tinfo: 1,\r\n\t\twarn: 2,\r\n\t\terror: 3\r\n\t},\r\n\tcolors: {\r\n\t\tdebug: 'blue',\r\n\t\tinfo: 'green',\r\n\t\twarn: 'yellow',\r\n\t\terror: 'red'\r\n\t}\r\n}\r\n\r\nvar logger = new (winston.Logger)(\r\n\t{\r\n\t\tlevels: myCustomLevels.levels,\r\n\t\t\r\n\t\ttransports: [\r\n\t\t\tnew (winston.transports.Console)(\r\n\t\t\t\t{\r\n\t\t\t\t\tlevel:'debug',\r\n\t\t\t\t\t\r\n\t\t\t\t\ttimestamp: function()\r\n                    {\r\n\t\t\t\t\t\treturn Date.now()\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\r\n\t\t\t\t\tformatter: function(options)\r\n                    {\r\n\t\t\t\t\t\t// Return string will be passed to logger.\r\n\t\t\t\t\t\treturn options.timestamp().toString().substr(-6) +' '+ process.pid +' '+ options.level.toUpperCase() +' '+ (undefined !== options.message ? options.message : '') +\r\n\t\t\t\t\t\t  (options.meta && Object.keys(options.meta).length ? '\\n\\t'+ JSON.stringify(options.meta) : '' )\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\r\n\t\t\t\t\tcolorize:true\r\n\t\t\t\t}\r\n\t\t\t),\r\n\t\t\tnew (winston.transports.File)(\r\n\t\t\t\t{\r\n\t\t\t\t\tlevel: 'debug',\r\n                    \r\n\t\t\t\t\tfilename: './tmp/debug.log',\r\n\t\t\t\t\tmaxsize:100000,\r\n\t\t\t\t\tmaxFiles:2\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t]\r\n\t}\r\n);\r\n\r\nwinston.addColors(myCustomLevels.colors);\r\n\r\n\r\nvar API = {}\r\n\r\n\r\nvar trace = function(arg_trace_level, arg_module, arg_msg, arg_val_1, arg_val_2, arg_val_3)\r\n{\r\n\tif (arg_val_1 && arg_val_2 && arg_val_3)\r\n\t{\r\n\t\tlogger.log(arg_trace_level, arg_module + ':' + arg_msg + ':' + arg_val_1.toString() + ':' + arg_val_2.toString() + ':' + arg_val_3.toString());\r\n\t\treturn\r\n\t}\r\n\t\r\n\tif (arg_val_1 && arg_val_2)\r\n\t{\r\n\t\tlogger.log(arg_trace_level, arg_module + ':' + arg_msg + ':' + arg_val_1.toString() + ':' + arg_val_2.toString());\r\n\t\treturn\r\n\t}\r\n\t\r\n\tif (arg_val_1)\r\n\t{\r\n\t\tlogger.log(arg_trace_level, arg_module + ':' + arg_msg + ':' + arg_val_1.toString());\r\n\t\treturn\r\n\t}\r\n\t\r\n\tlogger.log(arg_trace_level, arg_module + ':' + arg_msg);\r\n}\r\n\r\n\r\nAPI.debug = function(arg_module, arg_msg, arg_val_1, arg_val_2, arg_val_3)\r\n{\r\n\ttrace('debug', arg_module, arg_msg, arg_val_1, arg_val_2, arg_val_3);\r\n\treturn API\r\n}\r\n\r\n\r\nAPI.info = function(arg_module, arg_msg, arg_val_1, arg_val_2, arg_val_3)\r\n{\r\n\ttrace('info', arg_module, arg_msg, arg_val_1, arg_val_2, arg_val_3);\r\n\t// trace(logger.info, arg_module, arg_msg, arg_val_1, arg_val_2, arg_val_3);\r\n\treturn API\r\n}\r\n\r\n\r\nAPI.warn = function(arg_module, arg_msg, arg_val_1, arg_val_2, arg_val_3)\r\n{\r\n\ttrace('warn', arg_module, arg_msg, arg_val_1, arg_val_2, arg_val_3);\r\n\treturn API\r\n}\r\n\r\n\r\nAPI.error = function(arg_module, arg_msg)\r\n{\r\n\ttrace('error', arg_module, arg_msg);\r\n\treturn API\r\n}\r\n\r\n\r\nmodule.exports = API\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/utils/old_logs_winston.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1878,
    "kind": "variable",
    "name": "winston",
    "memberof": "js/utils/old_logs_winston.js",
    "static": true,
    "longname": "js/utils/old_logs_winston.js~winston",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/old_logs_winston.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1879,
    "kind": "variable",
    "name": "myCustomLevels",
    "memberof": "js/utils/old_logs_winston.js",
    "static": true,
    "longname": "js/utils/old_logs_winston.js~myCustomLevels",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/old_logs_winston.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{\"levels\": *, \"colors\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1880,
    "kind": "variable",
    "name": "logger",
    "memberof": "js/utils/old_logs_winston.js",
    "static": true,
    "longname": "js/utils/old_logs_winston.js~logger",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/old_logs_winston.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1881,
    "kind": "variable",
    "name": "API",
    "memberof": "js/utils/old_logs_winston.js",
    "static": true,
    "longname": "js/utils/old_logs_winston.js~API",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/old_logs_winston.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1882,
    "kind": "function",
    "name": "trace",
    "memberof": "js/utils/old_logs_winston.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/old_logs_winston.js~trace",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/old_logs_winston.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "params": [
      {
        "name": "arg_trace_level",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_module",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_msg",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_1",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_2",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_3",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 1883,
    "kind": "function",
    "name": "debug",
    "memberof": "js/utils/old_logs_winston.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/old_logs_winston.js~debug",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/old_logs_winston.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "params": [
      {
        "name": "arg_module",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_msg",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_1",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_2",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_3",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1884,
    "kind": "function",
    "name": "info",
    "memberof": "js/utils/old_logs_winston.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/old_logs_winston.js~info",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/old_logs_winston.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "params": [
      {
        "name": "arg_module",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_msg",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_1",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_2",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_3",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1885,
    "kind": "function",
    "name": "warn",
    "memberof": "js/utils/old_logs_winston.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/old_logs_winston.js~warn",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/old_logs_winston.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "params": [
      {
        "name": "arg_module",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_msg",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_1",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_2",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_val_3",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1886,
    "kind": "function",
    "name": "error",
    "memberof": "js/utils/old_logs_winston.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/old_logs_winston.js~error",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/old_logs_winston.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "params": [
      {
        "name": "arg_module",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_msg",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1887,
    "kind": "file",
    "name": "js/utils/parser/load_file.js",
    "content": "// NPM IMPORTS\r\nimport path from 'path'\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\nimport * as parser from './parser'\r\n\r\n\r\nlet context = 'common/utils/parser/load_file'\r\n\r\nlet error_msg_bad_file_name = context + ':bad file name'\r\nlet error_msg_bad_file_dir = context + ':bad file directory'\r\nlet error_msg_bad_file_path = context + ':bad file path'\r\nlet error_msg_bad_config = context + ':bad config object'\r\n\r\n\r\nfunction load_file(arg_file_path_name, arg_base_dir)\r\n{\r\n\t// logs.info(context, 'loading configuration from file [%s] of directory [%s]', arg_file_path_name, arg_base_dir);\r\n\t\r\n\t// CHECK ARGS\r\n\tassert(T.isString(arg_file_path_name) && arg_file_path_name.length > 1, error_msg_bad_file_name)\r\n\tassert(T.isString(arg_base_dir) && arg_base_dir.length > 0, error_msg_bad_file_dir)\r\n\t\r\n\t// GET PATH NAME\r\n\tvar config_path = path.join(arg_base_dir, arg_file_path_name)\r\n\tassert(T.isString(config_path) && config_path.length > 0, error_msg_bad_file_path)\r\n\t// logs.info(context, 'loading configuration: file [%s]', config_path);\r\n\t\r\n\t// LOAD APPLICATION INI CONFIGURATION\r\n\tvar config = parser.read(config_path, 'utf-8')\r\n\tassert(T.isObject(config), error_msg_bad_config)\r\n\t\r\n\treturn config\r\n}\r\n\r\nexports = module.export = load_file",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/utils/parser/load_file.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1888,
    "kind": "variable",
    "name": "context",
    "memberof": "js/utils/parser/load_file.js",
    "static": true,
    "longname": "js/utils/parser/load_file.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/parser/load_file.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1889,
    "kind": "variable",
    "name": "error_msg_bad_file_name",
    "memberof": "js/utils/parser/load_file.js",
    "static": true,
    "longname": "js/utils/parser/load_file.js~error_msg_bad_file_name",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/parser/load_file.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1890,
    "kind": "variable",
    "name": "error_msg_bad_file_dir",
    "memberof": "js/utils/parser/load_file.js",
    "static": true,
    "longname": "js/utils/parser/load_file.js~error_msg_bad_file_dir",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/parser/load_file.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1891,
    "kind": "variable",
    "name": "error_msg_bad_file_path",
    "memberof": "js/utils/parser/load_file.js",
    "static": true,
    "longname": "js/utils/parser/load_file.js~error_msg_bad_file_path",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/parser/load_file.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1892,
    "kind": "variable",
    "name": "error_msg_bad_config",
    "memberof": "js/utils/parser/load_file.js",
    "static": true,
    "longname": "js/utils/parser/load_file.js~error_msg_bad_config",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/parser/load_file.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1893,
    "kind": "function",
    "name": "load_file",
    "memberof": "js/utils/parser/load_file.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/parser/load_file.js~load_file",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/parser/load_file.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "arg_file_path_name",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_base_dir",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1894,
    "kind": "file",
    "name": "js/utils/parser/parser.js",
    "content": "// NPM IMPORTS\r\nimport fs from 'fs'\r\n// import ini_parser from 'ini'\r\n\r\n\r\n\r\nlet parser = {\r\n\tsplit_all_keys: function(arg_cfg)\r\n\t{\r\n\t\tvar self = this\r\n\t\tvar out_config = {}\r\n\t\tvar value = null\r\n\t\tvar key = null\r\n\t\tObject.keys(arg_cfg).forEach(\r\n\t\t\tfunction(cfg_key, cfg_index, cfg_items)\r\n\t\t\t{\r\n\t\t\t\t// if (cfg_index > 10) return;\r\n\t\t\r\n\t\t\t\tkey = cfg_items[cfg_index]\r\n\t\t\t\tif ((typeof key) === 'string' && key.length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue = arg_cfg[key]\r\n\t\t\t\t\t\r\n\t\t\t\t\t// console.log('-----------------------------------------');\r\n\t\t\t\t\t// console.log(value, key);\r\n\t\t\t\t\t\r\n\t\t\t\t\tself.split_key(key, value, out_config);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\t\r\n\t\t// console.log('out_config',out_config);\r\n\t\t\r\n\t\treturn out_config\r\n\t},\r\n\t\r\n\tsplit_key: function(arg_key, arg_value, arg_cfg)\r\n\t{\r\n\t\tif ((typeof arg_key) !== 'string' || arg_key.length === 0)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\tvar parts = arg_key.split('.')\r\n\t\tif (parts.length === 1)\r\n\t\t{\r\n\t\t\targ_cfg[arg_key] = arg_value\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\tvar part_obj = arg_cfg\r\n\t\t// console.log(parts, 'parts');\r\n\t\tparts.forEach(\r\n\t\t\tfunction(part_key, part_index/*, part_items*/)\r\n\t\t\t{\r\n\t\t\t\t// console.log(part_key, 'part_key');\r\n\t\t\t\t\r\n\t\t\t\tif (part_key in part_obj)\r\n\t\t\t\t{\r\n\t\t\t\t\tpart_obj = part_obj[part_key];\r\n\t\t\t\t\t// console.log('get existing value', part_key);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (part_index === parts.length - 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpart_obj[part_key] = arg_value\r\n\t\t\t\t\t\t// console.log('set new value', part_key);\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpart_obj = part_obj[part_key] = {}\r\n\t\t\t\t\t\t// console.log('set {}', part_key);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// console.log(part_obj, 'part_obj');\r\n\t\t\t}\r\n\t\t)\r\n\t},\r\n\t\r\n\t\r\n\tread: function(arg_file_path_name, arg_charset)\r\n\t{\r\n\t\tvar self = this\r\n\t\t// logs.info('parser', 'read [%s]', arg_file_path_name, arg_charset);\r\n\t\t\r\n\t\tif (arg_file_path_name.substr(-4).toLocaleLowerCase() === '.ini')\r\n\t\t{\r\n\t\t\treturn self.read_ini(arg_file_path_name, arg_charset)\r\n\t\t}\r\n\t\t\r\n\t\tif (arg_file_path_name.substr(-5).toLocaleLowerCase() === '.json')\r\n\t\t{\r\n\t\t\treturn self.read_json(arg_file_path_name, arg_charset)\r\n\t\t}\r\n\t},\r\n\t\r\n\t\r\n\tread_json: function(arg_file_path_name/*, arg_charset*/)\r\n\t{\r\n\t\tvar self = this\r\n\t\t// logs.info('parser', 'read_json [%s] [%s]', arg_file_path_name, arg_charset);\r\n\t\t\r\n\t\tvar config_content = require(arg_file_path_name)\r\n\t\t\r\n\t\tvar out_cfg = self.split_all_keys(config_content)\r\n\t\t\r\n\t\treturn out_cfg\r\n\t},\r\n\t\r\n\t\r\n\tread_ini: function(arg_file_path_name/*, arg_charset*/)\r\n\t{\r\n\t\t// var self = this\r\n\t\t// logs.info('parser', 'read_ini [%s] [%s]', arg_file_path_name, arg_charset);\r\n\t\t\r\n\t\t// var config_file = fs.readFileSync(arg_file_path_name, arg_charset ? arg_charset : 'utf-8');\r\n\t\t// var config_content = ini_parser.parse(config_file);\r\n\t\t// console.log(config_content, 'config_content');\r\n\t\t// var out_cfg = self.split_all_keys(config_content);\r\n\t\tvar out_cfg = null\r\n\t\t// self.write_json(arg_file_path_name + '.json', out_cfg)\r\n\t\t\r\n\t\t// var watch_listener = function(arg_prev_stats, arg_cur_stats)\r\n\t\t// {\r\n\t\t// \tlogs.info('parser', 'read_ini fs.watchFile: config file on [%s] with mtime [%s] -> [%s]', arg_file_path_name, arg_prev_stats.mtime.getTime(), arg_cur_stats.mtime.getTime());\r\n\t\t\t\r\n\t\t// \tvar watch_config_file = fs.readFileSync(arg_file_path_name, arg_charset ? arg_charset : 'utf-8');\r\n\t\t// \tvar watch_config_content = ini_parser.parse(watch_config_file);\r\n\t\t// \tvar watch_out_cfg = self.split_all_keys(watch_config_content);\r\n\t\t\t\r\n\t\t// \t// console.info('config file has changed [%s]', arg_file_path_name);\r\n\t\t\t\r\n\t\t// \t// LOOP ON APP OR RESOURCES CHANGES AND UPDATE RUNTIME\r\n\t\t// \t// ...\r\n\t\t// \treturn;\r\n\t\t// }\r\n\t\t\r\n\t\t// fs.watchFile(arg_file_path_name, { persistent: true, recursive: false }, watch_listener);\r\n\t\t\r\n\t\t\r\n\t\treturn out_cfg\r\n\t},\r\n\t\r\n\t\r\n\twrite: function(arg_file_path_name, arg_config)\r\n\t{\r\n\t\tvar self = this\r\n\t\t// logs.info('parser', 'write [%s]', arg_file_path_name);\r\n\t\t\r\n\t\t// if (arg_file_path_name.substr(-4).toLocaleLowerCase() === '.ini')\r\n\t\t// {\r\n\t\t// \treturn self.write_ini(arg_file_path_name, arg_config)\r\n\t\t// }\r\n\t\t\r\n\t\tif (arg_file_path_name.substr(-5).toLocaleLowerCase() === '.json')\r\n\t\t{\r\n\t\t\treturn self.write_json(arg_file_path_name, arg_config)\r\n\t\t}\r\n\t},\r\n\t\r\n\t\r\n\t// write_ini: function(arg_file_path_name, arg_config)\r\n\t// {\r\n\t// \t// logs.info('parser', 'write_ini [%s]', arg_file_path_name);\r\n\t// \treturn fs.writeFileSync(arg_file_path_name, ini_parser.stringify(arg_config, {}))\r\n\t// },\r\n\t\r\n\t\r\n\twrite_json: function(arg_file_path_name, arg_config)\r\n\t{\r\n\t\t// logs.info('parser', 'write_json [%s]', arg_file_path_name);\r\n\t\treturn fs.writeFileSync(arg_file_path_name, JSON.stringify(arg_config))\r\n\t}\r\n}\r\n\r\n\r\n// exports = module.exports = parser\r\n\r\nexport default parser\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/utils/parser/parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1895,
    "kind": "variable",
    "name": "parser",
    "memberof": "js/utils/parser/parser.js",
    "static": true,
    "longname": "js/utils/parser/parser.js~parser",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/utils/parser/parser.js",
    "importStyle": "parser",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "{\"split_all_keys\": *, \"split_key\": *, \"read\": *, \"read_json\": *, \"read_ini\": *, \"write\": *, \"write_json\": *}"
      ]
    }
  },
  {
    "__docId__": 1896,
    "kind": "file",
    "name": "js/utils/paths.js",
    "content": "\r\nimport path from 'path'\r\n\r\nimport runtime from '../base/runtime'\r\n\r\n\r\nfunction get_base_dir()\r\n{\r\n\treturn runtime ? runtime.get_setting('base_dir') : null\r\n}\r\n\r\nfunction get_absolute_path(arg_relative_path)\r\n{\r\n\treturn path.join(get_base_dir(), arg_relative_path)\r\n}\r\n\r\nexport { get_absolute_path, get_base_dir}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/utils/paths.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1897,
    "kind": "function",
    "name": "get_absolute_path",
    "memberof": "js/utils/paths.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/paths.js~get_absolute_path",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/utils/paths.js",
    "importStyle": "{get_absolute_path}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "arg_relative_path",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1898,
    "kind": "function",
    "name": "get_base_dir",
    "memberof": "js/utils/paths.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/paths.js~get_base_dir",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/utils/paths.js",
    "importStyle": "{get_base_dir}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1899,
    "kind": "file",
    "name": "js/utils/to_boolean.js",
    "content": "'use strict';\r\n\r\nfunction to_boolean(arg_value, arg_default)\r\n{\r\n\tswitch(arg_value)\r\n\t{\r\n\t\tcase true: return true;\r\n\t\tcase false: return false;\r\n\t\tcase '1': return true;\r\n\t\tcase '0': return false;\r\n\t\tcase 'true': return true;\r\n\t\tcase 'false': return false;\r\n\t\tcase 'on': return true;\r\n\t\tcase 'off': return false;\r\n\t\tcase 'enabled': return true;\r\n\t\tcase 'disabled': return false;\r\n\t}\r\n\t\r\n\treturn arg_default\r\n}\r\n\r\nmodule.exports = to_boolean\r\n\r\nexport default to_boolean\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/utils/to_boolean.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1900,
    "kind": "function",
    "name": "to_boolean",
    "memberof": "js/utils/to_boolean.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/to_boolean.js~to_boolean",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/utils/to_boolean.js",
    "importStyle": "to_boolean",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "arg_value",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_default",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1901,
    "kind": "file",
    "name": "js/utils/transform.js",
    "content": "\r\n// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport Ramda from 'ramda'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\n\r\n\r\nconst context = 'common/utils/transform'\r\n\r\n\r\nconst cursor_at_index = Ramda.lensIndex\r\n// const cursor_at_key = Ramda.lensProp\r\nconst get = Ramda.view\r\nconst prop = Ramda.prop // f(field_name, value_to_query)\r\nconst prop_default = Ramda.propOr // f(default_value, field_name, value_to_query)\r\nconst deep_prop = Ramda.path // f(field_path, value_to_query)\r\n// const clone = Ramda.clone\r\n// const map = Ramda.map\r\nconst merge = Ramda.merge\r\nconst flatten = Ramda.flatten\r\n\r\n\r\n/*\r\n\tFLAT\r\n\t\r\n\tExample:\r\n\t\tstream values: {\r\n\t\t\ttarget:'...',\r\n\t\t\tts:'...',\r\n\t\t\tdatas:[\r\n\t\t\t\t{level:'...', text:'...'},\r\n\t\t\t\t{level:'...', text:'...'},\r\n\t\t\t\t{level:'...', text:'...'}\r\n\t\t\t]\r\n\t\t}\r\n\tAttempded result: an array of {\r\n\t\t\ttarget:'...',\r\n\t\t\ttimestamp:'...',\r\n\t\t\tlevel:'...',\r\n\t\t\ttext:'...'\r\n\t\t}\r\n\tTransform object: {\r\n\t\tresult_type:'array',\r\n\t\tflat_field_name:'datas'\r\n\t\tflat_fields:[\r\n\t\t\t{\r\n\t\t\t\tname:'level,\r\n\t\t\t\tflat_path:['datas'],\r\n\t\t\t\tpath:['level']\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname:'text,\r\n\t\t\t\tflat_path:['datas'],\r\n\t\t\t\tpath:['text']\r\n\t\t\t}\r\n\t\t],\r\n\t\tfields:[\r\n\t\t\t{\r\n\t\t\t\tname:'target,\r\n\t\t\t\tpath:'target'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname:'timestamp,\r\n\t\t\t\tpath:'ts'\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n*/\r\n\r\n\r\n\r\n/**\r\n * Function to extract avalue from an object. \r\n * @public\r\n * @param {object} arg_field_config - field configuration.\r\n * @returns {function} - transformation function : data_in (object) => datas_out (any)\r\n */\r\nexport const extract = (arg_field_config) => {\r\n\t// console.log(arg_field_config, context + ':extract:arg_field_config')\r\n\r\n\tassert( T.isObject(arg_field_config), context + ':flat:bad field object')\r\n\t\r\n\tconst field_name = prop_default('unnamed field', 'name', arg_field_config)\r\n\tconst field_path = prop_default(undefined, 'path', arg_field_config)\r\n\tconst field_value = prop_default(undefined, 'value', arg_field_config)\r\n\tconst flat_all = prop_default(undefined, 'flat_all', arg_field_config)\r\n\r\n\t// console.log(field_name, context + ':extract:field_name')\r\n\t// console.log(field_path, context + ':extract:field_path')\r\n\t// console.log(field_value, context + ':extract:field_value')\r\n\t\r\n\tconst field_validate = prop_default(undefined, 'validate', arg_field_config)\r\n\tlet default_value = undefined\r\n\tlet validate_method = (f) => f\r\n\t\r\n\t// DEFINE VALIDATION\r\n\tif ( T.isObject(field_validate) )\r\n\t{\r\n\t\t// DEFAULT VALUE\r\n\t\tif ( ! T.isUndefined(field_validate.default) )\r\n\t\t{\r\n\t\t\tdefault_value = field_validate.default\r\n\t\t}\r\n\t\t\r\n\t\t// CHECK TYPE\r\n\t\tif ( T.isString(field_validate.type) && field_validate.type.length > 3 )\r\n\t\t{\r\n\t\t\tconst check_method_name = 'is' + field_validate.type[0].toUpperLocaleString() + field_validate.type.slice(1).toLowerLocaleString()\r\n\t\t\tif ( T.isFunction(T[check_method_name]) )\r\n\t\t\t{\r\n\t\t\t\tconst check_method = T.isFunction(T[check_method_name])\r\n\t\t\t\tvalidate_method = (f) => {\r\n\t\t\t\t\treturn (x) => {\r\n\t\t\t\t\t\tconst v = f(x)\r\n\t\t\t\t\t\tif ( check_method(v) )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn flat_all ? flatten(v) : v\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn default_value\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t// XFORM = VALUE FROM NUMBER PATH\r\n\tif ( T.isNumber(field_path) )\r\n\t{\r\n\t\tconst value_extractor = {\r\n\t\t\tname:field_name,\r\n\t\t\textract:validate_method( get( cursor_at_index(field_path) ) )\r\n\t\t}\r\n\t\treturn value_extractor\r\n\t}\r\n\t\r\n\t// XFORM = VALUE FROM STRING PATH\r\n\tif ( T.isString(field_path) )\r\n\t{\r\n\t\t// console.log('transform:value_extractor:value for field=%s path=%s', field_name, field_path)\r\n\t\tconst value_extractor = {\r\n\t\t\tname:field_name,\r\n\t\t\textract:validate_method( prop(field_path) )\r\n\t\t}\r\n\t\treturn value_extractor\r\n\t}\r\n\t\r\n\t// XFORM = VALUE FROM ARRAY PATH\r\n\tif ( T.isArray(field_path) )\r\n\t{\r\n\t\tconst value_extractor = {\r\n\t\t\tname:field_name,\r\n\t\t\textract:validate_method( deep_prop(field_path) )\r\n\t\t}\r\n\t\treturn value_extractor\r\n\t}\r\n\t\r\n\t// XFORM = CONSTANT\r\n\tif (field_value)\r\n\t{\r\n\t\tconst value_extractor = {\r\n\t\t\tname:field_name,\r\n\t\t\textract:() => validate_method( field_value )\r\n\t\t}\r\n\t\treturn value_extractor\r\n\t}\r\n\t\r\n\t// RETURN PROPERTY WITH KEY = NAME\r\n\tconst value_extractor = {\r\n\t\tname:field_name,\r\n\t\textract:validate_method(\r\n\t\t\t(value)=>{\r\n\t\t\t\t// console.log('transform:value_extractor:value for field=%s:', field_name, value)\r\n\t\t\t\tif ( T.isObject(value) )\r\n\t\t\t\t{\r\n\t\t\t\t\treturn prop_default(default_value, field_name)(value)\r\n\t\t\t\t}\r\n\t\t\t\treturn T.isUndefined(value) ? default_value : value\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\t\r\n\treturn value_extractor\r\n}\r\n\r\n\r\n\r\n/**\r\n * Function to transform an object with an array attribute to a flat array. \r\n * @public\r\n * @param {string} arg_array_name - array attribute name.\r\n * @param {array} arg_fields - unique fields to include into each output record.\r\n * @param {array} arg_flat_fields - fields of included array to pick into each output record.\r\n * @param {string} arg_results_type - output record type ('array' or 'object').\r\n * @returns {function} - transformation function : data_in (object) => datas_out (array of object|array)\r\n */\r\nexport const flat = (arg_array_name, arg_fields, arg_flat_fields, arg_results_type) => {\r\n\tassert( T.isString(arg_array_name), context + ':flat:bad array name')\r\n\tassert( T.isArray(arg_fields), context + ':flat:bad fields array')\r\n\t\r\n\treturn (arg_value) => {\r\n\t\tif ( ! (arg_array_name in arg_value) )\r\n\t\t{\r\n\t\t\treturn []\r\n\t\t}\r\n\t\t\r\n\t\t// INIT OUTPUT RESULTS\r\n\t\tlet results = []\r\n\t\t\r\n\t\t// EXTRACT REPEATED VALUES\r\n\t\tlet values_to_repeat_extractors = []\r\n\t\targ_fields.forEach(\r\n\t\t\t(field) => {\r\n\t\t\t\tconst field_extractor = extract(field)\r\n\t\t\t\t\r\n\t\t\t\tassert( T.isObject(field_extractor), context + ':flat:bad field extractor object')\r\n\t\t\t\tassert( T.isString(field_extractor.name), context + ':flat:bad field extractor name string')\r\n\t\t\t\tassert( T.isFunction(field_extractor.extract), context + ':flat:bad field extractor extract funcytion')\r\n\t\t\t\t\r\n\t\t\t\tvalues_to_repeat_extractors.push(field_extractor)\r\n\t\t\t}\r\n\t\t)\r\n\t\tlet values_to_repeat = out(values_to_repeat_extractors, arg_results_type)(arg_value)\r\n\t\t\r\n\t\t// GET VALUES OF COLLECTION TO FLAT EXTRACTORS\r\n\t\tlet flat_extractors = []\r\n\t\targ_flat_fields.forEach(\r\n\t\t\t(field) => {\r\n\t\t\t\tconst field_extractor = extract(field)\r\n\t\t\t\t\r\n\t\t\t\tassert( T.isObject(field_extractor), context + ':flat:bad flat field extractor object')\r\n\t\t\t\tassert( T.isString(field_extractor.name), context + ':flat:bad flat field extractor name string')\r\n\t\t\t\tassert( T.isFunction(field_extractor.extract), context + ':flat:bad flat field extractor extract funcytion')\r\n\t\t\t\t\r\n\t\t\t\tflat_extractors.push(field_extractor)\r\n\t\t\t}\r\n\t\t)\r\n\t\tlet flat_extractors_out = out(flat_extractors, arg_results_type)\r\n\t\t\r\n\t\t// LOOP ON VALUES TO FLAT\r\n\t\tconst array_to_flat = prop_default([], arg_array_name, arg_value)\r\n\t\tarray_to_flat.forEach(\r\n\t\t\t(array_to_flat_item) => {\r\n\t\t\t\tlet values_to_flat = flat_extractors_out(array_to_flat_item)\r\n\t\t\t\t\r\n\t\t\t\tconst values = arg_results_type == 'object' ? merge(values_to_repeat, values_to_flat) : [].concat(values_to_repeat, values_to_flat)\r\n\t\t\t\tresults.push(values)\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\treturn results\r\n\t}\r\n}\r\n\r\n\r\n\r\n/**\r\n * Output\r\n * @public\r\n * @param {array} arg_extractors - fields extractors objects array with extractor:{ name:'...', extract:(any)=>(any) }).\r\n * @param {string} arg_results_type - output record type ('array' or 'object').\r\n * @returns {function} - transformation function : data_in (object|array) => datas_out (array or object)\r\n */\r\nexport const out = (arg_extractors, arg_results_type) => {\r\n\tconst xform_array = (arg_stream_value) => {\r\n\t\tlet result = []\r\n\t\targ_extractors.forEach(\r\n\t\t\t(field_xform) => {\r\n\t\t\t\tresult.push( field_xform.extract(arg_stream_value) )\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn result\r\n\t}\r\n\t\r\n\tconst xform_object = (arg_stream_value) => {\r\n\t\tlet result = {}\r\n\t\targ_extractors.forEach(\r\n\t\t\t(field_xform) => {\r\n\t\t\t\tconst field_name = field_xform.name\r\n\t\t\t\tresult[field_name] = field_xform.extract(arg_stream_value)\r\n\t\t\t}\r\n\t\t)\r\n\t\treturn result\r\n\t}\r\n\t\r\n\t\r\n\tlet output_xformer = arg_stream_value => arg_stream_value\r\n\tif (arg_results_type == 'object')\r\n\t{\r\n\t\toutput_xformer = xform_object\r\n\t}\r\n\t\r\n\telse if (arg_results_type == 'array')\r\n\t{\r\n\t\toutput_xformer = xform_array\r\n\t}\r\n\r\n\telse if (arg_results_type == 'single' && arg_extractors.length == 1)\r\n\t{\r\n\t\tconst field_xform = arg_extractors[0]\r\n\t\toutput_xformer = (arg_stream_value) => {\r\n\t\t\treturn field_xform.extract(arg_stream_value)\r\n\t\t}\t\t\t\r\n\t}\r\n\r\n\treturn output_xformer\r\n}\r\n\r\n\r\n\r\n/**\r\n * Function to transform a structured data to an other data regarding a transformation configuration. \r\n * @public\r\n * @param {object} arg_xform - transformation definition.\r\n * @returns {function} - transformation function : data_in (object|array) => datas_out (array or object)\r\n */\r\nexport const transform = (arg_xform) => {\r\n\tassert( T.isObject(arg_xform), context + ':transform:bad xform object')\r\n\t\r\n\tconst result_type = prop_default('array', 'result_type', arg_xform)\r\n\tconst loop_on_keys = prop_default(undefined, 'loop_on_keys', arg_xform)\r\n\tconst fields = prop_default([], 'fields', arg_xform)\r\n\tconst flat_field_name = prop_default(undefined, 'flat_field_name', arg_xform)\r\n\tconst flat_fields = prop_default(undefined, 'flat_fields', arg_xform)\r\n\t\r\n\tlet extractors = []\r\n\t\r\n\t// WITH ARRAY TO FLAT\r\n\tif ( T.isString(flat_field_name) && T.isArray(flat_fields) )\r\n\t{\r\n\t\treturn flat(flat_field_name,fields, flat_fields, result_type)\r\n\t}\r\n\t\r\n\t// WITHOUT ARRAY TO FLAT\r\n\telse\r\n\t{\r\n\t\tfields.forEach(\r\n\t\t\t(field) => {\r\n\t\t\t\t// console.log('tranform:WITHOUT ARRAY TO FLAT:fields.forEach', field)\r\n\t\t\t\tconst value_extractor = extract(field)\r\n\t\t\t\textractors.push(value_extractor)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\t\r\n\t// FORMAT OUTPUT\r\n\tconst output_xformer = out(extractors, result_type)\r\n\t\r\n\tconst output_extractor = (arg_value) => {\r\n\r\n\t\tif ( T.isArray(arg_value) )\r\n\t\t{\r\n\t\t\tlet results = []\r\n\t\t\targ_value.forEach(\r\n\t\t\t\t(value) => {\r\n\t\t\t\t\tconst output_value = output_xformer(value)\r\n\t\t\t\t\tresults.push(output_value)\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t// console.log(context + ':output_extractor:isArray:results', results)\r\n\t\t\treturn results\r\n\t\t}\r\n\r\n\t\tif ( T.isObject(arg_value) )\r\n\t\t{\r\n\t\t\tconst output_value = output_xformer(arg_value)\r\n\t\t\t// console.log(context + ':output_extractor:isObject:output_value', output_value)\r\n\t\t\treturn output_value\r\n\t\t}\r\n\r\n\t\tif (! loop_on_keys)\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':output_extractor:not object/array:results', arg_value)\r\n\t\t}\r\n\r\n\t\treturn undefined\r\n\t}\r\n\t\r\n\tif (loop_on_keys)\r\n\t{\r\n\t\t// console.log(context + ':loop_on_keys enabled')\r\n\t\t\r\n\t\tconst loop_extractor = (arg_values) => {\r\n\t\t\tlet results = []\r\n\t\t\tconst keys = Object.keys(arg_values)\r\n\t\t\t\r\n\t\t\t// PROBLEM WITH NODEJS 0.10\r\n\t\t\t// for(let loop_key of keys)\r\n\t\t\t// {\r\n\t\t\tfor(let loop_index = 0 ; loop_index < keys.length ; loop_index++)\r\n\t\t\t{\r\n\t\t\t\tconst loop_key = keys[loop_index]\r\n\t\t\t\t// console.log(context + ':loop_on_keys:key', loop_key)\r\n\t\t\t\tconst loop_value = arg_values[loop_key]\r\n\t\t\t\tconst loop_extracted = output_extractor(loop_value)\r\n\t\t\t\tif (loop_extracted)\r\n\t\t\t\t{\r\n\t\t\t\t\tresults.push(loop_extracted)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn results\r\n\t\t}\r\n\t\t\r\n\t\treturn loop_extractor\r\n\t}\r\n\t\r\n\treturn output_extractor\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/utils/transform.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1902,
    "kind": "variable",
    "name": "context",
    "memberof": "js/utils/transform.js",
    "static": true,
    "longname": "js/utils/transform.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/transform.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1903,
    "kind": "variable",
    "name": "cursor_at_index",
    "memberof": "js/utils/transform.js",
    "static": true,
    "longname": "js/utils/transform.js~cursor_at_index",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/transform.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1904,
    "kind": "variable",
    "name": "get",
    "memberof": "js/utils/transform.js",
    "static": true,
    "longname": "js/utils/transform.js~get",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/transform.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1905,
    "kind": "variable",
    "name": "prop",
    "memberof": "js/utils/transform.js",
    "static": true,
    "longname": "js/utils/transform.js~prop",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/transform.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1906,
    "kind": "variable",
    "name": "prop_default",
    "memberof": "js/utils/transform.js",
    "static": true,
    "longname": "js/utils/transform.js~prop_default",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/transform.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1907,
    "kind": "variable",
    "name": "deep_prop",
    "memberof": "js/utils/transform.js",
    "static": true,
    "longname": "js/utils/transform.js~deep_prop",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/transform.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1908,
    "kind": "variable",
    "name": "merge",
    "memberof": "js/utils/transform.js",
    "static": true,
    "longname": "js/utils/transform.js~merge",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/transform.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1909,
    "kind": "variable",
    "name": "flatten",
    "memberof": "js/utils/transform.js",
    "static": true,
    "longname": "js/utils/transform.js~flatten",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/transform.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1910,
    "kind": "function",
    "name": "extract",
    "memberof": "js/utils/transform.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/transform.js~extract",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/utils/transform.js",
    "importStyle": "{extract}",
    "description": "Function to extract avalue from an object. ",
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} - transformation function : data_in (object) => datas_out (any)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_field_config",
        "description": "field configuration."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "transformation function : data_in (object) => datas_out (any)"
    }
  },
  {
    "__docId__": 1911,
    "kind": "function",
    "name": "flat",
    "memberof": "js/utils/transform.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/transform.js~flat",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/utils/transform.js",
    "importStyle": "{flat}",
    "description": "Function to transform an object with an array attribute to a flat array. ",
    "lineNumber": 198,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} - transformation function : data_in (object) => datas_out (array of object|array)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_array_name",
        "description": "array attribute name."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_fields",
        "description": "unique fields to include into each output record."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_flat_fields",
        "description": "fields of included array to pick into each output record."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_results_type",
        "description": "output record type ('array' or 'object')."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "transformation function : data_in (object) => datas_out (array of object|array)"
    }
  },
  {
    "__docId__": 1912,
    "kind": "function",
    "name": "out",
    "memberof": "js/utils/transform.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/transform.js~out",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/utils/transform.js",
    "importStyle": "{out}",
    "description": "Output",
    "lineNumber": 265,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} - transformation function : data_in (object|array) => datas_out (array or object)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_extractors",
        "description": "fields extractors objects array with extractor:{ name:'...', extract:(any)=>(any) })."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_results_type",
        "description": "output record type ('array' or 'object')."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "transformation function : data_in (object|array) => datas_out (array or object)"
    }
  },
  {
    "__docId__": 1913,
    "kind": "function",
    "name": "transform",
    "memberof": "js/utils/transform.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/transform.js~transform",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/utils/transform.js",
    "importStyle": "{transform}",
    "description": "Function to transform a structured data to an other data regarding a transformation configuration. ",
    "lineNumber": 318,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} - transformation function : data_in (object|array) => datas_out (array or object)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_xform",
        "description": "transformation definition."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "transformation function : data_in (object|array) => datas_out (array or object)"
    }
  },
  {
    "__docId__": 1914,
    "kind": "file",
    "name": "js/utils/tri_state.js",
    "content": "\r\n// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../utils/types'\r\n\r\n\r\nconst VALUES_OK = ['ok', 'true', '1', 1, 'enabled', 'valid', 'good']\r\nconst VALUES_KO = ['ko', 'false', '0', 0, null, 'disabled', 'unvalid', 'notvalid', 'bad']\r\n\r\nconst STATE_OK = 'OK'\r\nconst STATE_KO = 'KO'\r\nconst STATE_UNKNOW = 'UNKNOW'\r\n\r\nconst context = 'common/utils/tri_state'\r\n\r\n\r\nexport default class TriState\r\n{\r\n\tconstructor(arg_state)\r\n\t{\r\n\t\tif (arg_state !== undefined)\r\n\t\t{\r\n\t\t\tthis.set_state(arg_state)\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tset_state(arg_state)\r\n\t{\r\n\t\tassert( T.isString(arg_state) || T.isNumber(arg_state), context + ':bad state type' )\r\n\t\targ_state = T.isString(arg_state) ? arg_state.toLocaleLowerCase() : arg_state\r\n\t\t\r\n\t\tif (arg_state in VALUES_OK)\r\n\t\t{\r\n\t\t\tthis.state = STATE_OK\r\n\t\t}\r\n\t\t\r\n\t\tif (arg_state in VALUES_KO)\r\n\t\t{\r\n\t\t\tthis.state = STATE_KO\r\n\t\t}\r\n\t\t\r\n\t\tthis.state = STATE_UNKNOW\r\n\t}\r\n\t\r\n\t\r\n\tget_state()\r\n\t{\r\n\t\treturn this.state\r\n\t}\r\n\t\r\n\t\r\n\tok()\r\n\t{\r\n\t\treturn this.state === STATE_OK\r\n\t}\r\n\t\r\n\t\r\n\tko()\r\n\t{\r\n\t\treturn this.state === STATE_KO\r\n\t}\r\n\t\r\n\t\r\n\tunknow()\r\n\t{\r\n\t\treturn this.state === STATE_UNKNOW\r\n\t}\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/utils/tri_state.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1915,
    "kind": "variable",
    "name": "VALUES_OK",
    "memberof": "js/utils/tri_state.js",
    "static": true,
    "longname": "js/utils/tri_state.js~VALUES_OK",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/tri_state.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1916,
    "kind": "variable",
    "name": "VALUES_KO",
    "memberof": "js/utils/tri_state.js",
    "static": true,
    "longname": "js/utils/tri_state.js~VALUES_KO",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/tri_state.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1917,
    "kind": "variable",
    "name": "STATE_OK",
    "memberof": "js/utils/tri_state.js",
    "static": true,
    "longname": "js/utils/tri_state.js~STATE_OK",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/tri_state.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1918,
    "kind": "variable",
    "name": "STATE_KO",
    "memberof": "js/utils/tri_state.js",
    "static": true,
    "longname": "js/utils/tri_state.js~STATE_KO",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/tri_state.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1919,
    "kind": "variable",
    "name": "STATE_UNKNOW",
    "memberof": "js/utils/tri_state.js",
    "static": true,
    "longname": "js/utils/tri_state.js~STATE_UNKNOW",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/tri_state.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1920,
    "kind": "variable",
    "name": "context",
    "memberof": "js/utils/tri_state.js",
    "static": true,
    "longname": "js/utils/tri_state.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/tri_state.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1921,
    "kind": "class",
    "name": "TriState",
    "memberof": "js/utils/tri_state.js",
    "static": true,
    "longname": "js/utils/tri_state.js~TriState",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/utils/tri_state.js",
    "importStyle": "TriState",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 1922,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/utils/tri_state.js~TriState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/utils/tri_state.js~TriState#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 1923,
    "kind": "method",
    "name": "set_state",
    "memberof": "js/utils/tri_state.js~TriState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/utils/tri_state.js~TriState#set_state",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [
      {
        "name": "arg_state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1924,
    "kind": "member",
    "name": "state",
    "memberof": "js/utils/tri_state.js~TriState",
    "static": false,
    "longname": "js/utils/tri_state.js~TriState#state",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1927,
    "kind": "method",
    "name": "get_state",
    "memberof": "js/utils/tri_state.js~TriState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/utils/tri_state.js~TriState#get_state",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1928,
    "kind": "method",
    "name": "ok",
    "memberof": "js/utils/tri_state.js~TriState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/utils/tri_state.js~TriState#ok",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1929,
    "kind": "method",
    "name": "ko",
    "memberof": "js/utils/tri_state.js~TriState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/utils/tri_state.js~TriState#ko",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1930,
    "kind": "method",
    "name": "unknow",
    "memberof": "js/utils/tri_state.js~TriState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/utils/tri_state.js~TriState#unknow",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1931,
    "kind": "file",
    "name": "js/utils/types.js",
    "content": "\r\n// Similar to typr module which has a problem with recent nodejs: lib-cov not found error.\r\n\r\nvar toStr = Object.prototype.toString\r\nconst types_fn = {}\r\n\r\n\r\n\r\nconst types = ['Function', 'Object', 'Date', 'Number', 'String', 'Boolean', 'RegExp', 'Arguments']\r\ntypes.forEach(\r\n\t(type)=>{\r\n\t\tconst expected = '[object ' + type + ']'\r\n\t\ttypes_fn['is' + type] = (o)=>{\r\n\t\t\treturn toStr.call(o) === expected\r\n\t\t}\r\n\t}\r\n)\r\n\r\n\r\ntypes_fn.isNotEmptyString = (o)=>{\r\n\treturn types_fn.isString(o) && o.length > 0\r\n}\r\n\r\n\r\ntypes_fn.isStringOrNumber = (o)=>{\r\n\treturn types_fn.isString(o) || types_fn.isNumber(o)\r\n}\r\n\r\n\r\ntypes_fn.isNotEmptyStringOrNumber = (o)=>{\r\n\treturn types_fn.isNotEmptyString(o) || types_fn.isNumber(o)\r\n}\r\n\r\n\r\ntypes_fn.isNotEmptyArray = (o)=>{\r\n\treturn types_fn.isArray(o) && o.length > 0\r\n}\r\n\r\n\r\ntypes_fn.isClass = (o)=>{\r\n\treturn types_fn.isFunction(o) /*&& types_fn.isFunction(o.constructor)*/ // TODO ENHANCE CLASS CHECKING\r\n}\r\n\r\n\r\n// DOM ELEMENT TEST\r\n// For a tr element: \"[object HTMLTableRowElement]\"\r\ntypes_fn.isElement = (o)=>{\r\n\tif (typeof o != 'object')\r\n\t{\r\n\t\treturn false\r\n\t}\r\n\tconst str = o.toString()\r\n\treturn str.startsWith('[object HTML') && str.endsWith('Element]')\r\n}\r\n\r\n\r\n// DOM NODE LIST TEST\r\n// For a tr element: \"[object NodeList]\"\r\ntypes_fn.isNodeList = (o)=>{\r\n\tif (typeof o != 'object')\r\n\t{\r\n\t\treturn false\r\n\t}\r\n\tconst str = o.toString()\r\n\treturn str == '[object NodeList]'\r\n}\r\n\r\n\r\ntypes_fn.isArray = Array.isArray\r\ntypes_fn.isNaN = Number.isNaN\r\ntypes_fn.isNumeric = Number.isFinite\r\n\r\ntypes_fn.isInfinite = (n)=>{\r\n\treturn Math.abs(n) === Infinity\r\n}\r\n\r\ntypes_fn.isNull = (o)=>{\r\n\treturn o === null\r\n}\r\n\r\ntypes_fn.isUndefined = (o)=>{\r\n\tvar undef\r\n\treturn o === undef\r\n}\r\n\r\nexport default types_fn\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/utils/types.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1932,
    "kind": "variable",
    "name": "toStr",
    "memberof": "js/utils/types.js",
    "static": true,
    "longname": "js/utils/types.js~toStr",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/types.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1933,
    "kind": "variable",
    "name": "types",
    "memberof": "js/utils/types.js",
    "static": true,
    "longname": "js/utils/types.js~types",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/types.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1934,
    "kind": "variable",
    "name": "types_fn",
    "memberof": "js/utils/types.js",
    "static": true,
    "longname": "js/utils/types.js~types_fn",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/utils/types.js",
    "importStyle": "types_fn",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 1935,
    "kind": "file",
    "name": "js/utils/uid.js",
    "content": "let uid_counter = 0\r\n\r\nexport default function uid() { return ++uid_counter }\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-common/src/js/utils/uid.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1936,
    "kind": "variable",
    "name": "uid_counter",
    "memberof": "js/utils/uid.js",
    "static": true,
    "longname": "js/utils/uid.js~uid_counter",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-common/js/utils/uid.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 1937,
    "kind": "function",
    "name": "uid",
    "memberof": "js/utils/uid.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/utils/uid.js~uid",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-common/js/utils/uid.js",
    "importStyle": "uid",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "index",
    "content": "# Devapt core documentation builder\r\n\r\n## Build\r\n\r\n```\r\ncd devapt-core-doc\r\nnpm install --production\r\nnpm run build_common\r\nnpm run build_server\r\nnpm run build_services\r\nnpm run build_browser\r\n```\r\n\r\n\r\n## Source files\r\n * docs\r\n   * manual\r\n     * features\r\n     * tutorials\r\n\r\n\r\n\r\n## Old build with jsdoc dependencies\r\n```\r\n{\r\n    \"del\": \">=2.2.0\",\r\n    \"gulp\": \"github:gulpjs/gulp#4.0\",\r\n    \"gulp-load-plugins\": \">=1.2.0\",\r\n    \"parallelshell\": \"^2.0.0\"\r\n}\r\n```",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\r\n  \"name\": \"devapt-core-common\",\r\n  \"version\": \"2.0.5\",\r\n  \"description\": \"Developpers Application Toolkit - common features - build application (backend, frontend, RESTfull, API, distributed nodes, reactive...) from configuration\",\r\n  \"author\": {\r\n    \"name\": \"Luc BORIES\",\r\n    \"email\": \"luc.bories@gmail.com\",\r\n    \"url\": \"https://github.com/lucbories\"\r\n  },\r\n  \"contributors\": [],\r\n  \"license\": \"Apache-2.0\",\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"git+https://github.com/lucbories/devapt-core-common.git\"\r\n  },\r\n  \"bugs\": {\r\n    \"url\": \"git+https://github.com/lucbories/devapt-core-common/issues\"\r\n  },\r\n  \"homepage\": \"https://github.com/lucbories/devapt-core-common#readme.md\",\r\n  \"main\": \"dist/index.js\",\r\n  \"engines\": {\r\n    \"node\": \">=4.4.4\"\r\n  },\r\n  \"directories\": {\r\n    \"dist\": \"./dist\"\r\n  },\r\n  \"scripts\": {\r\n    \"build\": \"gulp\",\r\n    \"test\": \"mocha --recursive --reporter spec --compilers js:babel-register src/test\",\r\n    \"test:common:base\": \"mocha --recursive --reporter spec --compilers js:babel-register src/test/unit/common/base\",\r\n    \"test:common:cache\": \"mocha --recursive --reporter spec --compilers js:babel-register src/test/unit/common/cache\",\r\n    \"test:common:datas\": \"mocha --recursive --reporter spec --compilers js:babel-register src/test/unit/common/datas\",\r\n    \"test:common:rendering\": \"mocha --recursive --reporter spec --compilers js:babel-register src/test/unit/common/rendering\",\r\n    \"test:common:topology\": \"mocha --recursive --reporter spec --compilers js:babel-register src/test/unit/common/topology\",\r\n    \"test:common:utils\": \"mocha --recursive --reporter spec --compilers js:babel-register src/test/unit/common/utils\",\r\n    \"test:empty\": \"mocha --reporter spec --compilers js:babel-register\",\r\n    \"test:watch\": \"npm run test -- --watch\",\r\n    \"test:unit:common\": \"npm run test:empty -- src/test/unit/common/base\",\r\n    \"postversion\": \"unix2dos package.json\",\r\n    \"commit\": \"unix2dos package.json && git status && pause && git commit -am \",\r\n    \"patch\": \"npm version patch && unix2dos package.json && git status && pause && git commit -am \",\r\n    \"minor\": \"npm version minor && unix2dos package.json && git status && pause && git commit -am \",\r\n    \"major\": \"npm version major && unix2dos package.json && git status && pause && git commit -am \",\r\n    \"push-dev\": \"git push devapt develop\",\r\n    \"merge\": \"git checkout master && git merge develop && git push devapt master && git checkout develop\",\r\n    \"release\": \"git push devapt develop && git checkout master && git merge develop && git push devapt master && git checkout develop\"\r\n  },\r\n  \"browser\": [],\r\n  \"keywords\": [\r\n    \"server\",\r\n    \"api\",\r\n    \"rest\",\r\n    \"devapt\",\r\n    \"toolkit\",\r\n    \"redux\",\r\n    \"reactive\",\r\n    \"declarative\",\r\n    \"distributed\",\r\n    \"responsive\",\r\n    \"browser\"\r\n  ],\r\n  \"dependencies\": {\r\n    \"async\": \">=1.0.0\",\r\n    \"babel-core\": \"^6.26.0\",\r\n    \"baconjs\": \"^0.7.95\",\r\n    \"cache-manager\": \">=2.1.2\",\r\n    \"es6-symbol\": \">=3.1.0\",\r\n    \"html-entities\": \"^1.2.1\",\r\n    \"html-to-vdom\": \">=0.7.0\",\r\n    \"immutable\": \"^3.8.2\",\r\n    \"lodash\": \">=4.16.4\",\r\n    \"lowdb\": \"^1.0.0\",\r\n    \"mustache\": \">=2.2.1\",\r\n    \"node-cache\": \">=3.2.1\",\r\n    \"node-forge\": \"^0.7.1\",\r\n    \"path-is-absolute\": \">=1.0.0\",\r\n    \"ramda\": \"^0.24.1\",\r\n    \"redux\": \"^3.7.2\",\r\n    \"redux-logger\": \"^3.0.6\",\r\n    \"redux-promise\": \">=0.5.0\",\r\n    \"redux-thunk\": \">=1.0.0\",\r\n    \"redux-undo\": \">=0.5.0\",\r\n    \"semver\": \"^5.4.1\",\r\n    \"socket.io\": \"^2.0.3\",\r\n    \"socket.io-client\": \"^2.0.3\",\r\n    \"vdom-as-json\": \">=1.0.9\",\r\n    \"vdom-parser\": \">=1.3.4\",\r\n    \"vdom-virtualize\": \">=2.0.0\",\r\n    \"virtual-dom\": \">=2.1.1\",\r\n    \"winston\": \"^2.4.0\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"babel\": \">=6.5.2\",\r\n    \"babel-cli\": \"^6.26.0\",\r\n    \"babel-loader\": \"^7.1.2\",\r\n    \"babel-plugin-transform-es2015-modules-commonjs\": \"^6.26.0\",\r\n    \"babel-plugin-transform-runtime\": \">=6.6.0\",\r\n    \"babel-polyfill\": \"^6.26.0\",\r\n    \"babel-preset-es2015\": \"^6.24.1\",\r\n    \"babel-preset-stage-0\": \"^6.24.1\",\r\n    \"babel-register\": \"^6.26.0\",\r\n    \"babelify\": \">=7.2.0\",\r\n    \"chai\": \"^4.1.2\",\r\n    \"chai-as-promised\": \"^7.1.1\",\r\n    \"chai-immutable\": \">=1.3.0\",\r\n    \"debounce\": \"^1.0.2\",\r\n    \"del\": \"^3.0.0\",\r\n    \"fs.extra\": \">=1.3.2\",\r\n    \"gulp\": \"github:gulpjs/gulp#4.0\",\r\n    \"gulp-babel\": \"^7.0.0\",\r\n    \"gulp-cached\": \">=1.1.0\",\r\n    \"gulp-changed\": \"^3.1.0\",\r\n    \"gulp-concat\": \">=2.6.0\",\r\n    \"gulp-headerfooter\": \">=1.0.3\",\r\n    \"gulp-jsdoc3\": \">=0.2.1\",\r\n    \"gulp-livereload\": \">=3.8.1\",\r\n    \"gulp-load-plugins\": \">=1.2.0\",\r\n    \"gulp-remember\": \">=0.3.0\",\r\n    \"gulp-rename\": \">=1.2.2\",\r\n    \"gulp-showdown\": \">=0.0.3\",\r\n    \"gulp-sourcemaps\": \"^2.6.1\",\r\n    \"gulp-util\": \"^3.0.7\",\r\n    \"mocha\": \"^4.0.1\",\r\n    \"requirejs\": \"^2.3.5\",\r\n    \"showdown\": \"^1.7.6\",\r\n    \"vinyl-buffer\": \">=1.0.0\",\r\n    \"vinyl-source-stream\": \">=1.1.0\"\r\n  }\r\n}\r\n",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\node_modules\\devapt-core-common\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "globalIndex": true,
    "content": "# Welcome on Devapt project documentation (v2 or more)\r\n\r\nWith Devapt you can easily develop powerfull application.\r\n\r\nDevapt libraries are usefull to quickly develop applications with more JSON configuration and less code.\r\n\r\n\r\n## What is Devapt ?\r\n\r\nThe Developpers Application Toolkit (Devapt) is a usefull package for developers:\r\ncreate quickly and securely a complex distributed set of applications or a simple alone application into one or more nodejs.\r\n\r\nThis project is based on Javascript (ECMAscript 6 transpiled in ES5) and nodejs.\r\nDevapt contains a server runtime and a set of client features.\r\nDevapt help you to write less code and to use easily more features.\r\n\r\nThe principle is simple: you write some configuration files for distributed nodes, models, views and menus and the you start the application.\r\nThe framework will automatically generates the server and manages common features (logges, traces, metrics, restful, security...).\r\nSimply launch index.html and your application is up a rich user interface and many features.\r\n\r\nBuilt-in features cover many important subjects as: authentication, restfull, http server, distributed services, logs, metrics...\r\nMain characteristics of DEVAPT architecture is dynamic behaviors, reactive programming, object oriented ES6 javascript, gulp build chain\r\nAll of this on NodeJS.\r\n\r\n\r\n## Where to find Devapt ?\r\n\r\nDevapt is a set of core libraries to help producing applications:\r\n* [devapt-core-common project](https://github.com/lucbories/devapt-core-common)\r\n* [devapt-core-server project](https://github.com/lucbories/devapt-core-server)\r\n* [devapt-core-services project](https://github.com/lucbories/devapt-core-services)\r\n* [devapt-core-browser project](https://github.com/lucbories/devapt-core-browser)\r\n\r\nProjects API:\r\n* [devapt-core-common documentation](https://lucbories.github.io/api_common/index.html)\r\n* [devapt-core-server documentation](https://lucbories.github.io/api_server/index.html)\r\n* [devapt-core-services documentation](https://lucbories.github.io/api_services/index.html)\r\n* [devapt-core-browser documentation](https://lucbories.github.io/api_browser/index.html)\r\n\r\n\r\nOthers libraries provides usefull features.\r\n\r\n[GitHub project](https://github.com/lucbories/devapt-core-common)\r\n\r\n[NPM package](https://www.npmjs.com/package/devapt-core-common)\r\n\r\n[API](https://lucbories.github.io)\r\n\r\n[MANUAL](https://lucbories.github.io)\r\n\r\n\r\n## What does Devapt offer for developpers ?\r\n\r\nDevapt library offers a \"runtime\" instance which delivers this features:\r\n\r\n * browser or server rendering (Render instance)\r\n * rendering base class for custom widgets or views (Component class)\r\n * Redux store on client side\r\n * distributed servers\r\n * master configuration settings (distributed on each nodes)\r\n * loggers engines and traces configuration (for instances, classes, modules)\r\n * datas abstraction\r\n * reactive programming (thanks BaconJS)\r\n * documentation (wotrk in progress)\r\n\r\n\r\n## How does Devapt work ?\r\n\r\nWith Devapt you define:\r\n\r\n * A topology, simple (one application, one server, one service) or complex (many services distributed for many applications on many distributed servers).\r\n * Some resources (models, views, menubars, menus)\r\n * Security rules\r\n\r\nA topology contains:\r\n\r\n * nodes: A node is a nodejs process with an unique name. You can have many nodes on the same machine.\r\nEach node communicates with other node through messaging buses (messages, metrics, logs).\r\n\r\n<img src=\"./manual/asset/Buses.png\" width=\"80%\" alt=\"Messaging picture\" />\r\n\r\n\r\nA node can have one or many servers.\r\n\r\n * servers: A server provides one or more services and listen client connections through a couple (host, port).\r\n\r\nA server has a unique name and can be one of types: restify, express, socket.io (coming soon)...\r\n\r\n * services: A service offers one feature to clients. A service can be one of: static assets providers, generic middleware provider, RESTfull provider, resources provider...\r\n * applications: An application contains some services and is provided through nodes and servers.\r\n\r\nAn application can have one service on one server on one node.\r\nOr many services on many servers on many nodes.\r\n\r\nAn application contains:\r\n\r\n * modules: functional features for applications (a set of preconfigured UI for example).\r\n * plugins: technical fearures for applications (a rendering provider for example).\r\n * security: defines authentication and authorization rules.\r\n\r\n<img src=\"./manual/asset/Host.png\" width=\"80%\" alt=\"Distributed picture\" />\r\n\r\n\r\nThe rendering engines are plugins and rendering classes are stateless: state is stored in a Redux store.\r\nSee [Getting Started with Redux](https://egghead.io/series/getting-started-with-redux) for flow concepts.\r\n\r\n\r\n\r\n## Devapt is a smart glue between many powerfull projects\r\nThanks for all projects leaders and contributers.\r\n\r\nThe given list is an extract of all used or inspired projects.\r\n\r\n\r\nMain dependancies:\r\n\r\n[NodeJS: https://nodejs.org](https://nodejs.org)\r\n\r\n\r\nServers and datas access:\r\n\r\n * [Express: http://expressjs.com/](http://expressjs.com/)\r\n * [Restify: http://restify.com/](http://restify.com/)\r\n * [Epilogue: https://github.com/dchester/epilogue](https://github.com/dchester/epilogue)\r\n * [Sequelize: http://sequelizejs.com](http://sequelizejs.com)\r\n * [Socket.io: http://socket.io/](http://socket.io/)\r\n\r\n\r\nSecurity:\r\n\r\n * [Passport: http://passportjs.org](http://passportjs.org)\r\n * [Node ACL: https://github.com/OptimalBits/node_acl](https://github.com/OptimalBits/node_acl)\r\n\r\n\r\nFoundations:\r\n\r\n * [BaconJS: https://baconjs.github.io/](https://baconjs.github.io/)\r\n * [SimpleBus: https://github.com/ajlopez/SimpleBus](https://github.com/ajlopez/SimpleBus)\r\n * [jQuery: https://jquery.com](https://jquery.com)\r\n * [Immutable: https://facebook.gith)ub.io/immutable-js/docs/#/](https://facebook.github.io/immutable-js/docs/#/)\r\n * [Redux: http://redux.js.org/docs/introduction/Motivation.html](http://redux.js.org/docs/introduction/Motivation.html)\r\n * [Moment: http://momentjs.com/](http://momentjs.com/)\r\n * [Vantage: https://github.com/dthree/vantage](https://github.com/dthree/vantage)\r\n * [Bunyan: https://github.com/trentm/node-bunyan](https://github.com/trentm/node-bunyan)\r\n * [Winston: https://github.com/winstonjs/winston](https://github.com/winstonjs/winston)\r\n * [Circuit breaker: https://www.npmjs.com/package/circuit-breaker](https://www.npmjs.com/package/circuit-breaker) [or https://github.com/yammer/circuit-breaker-js](https://github.com/yammer/circuit-breaker-js)\r\n * [LowDb: https://github.com/typicode/lowdb](https://github.com/typicode/lowdb)\r\n\r\n\r\nRendering:\r\n\r\n * [Foundation by ZURB: http://foundation.zurb.com/sites.html](http://foundation.zurb.com/sites.html)\r\n * [Mustache: https://github.com/janl/mustache.js](https://github.com/janl/mustache.js)\r\n * [React (coming soon): http://facebook.github.io/react/docs/tutorial.html](http://facebook.github.io/react/docs/tutorial.html)\r\n\r\n\r\n\r\nDev and build dependancies: (coming soon.)\r\n\r\n * [Babel: https://babeljs.io](https://babeljs.io)\r\n * [Chai: http://chaijs.com/](http://chaijs.com/)\r\n * [Gulp: http://gulpjs.com/](http://gulpjs.com/)\r\n * [Mocha: https://mochajs.org/](https://mochajs.org/)\r\n * [JSDoc: http://usejsdoc.org/](http://usejsdoc.org/)\r\n\r\n\r\n\r\n\r\n## Version\r\n\r\nCurrent active version is 2.x.x\r\n\r\nVersionning use standard method: M.m.p with M is a major change, m a minor change, p a patch.\r\n\r\n\r\n\r\n## License\r\n\r\nCopyright Luc BORIES 2015-2016\r\n\r\nApache Version 2 license.\r\n\r\nSee [LICENSE on GitHub](https://github.com/lucbories/devapt-core-common/blob/master/LICENSE)\r\n\r\n\r\n\r\nPlease enjoy using devapt projects and let me know if they are usefull for you.\r\n\r\n[Next](https://lucbories.github.io)",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\index.md",
    "name": "./docs/manual/index.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualAsset",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\assets",
    "name": "./docs/assets",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\overview.md",
    "name": "./docs/manual/overview.md",
    "content": "\r\n# Overview\r\n\r\nWith DEVAPT you can easily develop powerfull application.\r\nBuilt-in features cover many important subjects as: authentication, restfull, http server, distributed services, logs, metrics...\r\nMain characteristics of DEVAPT architecture is dynamic behaviors, reactive programming, object oriented ES6 javascript, gulp build chain\r\nAll of this on NodeJS.\r\n\r\n\r\n\r\n\r\n## Projects structure\r\nAll devapt-* github repositories have the same structure: a master branch with the last tagged tree, a develop branch with latest comited updates and tags.\r\n\r\nAll devapt-* projects have a common folders tree:\r\nproject root\\\r\n * bower_components (only for browser features)\r\n * build: building scripts\r\n * dist: build codes and resources\r\n  * dist/js: build javascript codes\r\n  * dist/resources: build resources configuration\r\n * node_modules: nodes packages\r\n * public: shared assets for browsers\r\n  * public/app_name/css: CSS assets\r\n  * public/app_name/html: HTML assets\r\n  * public/app_name/img: images assets\r\n  * public/app_name/js: javascript assets\r\n * public/favico.png: browser project icon\r\n * src: project sources\r\n  * src/js: javascript sources\r\n  * src/resources: resources configuration sources\r\n * tmp: temporary application files (logs)\r\n * bower.json: browser packages configuration\r\n * gulpfile.js: main build script\r\n * LICENSE: project license\r\n * package.json: nodes packages configuration\r\n * README.md: project description\r\n\r\nSome differences appears between library and application folder.\r\n\r\nVersionning use standard method: M.m.p with M is a major change, m a minor change, p a patch.\r\n\r\n\r\n\r\n## Development\r\n\r\n```\r\ngit clone git://github.com/lucbories/devapt-core-common.git\r\ncd devapt-core-common\r\nnpm install\r\nnpm test\r\n```\r\nSame commands for devapt-core-browser, devapt-core-server, devapt-core-services\r\n\r\n\r\n\r\n## Contribution\r\n\r\nFeel free to contribute, you're welcome.\r\n\r\nCheck issues and solve it:\r\n* [common file issues](https://github.com/lucbories/devapt-core-common/issues)\r\n* [server file issues](https://github.com/lucbories/devapt-core-server/issues)\r\n* [services file issues](https://github.com/lucbories/devapt-core-services/issues)\r\n* [browser file issues](https://github.com/lucbories/devapt-core-browser/issues)\r\n\r\nSubmit your work:\r\n* [common pull requests](https://github.com/lucbories/devapt-core-common/pulls)\r\n* [server pull requests](https://github.com/lucbories/devapt-core-server/pulls)\r\n* [services pull requests](https://github.com/lucbories/devapt-core-services/pulls)\r\n* [browser pull requests](https://github.com/lucbories/devapt-core-browser/pulls)\r\n\r\nIf you submit a pull request, please be sure to add or update corresponding\r\ntest cases, and ensure that `npm test` continues to pass.\r\n\r\n\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\installation.md",
    "name": "./docs/manual/installation.md",
    "content": "\r\n# Installation\r\n\r\n\r\nVia npm on Node:\r\n```\r\ncd my_project/\r\nnpm init\r\nnpm install devapt-core-common --save\r\nnpm install devapt-core-browser --save\r\nnpm install devapt-core-serices --save\r\nnpm install devapt-core-server --save\r\n```\r\n\r\n\r\nTo install and launch TestBus applicaton :\r\n```\r\ncd apps/\r\ngit clone git://github.com/lucbories/devapt-app-testbus.git\r\ncd devapt-app-testbus\r\n\r\nnpm install --save-prod\r\nor yarn install -- production\r\n\r\nnpm run nodeA\r\nor yarn run nodeA\r\n\r\nor\r\nnpm run nodeA\r\nnpm run nodeB\r\n\r\nor\r\nnpm run nodeA\r\nnpm run nodeB\r\nnpm run nodeC\r\n```\r\nopen a browser on http://my_domain:8080/assets/html/index.html\r\n\r\n\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\usage.md",
    "name": "./docs/manual/usage.md",
    "content": "# Usage\r\n\r\nTo install a devapt application, follow:\r\n```\r\ncd apps/\r\ngit clone git://github.com/lucbories/devapt-app-testbus.git\r\ncd devapt-app-testbus\r\n\r\nnpm install --save-prod\r\n```\r\n\r\nTo create an empty application from scratch (not recommended for devapt newbies):\r\n\r\n```\r\ncd my_app\r\nnpm init\r\nnpm install devapt-core-common --save\r\nnpm install devapt-core-browser --save\r\nnpm install devapt-core-services --save\r\nnpm install devapt-core-server --save\r\n```\r\n\r\nCreate folders tree:\r\n```\r\n-build\r\n-dist\r\n-public\r\n-public/assets\r\n-public/assets/css\r\n-public/assets/html\r\n-public/assets/img\r\n-public/assets/js\r\n-src/js\r\n-src/resources\r\n-tmp\r\n```\r\n\r\n\r\n\r\nCreate your first Devapt based HTML page in public/assets/html/mypage.html:\r\n```html\r\n<html>\r\n\r\n<head>\r\n\t<meta charSet=\"utf8\"/>\r\n\t<title>Devapt TestBus Home</title>\r\n\t\r\n\t<link rel=\"icon\" type=\"image/png\" href=\"/assets/img/favico.png\"/>\r\n\r\n\t<link type='text/css'  rel=\"stylesheet\" href=\"/assets/css/normalize.css\" media=\"all\" />\r\n\r\n\t<style type='text/css'>\r\n\t\t... your styles\r\n\t</style>\r\n</head>\r\n\r\n\r\n<body>\r\n\r\n<header>\r\n\t<center>\r\n\t\t<h1>MY FIRST APP</h1>\r\n\t\t<h8><a href=\"/assets/html/mypage.html\">Home</a></h8>\r\n\t</center>\r\n</header>\r\n\r\n<hr>\r\n\r\n<script>window.__INITIAL_STATE__ = {\r\n\t\"credentials\":{\r\n\t\t\"tenant\":\"tenantA\",\r\n\t\t\"env\":\"dev\",\r\n\t\t\"application\":\"testbus\",\r\n\r\n\t\t\"token\":\"\",\r\n\t\t\"user_name\":\"\",\r\n\t\t\"user_pass_digest\":\"\",\r\n\t\t\r\n\t\t\"ts_login\":0,\r\n\t\t\"ts_expiration\":0,\r\n\r\n\t\t\"errors_count\":0,\r\n\t\t\"renew_count\":0,\r\n\r\n\t\t\"hash\":undefined\r\n\t},\r\n\t\"commands\":{}\r\n}\r\n</script>\r\n\r\n<div id=\"content\">\r\n... your HTML code\r\n</div>\r\n\r\n<script type=\"text/javascript\" src=\"/socket.io/socket.io.js\"></script>\r\n<script type=\"text/javascript\" src=\"/assets/js/vendor/browser.min.js\"></script>\r\n<script type=\"text/javascript\" src=\"/assets/js/devapt-core-browser.js\"></script>\r\n<script type=\"text/javascript\" src=\"/assets/js/devapt-bootstrap.js\"></script>\r\n<script type=\"text/javascript\" src=\"/assets/js/app.js\"></script>\r\n\r\n</body>\r\n\r\n</html>\r\n```\r\n\r\n\r\nNow you can write your Javascript code in public/assets/js/app.js:\r\n```js\r\nwindow.devapt().on_runtime_created(\r\n\tfunction()\r\n\t{\r\n\t\tconsole.log('runtime ready for application script')\r\n\r\n\t\twrite your code here: devapt init is finished and you can use Devapt function:\r\n\t\t\r\n\t\twindow.devapt(): Devapt bootstrap root with some helpers\r\n\t\twindow.devapt().runtime():main Devapt client runtime\r\n\t\twindow.devapt().ui(): main Devapt user interface manager\r\n\r\n\t\tExample: get client session unique id\r\n\t\tvar session_uid = window.devapt().runtime().get_session_uid()\r\n\r\n\t\tExample: ping master node\r\n\t\tvar target_name = 'master' (target is a node or a node part, node is server host or remote host or remote browser session)\r\n\t\tvar ping_svc_cfg = undefined (reserved for later)\r\n\t\tvar ping_svc_promise = window.devapt().get_service('pingpong', ping_svc_cfg)\r\n\t\tvar on_response_callback = function() {\r\n\t\t\tconsole.log('pong received')\r\n\t\t}\r\n\t\twindow.devapt().request_service(ping_svc_promise, 'devapt-ping', target_name, on_response_callback)\r\n\t}\r\n)\r\n```\r\n\r\nDevapt use configuration files to discover and build a runtime of dynamic resources.\r\n\r\nFirst we declare our unique node called \"nodeA\", this node is the topology master and the application provider:\r\nFile: dist/resources/nodes/nodeA.json\r\n```js\r\n{\r\n\t\"is_master\":true,\r\n\t\"name\":\"NodeA\",\r\n\t\r\n\t\"master\":{\r\n\t\t\"name\":\"NodeA\",\r\n\t\t\r\n\t\t\"msg_bus\":{\r\n\t\t\t\"package\":\"socketio\",\r\n\t\t\t\"protocole\":\"ws\",\r\n\t\t\t\"type\":\"Server\",\r\n\t\t\t\"host\":\"localhost\",\r\n\t\t\t\"port\":5000\r\n\t\t},\r\n\t\t\"logs_bus\":{\r\n\t\t\t\"package\":\"socketio\",\r\n\t\t\t\"protocole\":\"ws\",\r\n\t\t\t\"type\":\"Server\",\r\n\t\t\t\"host\":\"localhost\",\r\n\t\t\t\"port\":5001\r\n\t\t},\r\n\t\t\"metrics_bus\":{\r\n\t\t\t\"package\":\"socketio\",\r\n\t\t\t\"protocole\":\"ws\",\r\n\t\t\t\"type\":\"Server\",\r\n\t\t\t\"host\":\"localhost\",\r\n\t\t\t\"port\":5002\r\n\t\t}\r\n\t},\r\n\t\r\n\t\"settings_provider\": {\r\n\t\t\"source\":\"local_file\",\r\n\t\t\"relative_path\":\"world.json\"\r\n\t}\r\n}\r\n```\r\n\r\n\r\nSecondly we describe our application features topology:\r\nFile: dist/resources/world/world.json\r\n```js\r\n{\r\n\t\"nodes\":\"nodes\":{\r\n\t\t\"NodeA\":{\r\n\t\t\t\"host\":\"localhost\",\r\n\t\t\t\"is_master\":true,\r\n\t\t\t\"servers\":{\r\n\t\t\t\t\"NodeALocal8080\":{\r\n\t\t\t\t\t\"type\":\"express\",\r\n\t\t\t\t\t\"port\":8080,\r\n\t\t\t\t\t\"protocole\":\"http\",\r\n\t\t\t\t\t\"middlewares\":[],\r\n\t\t\t\t\t\"use_socketio\":true,\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"security\": {\r\n\t\t\t\t\t\t\"authentication\": {\r\n\t\t\t\t\t\t\t\"enabled\":false,\r\n\t\t\t\t\t\t\t\"plugins\":[]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"NodeALocalLogs\":{\r\n\t\t\t\t\t\"type\":\"logs\",\r\n\t\t\t\t\t\"port\":\"N/A\",\r\n\t\t\t\t\t\"protocole\":\"bus\",\r\n\t\t\t\t\t\"middlewares\":[],\r\n\t\t\t\t\t\"use_socketio\":false,\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"security\": {\r\n\t\t\t\t\t\t\"authentication\": {\r\n\t\t\t\t\t\t\t\"enabled\":false,\r\n\t\t\t\t\t\t\t\"plugins\":[]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t\"tenants\":{\r\n\t\t\"tenantA\":{\r\n\t\t\t\"applications\":{\r\n\t\t\t\t\"assets\":{\r\n\t\t\t\t\t\"title\":\"Assets provider\",\r\n\t\t\t\t\t\"url\":\"assets\",\r\n\t\t\t\t\t\"license\":\"APACHE-LICENSE-2.0\",\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"provided_services\":[],\r\n\t\t\t\t\t\"used_services\":[],\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"used_packages\": [\"my_app_pkg\"],\r\n\t\t\t\t\t\"used_plugins\":[\"DefaultRendering\"],\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"assets\":{\r\n\t\t\t\t\t\t\"css\":[],\r\n\t\t\t\t\t\t\"js\":[],\r\n\t\t\t\t\t\t\"img\":[],\r\n\t\t\t\t\t\t\"index\":\"\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"packages\":{\r\n\t\t\t\t\"my_app_pkg\":{\r\n\t\t\t\t\t\"base_dir\":null,\r\n\t\t\t\t\t\"resources\":[],\r\n\t\t\t\t\t\"templates\":[],\r\n\t\t\t\t\t\"includes\":[],\r\n\t\t\t\t\t\"commands\":[],\r\n\t\t\t\t\t\"services\":{\r\n\t\t\t\t\t\t\"pingpong\":{\r\n\t\t\t\t\t\t\t\"type\":\"ping_svc\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"html_assets\":{\r\n\t\t\t\t\t\t\t\"type\":\"html_assets_svc\",\r\n\t\t\t\t\t\t\t\"routes\":[\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\"route\":\"/\",\r\n\t\t\t\t\t\t\t\t\t\"directory\":\"../../public/assets/\",\r\n\t\t\t\t\t\t\t\t\t\"required_prefixes\":[],\r\n\t\t\t\t\t\t\t\t\t\"required_suffixes\":[\".js\", \".js.map\", \".css\", \".html\", \".png\", \".jpg\"]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\"security\":{\r\n\t\t\t\t\t\t\t\t\"enabled\":false,\r\n\t\t\t\t\t\t\t\t\"authentication\":{\r\n\t\t\t\t\t\t\t\t\t\"enabled\":false,\r\n\t\t\t\t\t\t\t\t\t\"engines\":[]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"authorization\":{\r\n\t\t\t\t\t\t\t\t\t\"enabled\":false,\r\n\t\t\t\t\t\t\t\t\t\"engines\":[],\r\n\t\t\t\t\t\t\t\t\t\"permissions\":{\r\n\t\t\t\t\t\t\t\t\t\t\"*\":[\"*\"]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"security\":{}\r\n\t\t}\r\n\t},\r\n\r\n\t\"deployments\":{\r\n\t\t\"tenantA\":{\r\n\t\t\t\"assets\":{\r\n\t\t\t\t\"assets\":{},\r\n\t\t\t\t\"services\":{\r\n\t\t\t\t\t\"topology\":{ \"servers\":[\"NodeALocal8080\"], \"filters\":[\"*\"] },\r\n\t\t\t\t\t\"html_assets\":{ \"servers\":[\"NodeALocal8080\"], \"filters\":[\"*\"] },\r\n\t\t\t\t\t\"pingpong\":{ \"servers\":[\"NodeALocal8080\"], \"filters\":[\"*\"] }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t\"security\":{\r\n\t\t\"is_readonly\":false,\r\n\t\t\r\n\t\t\"datasources\":[],\r\n\t\t\r\n\t\t\"authentication\": {\r\n\t\t\t\"enabled\":false,\r\n\t\t\t\r\n\t\t\t\"plugins\":{},\r\n\t\t\t\r\n\t\t\t\"default_plugins\": []\r\n\t\t},\r\n\t\t\r\n\t\t\"authorization\": {\r\n\t\t\t\"enabled\":false\r\n\t\t}\r\n\t},\r\n\r\n\t\"plugins\":{\r\n\t\t\"DefaultRendering\":{\r\n\t\t\t\"type\":\"rendering\",\r\n\t\t\t\"file\":\"../../../node_modules/devapt-core-common/dist/js/default_plugins/rendering_default_plugin\"\r\n\t\t},\r\n\t\t\"DefaultServices\":{\r\n\t\t\t\"type\":\"services\",\r\n\t\t\t\"file\":\"../../../node_modules/devapt-core-services/dist/js/default_plugins/services_default_plugin\"\r\n\t\t}\r\n\t},\r\n\t\r\n\t\"loggers\":{},\r\n\t\r\n\t\"traces\":{}\r\n}\r\n```\r\n\r\n\r\nLaunch your runtime nodes and servers:\r\n\r\n```\r\ncd my_app\r\nnode node_modules/devapt-core-server/dist/js/start_node.js -n NodeA -t dist/resources/world -b node_modules/devapt-core-server/dist/js -s NodeA:NodeALocal8081\r\n```\r\n\r\n\r\nExample with settings in many files:\r\n\r\n```js\r\n\"resources//worldworld.json\":\r\n\r\n{\r\n\t\"nodes\":\"nodes.json\",\r\n\t\r\n\t\"tenants\":{\r\n\t\t\"tenantA\":{\r\n\t\t\t\"applications\":\"applications.json\",\r\n\t\t\t\"packages\":\"tenantA_packages.json\",\r\n\t\t\t\"security\":{}\r\n\t\t}\r\n\t},\r\n\r\n\t\"deployments\":\"deployments.json\",\r\n\r\n\t\"security\":\"security.json\",\r\n\r\n\t\"plugins\":\"plugins.json\",\r\n\t\r\n\t\"loggers\":\"loggers.json\",\r\n\t\r\n\t\"traces\":\"traces.json\"\r\n}\r\n\r\n\"nodes.json\":\r\n{\r\n\t\"nodes\":{ same settings than above }\r\n}\r\n\r\n\"services.json\":\r\n{\r\n\t\"services\":{ same settings than above }\r\n}\r\n\r\nRepeat on each files on the same manner.\r\n\r\n```\r\n\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design.md",
    "name": "./docs/manual/design.md",
    "content": "# Design\r\n\r\nDevapt is full stack solution. So it's usefull to provide an integrated framework to build your application with configuration files.\r\nOn the other hands it's difficult to have an overview of all parts and undestand how all this parts work together.\r\n\r\nFirst, devapt is provided throught specialized core projects and addon features. If you write an application you don't need to know all details. But if you want to add features, you should understand on what starting to build your feature.\r\n[Details of projects](https://lucbories.github.io/projects.md)\r\n\r\n\r\n## Main devapt concepts are:\r\n* Node: each application can be distributed on one or many nodes. Each node run on a NodeJS instance with some inter node communication channels. One or many nodes can run on one NodeJS instance. One or many NodeJS instance can run on one hostnames.\r\n* Node settings: JSON file which describe one or many nodes with their names, security, debug trace and communication channels.\r\n* Application settings or configuration or description: main JSON file which define application features, packages, resources (UI components...), debug traces and security.\r\n* Bus: all nodes communicate together with messages throught a communication bus. An application can have one or more buses, one for metrics, one for logs and one between components.\r\n* Tenant: a tenant is a set of applications and packages with its own security access. for example, we can have one tenant per company on a shared server (SaaS).\r\n* Service: a service provide a feature which responds some datas on a request. For example, a ping pong service responds a 'pong' on each 'ping' request.\r\n* Server: a server (not a hostname) is an engine which provides services and others features. For example, a logs server exists to process received logs.\r\n* Metric: metrics are collected datas from a node, an application, a server, a service... which help to monitors system health.\r\n* Rendering: it's the process of producing DOM content for the browser page.\r\n* Virtual DOM: it's a technology which can produce DOM content outside of browser and to apply differential changes on a page. It enhance performance and decrease browser load.\r\n* Security: security is an important need for all usages. Security is everywhere in devapt apps but all parts aren't finished yet. (TODO)\r\n\r\n\r\n## How an application work\r\nAn application has one directory but two targets: server and browser. On server side, an application launches nodes and services. On browser side, the page receive its content from the server: it's a lightweight HTML page with two scripts: a credentials record and an initial application state. Each user action on the interface call some scripts and request server if needed.\r\n\r\n\r\n## Features\r\n\r\n\r\n<a href=\"./design_distributed.html\">Distributed</a>\r\n\r\n<a href=\"./design_messaging.html\">Messaging</a>\r\n\r\n<a href=\"./design_metrics.html\">Metrics</a>\r\n\r\n<a href=\"./design_rendering.html\">Rendering</a>\r\n\r\n<a href=\"./design_security.html\">Security</a>\r\n\r\n<a href=\"./design_servers.html\">Servers</a>\r\n\r\n<a href=\"./design_services.html\">Services</a>\r\n\r\n<a href=\"./design_starting_process.html\">Starting process</a>\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_configurable.md",
    "name": "./docs/manual/design_configurable.md",
    "content": "## Design - Configurable without code feature\r\n\r\nDevapt has for first principle to build applications without coding common features.\r\nWhy writing code to offer REST api, metrics, role based security, database access...\r\nConcentrate your coding forces to write uncommon business code.\r\n\r\n\r\n### Description\r\nDevapt first principle to build applications without coding common features.\r\n\r\nWhy write code for REST api, metrics, role based security, database access...\r\n\r\nIt is best to concentrate on the business code.\r\n\r\n\r\n\r\n### Status\r\n\r\n\r\nConfiguration providers:\r\n* JSON file: DONE\r\n* JSON url: TO TEST\r\n* Datas model: TO IMPLEMENT\r\n\r\nLocal configuration loading: DONE 1.0\r\n\r\nDistributed configuration loading: DONE 2.0\r\n\r\n\r\n\r\n### Format\r\n\r\n\r\n#### Source\r\nSettings are loaded from a Json object.\r\nJson providers could be: files, sql db, nosql db...\r\nFor instance only file provider is available.\r\n\r\n\r\n#### Fisrt level format:\r\nFirst levels are the sub-tree at the Json tree root.\r\nThis level describes the runtime world.\r\n\r\nFirst level keys should be:\r\n * nodes: collection of defined nodes and servers.\r\n * tenants\r\n * deployments\r\n * security: authentication and authorization configuration.\r\n * plugins: collection of defined plugins, a plugin is an addon for rendering, security, servers types, services types...\r\n * loggers: collection of defined loggers.\r\n * traces: configuration of enabled traces for modules, classes, instances of classes.\r\n\r\nWith sub settings files:\r\n```js\r\n{\r\n\t\"nodes\":\"nodes.json\",\r\n\t\r\n\t\"tenants\":{\r\n\t\t\"tenantA\":{\r\n\t\t\t\"applications\":\"applications.json\",\r\n\t\t\t\"packages\":\"tenantA_packages.json\",\r\n\t\t\t\"security\":{}\r\n\t\t}\r\n\t},\r\n\r\n\t\"deployments\":\"deployments.json\",\r\n\r\n\t\"security\":\"security.json\",\r\n\r\n\t\"plugins\":\"plugins.json\",\r\n\t\r\n\t\"loggers\":\"loggers.json\",\r\n\t\r\n\t\"traces\":\"traces.json\"\r\n}\r\n```\r\n\r\n\r\n\r\n * services: collection of defined services, a service is a feature which could be applied on a set of servers for a set of applications.\r\n * applications: collection of defined applications, an application links servers and services.\r\n * modules: collection of defined modules, a module is a set of resources.\r\n\r\nWith inline settings:\r\n```js\r\n{\r\n\t\"nodes\":{ ... },\r\n\t\r\n\t\"tenants\":{ ... },\r\n\t\r\n\t\"deployments\":{ ... },\r\n\t\r\n\t\"plugins\":{ ... },\r\n\t\r\n\t\"security\":{ ... },\r\n\t\r\n\t\"loggers\":{ ... },\r\n\t\r\n\t\"traces\":{ ... }\r\n}\r\n```\r\n\r\n\r\nWith a mix of inline and files settings:\r\n```js\r\n{\r\n\t\"nodes\":{ ... },\r\n\t\r\n\t\"tenants\":{ ... },\r\n\t\r\n\t\"deployments\":{ ... },\r\n\t\r\n\t\"plugins\":{ ... },\r\n\t\r\n\t\"security\":\"security.json\",\r\n\t\r\n\t\"loggers\":\"loggers.json\",\r\n\t\r\n\t\"traces\":\"traces.json\"\r\n}\r\n```\r\n\r\n\r\n\r\n#### Second level settings:\r\n\r\n###### For nodes\r\n<a href=\"./design_configuration_for_nodes.html\">NODES CONFIGURATION</a>\r\n\r\n\r\n###### For tenants\r\n<a href=\"./design_configuration_for_tenants.html\">TENANTS CONFIGURATION</a>\r\n\r\n\r\n###### For deployments\r\n<a href=\"./design_configuration_for_deployments.html\">DEPLOYMENTS CONFIGURATION</a>\r\n\r\n\r\n###### For plugins\r\n<a href=\"./design_configuration_for_plugins.html\">PLUGINS CONFIGURATION</a>\r\n\r\n\r\n###### For security\r\n<a href=\"./design_configuration_for_security.html\">SECURITY CONFIGURATION</a>\r\n\r\n\r\n###### For loggers\r\n<a href=\"./design_configuration_for_loggers.html\">LOGGERS CONFIGURATION</a>\r\n\r\n\r\n###### For traces\r\n<a href=\"./design_configuration_for_traces.html\">TRACES CONFIGURATION</a>\r\n\r\n\r\n###### For templates:\r\nThe second level \"templates\" collection stores all templates definition.\r\nA template can be used everywhere.\r\n\r\nDefine a global template and a service template:\r\n```{\r\n\t\"templates\":{\r\n\t\t\"services\":{\r\n\t\t\t\"security_svc_template\":{\r\n\t\t\t\t\"type\":\"security\",\r\n\t\t\t\t\"tenant\":\"${svc_tenant}\",\r\n\t\t\t\t\"version\":\"1.2.0\",\r\n\t\t\t\t\"routes\":[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"route\":\"/login\",\r\n\t\t\t\t\t\t\"action\":\"login\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"route\":\"/signin\",\r\n\t\t\t\t\t\t\"action\":\"login\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"route\":\"/logout\",\r\n\t\t\t\t\t\t\"action\":\"logout\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"route\":\"/signup\",\r\n\t\t\t\t\t\t\"action\":\"signup\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"route\":\"/renew\",\r\n\t\t\t\t\t\t\"action\":\"renew\"\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"security_single_node_template\":{\r\n\t\t\t\"services\":{\r\n\t\t\t\t\"${svc_name}\":{\r\n\t\t\t\t\t\"template\":\"security_svc_template\",\r\n\t\t\t\t\t\"values\":{\r\n\t\t\t\t\t\t\"svc_tenant\":${app_tenant}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"nodes\":{\r\n\t\t\t\t\"${node_name}\":{\r\n\t\t\t\t\t\"host\":\"${$host_name}\",\r\n\t\t\t\t\t\"tenant\":\"${app_tenant}\",\r\n\t\t\t\t\t\"is_master\":false,\r\n\t\t\t\t\t\"servers\":{\r\n\t\t\t\t\t\t\"${node_server_name}\":{\r\n\t\t\t\t\t\t\t\"type\":\"express\",\r\n\t\t\t\t\t\t\t\"tenant\":\"${app_tenant}\",\r\n\t\t\t\t\t\t\t\"port\":\"${node_server_port}\",\r\n\t\t\t\t\t\t\t\"protocole\":\"http\",\r\n\t\t\t\t\t\t\t\"middlewares\":[],\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\"security\": {\r\n\t\t\t\t\t\t\t\t\"authentication\": {\r\n\t\t\t\t\t\t\t\t\t\"enabled\":true,\r\n\t\t\t\t\t\t\t\t\t\"plugins\":\"${security_plugins}\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"applications\":{\r\n\t\t\t\t\"${app_name}\":{\r\n\t\t\t\t\t\"tenant\":\"${app_tenant}\",\r\n\t\t\t\t\t\"version\":\"${app_version}\",\r\n\t\t\t\t\t\"env\":\"${app_env}\",\r\n\t\t\t\t\t\"group\":\"${app_group}\",\r\n\r\n\t\t\t\t\t\"description\":\"...\",\r\n\r\n\t\t\t\t\t\"url\":\"${app_url}\",\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"services\":{\r\n\t\t\t\t\t\t\"provides\":{\r\n\t\t\t\t\t\t\t\"${svc_name}\": { \"servers\":[\"${node_server_name}\"], \"filters\":[\"*\"] }\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"consumes\":{\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"modules\": [],\r\n\t\t\t\t\t\"plugins\":[],\r\n\t\t\t\t\t\"resources\":[],\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"assets\":{\r\n\t\t\t\t\t\t\"css\":[],\r\n\t\t\t\t\t\t\"js\":[],\r\n\t\t\t\t\t\t\"img\":[],\r\n\t\t\t\t\t\t\"index\":\"\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"license\":\"APACHE-LICENSE-2.0\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}```\r\n\r\n\r\nUse a global template:\r\n\r\n```{\r\n\t\"nodes\":...,\r\n\t\"templated\":[\r\n\t\t{\r\n\t\t\t\"template\":\"security_single_node\",\r\n\t\t\t\"values\":{\r\n\t\t\t\t\"app_name\":\"my_app_1\",\r\n\t\t\t\t\"app_tenant\":\"Client 12\",\r\n\t\t\t\t\"app_version\":\"0.5.3\",\r\n\t\t\t\t\"app_env\":\"production\",\r\n\t\t\t\t\"app_group\":\"financial\",\r\n\t\t\t\t\"app_url\":\"my_apps/my_app_1\",\r\n\t\t\t\t\"svc_name\":\"my_app_1_svc\",\r\n\t\t\t\t\"node_name\":\"my_app_1_node\",\r\n\t\t\t\t\"host_name\":\"localhost\",\r\n\t\t\t\t\"node_server_name\":\"my_app_1_server\",\r\n\t\t\t\t\"node_server_port\":8080,\r\n\t\t\t\t\"security_plugins\":[\"file_users\", \"oauth2\"]\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n}```",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_configuration_for_deployments.md",
    "name": "./docs/manual/design_configuration_for_deployments.md",
    "content": "## Design - Configuration for Deployments\r\n\r\n\r\n### Description\r\nTopology deployments description.\r\n\r\n\r\n### Format\r\nComing soon.\r\n\r\n\r\n### Example\r\n```js\r\n\r\n...coming soon.\r\n\r\n```\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_configuration_for_loggers.md",
    "name": "./docs/manual/design_configuration_for_loggers.md",
    "content": "## Design - Configuration for Loggers\r\n\r\n\r\n### Description\r\nTopology loggers description.\r\n\r\n\r\n### Format\r\nComing soon.\r\n\r\n\r\n### Example\r\n```js\r\n\r\n...coming soon.\r\n\r\n```\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_configuration_for_nodes.md",
    "name": "./docs/manual/design_configuration_for_nodes.md",
    "content": "## Design - Configuration for Nodes\r\n\r\n\r\n### Description\r\nTopology nodes description.\r\n\r\n\r\n### Format\r\nProvide a list of distributed nodes with:\r\n * node name\r\n * is_master: node is the topology master node ? (true/false)\r\n * servers: provided features servers for this node, a list of servers configurations with for each:\r\n   * server name\r\n   * type: kind of server (express/restify/logs for instance)\r\n   * port: server communication port number\r\n   * protocole: server server communication protocole (http/https)\r\n   * middlewares: server used middlewares\r\n   * use_socketio: server use socketio communication ? (true/false)\r\n   * security: server security configuration\r\n\r\n\r\n### Example\r\n```js\r\n{\r\n\t\"nodes\":{\r\n\t\t\"NodeA\":{\r\n\t\t\t\"host\":\"localhost\",\r\n\t\t\t\"is_master\":true,\r\n\t\t\t\"servers\":{\r\n\t\t\t\t\"NodeALocal8080\":{\r\n\t\t\t\t\t\"type\":\"express\",\r\n\t\t\t\t\t\"port\":8080,\r\n\t\t\t\t\t\"protocole\":\"http\",\r\n\t\t\t\t\t\"middlewares\":[],\r\n\t\t\t\t\t\"use_socketio\":true,\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"security\": {\r\n\t\t\t\t\t\t\"authentication\": {\r\n\t\t\t\t\t\t\t\"enabled\":false,\r\n\t\t\t\t\t\t\t\"plugins\":[]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"NodeALocalLogs\":{\r\n\t\t\t\t\t\"type\":\"logs\",\r\n\t\t\t\t\t\"port\":\"N/A\",\r\n\t\t\t\t\t\"protocole\":\"bus\",\r\n\t\t\t\t\t\"middlewares\":[],\r\n\t\t\t\t\t\"use_socketio\":false,\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"security\": {\r\n\t\t\t\t\t\t\"authentication\": {\r\n\t\t\t\t\t\t\t\"enabled\":false,\r\n\t\t\t\t\t\t\t\"plugins\":[]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t\"NodeB\":{\r\n\t\t\t\"host\":\"localhost\",\r\n\t\t\t\"is_master\":false,\r\n\t\t\t\"servers\":{\r\n\t\t\t\t\"NodeBLocal7080\":{\r\n\t\t\t\t\t\"type\":\"express\",\r\n\t\t\t\t\t\"port\":7080,\r\n\t\t\t\t\t\"protocole\":\"http\",\r\n\t\t\t\t\t\"middlewares\":[],\r\n\t\t\t\t\t\"use_socketio\":true,\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"security\": {\r\n\t\t\t\t\t\t\"authentication\": {\r\n\t\t\t\t\t\t\t\"enabled\":false,\r\n\t\t\t\t\t\t\t\"plugins\":[]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t\"NodeC\":{\r\n\t\t\t\"host\":\"localhost\",\r\n\t\t\t\"is_master\":false,\r\n\t\t\t\"servers\":{\r\n\t\t\t\t\"NodeCLocal6080\":{\r\n\t\t\t\t\t\"type\":\"express\",\r\n\t\t\t\t\t\"port\":6080,\r\n\t\t\t\t\t\"protocole\":\"http\",\r\n\t\t\t\t\t\"middlewares\":[],\r\n\t\t\t\t\t\"use_socketio\":true,\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"security\": {\r\n\t\t\t\t\t\t\"authentication\": {\r\n\t\t\t\t\t\t\t\"enabled\":false,\r\n\t\t\t\t\t\t\t\"plugins\":[]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_configuration_for_plugins.md",
    "name": "./docs/manual/design_configuration_for_plugins.md",
    "content": "## Design - Configuration for Plugins\r\n\r\n\r\n### Description\r\nTopology plugins description.\r\n\r\n\r\n### Format\r\nComing soon.\r\n\r\n\r\n### Example\r\n```js\r\n\r\n...coming soon.\r\n\r\n```\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_configuration_for_security.md",
    "name": "./docs/manual/design_configuration_for_security.md",
    "content": "## Design - Configuration for Security\r\n\r\n\r\n### Description\r\nTopology security description.\r\n\r\n\r\n### Format\r\nComing soon.\r\n\r\n\r\n### Example\r\n```js\r\n\r\n...coming soon.\r\n\r\n```\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_configuration_for_tenants.md",
    "name": "./docs/manual/design_configuration_for_tenants.md",
    "content": "## Design - Configuration for Tenants\r\n\r\n\r\n### Description\r\nTopology tenants description.\r\n\r\n\r\n### Format\r\nComing soon.\r\n\r\n\r\n### Example\r\n```js\r\n\r\n...coming soon.\r\n\r\n```\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_configuration_for_traces.md",
    "name": "./docs/manual/design_configuration_for_traces.md",
    "content": "## Design - Configuration for Traces\r\n\r\n\r\n### Description\r\nTopology traces description.\r\n\r\n\r\n### Format\r\nComing soon.\r\n\r\n\r\n### Example\r\n```js\r\n\r\n...coming soon.\r\n\r\n```\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_distributed.md",
    "name": "./docs/manual/design_distributed.md",
    "content": "## Design - Distributed feature\r\n\r\nDevapt provides a distributed infrastructure of nodes with a master configuration pushed on others nodes.\r\n\r\nNodes communicate between them with messages passing.\r\n\r\nEach node corresponds to a Node instance and provides one or more servers.\r\n\r\nEache server provides one ore more services.\r\n\r\nA simple application can have one node with one server.\r\n\r\nA more complex application can have several nodes on one ore more host and each node can have one ore more servers.\r\n\r\nDistributed feature can help to create micro-services based application.\r\n\r\n\r\n\r\n### Description\r\nDevapt provides a distributed infrastructure of nodes with a master configuration pushed on others nodes.\r\n\r\nNodes communicate between them with messages passing.\r\n\r\nEach node corresponds to a Node instance and provides one or more servers.\r\n\r\nEache server provides one ore more services.\r\n\r\nA simple application can have one node with one server.\r\n\r\nA more complex application can have several nodes on one ore more host and each node can have one ore more servers.\r\n\r\nDistributed feature can help to create micro-services based application.\r\n\r\n\r\n\r\n### Status\r\nThe nodes, servers and services are ready for use.\r\n\r\nThe messaging bus is ready too but it sould be tested on many host.\r\n\r\nTo finish: push configuration.\r\n\r\nNeed Test, Optimization and code review.\r\n\r\n\r\n\r\n### For Devapt users:\r\nComing soon.\r\n```\r\n```\r\n\r\n\r\n\r\n### For Devapt contributers:\r\nComing soon.\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_messaging.md",
    "name": "./docs/manual/design_messaging.md",
    "content": "## Design - Messaging feature\r\n\r\nDevapt provides messages bus server and client classes.\r\n\r\nDistributed nodes communicates each others with simple JSON messages.\r\n\r\n### Description\r\nA distributed application needs to provide a communication between its nodes.\r\n\r\nDevapt provides messages buses to ensure JSON messages exchange.\r\n\r\n![Messaging](https://github.com/lucbories/devapt/blob/master/docs/features/buses.png)\r\n\r\nEach topology node has 3 buses to communicate inside a node or between nodes:\r\n* metrics bus: metrics collectors push metrics messages on this bus and metrics server listen on it to reduce metrics values.\r\n* messages bus nodes servers and services communicate through messages.\r\n* logs bus: each node part can log its activity on this bus.\r\n\r\nEach browser has a socketio bus for communication between browser and topology.\r\n\r\n\r\nExample for message communication inside a Node\r\n\r\nNode A\r\n\r\nServer A1\t\t\tServer A2\r\n\r\n\r\n\r\n\r\n### Status\r\nThe nodes, servers and services are ready for use.\r\nThe messaging bus is ready too but it sould be tested on many host.\r\n\r\nTo finish: push configuration.\r\n\r\nNeed Test, Optimization and code review.\r\n\r\n\r\n\r\n### For Devapt users:\r\nComing soon.\r\n```\r\n```\r\n\r\n\r\n\r\n### For Devapt contributers:\r\nComing soon.\r\n\r\n\r\n\r\n### Thanks\r\n\r\n#### SimpleBus\r\nAJ Lopez provides many specialized projects.\r\nIt's a great work.\r\nOne of them is SimpleBus, a messaging system between a server and its clients (local or remote).\r\n\r\n[SimpleBus](https://github.com/ajlopez/SimpleBus)\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_metrics.md",
    "name": "./docs/manual/design_metrics.md",
    "content": "## Design - Metrics feature\r\n\r\nApplications optimization and analyze need some metrics.\r\n\r\nUsefull libraries offer builin metrics support but each one with its own format.\r\n\r\nDevapt provides a unique metrics format per server domain: http request, messaging request...\r\n\r\n### Description\r\nApplications optimization and analyze need some metrics.\r\n\r\nUsefull libraries offer builin metrics support but each one with its own format.\r\n\r\nDevapt provides a unique metrics format per domain: http request, messaging, host, nodejs...\r\n\r\n\r\nMetrics architecture consist of 4 main base classes and one bus per topology, on the master node:\r\n* MetricsCollector: update MetricsRecord values, use MetricsReducer to consolidate values and post a message onto the metrics bus.\r\n* MetricsRecord: a snapshot of a set of values\r\n* MetricsReducer: reduce a list of MetricsRecord values\r\n* MetricsState: MetricsReducer result\r\nEach of this 4 classes should be subclassed to create a new metrics feature.\r\n\r\n\r\nFor instance, available metrics are:\r\n* Bus metrics: collect master node buses counters (messages count, messages size, errors count, subscribers count)\r\n* Host metrics: collect NodeJs host metrics (CPUs count, CPUs architecture, CPUs usage...)\r\n* NodeJs metrics: collect NodeJs process metrics (pid, version, plateform, uptime, memory)\r\n* Http metrics: for Restify and Express, collect request metrics (id, method, status, referer, url, service, latency, browser...)\r\n\r\n\r\nHow it runs:\r\n\r\nThe MetricsServer owns collectors instance and listen the metrics bus and call a MetricsCollector method to process new metrics values.\r\nA MetricsCollector owns one MetricsReducer, one MetricsState and one MetricsRecord.\r\nThe MetricsServer provides metrics reduced values to metrics services.\r\nEach metrics feature has its corresponding metrics service to publish metrics outside the node:\r\n* MetricsBusService\r\n* MetricsHostService\r\n* MetricsNodeJsService\r\n* MetricsHttpService\r\n\r\n\r\n### Status\r\nFeatures are finished for Bus, Host, NodeJs and Http metrics.\r\n\r\nThe metrics server is operational.\r\n\r\nSee devapt-devtools project for a full example of metrics services usage.\r\n\r\n[DEVTOOLS Project](https://github.com/lucbories/devapt-devtools/)\r\n\r\n\r\n### For Devapt users:\r\n```\r\n    // GET NODE\r\n    let node = ...\r\n    \r\n    // GET HTTP METRICS STATISTICS VALUES\r\n    const http_metrics = node.get_metrics_server().get_http_metrics().get_values()\r\n    \r\n    /*\r\n        HTTP METRICS STATISTICS FORMAT:\r\n        \r\n        // REQUEST VERSIONS\r\n        http_metrics.version_counters: a map of Devapt versions counters (plain object)\r\n        \r\n        // REQUEST UUID\r\n        http_metrics.id_counters: a map of requests ids counters { id1:counter1, id2:counter2 } (plain object)\r\n        http_metrics.pid_counters: a map of process ids counters { pid1:counter1, pid2:counter2 } (plain object)\r\n        \r\n        // DURATIONS\r\n        http_metrics.latency_min: the minimal latencies value (integer)\r\n        http_metrics.latency_counter: the counter latencies values (integer)\r\n        http_metrics.latency_sum: the sum of latencies values (integer)\r\n        http_metrics.latency_mean: the sum divided by the count of latencies values (integer)\r\n        http_metrics.latency_max: the maximal latencies value (integer)\r\n        \r\n        // SERVICE IDENTIFICATION\r\n        http_metrics.service_name_counters: a map of service name counters (plain object)\r\n        http_metrics.service_url_counters: a map of service url counters (plain object)\r\n        http_metrics.service_method_counters: a map of service method counters (plain object)\r\n        http_metrics.service_http_version_counters: a map of service http counters (plain object)\r\n        http_metrics.service_route_counters: a map of service route counters (plain object)\r\n        \r\n        // SERVER IDENTIFICATION\r\n        http_metrics.server_node_name_counters: a map of Devapt versions counters (plain object)\r\n        http_metrics.server_server_name_counters: a map of Devapt versions counters (plain object)\r\n        \r\n        // CLIENT IDENTIFICATION\r\n        http_metrics.client_user_name_counters: a map of user name counters (plain object)\r\n        http_metrics.client_user_id_counters: a map of user id counters (plain object)\r\n        http_metrics.client_browser_counters: a map of client browser type counters (plain object)\r\n        http_metrics.client_referrer_counters: a map of client referrer counters (plain object)\r\n\r\n        // RESPONSE\r\n        http_metrics.response_status_counters: a map of response status counters (plain object)\r\n    */\r\n```\r\n\r\n\r\n\r\n### For Devapt contributers:\r\n\r\nMetrics classes are:\r\n| Class file | Class name and description |\r\n|:-----------|:--------------------------:|\r\n| /metric_duration.js | MetricDuration: metrics values collector for a simple time interval.|\r\n| | |\r\n| /base/metrics_collector.js | MetricsCollector: metrics values collector base class.|\r\n| /base/metrics_record.js | MetricsRecord: metrics values snapshot base class.|\r\n| /base/metrics_reducer.js | MetricsHost: metrics values reducer base class.|\r\n| /base/metrics_state.js | MetricsState: metrics values persistent state base class.|\r\n| | |\r\n| /bus/metrics_bus_collector.js | MetricsBusCollector: metrics values collector class for bus metrics feature.|\r\n| /bus/metrics_bus_record.js | MetricsBusRecord: metrics values snapshot class for bus metrics feature.|\r\n| /bus/metrics_bus_reducer.js | MetricsBusHost: metrics values reducer class for bus metrics feature.|\r\n| /bus/metrics_bus_state.js | MetricsBusState: metrics values persistent state class for bus metrics feature.|\r\n| | |\r\n| /host/metrics_host_collector.js | MetricsCollector: metrics values collector class for host metrics feature.|\r\n| /host/metrics_host_record.js | MetricsRecord: metrics values snapshot class for host metrics feature.|\r\n| /host/metrics_host_reducer.js | MetricsHost: metrics values reducer class for host metrics feature.|\r\n| /host/metrics_host_state.js | MetricsState: metrics values persistent state class for host metrics feature.|\r\n| | |\r\n| /http/metrics_http_collector.js | MetricsHttpCollector: metrics values collector class for Http metrics feature.|\r\n| /http/metrics_http_record.js | MetricsHttpRecord: metrics values snapshot class for Http metrics feature.|\r\n| /http/metrics_http_reducer.js | MetricsHttpHost: metrics values reducer class for Http metrics feature.|\r\n| /http/metrics_http_state.js | MetricsHttpState: metrics values persistent state class for Http metrics feature.|\r\n| | |\r\n| /nodejs/metrics_nodejs_collector.js | MetricsNodeJsCollector: metrics values collector class for NodeJs metrics feature.|\r\n| /nodejs/metrics_nodejs_record.js | MetricsNodeJsRecord: metrics values snapshot class for NodeJs metrics feature.|\r\n| /nodejs/metrics_nodejs_reducer.js | MetricsNodeJsHost: metrics values reducer class for NodeJs metrics feature.|\r\n| /nodejs/metrics_nodejs_state.js | MetricsNodeJsState: metrics values persistent state class for NodeJs metrics feature.|\r\n| | |\r\n| common/servers/metric_server.js | MetricsServer: server which reveive metrics message and call a reducer to update statistics|\r\n\r\n\r\nMetrics bus message format:\r\n```\r\n{\r\n   \"target\":\"metrics_server\", // Fixed name: see node.metrics_server.get_name()\r\n   \"sender\":\"...\", // fill by BusClient.send_msg(target,payload)\r\n   \"payload\":{\r\n       \"is_metrics_message\":true,\r\n       \"metric\":\"...\", // metrics collector type: http/message/...\r\n       \"metrics\":[\r\n           {\r\n                // metrics values\r\n           }\r\n       ],\r\n       \"metrics_count\":999 // count of metrics\r\n    }\r\n}\r\n```\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_rendering.md",
    "name": "./docs/manual/design_rendering.md",
    "content": "## Design - Rendering feature\r\n\r\nApplications can render pages on server side or on browser side.\r\n\r\nRender engine accepts rendering plugins:\r\n* default (simple HTML tags)\r\n* Foundation (ZURB HTML/CSS rendering framework)\r\n* jQuery UI\r\n\r\n### Description\r\nRendering is the process of making an Html content.\r\n\r\nDevapt allows you to render page content on the server or on the browser side or all both together.\r\n\r\nDevapt rendering is a set of pure functions which take settings, state and context.\r\n* settings contains what to be rendering: a trre of component descriptions.\r\n* state has initial values of component: label, placeholder, items...\r\n* context is an object with rendering helpers: functions resolver, result data to be updated...\r\n\r\nDevapt rendering is stateless and isomorphic component classes with simple signature:\r\n\r\nAll rendering functions update a virtual dom tree based on virtual-dom.\r\nRendered virtual nodes are stored in a RenderingResult instance.\r\nOn server side rendering, RenderingResult instance is serialized and given to the browser to update the browser dom tree.\r\nOn browser side, rendering is processed by Component classes which update the real dom tree and manage UI interactions (user actions, stream events...).\r\n\r\nA work in progress is to give plugins component class to the browser with browserify build process.\r\n\r\n\r\n\r\n### At startup\r\nA page is rendered by the server and send to the browser.\r\n\r\nThe initial page contains:\r\n* common page headers\r\n* applications initial settings and states: window.__INITIAL_STATE__\r\n* page initial content to be rendered: window.__INITIAL_CONTENT__\r\n* page initial content headers: css, js...\r\n* a single empty body DIV tag with id 'content'\r\n* a devapt bootstrap script\r\n\r\nDevapt bootstrap script calls:\r\n```javascript\r\nwindow.devapt().on_dom_loaded( window.devapt().create_runtime )\r\nwindow.devapt().on_runtime_created( window.devapt().render_page_content )\r\nwindow.devapt().on_content_rendered( window.devapt().init_anchors_commands )\r\n```\r\n\r\nFirst line create Devapt runtime, load initial Redux state.\r\n\r\nLine two render initial content and initialize router current path:\r\n```javascript\r\nwindow.devapt().ui().process_rendering_result(json_result)\r\nwindow.devapt().router().set_hash_if_empty('/')\r\n```\r\n\r\nLine three update anchors path with application url prefix.\r\n\r\n\r\n\r\n### Rendering result process\r\nAt startup <DIV id=\"content\"> is empty and initial RenderingResult contains a virtual tree of the \"content\" tag.\r\n\r\nFor example, \"content\" virtual tree children can contain:\r\n* \"menubar\":vnode_a\r\n* \"separator\":vnode_b\r\n* \"table\":vnode_c\r\n\r\nFirst children components are created and intialized with a vnode:\r\n```javascript\r\n// REMOVE \"content\" existing children\r\n\r\nvar compo_a = window.devapt().ui(\"menubar\")\r\ncompo_a.process_rendering_result(vnode_a)\r\ncompo_content.get_dom_element().appendChild( compo_a.get_dom_element() )\r\n\r\nvar compo_b = window.devapt().ui(\"separator\")\r\ncompo_b.process_rendering_result(vnode_b)\r\ncompo_content.get_dom_element().appendChild( compo_b.get_dom_element() )\r\n\r\nvar compo_c = window.devapt().ui(\"table\")\r\ncompo_c.process_rendering_result(vnode_c)\r\ncompo_content.get_dom_element().appendChild( compo_c.get_dom_element() )\r\n\r\n```\r\n\r\n\r\n\r\n### Rendering component\r\nEach rendering component is a base class of devapt/src/browser/Component.\r\nA Component has a private Rendering instance named \"_rendering\" which manage dom and vnode rendering actions.\r\n\r\n\r\n\r\n```javascript\r\n\r\nconst component_instance = window.document.devapt().runtime().ui().get_component_class(class_name)\r\nconst c = new component_class(settings)\r\nc.render(state)\r\n```\r\n* An other axis is to manage DOM update through a virtual DOM.\r\n\r\nDevapt comes is a set of rendering components but it is expandable with plugins for foundation-site, cytoscape...\r\n\r\n\r\n\r\n\r\n### Example\r\nFor example, at the beginning you have a /myapp/home route to display your home page.\r\n\r\nServer receives a /myapp/home request:\r\n* server search for a corresponding service service and reply with a 404 not found page if no service was found.\r\n* server ask service to process the request: service serves a static page, process a custom work or call a rendering middleware.\r\n* for rendering middleware, service response with a common page skeleton and a RenderingResult instance.\r\n* browser receive html page, init javascript to create ClientRuntime and UI instances.\r\n* browser UI instance processes RenderingResult to finalize page content.\r\n\r\nAfter you choose a menu item with a route command as\r\n```javascript\r\n{\r\n\t\"type\":\"display\",\r\n\t\"url\":\"/page2\",\r\n\t\"middleware\":\"mypage2service\"\r\n}\r\nassuming you have an application whith the /myapp route.\r\n```\r\nBrowser has append a route for each command at startup, so browser process the requested route and call UI instance method:\r\n```javascript\r\nwindow.document.devapt().runtime().ui().render_with_middleware(cmd, \"/myapp/page2\", \"mypage2service\")\r\n```\r\n* Browser asks server for a RenderingResult instance (server rendering result) via websocket.\r\n* Browser UI instance processes RenderingResult to update page content.\r\n\r\n\r\nIf you choose a menu item with a view command as\r\n```javascript\r\n{\r\n\t\"type\":\"display\",\r\n\t\"view\":\"page2_view\",\r\n\t\"menubar\":\"page2_menubar\"\r\n}\r\n```\r\n* Browser searchs for page2_view and page2_menubar (optional) settings. If not found into cache, asks server for settings.\r\n* Browser process rendering of page2_view and page2_menubar (optional).\r\n```javascript\r\nwindow.document.devapt().runtime().ui(page2_view).render()\r\nwindow.document.devapt().runtime().ui(page2_menubar).render()\r\n```\r\n\r\n\r\n\r\n\r\n### Status\r\n\r\nUsable but work in progress.\r\nNeed Test, Optimization and code review.\r\n\r\n\r\n\r\n\r\n### For Devapt users:\r\nComing soon.\r\n```javascript\r\n```\r\n\r\n\r\n\r\n### For Devapt contributers:\r\nComing soon.\r\n\r\n\r\n\r\n\r\n\r\n|    |     |    |\r\n|:---|:---:|---:|\r\n|[Metrics](https://github.com/lucbories/Devapt/tree/master/docs/features/METRICS.md)..........................|[Table of content](https://github.com/lucbories/Devapt/tree/master/docs/TOC.md)|..........................[Security](https://github.com/lucbories/Devapt/tree/master/docs/features/SECURITY.md)|\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_security.md",
    "name": "./docs/manual/design_security.md",
    "content": "## Design - Security feature\r\n\r\nDevapt framework lets you use the best in class authentication features with Passport technology.\r\n\r\nAuthorization is provided by an ACL module for per resource permissions with roles.\r\n\r\n\r\n### Description\r\n\r\n[See this excellent tutorial](https://www.ctl.io/developers/blog/post/build-user-authentication-with-node-js-express-passport-and-orchestrate)\r\n\r\nComing soon.",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_servers.md",
    "name": "./docs/manual/design_servers.md",
    "content": "## Design - Servers feature\r\n\r\nDevapt provides builtin servers for common usages (Restify, Express, SocketIO).\r\n\r\nBut you can code your own server.\r\n\r\nA server is attached to a node (a couple of hostname and port).\r\n\r\n\r\n### Description\r\nServers provide featured services.\r\n\r\n\r\n\r\n### Status\r\nExpress server: make middlewares use configurables.\r\n\r\nRestify server: make middlewares use configurables, check authorizations.\r\n\r\nNeed Test, Optimization and code review.\r\n\r\n\r\n\r\n### Builtin servers\r\nDevapt provides builtin servers for common usages.\r\nBut you can code your own server.\r\n\r\n#### EXPRESS\r\nServe static pages or middleware generated content.\r\n\r\n#### RESTIFY\r\nServe RESTfull content.\r\n\r\n\r\n\r\n#### For Devapt users:\r\nConfigure servers in nodes.json\r\nA JSON nodes servers declaration:\r\n```\r\n{\r\n\t\"nodes\":{\r\n\t\t\"NodeA\":{\r\n\t\t\t\"host\":\"localhost\",\r\n\t\t\t\"is_master\":true,\r\n\t\t\t\"servers\":{\r\n\t\t\t\t\"NodeALocal8080\":{\r\n\t\t\t\t\t\"type\":\"express\",\r\n\t\t\t\t\t\"port\":8080,\r\n\t\t\t\t\t\"protocole\":\"http\",\r\n\t\t\t\t\t\"middlewares\":[],\r\n\t\t\t\t\t\"use_socketio\":true,\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"security\": {\r\n\t\t\t\t\t\t\"authentication\": {\r\n\t\t\t\t\t\t\t\"enabled\":true,\r\n\t\t\t\t\t\t\t\"plugins\":[\"file_users\"]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"NodeALocal8081\":{\r\n\t\t\t\t\t\"type\":\"restify\",\r\n\t\t\t\t\t\"port\":8081,\r\n\t\t\t\t\t\"protocole\":\"http\",\r\n\t\t\t\t\t\"middlewares\":[],\r\n\t\t\t\t\t\"use_socketio\":true,\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"security\": {\r\n\t\t\t\t\t\t\"authentication\": {\r\n\t\t\t\t\t\t\t\"enabled\":true,\r\n\t\t\t\t\t\t\t\"plugins\":[\"file_users\"]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t\"NodeB\":{\r\n\t\t\t\"host\":\"localhost\",\r\n\t\t\t\"is_master\":false,\r\n\t\t\t\"servers\":{\r\n\t\t\t\t\"NodeBLocal8080\":{\r\n\t\t\t\t\t\"type\":\"express\",\r\n\t\t\t\t\t\"port\":8080,\r\n\t\t\t\t\t\"protocole\":\"http\",\r\n\t\t\t\t\t\"middlewares\":[],\r\n\t\t\t\t\t\"use_socketio\":true,\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"security\": {\r\n\t\t\t\t\t\t\"authentication\": {\r\n\t\t\t\t\t\t\t\"enabled\":true,\r\n\t\t\t\t\t\t\t\"plugins\":[\"file_users\"]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"NodeBLocal8081\":{\r\n\t\t\t\t\t\"type\":\"restify\",\r\n\t\t\t\t\t\"port\":8081,\r\n\t\t\t\t\t\"protocole\":\"http\",\r\n\t\t\t\t\t\"middlewares\":[],\r\n\t\t\t\t\t\"use_socketio\":true,\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"security\": {\r\n\t\t\t\t\t\t\"authentication\": {\r\n\t\t\t\t\t\t\t\"enabled\":true,\r\n\t\t\t\t\t\t\t\"plugins\":[\"file_users\"]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"NodeBLocal8082\":{\r\n\t\t\t\t\t\"type\":\"express\",\r\n\t\t\t\t\t\"port\":8082,\r\n\t\t\t\t\t\"protocole\":\"http\",\r\n\t\t\t\t\t\"middlewares\":[],\r\n\t\t\t\t\t\"use_socketio\":true,\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"security\": {\r\n\t\t\t\t\t\t\"authentication\": {\r\n\t\t\t\t\t\t\t\"enabled\":true,\r\n\t\t\t\t\t\t\t\"plugins\":[\"file_users\"]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n```\r\nEach node contains one or more servers.\r\n\r\nA server declaration:\r\n```\r\n\"serverA2\":{\r\n\t\"type\":\"express\",\r\n\t\"port\":8082,\r\n\t\"protocole\":\"http\",\r\n\t\"middlewares\":[],\r\n\t\"use_socketio\":true,\r\n\t\r\n\t\"security\": {\r\n\t\t\"authentication\": {\r\n\t\t\t\"enabled\":true,\r\n\t\t\t\"plugins\":[\"file_users\"]\r\n\t\t}\r\n\t}\r\n}\r\n```\r\nA server has \r\n* a name string, the key of the server record (\"serverA2\"), should be unique on a node and between all distributed nodes.\r\n* a type string: express, restify, socket.io (\"express\"), \"cluster\" and \"bus\" are coming soon.\r\n* a port integer (8081), should be unique on a node.\r\n* a protocole string (\"http\"), others will arrive later.\r\n* a middlewares array ([]), not used yet but it will give configurable middleware uses.\r\n* a flag: use or not socketio between browser and server.\r\n* a security record.\r\n\r\n\r\n\r\n\r\n### For Devapt contributers:\r\n\r\n\r\n\r\n\r\n### Thanks\r\n\r\n#### Express\r\nStrongloop provides a wonderfull de facto standard library, Express.\r\nIt's a very popular project, used by many people.\r\n\r\n[Express](https://github.com/strongloop/express)\r\n\r\n\r\n#### Restify\r\nRestify helps to easily provides a RESTfull server.\r\n\r\n[Express](https://github.com/.../restify)\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_services.md",
    "name": "./docs/manual/design_services.md",
    "content": "## Design - Services feature\r\n\r\nDevapt enables features for applications with services.\r\n\r\nA service is enabled on a server on a node.\r\n\r\nA service is provided and consumed.\r\n\r\nBuilin services:\r\n* static assets router\r\n* resources definitions router\r\n* CRUD operations router\r\n* middleware router for functions as f(request,response,next)\r\n\r\n\r\n### Description\r\nA service is a feature linked on a server and added to an application.\r\n\r\nBuiltin services are:\r\n * assets: serves static files (css, js, html, images).\r\n * crud: provides Create/Read/Update/Delete features to use databases, provides CRUD models restfull API.\r\n * logs: provides all registered logs from all topology servers.\r\n * messages: provides all exchanged bus messages for metrics/default/logs buses.\r\n * metrics_bus: provides metrics about topology buses.\r\n * metrics_host: provides metrics about topology hosts.\r\n * metrics_http: provides metrics about http traffic.\r\n * metrics_nodejs: provides metrics about nodejs activity.\r\n * middleware: provides feature to serve page from middleware like code.\r\n * resource: provides topology resources settings.\r\n * security: provides security features for signin, signup, logout, renew (coming soon).\r\n * topology: provides hierarchical logical or physical topology trees.\r\n\r\n\r\n\r\n# Examples\r\n\r\nDefine two routes to serve static files:\r\n * http://myserver/ with files read from an absolute path /.../devapt-app-devtools/dist/assets\r\n * http://myserver/myapp/css/*.css with files read from a project relative path ./public/.\r\n\r\n```js\r\n\t\"html_assets_1\":{\r\n\t\t\"type\":\"html_assets\",\r\n\t\t\"routes\":[\r\n\t\t\t{\r\n\t\t\t\t\"is_global\":true,\r\n\t\t\t\t\"route\":\"/\",\r\n\t\t\t\t\"directory\":\"/.../devapt-app-devtools/dist/assets\",\r\n\t\t\t\t\"default\":\"index.html\"\r\n\t\t\t},\r\n\r\n\t\t\t{\r\n\t\t\t\t\"route\":\"/css/.*.css\",\r\n\t\t\t\t\"directory\":\"./public\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n```\r\n\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_starting_process.md",
    "name": "./docs/manual/design_starting_process.md",
    "content": "## Design - runtime starting process\r\n\r\n\r\n### Starting code\r\n\r\n```js\r\nvar devapt = require('devapt/base/runtime'); // for ES5\r\nimport runtime from 'devapt/base/runtime' // for ES6 / ES2015\r\n\r\nvar runtime_settings = {\r\n\t'is_master':true,\r\n\t'name':'NodeA',\r\n\t\r\n\t// BUSES SERVERS (for inter nodex communication)\r\n\t\"master\":{\r\n\t\t\"name\":\"NodeA\",\r\n\t\t\r\n\t\t\"msg_bus\":{\r\n\t\t\t\"type\":\"simplebus_server\",\r\n\t\t\t\"host\":\"localhost\",\r\n\t\t\t\"port\":5000\r\n\t\t},\r\n\t\t\"logs_bus\":{\r\n\t\t\t\"type\":\"simplebus_server\",\r\n\t\t\t\"host\":\"localhost\",\r\n\t\t\t\"port\":5001\r\n\t\t},\r\n\t\t\"metrics_bus\":{\r\n\t\t\t\"type\":\"simplebus_server\",\r\n\t\t\t\"host\":\"localhost\",\r\n\t\t\t\"port\":5002\r\n\t\t}\r\n\t},\r\n\t\r\n\t\"base_dir\": \"\",\r\n\t\r\n\t\"settings_provider\": {\r\n\t\t\"source\":\"local_file\",\r\n\t\t\"relative_path\":\"resources/apps.json\"\r\n\t}\r\n}\r\n\r\nruntime.load(runtime_settings)\r\n```\r\n\r\n\r\n---------------------\r\n### Starting sequence brief\r\n\r\n#### import runtime from 'devapt/base/runtime'\r\nThe first time the file is loaded, the singleton instance of Runtime class is created.\r\n\r\nRuntime.constructor is called to define instance attributes:\r\n```js\r\nthis.is_runtime = true\r\nthis.is_master = this.get_setting('is_master', false)\r\n\r\nthis.node = null\r\n\r\nthis.nodes = new Collection()\r\nthis.servers = new Collection()\r\nthis.services = new Collection()\r\nthis.registered_services = new Collection()\r\n\r\nthis.modules = new Collection()\r\nthis.plugins = new Collection()\r\nthis.resources = new Collection()\r\n\r\nthis.transactions = new Collection()\r\nthis.applications = new Collection()\r\n\r\nthis.security = new Security()\r\n```\r\n\r\nSecurity.constructor\r\n* call AuthenticationManager.constructor\r\n* call AuthorizationManager.constructor\r\n\r\n\r\n#### runtime.load\r\nLoad method register runtime settings and call a sequence of executable instances.\r\n* RuntimeStage0Executable\r\n* RuntimeStage1Executable\r\n* RuntimeStage2Executable\r\n* RuntimeStage3Executable\r\n* RuntimeStage4Executable\r\n* RuntimeStage5Executable\r\n\r\n\r\n\r\n---------------------\r\n### Starting sequence details\r\n\r\n#### Runtime loading stage 0 - RuntimeStage0Executable\r\n* create and load runtime node\r\n* create bus instance or connect to an existing bus\r\n\r\nExample of code\r\n```js\r\nthis.runtime.node = new Node(node_name, this.runtime.get_settings())\r\nthis.runtime.node.load()\r\n```\r\n\r\n\r\nNode.constructor\r\n* init Node.servers collection\r\n\r\n\r\nNode.load (for a master node)\r\n* create and load a bus server and connect to it\r\n* create and load a metrics server and connect to it\r\n\r\n\r\nNode.load (not for a master node)\r\n* connect to an existing bus server\r\n* connect to an existing metrics server\r\n\r\n\r\n\r\n#### Runtime loading stage 1 - RuntimeStage1Executable\r\n* load master apps settings\r\n* load security settings\r\n* load loggers settings\r\n\r\ndispatch_store_config_set_all(settings) for master node only\r\n\r\nruntime.security.load = Security.load\r\n* call this.authentication_manager.load(authentication settings)\r\n* call this.authorization_manager.load(authorization settings)\r\n\r\nAuthenticationManager.load\r\n* select one of AuthenticationPlugin* (AuthenticationPluginPassportLocalDb, AuthenticationPluginPassportLocalFile)\r\n* call AuthenticationPlugin*.constructor\r\n* call AuthenticationPlugin*.enable(plugin settings)\r\n!!! AuthenticationPluginPassportLocalDb needs users Model which is defined in stage 3\r\n\r\n\r\n#### Runtime loading stage 2 - RuntimeStage2Executable\r\n* create node servers (for master node only)\r\n* create services (for master node only)\r\n\r\n```js\r\nruntime.node.load_master_settings(node_settings)\r\nmake_services()\r\n```\r\n\r\n\r\nNode.load_master_settings\r\ncall Node.load_servers\r\nfor each servers settings call Node.create_server\r\n```js\r\nlet server = this.create_server(server_type, server_name, server_cfg)\r\nserver.load()\r\nserver.node = this\r\nserver.init_bus_client(host, port)\r\nthis.servers.add(server)\r\n```\r\n\r\nNode.create_server\r\ncreate a Server instance (ExpressServer, RestifyServer...)\r\n\r\nServer.load\r\nload server settings\r\ncall Server.build_server\r\n\r\nServer.build_server\r\nbuild a Server.server instance as an Express or Restify object for example.\r\nload server middlewares for errors, security, metrics...\r\n\r\nmake_services\r\nfor each service config of node settings services\r\n* create a Service instance\r\n* call service.enable()\r\n* call runtime.services.add(service)\r\n\r\n\r\n\r\n#### Runtime loading stage 3 - RuntimeStage3Executable\r\n* create Database instances (connexions), call db.load, call runtime.resources.add(db)\r\n* create Module instances, call module.load, call runtime.modules.add(module)\r\n* loop on modules resources and call runtime.resources.add(res_obj) for each one\r\n* for each model resources call resource.load_associations() and resource.load_includes()\r\n* create Plugin instances, call plugin.load, call runtime.plugins.add(plugin)\r\n\r\nModule.load\r\nloop on resources settings and create Resource instances (Model, View, Menu, Menubar, Database)\r\n\r\n\r\n\r\n#### Runtime loading stage 4 - RuntimeStage4Executable\r\nIf node is master\r\n* create Application instances from runtime settings\r\n* call application.load\r\n* call runtime.applications.add(application)\r\n\r\nApplication.load\r\n* enable consumed services\r\n* enable used services\r\n* enable used plugins\r\n* enable provided services\r\n\r\n\r\n\r\n\r\n#### Runtime loading stage 5 - RuntimeStage5Executable\r\n* enable servers (for master node only)\r\n\r\nif node is master node, call runtime.node.start()\r\n\r\nruntime.node.start\r\ncall server.enable() on each runtime servers\r\n\r\n\r\nServer.enable\r\napply security middlewares !!! TODO\r\nstart listening\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\tutorials.md",
    "name": "./docs/manual/tutorials.md",
    "content": "# Tutorials\r\n\r\nSome usefull applications are:\r\n * DEVTOOLS which actualy display settings, logs, buses messages, metrics and topology. [DEVTOOLS app project](https://github.com/lucbories/devapt-app-devtools/)\r\n * TESTBUS wich helps to test distributed features: basic ping/pong communication, messaging, logs, topology. [TESTBUS app project](https://github.com/lucbories/devapt-app-testbus/)\r\n * TESTUI wich helps to test user interface features. (coming soon) [TESTUI app project](https://github.com/lucbories/devapt-app-testui/)",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\projects.md",
    "name": "./docs/manual/projects.md",
    "content": "# Projects map\r\n\r\nDevapt projects refcard.\r\n\r\n\r\n## Development Map\r\n\r\n### Projects core dependencies (package.json)\r\n\r\n|Project|devapt-core-common|devapt-core-browser|devapt-core-services|devapt-core-server|\r\n|------|------|------|------|------|\r\n|devapt-app-testbus|x|x|x|x|\r\n|devapt-app-testui|x|x|x|x|\r\n|devapt-app-devtools|x|x|x|x|\r\n|devapt-core-doc|x|x|x|x|\r\n|devapt-core-common|||||\r\n|devapt-core-browser|x||||\r\n|devapt-core-services|x||||\r\n|devapt-core-server|x||x||\r\n|devapt-features-foundation6||x|||\r\n|devapt-features-cytoscape||x|||\r\n|devapt-features-sparklines||x|||\r\n|devapt-features-labs|x|x|||\r\n|devtools|x||x||\r\n\r\n### Projects features dependencies (package.json)\r\n\r\n|Project|devapt-features-foundation6|devapt-features-cytoscape|devapt-features-sparklines|devapt-features-labs|devtools|\r\n|------|------|------|------|------|------|\r\n|devapt-app-testbus||||||\r\n|devapt-app-testui||||||\r\n|devapt-app-devtools|||||x|\r\n|devapt-core-common||||||\r\n|devapt-core-browser||||||\r\n|devapt-core-services||||||\r\n|devapt-core-server||||||\r\n|devapt-features-labs||||||\r\n|devapt-app-labs|x|||x||\r\n|devtools|x|x|x|||\r\n\r\n\r\n\r\n## devapt-core-doc\r\n[DEVAPT CORE DOC project](https://github.com/lucbories/devapt-core-doc/)\r\n\r\nPurpose: generate core projects documentation (API, manuals, tutorials)\r\n\r\nDevapt projects dependencies:\r\n * devapt-core-browser\r\n * devapt-core-common\r\n * devapt-core-server\r\n * devapt-core-services\r\n\r\n\r\n## devapt-core-common\r\n[DEVAPT CORE COMMON project](https://github.com/lucbories/devapt-core-common/)\r\n\r\nPurpose: common features for all others projects.\r\n\r\nDevapt projects dependencies:\r\n * none\r\n\r\n\r\n## devapt-core-services\r\n[DEVAPT CORE SERVICES project](https://github.com/lucbories/devapt-core-services/)\r\n\r\nPurpose: services implementation for browser/server projects.\r\n\r\nDevapt projects dependencies:\r\n * devapt-core-common\r\n\r\nProvided services:\r\n * assets routes\r\n * logs stream provider\r\n * messages/logs/metrics stream provider and dispatching\r\n * filtered metrics stream provider\r\n * middleware based routes provider\r\n * ping/pong provider\r\n * resources configuration provider\r\n * security login/signup/logout/... provider (coming soon)\r\n * topology description provider\r\n\r\n\r\n## devapt-core-server\r\n[DEVAPT CORE SERVER project](https://github.com/lucbories/devapt-core-server/)\r\n\r\nPurpose: server features. Provides assets, resources, services, security, plugins, server runtime and metrics.\r\n\r\nDevapt projects dependencies:\r\n * devapt-core-common\r\n * devapt-core-services\r\n\r\n\r\n## devapt-core-browser\r\n[DEVAPT CORE BROWSER project](https://github.com/lucbories/devapt-core-browser/)\r\n\r\nPurpose: browser features. Provides commands, client runtime and components.\r\n\r\nDevapt projects dependencies:\r\n * devapt-core-common\r\n\r\n\r\n## devapt-app-testbus\r\n[TESTBUS app project](https://github.com/lucbories/devapt-app-testbus/)\r\n\r\nPurpose: messages bus testing application.\r\n\r\nDevapt projects dependencies:\r\n * devapt-core-common\r\n * devapt-core-browser\r\n * devapt-core-server\r\n * devapt-core-services\r\n\r\n\r\n## devapt-app-testui\r\n[TESTUI app project](https://github.com/lucbories/devapt-app-testui/)\r\n\r\nPurpose: user interface testing application.\r\n\r\nDevapt projects dependencies:\r\n * devapt-core-common\r\n * devapt-core-browser\r\n * devapt-core-server\r\n * devapt-core-services\r\n\r\n\r\n## devapt-features-foundation6\r\n[DEVAPT FOUNDATION 6 features project](https://github.com/lucbories/devapt-features-foundation6/)\r\n\r\nPurpose: Foundation 6 rendering features.\r\n\r\nDevapt projects dependencies:\r\n * devapt-core-common\r\n\r\n\r\n## devapt-features-cytoscape\r\n[DEVAPT CYTOSCAPE features project](https://github.com/lucbories/devapt-features-cytoscape/)\r\n\r\nPurpose: Cytoscape rendering features.\r\n\r\nDevapt projects dependencies:\r\n * devapt-core-common\r\n * devapt-core-browser\r\n\r\n\r\n## devapt-features-sparklines\r\n[DEVAPT SPARKLINES features project](https://github.com/lucbories/devapt-features-sparklines/)\r\n\r\nPurpose: Sparklines rendering features.\r\n\r\nDevapt projects dependencies:\r\n * devapt-core-common\r\n * devapt-core-browser\r\n\r\n\r\n## devapt-features-labs\r\n[DEVAPT LABS features project](https://github.com/lucbories/devapt-features-labs/)\r\n\r\nPurpose: labs features. Provides calculus and plots.\r\n\r\nDevapt projects dependencies:\r\n * devapt-core-common\r\n * devapt-core-browser\r\n\r\n\r\n## devapt-app-labs\r\n[DEVAPT LABS app project](https://github.com/lucbories/devapt-app-labs/)\r\n\r\nPurpose: Amazing labs application.\r\n\r\nDevapt projects dependencies:\r\n * devapt-core-common\r\n * devapt-core-server\r\n * devapt-core-services\r\n * devapt-features-foundation6\r\n * devapt-features-labs\r\n\r\n\r\n## devapt-devtools\r\n[DEVTOOLS project](https://github.com/lucbories/devapt-devtools/)\r\n\r\nPurpose: development tools features.\r\n\r\nDevapt projects dependencies:\r\n * devapt-core-common\r\n * devapt-features-cytoscape\r\n * devapt-features-foundation6\r\n * devapt-features-sparklines\r\n\r\n\r\n## devapt-app-devtools\r\n[DEVTOOLS app project](https://github.com/lucbories/devapt-app-devtools/)\r\n\r\nPurpose: development tools application.\r\n\r\nDevapt projects dependencies:\r\n * devapt-core-common\r\n * devapt-core-server\r\n * devapt-core-services\r\n * devapt-devtools\r\n * devapt-features-cytoscape\r\n * devapt-features-foundation6\r\n * devapt-features-sparklines\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\roadmap.md",
    "name": "./docs/manual/roadmap.md",
    "content": "# Roadmap\r\n\r\n\r\n## 2.0.x   breaking changes and new features (CURRENT)\r\n\r\n### MAIN GOALS\r\nWhen I was working on devtools features with devapt 1.0.x, I meet some trouble with missing features.\r\nAn other problem was to deal with topology definition and deployment information previously stored in many pieces of code.\r\nIt was difficult to obtain a global view of defined or deployed topology.\r\nSo I pull out deployment information from topology definition.\r\n\r\nOne missing feature for fine deployment was the lake of customer and version of defined items.\r\n\r\n\r\n\r\nMain added features:\r\n* isomorphic Credentials class to deal with session information on browser or on server (tenant, application, username, token...). (DONE)\r\n* isomorphic data management classes: DataStore, DataRecord, DataCollection...\r\n* topology management classes: TopologyDefineItem...(DONE)\r\n* topology deployment classes: TopologyDeployLocalNode... (DONE)\r\n* browser router (for single page application and more) (DONE)\r\n* isomorphic cache management (DONE)\r\n* versionned Collection to register versionned items (CURRENT)\r\n \r\n\r\nMain breaking changes:\r\n* settings json format has evolved\r\n* module was renamed to package\r\n* change Collection.$items from [] to {}, use lodash as collection backend\r\n\r\n\r\n\r\nNew topology tree is now:\r\n```\r\nworld: the root of the topology\r\n\r\n-nodes\r\n--nodeA\r\n---serverA1\r\n---serverA2\r\n\r\n-tenants\r\n--tenantA\r\n---applications\r\n----applicationA\r\n-----url\r\n-----license\r\n-----provided_services\r\n-----used_services\r\n-----used_packages\r\n-----used_plugins\r\n-----assets\r\n---packages\r\n----packageA\r\n-----base_dir\r\n-----resources\r\n-----services\r\n---security\r\n\r\n-plugins\r\n--pluginA\r\n---type\r\n---file or package\r\n\r\n-deployments\r\n--tenantA\r\n---applicationA\r\n----assets\r\n----services\r\n\r\n-security\r\n-loggers\r\n-traces\r\n```\r\nThat's why previous roadmap is outdated, sorry for the changes.\r\n\r\n\r\n\r\n### enhance core features, architecture and stability (previous 1.1.x)\r\n\r\n#### PROJECT\r\n* refactor directories into common/, browser/, server/ (DONE)\r\n* implement Unit tests for base classes (CURRENT)\r\n* use babel-register to debug without build to dist/ directory (DONE)\r\n* test on nodejs 4.4, 5.1, 6.x (DONE)\r\n\r\n#### FEATURES\r\n* implement browser router for single page application (DONE)\r\n* enhance devapt-devtools: runtime registry viewing (DONE)\r\n* enhance devapt-devtools: runtime topology viewing (DONE)\r\n* enhance devapt-devtools: metrics on topology (TODO)\r\n* enhance devapt-devtools: application Redux state viewing (TODO)\r\n* enhance devapt-devtools: application Redux state history player (TODO)\r\n* implement unit test for instances, traces, loggers... (CURRENT)\r\n* implement topology registry (DONE)\r\n* implement topology runtime (DONE)\r\n* implement generic api for state storing (Redux, Map) (DONE)\r\n* implement cache management classes for browser and server (DONE)\r\n\r\n\r\n\r\n### enhance datas access features (previous 1.3.x)\r\n\r\n### PROJECT\r\n* document datas access layers (TODO)\r\n* write Unit tests for datas access classes (TODO)\r\n\r\n\r\n### FEATURES\r\n* enhance devapt-devtools: create datas access dashboard (TODO)\r\n* enhance devapt-devtools: create datas admin backend (TODO)\r\n* implement homogeneous datas access for all datasources (DONE)\r\n* enhance sequelize datasource for SQL databases:MySQL, MariaDb, PostgreSQL, SQLite, MSSQL (DONE)\r\n* implement waterline ORM layer (TODO)\r\n* implement Redis datasource for caching, messaging, NoSQL database (TODO)\r\n* implement datas management classes for browser and server (DONE)\r\n* implement datas cache on distributed nodes (TODO)\r\n\r\n\r\n\r\n## 2.1.x\tenhance distributed features and documentatioon (LATER)\r\n\r\n### PROJECT\r\n* update web site on github with project/, technical/... (TODO)\r\n* document build process (TODO)\r\n\r\n\r\n### FEATURES\r\n* implement distributed services consumers (TODO)\r\n* implement master configuration changes: receive and propagate complete/add/remove/update (TODO)\r\n* implement master node revocation and promotion (TODO)\r\n* implement node settings filter (TODO)\r\n* implement swagger API player (TODO)\r\n* implement circuit breaker on browser (TODO)\r\n\r\n\r\n\r\n## 2.2.x\tenhance security features (LATER)\r\n\r\n### PROJECT\r\n* document security process (TODO)\r\n* write Unit tests for security classes (TODO)\r\n\r\n\r\n### FEATURES\r\n* enhance devapt-devtools: create security dashboard (TODO)\r\n* enhance devapt-devtools: create security admin backend (TODO)\r\n* implement security routes /login, /signup, /logout (TODO)\r\n* implement Passport security plugin (TODO)\r\n* implement authorization with ACL (TODO)\r\n* implement security token (TODO)\r\n* implement registry setting validation with a json schema (TODO)\r\n\r\n\r\n\r\n## 2.3.x\timplement Cloud features (LATER)\r\n\r\n### PROJECT\r\n* document Cloud integration process (TODO)\r\n* write Unit tests for Cloud integration classes (TODO)\r\n\r\n\r\n### FEATURES\r\n* implement AWS DynamoDB datasource (TODO)\r\n* implement AWS Lambda integration (TODO)\r\n* implement AWS Security integration (TODO)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "static": true,
    "access": "public"
  }
]