[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "js/.external-ecmascript.js",
    "static": true,
    "longname": "js/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "js/base/binding/bindings_loader.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport { format } from 'util'\r\nimport _ from 'lodash'\r\n\r\n// COMMON IMPORTS\r\nimport T      from 'devapt-core-common/dist/js/utils/types'\r\nimport Stream from 'devapt-core-common/dist/js/messaging/stream'\r\n\r\n// BROWSER IMPORTS\r\nimport BindingStream          from './binding_stream'\r\nimport BindingServiceTimeline from './binding_service_timeline'\r\nimport BindingService         from './binding_service'\r\n\r\n\r\nconst context = 'browser/base/binding/binding_Loader'\r\n\r\n\r\n\r\n/**\r\n * @file UI component binding loader class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class BindingLoader\r\n{\r\n\t/**\r\n\t * Creates an instance of BindingLoader.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Normalize an array of objects selectors in an array of objects.\r\n\t * @static\r\n\t * \r\n\t * @param {RuntimeBase} arg_runtime - client runtime.\r\n\t * @param {Component} arg_component - component instance.\r\n\t * @param {array} arg_selectors - selectors strings array.\r\n\t * @param {array|string} arg_dom_types - selected items types strings array or single string (default \"dom\").\r\n\t * \r\n\t * @returns {array} - objects|strings array.\r\n\t */\r\n\tstatic normalize_objects(arg_runtime, arg_component, arg_selectors, arg_types = 'dom')\r\n\t{\r\n\t\targ_component.enter_group('normalize_objects')\r\n\r\n\t\tif ( ! T.isArray(arg_selectors) )\r\n\t\t{\r\n\t\t\targ_component.leave_group('normalize_objects:bad selectors array')\r\n\t\t\treturn []\r\n\t\t}\r\n\r\n\t\tconst objects = []\r\n\t\targ_selectors.forEach(\r\n\t\t\t(selector, index)=>{\r\n\t\t\t\tif ( ! T.isString(selector) )\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.warn('normalize_objects:component=%s:bad selector type=%s', arg_component.get_name(), typeof selector)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// DEBUG\r\n\t\t\t\t// console.log(context + ':normalize_objects:component=%s:binding target dom selector=%s', arg_component.get_name(), dom_selector)\r\n\r\n\t\t\t\tconst object_type = T.isString(arg_types) ? arg_types : ( T.isArray(arg_types) && arg_types.length > index ? arg_types[index] : arg_types[arg_types.length - 1])\r\n\r\n\t\t\t\tif (object_type == 'view')\r\n\t\t\t\t{\r\n\t\t\t\t\tif (selector == 'this')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\targ_component.debug('normalize_objects:view:this is found')\r\n\t\t\t\t\t\tobjects.push( arg_component)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\targ_component.debug('normalize_objects:view:' + selector)\r\n\t\t\t\t\tconst target_object = arg_runtime._ui.get(selector)\r\n\t\t\t\t\tif (target_object)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tobjects.push(target_object)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconsole.warn(context + ':normalize_objects:component=%s:bad view selector=%s', arg_component.get_name(), selector)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (object_type == 'jquery')\r\n\t\t\t\t{\r\n\t\t\t\t\tif (selector == 'this')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\targ_component.debug('normalize_objects:jquery:this is found')\r\n\t\t\t\t\t\tobjects.push( $( arg_component.get_dom_id() ) )\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\targ_component.debug('normalize_objects:jquery:' + selector)\r\n\t\t\t\t\tconst jqo = $(selector)\r\n\t\t\t\t\tif (jqo && jqo.length > 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tobjects.push(jqo)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconsole.warn(context + ':normalize_objects:component=%s:bad jquery selector=%s', arg_component.get_name(), selector, jqo)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (object_type == 'dom')\r\n\t\t\t\t{\r\n\t\t\t\t\tif (selector == 'this')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\targ_component.debug('normalize_objects:dom:this is found')\r\n\t\t\t\t\t\tobjects.push( arg_component.get_dom_element() )\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\targ_component.debug('normalize_objects:dom:' + selector)\r\n\t\t\t\t\tconst element = document.getElementById(selector)\r\n\t\t\t\t\tif (element)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tobjects.push(element)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst selection = document.querySelector(selector)\r\n\t\t\t\t\tif (selection)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tobjects.push(selection)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconsole.warn(context + ':normalize_objects:component=%s:bad dom selector=%s', arg_component.get_name(), selector)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (object_type == 'delegate')\r\n\t\t\t\t{\r\n\t\t\t\t\tobjects.push(selector)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.warn(context + ':normalize_objects:component=%s:bad selector type=%s for selector=%s', arg_component.get_name(), object_type, selector)\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\targ_component.leave_group('normalize_objects')\r\n\t\treturn objects\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Load and apply a component binding configuration.\r\n\t * \r\n\t * @param {string} arg_id - binding identifier.\r\n\t * @param {RuntimeBase} arg_runtime - client runtime.\r\n\t * @param {Component} arg_component - component instance.\r\n\t * @param {Immutable.Map|undefined} arg_binding_cfg - component binding configuration.\r\n\t * \r\n\t * @returns {BindingStream|array} \r\n\t */\r\n\tstatic load(arg_id, arg_runtime, arg_component, arg_binding_cfg)\r\n\t{\r\n\t\t// console.info(context + ':load:loading binding for component ' + arg_component.get_name(), arg_binding_cfg)\r\n\t\t\r\n\t\t// CHECK BINDING CONFIGURATION\r\n\t\tif (! T.isObject(arg_binding_cfg) )\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\t// GET CONFIGURATION ATTRIBUTES\r\n\t\tconst type = ('type' in arg_binding_cfg) ? arg_binding_cfg['type'] : undefined\r\n\t\tconst state_path = ('state_path' in arg_binding_cfg) ? arg_binding_cfg['state_path'] : ['bindings_values', arg_id]\r\n\t\tlet xform = ('transform' in arg_binding_cfg) ? arg_binding_cfg['transform'] : undefined\r\n\t\tconst options = ('options' in arg_binding_cfg) ? arg_binding_cfg['options'] : undefined\r\n\t\t\r\n\t\tconst source_svc_name   = ('service' in arg_binding_cfg) ? arg_binding_cfg['service'] : undefined\r\n\t\tconst source_svc_method = ('method' in arg_binding_cfg) ? arg_binding_cfg['method'] : undefined\r\n\t\tconst source_timeline   = ('timeline' in arg_binding_cfg) ? arg_binding_cfg['timeline'] : undefined\r\n\t\tconst source_stream     = ('source_stream' in arg_binding_cfg) ? arg_binding_cfg['source_stream'] : undefined\r\n\t\t// const source_event      = ('event' in arg_binding_cfg) ? arg_binding_cfg['event'] : undefined\r\n\t\tconst source_dom_event = ('dom_event' in arg_binding_cfg) ? arg_binding_cfg['dom_event'] : undefined\r\n\t\t\r\n\t\t// SOURCES\r\n\t\tconst source_type = ('source_type' in arg_binding_cfg) ? arg_binding_cfg['source_type'] : undefined\r\n\t\tconst source_types = ('source_types' in arg_binding_cfg) ? arg_binding_cfg['source_types'] : (source_type ? [source_type] : undefined)\r\n\r\n\t\tconst source_selector = ('source_selector' in arg_binding_cfg) ? arg_binding_cfg['source_selector'] : undefined\r\n\t\tconst source_selectors = ('source_selectors' in arg_binding_cfg) ? arg_binding_cfg['source_selectors'] : (source_selector ? [source_selector] : undefined)\r\n\r\n\t\t// TARGETS\r\n\t\tconst target_type = ('target_type' in arg_binding_cfg) ? arg_binding_cfg['target_type'] : undefined\r\n\t\tconst target_types = ('target_types' in arg_binding_cfg) ? arg_binding_cfg['target_types'] : (target_type ? [target_type] : undefined)\r\n\r\n\t\tconst target_selector = ('target_selector' in arg_binding_cfg) ? arg_binding_cfg['target_selector'] : undefined\r\n\t\tconst target_selectors = ('target_selectors' in arg_binding_cfg) ? arg_binding_cfg['target_selectors'] : (target_selector ? [target_selector] : undefined)\r\n\r\n\t\t// METHOD\r\n\t\tconst target_method  = ('target_method' in arg_binding_cfg)  ? arg_binding_cfg['target_method']  : undefined\r\n\t\tconst target_methods = ('target_methods' in arg_binding_cfg) ? arg_binding_cfg['target_methods'] : undefined\r\n\t\t\r\n\t\t// NORMALIZE SOURCES\r\n\t\t// console.log(context + ':load:component=%s:binding type=%s:source_selectors&source_types=', arg_component.get_name(), type, source_selectors, source_types)\r\n\t\tconst sources = source_selectors ? this.normalize_objects(arg_runtime, arg_component, source_selectors, source_types) : undefined\r\n\r\n\t\t// NORMALIZE TARGETS\r\n\t\t// console.log(context + ':load:component=%s:binding type=%s:target_selectors&target_types=', arg_component.get_name(), type, target_selectors, target_types)\r\n\t\tconst targets = target_selectors ? this.normalize_objects(arg_runtime, arg_component, target_selectors, target_types) : undefined\r\n\r\n\t\t// GET STARTING VALUE\r\n\t\tlet starting_value = undefined\r\n\t\tif ( T.isArray(state_path) && state_path.length > 0 )\r\n\t\t{\r\n\t\t\tstarting_value = arg_component.get_state_value(state_path, undefined)\r\n\t\t\tif (! starting_value)\r\n\t\t\t{\r\n\t\t\t\tstarting_value = arg_runtime.get_state_store().get_state().getIn(state_path, undefined)\r\n\t\t\t\tif (starting_value && starting_value.toJS)\r\n\t\t\t\t{\r\n\t\t\t\t\tstarting_value = starting_value.toJS()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// BIND SOURCES AND TARGETS\r\n\t\tconsole.log(context + ':load:component=%s:binding type=%s', arg_component.get_name(), type)\r\n\t\tswitch(type)\r\n\t\t{\r\n\t\t\tcase 'timeline': {\r\n\t\t\t\tassert( T.isString(source_timeline),       context + format(':load:component=%s:bad timeline name=%s',            arg_component.get_name(), source_timeline) )\r\n\t\t\t\tassert( T.isString(source_svc_name),       context + format(':load:component=%s:bad service name=%s,timeline=%s', arg_component.get_name(), source_timeline, source_svc_name) )\r\n\t\t\t\tassert( T.isString(source_svc_method),     context + format(':load:component=%s:bad service name=%s,timeline=%s', arg_component.get_name(), source_timeline, source_svc_method) )\r\n\t\t\t\tassert( T.isArray(targets) && targets.length > 0, context + format(':load:component=%s,timeline=%s:bad targets',  arg_component.get_name(), source_timeline, source_svc_method) )\r\n\t\t\t\tassert( T.isString(target_method),  context + format(':load:component=%s,timeline=%s:bad target method=%s',       arg_component.get_name(), source_timeline, target_method) )\r\n\t\t\t\t\r\n\t\t\t\treturn new BindingServiceTimeline(arg_id, arg_runtime, arg_component)\r\n\t\t\t\t\t.set_state_path(state_path)\r\n\t\t\t\t\t.set_starting_value(starting_value)\r\n\t\t\t\t\t.set_source_service_name(source_svc_name)\r\n\t\t\t\t\t.set_source_service_method(source_svc_method)\r\n\t\t\t\t\t.set_source_timeline_name(source_timeline)\r\n\t\t\t\t\t.set_targets_instances_array(targets)\r\n\t\t\t\t\t.set_target_method_name(target_method)\r\n\t\t\t\t\t.set_options(options)\r\n\t\t\t\t\t.build()\r\n\t\t\t}\r\n\r\n\t\t\tcase 'service': {\r\n\t\t\t\tassert( T.isString(source_svc_name),       context + format(':load:component=%s:bad service name=%s',  arg_component.get_name(), source_svc_name) )\r\n\t\t\t\tassert( T.isString(source_svc_method),     context + format(':load:component=%s:bad method name=%s',   arg_component.get_name(), source_svc_method) )\r\n\t\t\t\tassert( T.isArray(targets) && targets.length > 0, context + format(':load:component=%s:bad targets',   arg_component.get_name()) )\r\n\t\t\t\tassert( T.isString(target_method),  context + format(':load:component=%s:bad target method=%s',        arg_component.get_name(), target_method) )\r\n\r\n\t\t\t\treturn new BindingService(arg_id, arg_runtime, arg_component)\r\n\t\t\t\t\t.set_state_path(state_path)\r\n\t\t\t\t\t.set_starting_value(starting_value)\r\n\t\t\t\t\t.set_source_service_name(source_svc_name)\r\n\t\t\t\t\t.set_source_service_method(source_svc_method)\r\n\t\t\t\t\t.set_source_transformation(xform)\r\n\t\t\t\t\t.set_targets_instances_array(targets)\r\n\t\t\t\t\t.set_target_method_name(target_method)\r\n\t\t\t\t\t.set_options(options)\r\n\t\t\t\t\t.build()\r\n\t\t\t}\r\n\r\n\t\t\tcase 'emitter_jquery': {\r\n\t\t\t\tassert( T.isArray(sources),         context + format(':load:component=%s:bad sources array=%s',       arg_component.get_name()) )\r\n\t\t\t\tassert( T.isArray(targets) && targets.length > 0, context + format(':load:component=%s:bad targets',  arg_component.get_name()) )\r\n\t\t\t\tassert( T.isString(source_dom_event),  context + format(':load:component=%s:bad source event=%s',     arg_component.get_name(), source_dom_event) )\r\n\t\t\t\tassert( T.isString(target_method),  context + format(':load:component=%s:bad target method=%s',       arg_component.get_name(), target_method) )\r\n\t\t\t\t\r\n\t\t\t\tconst streams = []\r\n\t\t\t\tsources.forEach(\r\n\t\t\t\t\t(jqo)=>{\r\n\t\t\t\t\t\tconst stream = new Stream( jqo.asEventStream(source_dom_event) )\r\n\t\t\t\t\t\tstreams.push(stream)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\t\r\n\t\t\t\tconsole.log(context + ':load:component=%s:binding type=%s:event=%s:sources=', arg_component.get_name(), type, source_dom_event, sources)\r\n\t\t\t\t\r\n\t\t\t\tif (!xform)\r\n\t\t\t\t{\r\n\t\t\t\t\txform = (event)=>{\r\n\t\t\t\t\t\tconst method_cfg = T.isObject(options) ? options.method : undefined\r\n\t\t\t\t\t\tconst operands   = T.isObject(method_cfg) ? method_cfg.operands : undefined\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconsole.log(context + ':load:component=%s:binding type=%s:event=%s:on handler:data=', arg_component.get_name(), type, source_dom_event, operands)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tis_event_handler:true,\r\n\t\t\t\t\t\t\tcomponent_name:undefined,\r\n\t\t\t\t\t\t\tevent_name:source_dom_event,\r\n\t\t\t\t\t\t\tdom_selector:undefined,\r\n\t\t\t\t\t\t\ttarget:event.target,\r\n\t\t\t\t\t\t\tdata:operands\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn new BindingStream(arg_id, arg_runtime, arg_component)\r\n\t\t\t\t\t.set_stream(streams)\r\n\t\t\t\t\t.set_state_path(state_path)\r\n\t\t\t\t\t.set_source_transformation(xform)\r\n\t\t\t\t\t.set_targets_instances_array(targets)\r\n\t\t\t\t\t.set_target_method_name(target_method)\r\n\t\t\t\t\t.set_options(options)\r\n\t\t\t\t\t.build()\r\n\t\t\t}\r\n\r\n\t\t\tcase 'emitter_dom': {\r\n\t\t\t\tassert( T.isArray(sources), context + format(':load:component=%s:bad sources array=%s',               arg_component.get_name()) )\r\n\t\t\t\tassert( T.isArray(targets) && targets.length > 0, context + format(':load:component=%s:bad targets',  arg_component.get_name()) )\r\n\t\t\t\tassert( T.isString(source_dom_event),  context + format(':load:component=%s:bad source event=%s',     arg_component.get_name(), source_dom_event) )\r\n\t\t\t\tassert( T.isString(target_method) || T.isNotEmptyArray(target_methods),  context + format(':load:component=%s:bad target method=%s:methods=%s', arg_component.get_name(), target_method, target_methods) )\r\n\t\t\t\t\r\n\t\t\t\tconst data = options && options.method && options.method.operands ? options.method.operands : undefined\r\n\t\t\t\tconst trace_enabled = false\r\n\r\n\t\t\t\tif ( T.isString(target_method) )\r\n\t\t\t\t{\r\n\t\t\t\t\tconst streams = []\r\n\t\t\t\t\tsources.forEach(\r\n\t\t\t\t\t\t(arg_dom_selector)=>{\r\n\t\t\t\t\t\t\tconst stream = new Stream()\r\n\t\t\t\t\t\t\tconst handler = (component, dom_event_name, arg_selector, dom_event, dom_event_target, arg_data)=>{\r\n\t\t\t\t\t\t\t\tconst data = {\r\n\t\t\t\t\t\t\t\t\tis_event_handler:true,\r\n\t\t\t\t\t\t\t\t\tcomponent_name:component.get_name(),\r\n\t\t\t\t\t\t\t\t\tevent_name:dom_event_name,\r\n\t\t\t\t\t\t\t\t\tdom_selector:arg_selector,\r\n\t\t\t\t\t\t\t\t\ttarget:dom_event_target,\r\n\t\t\t\t\t\t\t\t\tdata:arg_data\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tconsole.log(context + ':load:component=%s:binding type=%s:event=%s:on handler:data=', arg_component.get_name(), type, source_dom_event, data)\r\n\r\n\t\t\t\t\t\t\t\tstream.push(data)\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconsole.log(context + ':load:component=%s:binding type=%s:event=%s:selector=%s', arg_component.get_name(), type, source_dom_event, arg_dom_selector)\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\targ_component.on_dom_event(source_dom_event, arg_dom_selector, handler, data, trace_enabled)\r\n\t\t\t\t\t\t\tstreams.push(stream)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\r\n\t\t\t\t\t// console.log(context + ':load:component=%s:binding type=%s:event=%s:sources=', arg_component.get_name(), type, source_dom_event, sources)\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn new BindingStream(arg_id, arg_runtime, arg_component)\r\n\t\t\t\t\t\t.set_stream(streams)\r\n\t\t\t\t\t\t.set_state_path(state_path)\r\n\t\t\t\t\t\t.set_source_transformation(xform)\r\n\t\t\t\t\t\t.set_targets_instances_array(targets)\r\n\t\t\t\t\t\t.set_target_method_name(target_method)\r\n\t\t\t\t\t\t.set_options(options)\r\n\t\t\t\t\t\t.build()\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( T.isNotEmptyArray(target_methods) )\r\n\t\t\t\t{\r\n\t\t\t\t\tconst binding_streams = []\r\n\t\t\t\t\tsources.forEach(\r\n\t\t\t\t\t\t(arg_dom_selector)=>{\r\n\t\t\t\t\t\t\tconsole.log(context + ':load:component=%s:target_methods binding type=%s:event=%s:selector=%s:methods=', arg_component.get_name(), type, source_dom_event, arg_dom_selector, target_methods)\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tconst stream = new Stream()\r\n\t\t\t\t\t\t\tconst handler = (component, dom_event_name, arg_selector, dom_event, dom_event_target, arg_data)=>{\r\n\t\t\t\t\t\t\t\tconst data = {\r\n\t\t\t\t\t\t\t\t\tis_event_handler:true,\r\n\t\t\t\t\t\t\t\t\tcomponent_name:component.get_name(),\r\n\t\t\t\t\t\t\t\t\tevent_name:dom_event_name,\r\n\t\t\t\t\t\t\t\t\tdom_selector:arg_selector,\r\n\t\t\t\t\t\t\t\t\ttarget:dom_event_target,\r\n\t\t\t\t\t\t\t\t\tdata:arg_data\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tconsole.log(context + ':load:component=%s:target_methods binding type=%s:event=%s:on handler:data=', arg_component.get_name(), type, source_dom_event, data)\r\n\r\n\t\t\t\t\t\t\t\tstream.push(data)\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\targ_component.on_dom_event(source_dom_event, arg_dom_selector, handler, data, trace_enabled)\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t_.forEach(targets,\r\n\t\t\t\t\t\t\t\t(target, index)=>{\r\n\t\t\t\t\t\t\t\t\tconst method = index < target_methods.length ? target_methods[index] : target_methods[target_methods.length - 1]\r\n\t\t\t\t\t\t\t\t\tlet method_name = undefined\r\n\t\t\t\t\t\t\t\t\tlet method_operands = undefined\r\n\t\t\t\t\t\t\t\t\tif ( T.isObject(method) )\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tmethod_name = method.method\r\n\t\t\t\t\t\t\t\t\t\tmethod_operands = method.operands\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if ( T.isString(method) )\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tmethod_name = method\r\n\t\t\t\t\t\t\t\t\t\tif (data)\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tmethod_operands = {\r\n\t\t\t\t\t\t\t\t\t\t\t\tmethod:{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\toperands:data\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tconsole.warn(context + ':load:component=%s:error bad method:binding type=%s:event=%s:selector=%s:methods=%s', arg_component.get_name(), type, source_dom_event, arg_dom_selector, target_methods)\r\n\t\t\t\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tconsole.log(context + ':load:component=%s:target_methods binding type=%s:method_name=%s:method_operands=', arg_component.get_name(), type, method_name, method_operands)\r\n\r\n\t\t\t\t\t\t\t\t\tconst binding_stream = new BindingStream(arg_id, arg_runtime, arg_component)\r\n\t\t\t\t\t\t\t\t\t\t.set_stream(stream)\r\n\t\t\t\t\t\t\t\t\t\t.set_state_path(state_path)\r\n\t\t\t\t\t\t\t\t\t\t.set_source_transformation(xform)\r\n\t\t\t\t\t\t\t\t\t\t.set_targets_instances_array([target])\r\n\t\t\t\t\t\t\t\t\t\t.set_target_method_name(method_name)\r\n\t\t\t\t\t\t\t\t\t\t.set_options(method_operands)\r\n\t\t\t\t\t\t\t\t\t\t.build()\r\n\t\t\t\t\t\t\t\t\tbinding_streams.push(binding_stream)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\r\n\t\t\t\t\treturn binding_streams\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\r\n\t\t\tcase 'stream': {\r\n\t\t\t\tassert( T.isObject(source_stream) && source_stream.is_stream, context + format(':load:component=%s:bad source stream', arg_component.get_name()) )\r\n\t\t\t\tassert( T.isArray(targets) && targets.length > 0, context + format(':load:component=%s:bad targets',  arg_component.get_name()) )\r\n\t\t\t\tassert( T.isString(target_method) || T.isNotEmptyArray(target_methods),  context + format(':load:component=%s:bad target method=%s',       arg_component.get_name(), target_method) )\r\n\t\t\t\t\r\n\t\t\t\tconsole.log(context + ':load:component=%s:target_methods binding type=%s:method_name=%s:method_operands=', arg_component.get_name(), type, target_method, options)\r\n\t\t\t\t\r\n\t\t\t\treturn new BindingStream(arg_id, arg_runtime, arg_component)\r\n\t\t\t\t\t.set_stream(source_stream)\r\n\t\t\t\t\t.set_state_path(state_path)\r\n\t\t\t\t\t.set_source_transformation(xform)\r\n\t\t\t\t\t.set_targets_instances_array(targets)\r\n\t\t\t\t\t.set_target_method_name(target_methods ? target_methods : target_method)\r\n\t\t\t\t\t.set_options(options)\r\n\t\t\t\t\t.build()\r\n\t\t\t}\r\n\r\n\t\t\tdefault:{\r\n\t\t\t\tconsole.warn(context + ':load:component=%s:binding type=%s:type not found', arg_component.get_name(), type)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/base/binding/bindings_loader.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/binding/bindings_loader.js",
    "static": true,
    "longname": "js/base/binding/bindings_loader.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/base/binding/bindings_loader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "class",
    "name": "BindingLoader",
    "memberof": "js/base/binding/bindings_loader.js",
    "static": true,
    "longname": "js/base/binding/bindings_loader.js~BindingLoader",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/base/binding/bindings_loader.js",
    "importStyle": "BindingLoader",
    "description": "",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "UI component binding loader class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 51,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/binding/bindings_loader.js~BindingLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/binding/bindings_loader.js~BindingLoader#constructor",
    "access": "public",
    "description": "Creates an instance of BindingLoader.",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 52,
    "kind": "method",
    "name": "normalize_objects",
    "memberof": "js/base/binding/bindings_loader.js~BindingLoader",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/base/binding/bindings_loader.js~BindingLoader.normalize_objects",
    "access": "public",
    "description": "Normalize an array of objects selectors in an array of objects.",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} - objects|strings array."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "RuntimeBase"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "Component"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_component",
        "description": "component instance."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_selectors",
        "description": "selectors strings array."
      },
      {
        "nullable": null,
        "types": [
          "array",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_dom_types",
        "description": "selected items types strings array or single string (default \"dom\")."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "objects|strings array."
    }
  },
  {
    "__docId__": 53,
    "kind": "method",
    "name": "load",
    "memberof": "js/base/binding/bindings_loader.js~BindingLoader",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "js/base/binding/bindings_loader.js~BindingLoader.load",
    "access": "public",
    "description": "Load and apply a component binding configuration.",
    "lineNumber": 171,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{BindingStream|array} "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_id",
        "description": "binding identifier."
      },
      {
        "nullable": null,
        "types": [
          "RuntimeBase"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "Component"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_component",
        "description": "component instance."
      },
      {
        "nullable": null,
        "types": [
          "Immutable.Map",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_binding_cfg",
        "description": "component binding configuration."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BindingStream",
        "array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 54,
    "kind": "file",
    "name": "js/base/binding/binding_service.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport { format } from 'util'\r\n\r\n// COMMON IMPORTS\r\nimport T      from 'devapt-core-common/dist/js/utils/types'\r\nimport Stream from 'devapt-core-common/dist/js/messaging/stream'\r\n\r\n// BROWSER IMPORTS\r\nimport BindingStream from './binding_stream'\r\n\r\n\r\nconst context = 'browser/base/binding/binding_service'\r\n\r\n\r\n\r\n/**\r\n * @file UI binding class for service stream.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class BindingService extends BindingStream\r\n{\r\n\t/**\r\n\t * Creates an instance of Binding.\r\n\t * @extends Bindable\r\n\t *\r\n\t * @param {string} arg_id - binding identifier.\r\n\t * @param {RuntimeBase} arg_runtime - client runtime.\r\n\t * @param {Component} arg_component - component instance.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_id, arg_runtime, arg_component)\r\n\t{\r\n\t\tsuper(arg_id, arg_runtime, arg_component)\r\n\r\n\t\tthis.is_binding_service = true\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Build binding.\r\n\t * \r\n\t * @returns {Promise} \r\n\t */\r\n\tbuild()\r\n\t{\r\n\t\tthis._component.enter_group('build')\r\n\r\n\t\t// console.log(context + ':build:loading binding for component=% and service=%s', this._component.get_name(), this._source_svc_name)\r\n\t\t\r\n\t\tassert( T.isString(this._source_svc_name),       context + format(':build:component=%s:bad service name=%s',                  this._component.get_name(), this._source_svc_name) )\r\n\t\tassert( T.isString(this._source_svc_method),     context + format(':build:component=%s:service=%s:bad service method=%s',     this._component.get_name(), this._source_svc_name, this._source_svc_method) )\r\n\t\tassert( T.isArray(this._targets) && this._targets.length > 0, context + format(':build:component=%s:service=%s:bad targets',  this._component.get_name(), this._source_svc_name) )\r\n\t\tassert( T.isString(this._target_method),         context + format(':build:component=%s:service=%s,bad target method=%s',      this._component.get_name(), this._source_svc_name, this._target_method) )\r\n\t\t\t\t\r\n\t\tconst promise = this.bind_svc()\r\n\t\t\r\n\t\t// if ( T.isArray(this._state_path) && this._state_path.length > 0 )\r\n\t\t// {\r\n\t\t// \tconst opds = { method:{ operands:[this._state_path]}}\r\n\t\t// \tthis.set_targets_instances_array([this._component])\r\n\t\t// \tthis.set_target_method_name('dispatch_update_state_value_action')\r\n\t\t// \tthis.set_options(opds)\r\n\t\t// \tthis._unsubscribe_state_update = this.bind_svc()\r\n\t\t// }\r\n\r\n\t\tthis._component.leave_group('build:async')\r\n\t\treturn promise\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Bind a service stream event on object method.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tbind_svc()\r\n\t{\r\n\t\tthis._component.enter_group('bind_svc')\r\n\r\n\t\tconsole.info(context + ':bind_svc:loading binding for component ' + this._component.get_name())\r\n\t\t\r\n\t\tconst promise = this._runtime.register_service(this._source_svc_name).then(\r\n\t\t\t(svc) => {\r\n\t\t\t\tthis._component.enter_group('bind_svc - service found')\r\n\t\t\t\t\r\n\t\t\t\tassert( (this._source_svc_method in svc) && T.isFunction(svc[this._source_svc_method]), context + ':bind_svc - service found:bad bound method function')\r\n\t\t\t\tconsole.info(context + ':bind_svc:service found for component ' + this._component.get_name() + ' and service ' + this._source_svc_name)\r\n\r\n\t\t\t\tif (this._source_svc_method == 'post')\r\n\t\t\t\t{\r\n\t\t\t\t\tsvc.subscribe() // TODO ?????\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst method_cfg = T.isObject(this._options) ? this._options.method  : undefined\r\n\t\t\t\tconst stream = new Stream( svc[this._source_svc_method](method_cfg) )\r\n\r\n\t\t\t\tif (this._source_svc_name == 'resources')\r\n\t\t\t\t{\r\n\t\t\t\t\t// DEBUG\r\n\t\t\t\t\tstream.get_transformed_stream().onValue(\r\n\t\t\t\t\t\t(values) => {\r\n\t\t\t\t\t\t\tconsole.log(context + ':bind_svc:resources stream:%s:values=', this._component.get_name(), values)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\tthis.set_stream(stream)\r\n\t\t\t\tsuper.build()\r\n\r\n\t\t\t\tthis._component.leave_group('bind_svc - service found')\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tthis._component.leave_group('bind_svc:async')\r\n\t\treturn promise\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/base/binding/binding_service.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 55,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/binding/binding_service.js",
    "static": true,
    "longname": "js/base/binding/binding_service.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/base/binding/binding_service.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 56,
    "kind": "class",
    "name": "BindingService",
    "memberof": "js/base/binding/binding_service.js",
    "static": true,
    "longname": "js/base/binding/binding_service.js~BindingService",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/base/binding/binding_service.js",
    "importStyle": "BindingService",
    "description": "",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "UI binding class for service stream."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/binding/binding_stream.js~BindingStream"
    ]
  },
  {
    "__docId__": 57,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/binding/binding_service.js~BindingService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/binding/binding_service.js~BindingService#constructor",
    "access": "public",
    "description": "Creates an instance of Binding.",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "Bindable"
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_id",
        "description": "binding identifier."
      },
      {
        "nullable": null,
        "types": [
          "RuntimeBase"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "Component"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_component",
        "description": "component instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 58,
    "kind": "member",
    "name": "is_binding_service",
    "memberof": "js/base/binding/binding_service.js~BindingService",
    "static": false,
    "longname": "js/base/binding/binding_service.js~BindingService#is_binding_service",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "build",
    "memberof": "js/base/binding/binding_service.js~BindingService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/binding/binding_service.js~BindingService#build",
    "access": "public",
    "description": "Build binding.",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 60,
    "kind": "method",
    "name": "bind_svc",
    "memberof": "js/base/binding/binding_service.js~BindingService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/binding/binding_service.js~BindingService#bind_svc",
    "access": "public",
    "description": "Bind a service stream event on object method.",
    "lineNumber": 83,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 61,
    "kind": "file",
    "name": "js/base/binding/binding_service_timeline.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport { format } from 'util'\r\n\r\n// COMMON IMPORTS\r\nimport T             from 'devapt-core-common/dist/js/utils/types'\r\nimport { transform } from 'devapt-core-common/dist/js/utils/transform'\r\nimport Stream        from 'devapt-core-common/dist/js/messaging/stream'\r\n\r\n// BROWSER IMPORTS\r\nimport BindingStream from './binding_stream'\r\n\r\n\r\nconst context = 'browser/base/binding/binding_service_timeline'\r\n\r\n\r\n\r\n/**\r\n * @file UI binding class for service based timeline.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class BindingServiceTimeline extends BindingStream\r\n{\r\n\t/**\r\n\t * Creates an instance of Binding.\r\n\t * @extends Bindable\r\n\t *\r\n\t * @param {string} arg_id - binding identifier.\r\n\t * @param {RuntimeBase} arg_runtime - client runtime.\r\n\t * @param {Component} arg_component - component instance.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_id, arg_runtime, arg_component)\r\n\t{\r\n\t\tsuper(arg_id, arg_runtime, arg_component)\r\n\r\n\t\tthis.is_binding_service_timeline = true\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Build binding.\r\n\t * \r\n\t * @returns {Promise} \r\n\t */\r\n\tbuild()\r\n\t{\r\n\t\tthis._component.enter_group('build')\r\n\r\n\t\tconsole.info(context + ':build:loading binding for component ' + this._component.get_name(), this._stream)\r\n\t\t\r\n\t\tassert( T.isString(this._source_timeline),       context + format(':build:component=%s:bad timeline name=%s',            this._component.get_name(), this._source_timeline) )\r\n\t\tassert( T.isString(this._source_svc_name),       context + format(':build:component=%s:bad service name=%s,timeline=%s', this._component.get_name(), this._source_timeline, this._source_svc_name) )\r\n\t\tassert( T.isString(this._source_svc_method),     context + format(':build:component=%s:bad service name=%s,timeline=%s', this._component.get_name(), this._source_timeline, this._source_svc_method) )\r\n\t\tassert( T.isArray(this._targets) && this._targets.length > 0, context + format(':build:component=%s,timeline=%s:bad targets',  this._component.get_name(), this._source_timeline, this._source_svc_method) )\r\n\t\tassert( T.isString(this._target_method),         context + format(':build:component=%s,timeline=%s:bad target method=%s', this._component.get_name(), this._source_timeline, this._target_method) )\r\n\t\t\r\n\t\tlet promise = this.bind_timeline()\r\n\t\tpromise = promise.then(\r\n\t\t\t(unsubscribe)=>{\r\n\t\t\t\tthis._unsubscribe = unsubscribe\r\n\r\n\t\t\t\tif ( T.isArray(this._state_path) && this._state_path.length > 0 )\r\n\t\t\t\t{\r\n\t\t\t\t\tconst opds = { method:{ operands:[this._state_path]}}\r\n\t\t\t\t\tthis.set_targets_instances_array([this._component])\r\n\t\t\t\t\tthis.set_target_method_name('dispatch_update_state_value_action')\r\n\t\t\t\t\tthis.set_options(opds)\r\n\t\t\t\t\treturn this.bind_timeline().then(\r\n\t\t\t\t\t\t(unsubscribe)=>{\r\n\t\t\t\t\t\t\tthis._unsubscribe_state_update = unsubscribe\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\tthis._component.leave_group('build:async')\r\n\t\treturn promise\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Bind a service timeline stream event on object method.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tbind_timeline()\r\n\t{\r\n\t\t// console.info(context + ':bind_timeline:loading binding for component ' + this._component.get_name(), this._source_timeline)\r\n\t\t\r\n\t\treturn this._runtime.register_service(this._source_svc_name).then(\r\n\t\t\t(svc) => {\r\n\t\t\t\t// console.log(context + ':bind_timeline:svc', svc)\r\n\t\t\t\tassert( (this._source_svc_method in svc) && T.isFunction(svc[this._source_svc_method]), context + ':bind_timeline:bad bound method function')\r\n\t\t\t\t\r\n\t\t\t\tif (this._source_svc_method == 'post')\r\n\t\t\t\t{\r\n\t\t\t\t\tsvc.subscribe() // TODO ???????\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst method_cfg = T.isObject(this._options) ? this._options.method : undefined\r\n\t\t\t\tconst operands   = T.isObject(method_cfg) ? method_cfg.operands : undefined\r\n\t\t\t\tconst format_cfg = T.isObject(this._options) ? this._options.format  : undefined\r\n\r\n\t\t\t\tassert( this._source_timeline in svc[this._source_svc_method].timelines, context + ':bind_timeline:timeline name [' + this._source_timeline + '] not found')\r\n\t\t\t\tassert( T.isObject( svc[this._source_svc_method].timelines[this._source_timeline] ), context + ':bind_timeline:bad timeline object')\r\n\t\t\t\t\r\n\t\t\t\tconst stream = svc[this._source_svc_method].timelines[this._source_timeline].stream\r\n\t\t\t\t// stream.subscribe( (datas) => {console.log(context + ':bind_timeline:timeline=%s datas=', arg_timeline_name, datas) } )\r\n\t\t\t\t\r\n\t\t\t\tconst unsubscribes = []\r\n\t\t\t\tthis._targets.forEach(\r\n\t\t\t\t\t(target, index)=>{\r\n\t\t\t\t\t\t// const method = this._target_method\r\n\t\t\t\t\t\t// console.info(context + ':bind_timeline:component=%s timeline=%s target at %s method=%s', this._component.get_name(), this._source_timeline, index, method)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst values_xform = {\r\n\t\t\t\t\t\t\t\"result_type\":\"single\",\r\n\t\t\t\t\t\t\t\"fields\":[\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\"name\":'value at ' + index,\r\n\t\t\t\t\t\t\t\t\t\"path\":'value'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst datas_xform = (arg_stream_record) => {\r\n\t\t\t\t\t\t\tif (arg_stream_record.datas)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t// console.log(context + ':bind_stream:datas', arg_stream_record.datas)\r\n\t\t\t\t\t\t\t\treturn arg_stream_record.datas\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn arg_stream_record\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet extracted_stream = stream.map(datas_xform).map( transform(values_xform) )\r\n\t\t\t\t\t\tif (this._options && T.isBoolean(this._options.dispatch) && this._options.dispatch)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tconst at_index_xform = (arg_stream_record) => {\r\n\t\t\t\t\t\t\t\tif ( T.isArray(arg_stream_record) && arg_stream_record.length > index )\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\treturn arg_stream_record[index]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn undefined\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\textracted_stream = extracted_stream.map(at_index_xform)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// INIT STARTING VALUE\r\n\t\t\t\t\t\tthis._stream = new Stream( extracted_stream.startWith(this._starting_value) )\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// DEBUG\r\n\t\t\t\t\t\t// this._stream.get_source_stream().onValue(\r\n\t\t\t\t\t\t// \t(extracted_value) => {\r\n\t\t\t\t\t\t// \t\tconsole.log(context + ':bind_timeline:timeline=%s method=%s stream value=', this._source_timeline, method, extracted_value)\r\n\t\t\t\t\t\t// \t}\r\n\t\t\t\t\t\t// )\r\n\r\n\t\t\t\t\t\tconst unbind = this.bind_stream(this._stream, this._source_xform, target, this._target_method, operands, format_cfg, this._starting_value)\r\n\t\t\t\t\t\tunsubscribes.push(unbind)\r\n\r\n\t\t\t\t\t\t// if ( T.isArray(this._state_path) && this._state_path.length > 0 )\r\n\t\t\t\t\t\t// {\r\n\t\t\t\t\t\t// \tconst opds = { method:{ operands:[this._state_path]}}\r\n\t\t\t\t\t\t// \tthis._unsubscribe_state_update = this.bind_stream(this._stream, this._source_xform, [this._component], 'dispatch_update_state_value_action', opds)\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\r\n\t\t\t\treturn ()=>{\r\n\t\t\t\t\tunsubscribes.forEach(\r\n\t\t\t\t\t\t(unsubscribe)=>{\r\n\t\t\t\t\t\t\tunsubscribe()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/base/binding/binding_service_timeline.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 62,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/binding/binding_service_timeline.js",
    "static": true,
    "longname": "js/base/binding/binding_service_timeline.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/base/binding/binding_service_timeline.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 63,
    "kind": "class",
    "name": "BindingServiceTimeline",
    "memberof": "js/base/binding/binding_service_timeline.js",
    "static": true,
    "longname": "js/base/binding/binding_service_timeline.js~BindingServiceTimeline",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/base/binding/binding_service_timeline.js",
    "importStyle": "BindingServiceTimeline",
    "description": "",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "UI binding class for service based timeline."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/binding/binding_stream.js~BindingStream"
    ]
  },
  {
    "__docId__": 64,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/binding/binding_service_timeline.js~BindingServiceTimeline",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/binding/binding_service_timeline.js~BindingServiceTimeline#constructor",
    "access": "public",
    "description": "Creates an instance of Binding.",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "Bindable"
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_id",
        "description": "binding identifier."
      },
      {
        "nullable": null,
        "types": [
          "RuntimeBase"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "Component"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_component",
        "description": "component instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 65,
    "kind": "member",
    "name": "is_binding_service_timeline",
    "memberof": "js/base/binding/binding_service_timeline.js~BindingServiceTimeline",
    "static": false,
    "longname": "js/base/binding/binding_service_timeline.js~BindingServiceTimeline#is_binding_service_timeline",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "build",
    "memberof": "js/base/binding/binding_service_timeline.js~BindingServiceTimeline",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/binding/binding_service_timeline.js~BindingServiceTimeline#build",
    "access": "public",
    "description": "Build binding.",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 67,
    "kind": "member",
    "name": "_unsubscribe",
    "memberof": "js/base/binding/binding_service_timeline.js~BindingServiceTimeline",
    "static": false,
    "longname": "js/base/binding/binding_service_timeline.js~BindingServiceTimeline#_unsubscribe",
    "access": "private",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "member",
    "name": "_unsubscribe_state_update",
    "memberof": "js/base/binding/binding_service_timeline.js~BindingServiceTimeline",
    "static": false,
    "longname": "js/base/binding/binding_service_timeline.js~BindingServiceTimeline#_unsubscribe_state_update",
    "access": "private",
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "bind_timeline",
    "memberof": "js/base/binding/binding_service_timeline.js~BindingServiceTimeline",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/binding/binding_service_timeline.js~BindingServiceTimeline#bind_timeline",
    "access": "public",
    "description": "Bind a service timeline stream event on object method.",
    "lineNumber": 93,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 70,
    "kind": "member",
    "name": "_stream",
    "memberof": "js/base/binding/binding_service_timeline.js~BindingServiceTimeline",
    "static": false,
    "longname": "js/base/binding/binding_service_timeline.js~BindingServiceTimeline#_stream",
    "access": "private",
    "description": null,
    "lineNumber": 157,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "file",
    "name": "js/base/binding/binding_stream.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport { format } from 'util'\r\n\r\n// COMMON IMPORTS\r\nimport T             from 'devapt-core-common/dist/js/utils/types'\r\nimport uid           from 'devapt-core-common/dist/js/utils/uid.js'\r\nimport { transform } from 'devapt-core-common/dist/js/utils/transform'\r\n\r\n\r\nconst context = 'browser/base/binding/binding_stream'\r\n\r\n\r\n\r\n/**\r\n * @file UI component binding class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class BindingStream\r\n{\r\n\t/**\r\n\t * Creates an instance of Binding for stream.\r\n\t *\r\n\t * @param {string} arg_id - binding identifier.\r\n\t * @param {RuntimeBase} arg_runtime - client runtime.\r\n\t * @param {Component} arg_component - component instance.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_id, arg_runtime, arg_component)\r\n\t{\r\n\t\tthis.is_binding_stream = true\r\n\r\n\t\tthis._id = arg_id ? arg_id : 'binding_' + uid()\r\n\t\tthis._runtime = arg_runtime\r\n\t\tthis._component = arg_component\r\n\r\n\t\tthis._unsubscribe = undefined\r\n\t\tthis._unsubscribe_state_update = undefined\r\n\r\n\t\tthis._stream = undefined\r\n\t\tthis._state_path = undefined\r\n\t\tthis._starting_value = undefined\r\n\t\tthis._source_svc_name = undefined\r\n\t\tthis._source_svc_method = undefined\r\n\t\tthis._source_xform = undefined\r\n\t\tthis._source_timeline = undefined\r\n\t\tthis._targets = undefined\r\n\t\tthis._target_method = undefined\r\n\t\tthis._options = undefined\r\n\t}\r\n\r\n\r\n\t\r\n\tset_stream(arg_stream)\r\n\t{\r\n\t\tthis._stream = arg_stream\r\n\t\treturn this\r\n\t}\r\n\t\r\n\tset_state_path(arg_state_path)\r\n\t{\r\n\t\tthis._state_path = arg_state_path\r\n\t\treturn this\r\n\t}\r\n\t\r\n\tset_starting_value(arg_starting_value)\r\n\t{\r\n\t\tthis._starting_value = arg_starting_value\r\n\t\treturn this\r\n\t}\r\n\r\n\tset_source_service_name(arg_source_svc_name)\r\n\t{\r\n\t\tthis._source_svc_name = arg_source_svc_name\r\n\t\treturn this\r\n\t}\r\n\r\n\tset_source_service_method(arg_source_svc_method)\r\n\t{\r\n\t\tthis._source_svc_method = arg_source_svc_method\r\n\t\treturn this\r\n\t}\r\n\r\n\tset_source_transformation(arg_transformation)\r\n\t{\r\n\t\tthis._source_xform = arg_transformation\r\n\t\treturn this\r\n\t}\r\n\r\n\tset_source_timeline_name(arg_source_timeline)\r\n\t{\r\n\t\tthis._source_timeline = arg_source_timeline\r\n\t\treturn this\r\n\t}\r\n\r\n\tset_targets_instances_array(arg_targets)\r\n\t{\r\n\t\tthis._targets = arg_targets\r\n\t\treturn this\r\n\t}\r\n\r\n\tset_target_method_name(arg_target_method)\r\n\t{\r\n\t\tthis._target_method = arg_target_method\r\n\t\treturn this\r\n\t}\r\n\r\n\tset_options(arg_options)\r\n\t{\r\n\t\tthis._options = arg_options\r\n\t\treturn this\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * Build binding.\r\n\t * \r\n\t * @returns {Promise} \r\n\t */\r\n\tbuild()\r\n\t{\r\n\t\tconsole.info(context + ':build:loading binding for component ' + this._component.get_name(), this._target_method, this._stream)\r\n\t\t\r\n\t\tthis._component.enter_group('build')\r\n\r\n\t\t// CHECK ATTRIBUTES\r\n\t\tif ( T.isArray(this._stream) )\r\n\t\t{\r\n\t\t\tthis._stream.forEach(\r\n\t\t\t\t(stream, index)=>{\r\n\t\t\t\t\tassert( T.isObject(stream) && stream.is_stream, context + format(':build:component=%s:bad stream object at index=%s', this._component.get_name(), index) )\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\tassert( T.isObject(this._stream) && this._stream.is_stream, context + format(':build:component=%s:bad stream object', this._component.get_name()) )\r\n\t\t}\r\n\t\tassert( T.isArray(this._targets) && this._targets.length > 0, context + format(':build:component=%s,timeline=%s:bad targets',            this._component.get_name(), this._source_timeline, this._source_svc_method) )\r\n\t\tassert( T.isString(this._target_method) || T.isNotEmptyArray(this._target_method), context + format(':build:component=%s,timeline=%s:bad target method=%s',   this._component.get_name(), this._source_timeline, this._target_method) )\r\n\t\t\r\n\t\tconst method_cfg = T.isObject(this._options) ? this._options.method  : undefined\r\n\t\tconst operands   = T.isObject(method_cfg)    ? method_cfg.operands   : undefined\r\n\t\tconst format_cfg = T.isObject(this._options) ? this._options.format  : undefined\r\n\t\t\r\n\t\tconst unsubscribes = []\r\n\t\tthis._targets.forEach(\r\n\t\t\t(target, index)=>{\r\n\t\t\t\tconst stream = T.isArray(this._stream) ? (this._stream.length > index ? this._stream[index] : this._stream[this._stream.length - 1]) : this._stream\r\n\t\t\t\t\r\n\t\t\t\tlet unbind = undefined\r\n\t\t\t\tif ( T.isString(this._target_method) )\r\n\t\t\t\t{\r\n\t\t\t\t\t// console.info(context + ':build:loading binding for component ' + this._component.get_name() + ' with method=' + this._target_method)\r\n\t\t\t\t\t\r\n\t\t\t\t\tunbind = this.bind_stream(stream, this._source_xform, target, this._target_method, operands, format_cfg, this._starting_value)\r\n\t\t\t\t\tunsubscribes.push(unbind)\r\n\t\t\t\t}\r\n\t\t\t\telse if ( T.isNotEmptyArray(this._target_method) )\r\n\t\t\t\t{\r\n\t\t\t\t\tthis._target_method.forEach(\r\n\t\t\t\t\t\t(method_name)=>{\r\n\t\t\t\t\t\t\tif ( T.isString(method_name) )\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t// console.info(context + ':build:loading binding for component ' + this._component.get_name() + ' with methods=' + method_name)\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tunbind = this.bind_stream(stream, this._source_xform, target, method_name, operands, format_cfg, this._starting_value)\r\n\t\t\t\t\t\t\t\tunsubscribes.push(unbind)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tthis._unsubscribe =  ()=>{\r\n\t\t\tunsubscribes.forEach(\r\n\t\t\t\t(unsubscribe)=>{\r\n\t\t\t\t\tunsubscribe()\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tif ( T.isArray(this._state_path) && this._state_path.length > 0 )\r\n\t\t{\r\n\t\t\tconst stream = T.isArray(this._stream) ? this._stream[0] : this._stream\r\n\t\t\tif (! T.isObject(stream) || ! stream.is_stream)\r\n\t\t\t{\r\n\t\t\t\tconsole.warn(context + ':build:bad state path stream for component %s', this._component.get_name(), this._stream, stream)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tthis._unsubscribe_state_update = this.bind_stream(stream, this._source_xform, this._component, 'dispatch_update_state_value_action', [this._state_path])\r\n\t\t}\r\n\r\n\t\tthis._component.leave_group('build:async')\r\n\t\treturn Promise.resolve()\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Bind a stream to a target object action.\r\n\t * \r\n\t * @param {object}    arg_stream           - stream instance.\r\n\t * @param {string|array|function} arg_values_xform - values transformation (optional).\r\n\t * @param {object}    arg_bound_object     - target object instance (optional: this as default).\r\n\t * @param {string}    arg_bound_method     - target object method string.\r\n\t * @param {anything}  arg_method_operands  - target object method operands (optional).\r\n\t * @param {object}    arg_format_object    - formatting settings.\r\n\t * @param {any}       arg_starting_value   - starting value.\r\n\t * @param {object}    arg_options          - binding options.\r\n\t * \r\n\t * @returns {function} - unsubscribe function.\r\n\t */\r\n\tbind_stream(arg_stream, arg_values_xform, arg_bound_object, arg_bound_method, arg_method_operands, arg_format_object, arg_starting_value, arg_options)\r\n\t{\r\n\t\t// console.info(context + ':bind_stream:loading binding for component ' + this._component.get_name(), arg_bound_method, arg_method_operands, this._stream, arg_bound_object, this._source_timeline)\r\n\r\n\t\tlet unbind_cb = undefined\r\n\r\n\t\t// SET TARGET OBJECT\r\n\t\targ_bound_object = arg_bound_object ? arg_bound_object : this._component\r\n\t\tif ( T.isString(arg_bound_object) )\r\n\t\t{\r\n\t\t\tif ( T.isUndefined(arg_bound_method) )\r\n\t\t\t{\r\n\t\t\t\targ_bound_method = arg_bound_object\r\n\t\t\t\targ_bound_object = this._component\r\n\t\t\t} else if (arg_bound_object == 'this')\r\n\t\t\t{\r\n\t\t\t\targ_bound_object = this._component\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tconsole.error(context + ':bind_stream:bad bound object string:%s', arg_bound_object)\r\n\t\t\t\treturn undefined\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// TODO: DO NOT USE TYPR TO TEST DOM ELEMENTS\r\n\t\t// TYPR USE toString FUNCTION TO TEST TYPE against [object Object].\r\n\t\t// FOR OBJECT, toString give [object Object]\r\n\t\t// BUT DOM ELEMENTS toString GIVE [object HTMLXXXElement]\r\n\t\tassert( T.isObject(arg_stream) && arg_stream.is_stream, context + ':bind_stream:bad stream object')\r\n\t\tassert( T.isObject(arg_bound_object) || typeof arg_bound_object == 'object', context + ':bind_stream:bad bound object')\r\n\t\tassert( T.isString(arg_bound_method), context + ':bind_stream:bad bound method string')\r\n\t\t\r\n\t\t// CHECK OBJECT METHOD\r\n\t\tif ( ! (arg_bound_method in arg_bound_object) )\r\n\t\t{\r\n\t\t\tconsole.error(context + ':bind_stream:bad method [%s] for bound object=', arg_bound_method, arg_bound_object)\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\t// DEBUG\r\n\t\targ_stream.get_transformed_stream().onValue(\r\n\t\t\t(values) => {\r\n\t\t\t\tconsole.log(context + ':bind_stream:on initial stream:%s:bound method=%s, bound object, values', this._component.get_name(), arg_bound_method, arg_bound_object, values)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\t// SET FORMATTING FUNCTION\r\n\t\tlet formatting_xform = undefined\r\n\t\tif ( T.isObject(arg_format_object) && T.isString(arg_format_object.type) )\r\n\t\t{\r\n\t\t\tformatting_xform = this.get_format_value_function(arg_format_object)\r\n\t\t}\r\n\r\n\t\t// SET XFORM FOR SIMPLE SETTINGS\r\n\t\tif ( T.isString(arg_values_xform) )\r\n\t\t{\r\n\t\t\tconst field_name = arg_values_xform\r\n\t\t\targ_values_xform = {\r\n\t\t\t\t\"result_type\":\"single\",\r\n\t\t\t\t\"fields\":[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"name\":field_name,\r\n\t\t\t\t\t\t\"path\":field_name\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( T.isUndefined(arg_values_xform) || arg_values_xform == null )\r\n\t\t{\r\n\t\t\tlet xform_stream = T.isFunction(formatting_xform) ? arg_stream.get_transformed_stream().map(formatting_xform) : arg_stream.get_transformed_stream()\r\n\r\n\t\t\tif ( ! T.isUndefined(arg_starting_value) )\r\n\t\t\t{\r\n\t\t\t\txform_stream = xform_stream.startWith(arg_starting_value)\r\n\t\t\t}\r\n\r\n\t\t\tif (arg_method_operands)\r\n\t\t\t{\r\n\t\t\t\tif ( T.isArray(arg_method_operands) )\r\n\t\t\t\t{\r\n\t\t\t\t\t// console.log(context + ':bind_stream:set a stream handler for method=%s with array operands=', arg_bound_method, arg_method_operands)\r\n\t\t\t\t\tunbind_cb = xform_stream.toProperty().assign(arg_bound_object, arg_bound_method, ...arg_method_operands)\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{ \r\n\t\t\t\t\t// console.log(context + ':bind_stream:set a stream handler for method=%s with not array operands=', arg_bound_method, arg_method_operands)\r\n\t\t\t\t\tunbind_cb = xform_stream.toProperty().assign(arg_bound_object, arg_bound_method, arg_method_operands)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tunbind_cb = xform_stream.toProperty().assign(arg_bound_object, arg_bound_method)\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\telse if ( T.isFunction(arg_values_xform) )\r\n\t\t{\r\n\t\t\tlet xform_stream = arg_stream.get_transformed_stream().map(arg_values_xform)\r\n\t\t\txform_stream = T.isFunction(formatting_xform) ? xform_stream.map(formatting_xform) : xform_stream\r\n\r\n\t\t\tif ( ! T.isUndefined(arg_starting_value) )\r\n\t\t\t{\r\n\t\t\t\txform_stream = xform_stream.startWith(arg_starting_value)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (arg_method_operands)\r\n\t\t\t{\r\n\t\t\t\tunbind_cb = xform_stream.toProperty().assign(arg_bound_object, arg_bound_method, ...arg_method_operands)\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tunbind_cb = xform_stream.map(arg_values_xform).toProperty().assign(arg_bound_object, arg_bound_method)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\telse if ( T.isObject(arg_values_xform) )\r\n\t\t{\r\n\t\t\tconst datas_xform = (arg_stream_record) => {\r\n\t\t\t\tif (arg_stream_record.datas)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn arg_stream_record.datas\r\n\t\t\t\t}\r\n\t\t\t\treturn arg_stream_record\r\n\t\t\t}\r\n\r\n\t\t\tlet xform_stream = arg_stream.get_transformed_stream().map(datas_xform).map( transform(arg_values_xform) )\r\n\t\t\t\r\n\t\t\t// DEBUG\r\n\t\t\t// xform_stream.map(datas_xform).map( transform(arg_values_xform) ).onValue(\r\n\t\t\t// \t(values) => {\r\n\t\t\t// \t\tconsole.log(context + ':bind_stream:%s:on values_xform stream:bound method=%s, bound object, values', name, arg_bound_method, arg_bound_object, values)\r\n\t\t\t// \t}\r\n\t\t\t// )\r\n\r\n\t\t\txform_stream = T.isFunction(formatting_xform) ? xform_stream.map(formatting_xform) : xform_stream\r\n\t\t\t\r\n\t\t\tif ( ! T.isUndefined(arg_starting_value) )\r\n\t\t\t{\r\n\t\t\t\txform_stream = xform_stream.startWith(arg_starting_value)\r\n\t\t\t}\r\n\r\n\t\t\tif (arg_options && T.isBoolean(arg_options.dispatch) && arg_options.dispatch && T.isNumber(arg_options.index) && arg_options.index > 0 )\r\n\t\t\t{\r\n\t\t\t\tconst at_index_xform = (arg_stream_record) => {\r\n\t\t\t\t\tif ( T.isArray(arg_stream_record) && arg_stream_record.length > arg_options.index )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn arg_stream_record[arg_options.index]\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn undefined\r\n\t\t\t\t}\r\n\r\n\t\t\t\txform_stream = xform_stream.map(at_index_xform)\r\n\t\t\t}\r\n\r\n\t\t\t// DEBUG\r\n\t\t\t// xform_stream.onValue(\r\n\t\t\t// \t(values) => {\r\n\t\t\t// \t\tconsole.log(context + ':bind_stream:on transformed stream:%s:bound method=%s, bound object, values', name, arg_bound_method, arg_bound_object, values)\r\n\t\t\t// \t}\r\n\t\t\t// )\r\n\t\t\tif (this._runtime.shoud_log_bindingd_stream())\r\n\t\t\t{\r\n\t\t\t\tconst target = arg_bound_object && arg_bound_object.get_name ? arg_bound_object.get_name() : (arg_bound_object && arg_bound_object.attr ? arg_bound_object.attr('id') : (arg_bound_object && arg_bound_object.getAtttribute ? arg_bound_object.getAttribute('id') : 'unknow'))\r\n\t\t\t\txform_stream.onValue(\r\n\t\t\t\t\t(values) => {\r\n\t\t\t\t\t\tconst datas = T.isArray(values) ? 'array of length ' + values.length : (T.isObject(values) ? 'object of keys ' + Object.keys(values).toString() : 'datas')\r\n\t\t\t\t\t\tthis._component.debug('bind_stream:on transformed stream:%s:target=%s,method=%s:values', name, target, arg_bound_method, datas)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t\tif (arg_method_operands)\r\n\t\t\t{\r\n\t\t\t\tif ( T.isArray(arg_method_operands) )\r\n\t\t\t\t{\r\n\t\t\t\t\tunbind_cb = xform_stream.onValue(arg_bound_object, arg_bound_method, ...arg_method_operands)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tunbind_cb = xform_stream.onValue(arg_bound_object, arg_bound_method, arg_method_operands)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tunbind_cb = xform_stream.onValue(arg_bound_object, arg_bound_method)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tassert(false, context + ':bind_svc:bad values paths string|array|function')\r\n\t\t}\r\n\r\n\t\treturn unbind_cb\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get a formatting function or identity.\r\n\t * Format settings example:\r\n\t * \t\t{\r\n\t * \t\t\t\"type\":\"number\",\r\n\t * \t\t\t\"digits\":2\r\n\t * \t\t}\r\n\t * \r\n\t * @param {object} arg_format_object - format settings.\r\n\t * \r\n\t * @returns {Function} - Formatting function or identity.\r\n\t */\r\n\tget_format_value_function(arg_format_object)\r\n\t{\r\n\t\tif (! T.isObject(arg_format_object) || ! T.isString(arg_format_object.type) )\r\n\t\t{\r\n\t\t\treturn (x) => x\r\n\t\t}\r\n\r\n\t\tswitch(arg_format_object.type.toLocaleLowerCase()) {\r\n\t\t\tcase 'number': {\r\n\t\t\t\tif ( T.isNumber(arg_format_object.digits) )\r\n\t\t\t\t{\r\n\t\t\t\t\treturn (x) => {\r\n\t\t\t\t\t\tif (T.isNumber(x))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn x.toFixed(arg_format_object.digits)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn undefined\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn (x) => (T.isNumber(x) ? x : undefined)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn (x) => x\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/base/binding/binding_stream.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 72,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/binding/binding_stream.js",
    "static": true,
    "longname": "js/base/binding/binding_stream.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/base/binding/binding_stream.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 73,
    "kind": "class",
    "name": "BindingStream",
    "memberof": "js/base/binding/binding_stream.js",
    "static": true,
    "longname": "js/base/binding/binding_stream.js~BindingStream",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/base/binding/binding_stream.js",
    "importStyle": "BindingStream",
    "description": "",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "UI component binding class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 74,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#constructor",
    "access": "public",
    "description": "Creates an instance of Binding for stream.",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_id",
        "description": "binding identifier."
      },
      {
        "nullable": null,
        "types": [
          "RuntimeBase"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "Component"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_component",
        "description": "component instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 75,
    "kind": "member",
    "name": "is_binding_stream",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#is_binding_stream",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "member",
    "name": "_id",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#_id",
    "access": "private",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "member",
    "name": "_runtime",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#_runtime",
    "access": "private",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "member",
    "name": "_component",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#_component",
    "access": "private",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "member",
    "name": "_unsubscribe",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#_unsubscribe",
    "access": "private",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "member",
    "name": "_unsubscribe_state_update",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#_unsubscribe_state_update",
    "access": "private",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "member",
    "name": "_stream",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#_stream",
    "access": "private",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "member",
    "name": "_state_path",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#_state_path",
    "access": "private",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "member",
    "name": "_starting_value",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#_starting_value",
    "access": "private",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 84,
    "kind": "member",
    "name": "_source_svc_name",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#_source_svc_name",
    "access": "private",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 85,
    "kind": "member",
    "name": "_source_svc_method",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#_source_svc_method",
    "access": "private",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "member",
    "name": "_source_xform",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#_source_xform",
    "access": "private",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 87,
    "kind": "member",
    "name": "_source_timeline",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#_source_timeline",
    "access": "private",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 88,
    "kind": "member",
    "name": "_targets",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#_targets",
    "access": "private",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 89,
    "kind": "member",
    "name": "_target_method",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#_target_method",
    "access": "private",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 90,
    "kind": "member",
    "name": "_options",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#_options",
    "access": "private",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "set_stream",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#set_stream",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "params": [
      {
        "name": "arg_stream",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 93,
    "kind": "method",
    "name": "set_state_path",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#set_state_path",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "params": [
      {
        "name": "arg_state_path",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "set_starting_value",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#set_starting_value",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "params": [
      {
        "name": "arg_starting_value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "set_source_service_name",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#set_source_service_name",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "params": [
      {
        "name": "arg_source_svc_name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "set_source_service_method",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#set_source_service_method",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "params": [
      {
        "name": "arg_source_svc_method",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "set_source_transformation",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#set_source_transformation",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "params": [
      {
        "name": "arg_transformation",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "set_source_timeline_name",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#set_source_timeline_name",
    "access": "public",
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "params": [
      {
        "name": "arg_source_timeline",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "set_targets_instances_array",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#set_targets_instances_array",
    "access": "public",
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "params": [
      {
        "name": "arg_targets",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "set_target_method_name",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#set_target_method_name",
    "access": "public",
    "description": null,
    "lineNumber": 106,
    "undocument": true,
    "params": [
      {
        "name": "arg_target_method",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "set_options",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#set_options",
    "access": "public",
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "params": [
      {
        "name": "arg_options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "build",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#build",
    "access": "public",
    "description": "Build binding.",
    "lineNumber": 125,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "bind_stream",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#bind_stream",
    "access": "public",
    "description": "Bind a stream to a target object action.",
    "lineNumber": 218,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} - unsubscribe function."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_stream",
        "description": "stream instance."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "array",
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_values_xform",
        "description": "values transformation (optional)."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_bound_object",
        "description": "target object instance (optional: this as default)."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_bound_method",
        "description": "target object method string."
      },
      {
        "nullable": null,
        "types": [
          "anything"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_method_operands",
        "description": "target object method operands (optional)."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_format_object",
        "description": "formatting settings."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_starting_value",
        "description": "starting value."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_options",
        "description": "binding options."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "unsubscribe function."
    }
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "get_format_value_function",
    "memberof": "js/base/binding/binding_stream.js~BindingStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/binding/binding_stream.js~BindingStream#get_format_value_function",
    "access": "public",
    "description": "Get a formatting function or identity.\nFormat settings example:\n\t\t{\n\t\t\t\"type\":\"number\",\n\t\t\t\"digits\":2\n\t\t}",
    "lineNumber": 427,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} - Formatting function or identity."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_format_object",
        "description": "format settings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "Formatting function or identity."
    }
  },
  {
    "__docId__": 116,
    "kind": "file",
    "name": "js/base/component/bound_dom.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport _ from 'lodash'\r\n\r\n// COMMON IMPORTS\r\nimport T   from 'devapt-core-common/dist/js/utils/types'\r\nimport uid from 'devapt-core-common/dist/js/utils/uid.js'\r\n\r\n// BROWSER IMPORTS\r\nimport BindingsLoader from '../binding/bindings_loader'\r\nimport RenderedDom    from './rendered_dom'\r\n\r\n\r\nconst context = 'browser/base/component/bound_dom'\r\n\r\n\r\n\r\n/**\r\n * @file UI dom bindings class.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example:\r\n * \tAPI\r\n * \t\t->load(arg_state):nothing - Load and apply a component configuration.\r\n * \t\t->init_bindings():nothing - Init bindings.\r\n * \t\t->unload():nothing - Unload a component configuration.\r\n * \r\n */\r\nexport default class BoundDom extends RenderedDom\r\n{\r\n\t/**\r\n\t * Creates an instance of Component.\r\n\t * \r\n\t * @param {RuntimeBase}   arg_runtime     - client runtime.\r\n\t * @param {Immutable.Map} arg_state       - component initial state.\r\n\t * @param {string}        arg_log_context - context of traces of this instance (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_state, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_runtime, arg_state, log_context)\r\n\t\t\r\n\t\tthis.is_bound_dom = true\r\n\r\n\t\tthis._is_loaded = false\r\n\t\tthis._bindings = {}\r\n\r\n\t\t// DEBUG\r\n\t\t// console.info(context + ':constructor:creating component ' + this.get_name())\r\n\t\t// this.enable_trace()\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Load and apply a component configuration.\r\n\t * \r\n\t * @param {Immutable.Map|undefined} arg_state - component state to load (optional).\r\n\t * \r\n\t * @returns {nothing|Promise} \r\n\t */\r\n\tload(arg_state)\r\n\t{\r\n\t\tthis.enter_group('load')\r\n\r\n\t\tif (this._is_loaded)\r\n\t\t{\r\n\t\t\t// console.info(context + ':load:already loaded component ' + this.get_name())\r\n\t\t\tthis.leave_group('load:already loaded')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// const self = this\r\n\t\t// console.info(context + ':load:loading component ' + this.get_name())\r\n\t\t\r\n\t\tif (! this.store_unsubscribe)\r\n\t\t{\r\n\t\t\tthis.store_unsubscribe = this.get_runtime().create_store_observer(this)\r\n\t\t}\r\n\t\t\r\n\t\tconst state = arg_state ? arg_state : this.get_state()\r\n\t\t// console.log(state, 'load bindinds')\r\n\t\t\r\n\t\tif (! state)\r\n\t\t{\r\n\t\t\tthis.leave_group('load:no state found')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tthis.init_assets()\r\n\r\n\t\t// this.update()\r\n\r\n\t\tthis._is_loaded = true\r\n\t\tthis.leave_group('load')\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * Init bindings.\r\n\t * \r\n\t * @returns {nothing} \r\n\t */\r\n\tinit_bindings()\r\n\t{\r\n\t\tthis.enter_group('init_bindings')\r\n\r\n\t\tconst state = this.get_state()\r\n\t\tconst bindings = state.has('bindings') ? state.get('bindings').toJS() : undefined\r\n\t\tif ( T.isObject(bindings) )\r\n\t\t{\r\n\t\t\tif ( T.isArray(bindings.services) )\r\n\t\t\t{\r\n\t\t\t\tbindings.services.forEach(\r\n\t\t\t\t\t(bind_cfg) => {\r\n\t\t\t\t\t\tbind_cfg.type = bind_cfg.timeline ? 'timeline' : (bind_cfg.dom_event ? 'emitter_jquery' : 'service')\r\n\t\t\t\t\t\tconst id = 'binding_' + uid()\r\n\t\t\t\t\t\tthis._bindings[id] = BindingsLoader.load(id, this._runtime, this, bind_cfg)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t\tif ( T.isArray(bindings.streams) )\r\n\t\t\t{\r\n\t\t\t\tbindings.streams.forEach(\r\n\t\t\t\t\t(bind_cfg) => {\r\n\t\t\t\t\t\t// console.log(context + ':load:stream binding:', bind_cfg)\r\n\t\t\t\t\t\tlet stream = bind_cfg.source_stream ? bind_cfg.source_stream : undefined\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif ( T.isString(stream) )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlet source_component = this\r\n\t\t\t\t\t\t\tif ( bind_cfg.source_type == 'views' && T.isNotEmptyString(bind_cfg.source_selector) )\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tsource_component = window.devapt().ui(bind_cfg.source_selector)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tstream = source_component.get_named_stream(stream)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( T.isObject(stream) && stream.is_stream )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tbind_cfg.type = 'stream'\r\n\t\t\t\t\t\t\tbind_cfg.source_stream = stream\r\n\t\t\t\t\t\t\tconst id = 'binding_' + uid()\r\n\t\t\t\t\t\t\tthis._bindings[id] = BindingsLoader.load(id, this._runtime, this, bind_cfg)\r\n\r\n\t\t\t\t\t\t\t// console.log(context + ':load:stream bound:', id, bind_cfg)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif ( T.isArray(bindings.emitter_jquery) )\r\n\t\t\t{\r\n\t\t\t\tbindings.emitter_jquery.forEach(\r\n\t\t\t\t\t(bind_cfg) => {\r\n\t\t\t\t\t\tbind_cfg.type = 'emitter_jquery'\r\n\t\t\t\t\t\tconst id = 'binding_' + uid()\r\n\t\t\t\t\t\tconst binding_streams = BindingsLoader.load(id, this._runtime, this, bind_cfg)\r\n\t\t\t\t\t\tif ( T.isArray(binding_streams) )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t_.forEach(binding_streams,\r\n\t\t\t\t\t\t\t\t(binding, index)=>{\r\n\t\t\t\t\t\t\t\t\tthis._bindings[id + '_' + index] = binding\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis._bindings[id] = binding_streams\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif ( T.isArray(bindings.emitter_dom) )\r\n\t\t\t{\r\n\t\t\t\tbindings.emitter_dom.forEach(\r\n\t\t\t\t\t(bind_cfg) => {\r\n\t\t\t\t\t\tbind_cfg.type = 'emitter_dom'\r\n\t\t\t\t\t\tconst id = 'binding_' + uid()\r\n\t\t\t\t\t\tconst binding_streams = BindingsLoader.load(id, this._runtime, this, bind_cfg)\r\n\t\t\t\t\t\tif ( T.isArray(binding_streams) )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t_.forEach(binding_streams,\r\n\t\t\t\t\t\t\t\t(binding, index)=>{\r\n\t\t\t\t\t\t\t\t\tthis._bindings[id + '_' + index] = binding\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis._bindings[id] = binding_streams\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.leave_group('init_bindings')\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Unload a component configuration.\r\n\t * \r\n\t * @returns {nothing} \r\n\t */\r\n\tunload()\r\n\t{\r\n\t\tthis.enter_group('unload')\r\n\r\n\t\tassert( T.isFunction(this.store_unsubscribe), context + ':unload:bad store_unsubscribe function')\r\n\t\t\r\n\t\t// UNBIND ALL BINDINGS\r\n\t\t_.forEach(this._bindings,\r\n\t\t\t(binding/*, id*/)=>{\r\n\t\t\t\tbinding._unsubscribe()\r\n\t\t\t\tif (binding._unsubscribe_state_update)\r\n\t\t\t\t{\r\n\t\t\t\t\tbinding._unsubscribe_state_update()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\t// DETACH STORE CHANGE LISTENER\r\n\t\tthis.store_unsubscribe()\r\n\r\n\t\tthis.leave_group('unload')\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/base/component/bound_dom.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 117,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/component/bound_dom.js",
    "static": true,
    "longname": "js/base/component/bound_dom.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/base/component/bound_dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 118,
    "kind": "class",
    "name": "BoundDom",
    "memberof": "js/base/component/bound_dom.js",
    "static": true,
    "longname": "js/base/component/bound_dom.js~BoundDom",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/base/component/bound_dom.js",
    "importStyle": "BoundDom",
    "description": "",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "UI dom bindings class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0\n\n@example:\n\tAPI\n\t\t->load(arg_state):nothing - Load and apply a component configuration.\n\t\t->init_bindings():nothing - Init bindings.\n\t\t->unload():nothing - Unload a component configuration."
      }
    ],
    "interface": false,
    "extends": [
      "js/base/component/rendered_dom.js~RenderedDom"
    ]
  },
  {
    "__docId__": 119,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/component/bound_dom.js~BoundDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/bound_dom.js~BoundDom#constructor",
    "access": "public",
    "description": "Creates an instance of Component.",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "RuntimeBase"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "Immutable.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component initial state."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "context of traces of this instance (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 120,
    "kind": "member",
    "name": "is_bound_dom",
    "memberof": "js/base/component/bound_dom.js~BoundDom",
    "static": false,
    "longname": "js/base/component/bound_dom.js~BoundDom#is_bound_dom",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 121,
    "kind": "member",
    "name": "_is_loaded",
    "memberof": "js/base/component/bound_dom.js~BoundDom",
    "static": false,
    "longname": "js/base/component/bound_dom.js~BoundDom#_is_loaded",
    "access": "private",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "member",
    "name": "_bindings",
    "memberof": "js/base/component/bound_dom.js~BoundDom",
    "static": false,
    "longname": "js/base/component/bound_dom.js~BoundDom#_bindings",
    "access": "private",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "load",
    "memberof": "js/base/component/bound_dom.js~BoundDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/bound_dom.js~BoundDom#load",
    "access": "public",
    "description": "Load and apply a component configuration.",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing|Promise} "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Immutable.Map",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state to load (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing",
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 124,
    "kind": "member",
    "name": "store_unsubscribe",
    "memberof": "js/base/component/bound_dom.js~BoundDom",
    "static": false,
    "longname": "js/base/component/bound_dom.js~BoundDom#store_unsubscribe",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 126,
    "kind": "method",
    "name": "init_bindings",
    "memberof": "js/base/component/bound_dom.js~BoundDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/bound_dom.js~BoundDom#init_bindings",
    "access": "public",
    "description": "Init bindings.",
    "lineNumber": 109,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing} "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 127,
    "kind": "method",
    "name": "unload",
    "memberof": "js/base/component/bound_dom.js~BoundDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/bound_dom.js~BoundDom#unload",
    "access": "public",
    "description": "Unload a component configuration.",
    "lineNumber": 211,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing} "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 128,
    "kind": "file",
    "name": "js/base/component/dom.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\n// import _ from 'lodash'\r\n\r\n// COMMON IMPORTS\r\nimport T         from 'devapt-core-common/dist/js/utils/types'\r\nimport uid       from 'devapt-core-common/dist/js/utils/uid.js'\r\nimport Stateable from 'devapt-core-common/dist/js/base/stateable'\r\n\r\n// BROWSER IMPORTS\r\nimport Rendering from './rendering'\r\n\r\n\r\nconst context = 'browser/base/component/dom'\r\n\r\n\r\n\r\n/**\r\n * @file UI component class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class Dom extends Stateable\r\n{\r\n\t/**\r\n\t * Creates an instance of Component.\r\n\t * @extends Stateable\r\n\t * \r\n\t * \tAPI\r\n\t * \t\t->get_name():string - Get name.\r\n\t * \t\t->get_dom_id():string - Get DOM id.\r\n\t * \t\t\r\n\t * \t\t->has_dom_element():boolean - Test DOM Element instance.\r\n\t * \t\t->get_dom_element():Element - Get DOM element.\r\n\t * \t\t->set_dom_element(arg_element):nothing -Set DOM element.\r\n\t * \r\n\t * \t\t->has_dom_parent(arg_element):boolean - Test if component element has given parent element.\r\n\t * \t\t->get_dom_parent():Element - Get parent element.\r\n\t * \t\t->set_dom_parent(arg_parent_element):nothing - Set given parent element.\r\n\t * \t\t->set_dom_parent_of(arg_component):nothing - Set given parent element.\r\n\t * \r\n\t * \t\t->get_dom_attr(arg_attr_name):string - DOM element manipulation:get dom element attribute.\r\n\t * \t\t->set_dom_attr(arg_attr_name, arg_attr_value):nothing - DOM element manipulation:set dom element attribute value.\r\n\t * \r\n\t * \t\t->get_dom_text():string - DOM element manipulation:get dom element text.\r\n\t * \t\t->set_dom_text(arg_text_value):nothing - DOM element manipulation:set dom element text value.\r\n\t * \t\t->clear_dom_text():nothing - DOM element manipulation:clear dom element text value.\r\n\t * \r\n\t * \t\t->get_dom_value():string - DOM element manipulation:get dom element value.\r\n\t * \t\t->set_dom_value(arg_value):nothing - DOM element manipulation:set dom element value.\r\n\t * \t\t->clear_dom_value():nothing - DOM element manipulation:clear dom element value.\r\n\t * \r\n\t * \t\t->on_dom_event(arg_dom_event, arg_dom_selector, arg_handler, arg_data=undefined, arg_debug=true):nothing - Mount dom event handler with delegator.\r\n\t * \t\t\r\n\t * \t\t->has_dom_vnode():boolean - Test DOM Virtual Node.\r\n\t * \t\t->get_dom_vnode():VNode - Get DOM Virtual Node.\r\n\t * \t\t->set_dom_vnode(arg_vnode):nothing - Set DOM Virtual Node.\r\n\t * \r\n\t * \t\t->is_visible(arg_check=false):boolean - Get visibility.\r\n\t * \t\t->show():nothing - Show component.\r\n\t * \t\t->hide():nothing - Hide component.\r\n\t * \r\n\t * @param {RuntimeBase} arg_runtime - client runtime.\r\n\t * @param {Immutable.Map} arg_state - component initial state.\r\n\t * @param {string} arg_log_context - context of traces of this instance (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_state, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tconst default_settings = {}\r\n\t\tsuper(default_settings, arg_runtime, arg_state, log_context, arg_runtime.get_logger_manager())\r\n\t\t\r\n\t\tthis.is_dom   = true\r\n\r\n\t\t// SET NAME\r\n\t\tthis._name = arg_state.get('name', undefined)\r\n\t\tif (!this._name)\r\n\t\t{\r\n\t\t\tthis._name = 'component_' + uid()\r\n\t\t}\r\n\r\n\t\tthis._is_visible = true\r\n\t\tthis._visiblility = undefined\r\n\t\t\r\n\t\tthis._rendering = new Rendering(this, arg_state.get('dom_id', this._name))\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get name.\r\n\t * \r\n\t * @returns {string} - component name.\r\n\t */\r\n\tget_name()\r\n\t{\r\n\t\treturn this._name\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get DOM id.\r\n\t * \r\n\t * @returns {string} - component DOM id.\r\n\t */\r\n\tget_dom_id()\r\n\t{\r\n\t\treturn this._rendering.get_dom_id()\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Test DOM Element instance.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\thas_dom_element()\r\n\t{\r\n\t\treturn this._rendering.has_dom_element()\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get DOM element.\r\n\t * \r\n\t * @returns {Element}\r\n\t */\r\n\tget_dom_element()\r\n\t{\r\n\t\treturn this._rendering.get_dom_element()\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Set DOM element.\r\n\t * \r\n\t * @param {Element} arg_element - element instance.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tset_dom_element(arg_element)\r\n\t{\r\n\t\tthis._rendering.set_dom_element(arg_element)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Test if component element has given parent element.\r\n\t * \r\n\t * @param {Element} arg_element - parent element to test.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\thas_dom_parent(arg_element)\r\n\t{\r\n\t\tconst dom_elem = this.get_dom_element()\r\n\t\tif (!arg_element)\r\n\t\t{\r\n\t\t\treturn !! dom_elem.parentElement\r\n\t\t}\r\n\t\treturn dom_elem && dom_elem.parentElement == arg_element\r\n\t}\r\n\t\r\n\r\n\r\n\t/**\r\n\t * Get parent element.\r\n\t * \r\n\t * @returns {Element} - parent element.\r\n\t */\r\n\tget_dom_parent()\r\n\t{\r\n\t\tconst dom_elem = this.get_dom_element()\r\n\t\treturn dom_elem ? dom_elem.parentElement : undefined\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Set given parent element.\r\n\t * \r\n\t * @param {Element} arg_parent_element - parent element.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tset_dom_parent(arg_parent_element)\r\n\t{\r\n\t\tconst dom_elem = this.get_dom_element()\r\n\t\tif (dom_elem && arg_parent_element)\r\n\t\t{\r\n\t\t\targ_parent_element.appendChild(dom_elem)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Set given parent element.\r\n\t * \r\n\t * @param {Component} arg_component - parent element component.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tset_dom_parent_of(arg_component)\r\n\t{\r\n\t\tconst dom_elem = this.get_dom_element()\r\n\t\tif (dom_elem && arg_component && arg_component.has_dom_parent())\r\n\t\t{\r\n\t\t\targ_component.get_dom_parent().appendChild(dom_elem)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * DOM element manipulation:get dom element attribute.\r\n\t * \r\n\t * @param {string} arg_attr_name - dom attribute name.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_dom_attr(arg_attr_name)\r\n\t{\r\n\t\tconst dom_elem = this.get_dom_vnode()\r\n\t\tif (! dom_elem)\r\n\t\t{\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\treturn dom_elem.getAttribute ? dom_elem.getAttribute(arg_attr_name) : undefined\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * DOM element manipulation:set dom element attribute value.\r\n\t * \r\n\t * @param {string} arg_attr_name - dom attribute name.\r\n\t * @param {string} arg_attr_value - dom attribute value.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tset_dom_attr(arg_attr_name, arg_attr_value)\r\n\t{\r\n\t\tconst dom_elem = this.get_dom_vnode()\r\n\t\tif (! dom_elem)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (dom_elem.setAttribute)\r\n\t\t{\r\n\t\t\tdom_elem.setAttribute(arg_attr_name, arg_attr_value)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * DOM element manipulation:get dom element text.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_dom_text()\r\n\t{\r\n\t\tconst dom_elem = this.get_dom_element()\r\n\t\tif (! dom_elem)\r\n\t\t{\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\treturn this._get_dom_text(dom_elem)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * DOM element manipulation:set dom element text value.\r\n\t * \r\n\t * @param {string} arg_text_value - dom text value.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tset_dom_text(arg_text_value)\r\n\t{\r\n\t\tconst dom_elem = this.get_dom_element()\r\n\t\tif (! dom_elem)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst node_type = dom_elem.nodeType\r\n\r\n\t\tif ( node_type === 1 || node_type === 9 || node_type === 11 )\r\n\t\t{\r\n\t\t\tdom_elem.textContent = '' + arg_text_value\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * DOM element manipulation:clear dom element text value.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tclear_dom_text()\r\n\t{\r\n\t\tconst dom_elem = this.get_dom_element()\r\n\t\tif (! dom_elem)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst node_type = dom_elem.nodeType\r\n\r\n\t\tif ( node_type === 1 || node_type === 9 || node_type === 11 )\r\n\t\t{\r\n\t\t\tdom_elem.textContent = ''\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t_get_dom_text(arg_element)\r\n\t{\r\n\t\tconst node_type = arg_element.nodeType\r\n\r\n\t\tif ( node_type === 1 || node_type === 9 || node_type === 11 )\r\n\t\t{\r\n\t\t\tif ( T.isString(arg_element.type) && arg_element.type == 'textarea' && T.isString(arg_element.value) )\r\n\t\t\t{\r\n\t\t\t\treturn arg_element.value\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif ( T.isString(arg_element.textContent) )\r\n\t\t\t{\r\n\t\t\t\treturn arg_element.textContent\r\n\t\t\t}\r\n\r\n\t\t\t// LOOP ON CHILDREN\r\n\t\t\tlet child = arg_element.firstChild\r\n\t\t\tlet str = ''\r\n\t\t\twhile(child)\r\n\t\t\t{\r\n\t\t\t\tstr += this._get_dom_text(child)\r\n\t\t\t\tchild = child.nextSibling\r\n\t\t\t}\r\n\r\n\t\t\treturn str\r\n\t\t}\r\n\r\n\t\tif ( node_type === 3 || node_type === 4 )\r\n\t\t{\r\n\t\t\treturn arg_element.node_value\r\n\t\t}\r\n\r\n\t\treturn undefined\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * DOM element manipulation:get dom element value.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_dom_value()\r\n\t{\r\n\t\tconst dom_elem = this.get_dom_element()\r\n\t\tif (! dom_elem || ! ('value' in dom_elem) )\r\n\t\t{\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\treturn dom_elem.value\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * DOM element manipulation:set dom element value.\r\n\t * \r\n\t * @param {string} arg_value - dom value.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tset_dom_value(arg_value)\r\n\t{\r\n\t\tconst dom_elem = this.get_dom_element()\r\n\t\tif (! dom_elem || ! ('value' in dom_elem) )\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tdom_elem.value = arg_value\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * DOM element manipulation:clear dom element value.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tclear_dom_value()\r\n\t{\r\n\t\tconst dom_elem = this.get_dom_element()\r\n\t\tif (! dom_elem || ! ('value' in dom_elem) )\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tdom_elem.value = ''\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Mount dom event handler.\r\n\t * \r\n\t * @{string}   arg_dom_event - dom event name.\r\n\t * @{string}   arg_dom_selector - dom selector string ('tag_name.class1.class2').\r\n\t * @{function} arg_handler - handler function f(component, event name, selection, event, target).\r\n\t * @{any}      arg_data - handler datas, default undefined (optional).\r\n\t * @{boolean}  arg_debug - trace flag, default true (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\ton_dom_event(arg_dom_event, arg_dom_selector, arg_handler, arg_data=undefined, arg_debug=true)\r\n\t{\r\n\t\tthis._rendering.on_dom_event(arg_dom_event, arg_dom_selector, arg_handler, arg_data, arg_debug)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Test DOM Virtual Node.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\thas_dom_vnode()\r\n\t{\r\n\t\treturn this._rendering.has_dom_vnode()\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get DOM Virtual Node.\r\n\t * \r\n\t * @returns {VNode}\r\n\t */\r\n\tget_dom_vnode()\r\n\t{\r\n\t\treturn this._rendering.get_dom_vnode()\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Set DOM Virtual Node.\r\n\t * \r\n\t * @param {VNode} arg_vnode - VNode instance.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tset_dom_vnode(arg_vnode)\r\n\t{\r\n\t\tthis._rendering.set_dom_vnode(arg_vnode)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get visibility.\r\n\t * \r\n\t * @param {boolean} arg_check - if true, check style display value.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tis_visible(arg_check=false)\r\n\t{\r\n\t\tif (arg_check)\r\n\t\t{\r\n\t\t\tconst dom_elem = this.get_dom_element()\r\n\t\t\tthis._is_visible = dom_elem && dom_elem.style.display != 'none'\r\n\t\t}\r\n\t\treturn this._is_visible\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Show component.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tshow()\r\n\t{\r\n\t\tconst dom_elem = this.get_dom_element()\r\n\t\tif (dom_elem)\r\n\t\t{\r\n\t\t\tdom_elem.style.display = this._visiblility ? this._visiblility : 'block'\r\n\t\t\t\r\n\t\t\t// console.log(context + ':show:this._visiblility=%s, dom_elem.style.display=%s', this._visiblility, dom_elem.style.display)\r\n\r\n\t\t\tthis._is_visible = true\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Hide component.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\thide()\r\n\t{\r\n\t\tconst dom_elem = this.get_dom_element()\r\n\t\tif (dom_elem)\r\n\t\t{\r\n\t\t\tthis._visiblility = dom_elem.style.display == 'none' ? undefined : dom_elem.style.display\r\n\t\t\tdom_elem.style.display = 'none'\r\n\t\t\tthis._is_visible = false\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Toggle component visbility.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\ttoggle()\r\n\t{\r\n\t\tconst dom_elem = this.get_dom_element()\r\n\t\tif (dom_elem)\r\n\t\t{\r\n\t\t\tif (this._is_visible)\r\n\t\t\t{\r\n\t\t\t\tthis.hide()\r\n\t\t\t} else {\r\n\t\t\t\tthis.show()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/base/component/dom.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 129,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/component/dom.js",
    "static": true,
    "longname": "js/base/component/dom.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/base/component/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 130,
    "kind": "class",
    "name": "Dom",
    "memberof": "js/base/component/dom.js",
    "static": true,
    "longname": "js/base/component/dom.js~Dom",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/base/component/dom.js",
    "importStyle": "Dom",
    "description": "",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "UI component class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "devapt-core-common/dist/js/base/stateable~Stateable"
    ]
  },
  {
    "__docId__": 131,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/component/dom.js~Dom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/dom.js~Dom#constructor",
    "access": "public",
    "description": "Creates an instance of Component.",
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "Stateable\n\n\tAPI\n\t\t->get_name():string - Get name.\n\t\t->get_dom_id():string - Get DOM id.\n\t\t\n\t\t->has_dom_element():boolean - Test DOM Element instance.\n\t\t->get_dom_element():Element - Get DOM element.\n\t\t->set_dom_element(arg_element):nothing -Set DOM element.\n\n\t\t->has_dom_parent(arg_element):boolean - Test if component element has given parent element.\n\t\t->get_dom_parent():Element - Get parent element.\n\t\t->set_dom_parent(arg_parent_element):nothing - Set given parent element.\n\t\t->set_dom_parent_of(arg_component):nothing - Set given parent element.\n\n\t\t->get_dom_attr(arg_attr_name):string - DOM element manipulation:get dom element attribute.\n\t\t->set_dom_attr(arg_attr_name, arg_attr_value):nothing - DOM element manipulation:set dom element attribute value.\n\n\t\t->get_dom_text():string - DOM element manipulation:get dom element text.\n\t\t->set_dom_text(arg_text_value):nothing - DOM element manipulation:set dom element text value.\n\t\t->clear_dom_text():nothing - DOM element manipulation:clear dom element text value.\n\n\t\t->get_dom_value():string - DOM element manipulation:get dom element value.\n\t\t->set_dom_value(arg_value):nothing - DOM element manipulation:set dom element value.\n\t\t->clear_dom_value():nothing - DOM element manipulation:clear dom element value.\n\n\t\t->on_dom_event(arg_dom_event, arg_dom_selector, arg_handler, arg_data=undefined, arg_debug=true):nothing - Mount dom event handler with delegator.\n\t\t\n\t\t->has_dom_vnode():boolean - Test DOM Virtual Node.\n\t\t->get_dom_vnode():VNode - Get DOM Virtual Node.\n\t\t->set_dom_vnode(arg_vnode):nothing - Set DOM Virtual Node.\n\n\t\t->is_visible(arg_check=false):boolean - Get visibility.\n\t\t->show():nothing - Show component.\n\t\t->hide():nothing - Hide component."
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "RuntimeBase"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "Immutable.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component initial state."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "context of traces of this instance (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 132,
    "kind": "member",
    "name": "is_dom",
    "memberof": "js/base/component/dom.js~Dom",
    "static": false,
    "longname": "js/base/component/dom.js~Dom#is_dom",
    "access": "public",
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 133,
    "kind": "member",
    "name": "_name",
    "memberof": "js/base/component/dom.js~Dom",
    "static": false,
    "longname": "js/base/component/dom.js~Dom#_name",
    "access": "private",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "member",
    "name": "_is_visible",
    "memberof": "js/base/component/dom.js~Dom",
    "static": false,
    "longname": "js/base/component/dom.js~Dom#_is_visible",
    "access": "private",
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 136,
    "kind": "member",
    "name": "_visiblility",
    "memberof": "js/base/component/dom.js~Dom",
    "static": false,
    "longname": "js/base/component/dom.js~Dom#_visiblility",
    "access": "private",
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 137,
    "kind": "member",
    "name": "_rendering",
    "memberof": "js/base/component/dom.js~Dom",
    "static": false,
    "longname": "js/base/component/dom.js~Dom#_rendering",
    "access": "private",
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 138,
    "kind": "method",
    "name": "get_name",
    "memberof": "js/base/component/dom.js~Dom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/dom.js~Dom#get_name",
    "access": "public",
    "description": "Get name.",
    "lineNumber": 99,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - component name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "component name."
    },
    "params": []
  },
  {
    "__docId__": 139,
    "kind": "method",
    "name": "get_dom_id",
    "memberof": "js/base/component/dom.js~Dom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/dom.js~Dom#get_dom_id",
    "access": "public",
    "description": "Get DOM id.",
    "lineNumber": 111,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - component DOM id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "component DOM id."
    },
    "params": []
  },
  {
    "__docId__": 140,
    "kind": "method",
    "name": "has_dom_element",
    "memberof": "js/base/component/dom.js~Dom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/dom.js~Dom#has_dom_element",
    "access": "public",
    "description": "Test DOM Element instance.",
    "lineNumber": 123,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 141,
    "kind": "method",
    "name": "get_dom_element",
    "memberof": "js/base/component/dom.js~Dom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/dom.js~Dom#get_dom_element",
    "access": "public",
    "description": "Get DOM element.",
    "lineNumber": 135,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Element}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 142,
    "kind": "method",
    "name": "set_dom_element",
    "memberof": "js/base/component/dom.js~Dom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/dom.js~Dom#set_dom_element",
    "access": "public",
    "description": "Set DOM element.",
    "lineNumber": 149,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_element",
        "description": "element instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "has_dom_parent",
    "memberof": "js/base/component/dom.js~Dom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/dom.js~Dom#has_dom_parent",
    "access": "public",
    "description": "Test if component element has given parent element.",
    "lineNumber": 163,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_element",
        "description": "parent element to test."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 144,
    "kind": "method",
    "name": "get_dom_parent",
    "memberof": "js/base/component/dom.js~Dom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/dom.js~Dom#get_dom_parent",
    "access": "public",
    "description": "Get parent element.",
    "lineNumber": 180,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Element} - parent element."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": "parent element."
    },
    "params": []
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "set_dom_parent",
    "memberof": "js/base/component/dom.js~Dom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/dom.js~Dom#set_dom_parent",
    "access": "public",
    "description": "Set given parent element.",
    "lineNumber": 195,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_parent_element",
        "description": "parent element."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "set_dom_parent_of",
    "memberof": "js/base/component/dom.js~Dom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/dom.js~Dom#set_dom_parent_of",
    "access": "public",
    "description": "Set given parent element.",
    "lineNumber": 213,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Component"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_component",
        "description": "parent element component."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 147,
    "kind": "method",
    "name": "get_dom_attr",
    "memberof": "js/base/component/dom.js~Dom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/dom.js~Dom#get_dom_attr",
    "access": "public",
    "description": "DOM element manipulation:get dom element attribute.",
    "lineNumber": 231,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_attr_name",
        "description": "dom attribute name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 148,
    "kind": "method",
    "name": "set_dom_attr",
    "memberof": "js/base/component/dom.js~Dom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/dom.js~Dom#set_dom_attr",
    "access": "public",
    "description": "DOM element manipulation:set dom element attribute value.",
    "lineNumber": 252,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_attr_name",
        "description": "dom attribute name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_attr_value",
        "description": "dom attribute value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 149,
    "kind": "method",
    "name": "get_dom_text",
    "memberof": "js/base/component/dom.js~Dom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/dom.js~Dom#get_dom_text",
    "access": "public",
    "description": "DOM element manipulation:get dom element text.",
    "lineNumber": 273,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 150,
    "kind": "method",
    "name": "set_dom_text",
    "memberof": "js/base/component/dom.js~Dom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/dom.js~Dom#set_dom_text",
    "access": "public",
    "description": "DOM element manipulation:set dom element text value.",
    "lineNumber": 293,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_text_value",
        "description": "dom text value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 151,
    "kind": "method",
    "name": "clear_dom_text",
    "memberof": "js/base/component/dom.js~Dom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/dom.js~Dom#clear_dom_text",
    "access": "public",
    "description": "DOM element manipulation:clear dom element text value.",
    "lineNumber": 316,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 152,
    "kind": "method",
    "name": "_get_dom_text",
    "memberof": "js/base/component/dom.js~Dom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/dom.js~Dom#_get_dom_text",
    "access": "private",
    "description": null,
    "lineNumber": 334,
    "undocument": true,
    "params": [
      {
        "name": "arg_element",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 153,
    "kind": "method",
    "name": "get_dom_value",
    "memberof": "js/base/component/dom.js~Dom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/dom.js~Dom#get_dom_value",
    "access": "public",
    "description": "DOM element manipulation:get dom element value.",
    "lineNumber": 377,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 154,
    "kind": "method",
    "name": "set_dom_value",
    "memberof": "js/base/component/dom.js~Dom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/dom.js~Dom#set_dom_value",
    "access": "public",
    "description": "DOM element manipulation:set dom element value.",
    "lineNumber": 397,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_value",
        "description": "dom value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 155,
    "kind": "method",
    "name": "clear_dom_value",
    "memberof": "js/base/component/dom.js~Dom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/dom.js~Dom#clear_dom_value",
    "access": "public",
    "description": "DOM element manipulation:clear dom element value.",
    "lineNumber": 415,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 156,
    "kind": "method",
    "name": "on_dom_event",
    "memberof": "js/base/component/dom.js~Dom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/dom.js~Dom#on_dom_event",
    "access": "public",
    "description": "Mount dom event handler.\n\n@{string}   arg_dom_event - dom event name.\n@{string}   arg_dom_selector - dom selector string ('tag_name.class1.class2').\n@{function} arg_handler - handler function f(component, event name, selection, event, target).\n@{any}      arg_data - handler datas, default undefined (optional).\n@{boolean}  arg_debug - trace flag, default true (optional).",
    "lineNumber": 439,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "arg_dom_event",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_dom_selector",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_handler",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_data",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "undefined",
        "defaultValue": "undefined"
      },
      {
        "name": "arg_debug",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      }
    ]
  },
  {
    "__docId__": 157,
    "kind": "method",
    "name": "has_dom_vnode",
    "memberof": "js/base/component/dom.js~Dom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/dom.js~Dom#has_dom_vnode",
    "access": "public",
    "description": "Test DOM Virtual Node.",
    "lineNumber": 451,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 158,
    "kind": "method",
    "name": "get_dom_vnode",
    "memberof": "js/base/component/dom.js~Dom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/dom.js~Dom#get_dom_vnode",
    "access": "public",
    "description": "Get DOM Virtual Node.",
    "lineNumber": 463,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{VNode}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "VNode"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 159,
    "kind": "method",
    "name": "set_dom_vnode",
    "memberof": "js/base/component/dom.js~Dom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/dom.js~Dom#set_dom_vnode",
    "access": "public",
    "description": "Set DOM Virtual Node.",
    "lineNumber": 477,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "VNode"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_vnode",
        "description": "VNode instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 160,
    "kind": "method",
    "name": "is_visible",
    "memberof": "js/base/component/dom.js~Dom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/dom.js~Dom#is_visible",
    "access": "public",
    "description": "Get visibility.",
    "lineNumber": 491,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_check",
        "description": "if true, check style display value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 162,
    "kind": "method",
    "name": "show",
    "memberof": "js/base/component/dom.js~Dom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/dom.js~Dom#show",
    "access": "public",
    "description": "Show component.",
    "lineNumber": 508,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 164,
    "kind": "method",
    "name": "hide",
    "memberof": "js/base/component/dom.js~Dom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/dom.js~Dom#hide",
    "access": "public",
    "description": "Hide component.",
    "lineNumber": 528,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 167,
    "kind": "method",
    "name": "toggle",
    "memberof": "js/base/component/dom.js~Dom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/dom.js~Dom#toggle",
    "access": "public",
    "description": "Toggle component visbility.",
    "lineNumber": 546,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 168,
    "kind": "file",
    "name": "js/base/component/rendered_dom.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport _ from 'lodash'\r\n\r\n// COMMON IMPORTS\r\nimport T   from 'devapt-core-common/dist/js/utils/types'\r\n\r\n// BROWSER IMPORTS\r\nimport Dom from './dom'\r\n\r\n\r\nconst context = 'browser/base/component/rendered_dom'\r\n\r\n\r\n\r\n/**\r\n * @file UI rendered dom class.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example:\r\n * \tAPI\r\n * \t\t->render():Promise - Render component DOM element.\r\n * \t\t->process_rendering_vnode(arg_rendering_result, arg_credentials):nothing - Process rendering VNode: create or update DOM element.\r\n * \t\t->save_rendering():nothing - Save rendering virtul node. Update component VNode with current component HTML.\r\n * \r\n * \t\t->get_assets_promise():Promise - Get assets promises.\r\n * \t\t->get_assets_dependancies():array - Get assets dependancies.\r\n * \t\t->add_assets_dependancy(arg_asset_id):nothing - Add assets dependancy.\r\n * \t\t->init_assets():nothing - Init assets promises.\r\n */\r\nexport default class RenderedDDom extends Dom\r\n{\r\n\t/**\r\n\t * Creates an instance of RenderedDom.\r\n\t * \r\n\t * @param {RuntimeBase}   arg_runtime     - client runtime.\r\n\t * @param {Immutable.Map} arg_state       - component initial state.\r\n\t * @param {string}        arg_log_context - context of traces of this instance (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_state, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_runtime, arg_state, log_context)\r\n\t\t\r\n\t\tthis.is_rendered_dom  = true\r\n\t\tthis.is_menubar       = false\r\n\t\tthis.is_breadcrumbs   = false\r\n\r\n\t\tthis._ready_promise = Promise.resolve()\r\n\t\tthis._assets_dependancies = []\r\n\t\tthis._assets_promise = undefined\r\n\r\n\t\t// DEBUG\r\n\t\t// console.info(context + ':constructor:creating component ' + this.get_name())\r\n\t\t// this.enable_trace()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Render component DOM element.\r\n\t * \r\n\t * @param {boolean} arg_force - should force creation of a new VNode if a previous rendering exists.\r\n\t * \r\n\t * @returns {Promise} - Promise of this to chain promises.\r\n\t */\r\n\trender(arg_force)\r\n\t{\r\n\t\tthis.enter_group('render')\r\n\r\n\t\tthis._ready_promise = this._ready_promise.then(\r\n\t\t\t()=>{\r\n\t\t\t\tconst promise = this._render(arg_force)\r\n\t\t\t\treturn promise.then(\r\n\t\t\t\t\t()=>{\r\n\t\t\t\t\t\tthis.update_size()\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tthis.leave_group('render:async')\r\n\t\treturn this._ready_promise\r\n\t}\r\n\r\n\t_render(arg_force)\r\n\t{\r\n\t\t// const is_rendered = this.get_state_value('is_rendered', false)\r\n\t\t// if (! arg_force && this._is_rendered)\r\n\t\t// {\r\n\t\t// \tthis.leave_group('render:already rendered')\r\n\t\t// \treturn Promise.resolve()\r\n\t\t// }\r\n\t\t\r\n\t\tlet promise = Promise.resolve()\r\n\t\tif (arg_force)\r\n\t\t{\r\n\t\t\tthis.debug('render:force rendering')\r\n\t\t\tpromise = this._rendering.render()\r\n\t\t}\r\n\r\n\t\tpromise = promise.then(\r\n\t\t\t()=>{\r\n\t\t\t\t// SHOULD RENDER VNODE\r\n\t\t\t\tif ( ! this.has_dom_vnode())\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.debug('render:should create vnode')\r\n\t\t\t\t\tconst p = this._rendering.render()\r\n\t\t\t\t\tthis.leave_group('render:vnode is created')\r\n\t\t\t\t\treturn p\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// DISPLAY VNODE\r\n\t\t\t\tif ( this.has_dom_vnode())\r\n\t\t\t\t{\r\n\t\t\t\t\tconst vnode = this.get_dom_vnode()\r\n\t\t\t\t\tconst p = this.process_rendering_vnode(vnode)\r\n\t\t\t\t\tthis.leave_group('render:vnode is rendered')\r\n\t\t\t\t\treturn p\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// RENDERING FAILED\r\n\t\t\t\tthis.error('render:render:no vnode to render')\r\n\t\t\t\tthis.leave_group('render:no vnode to render')\r\n\t\t\t\treturn Promise.reject(context + ':render:no dom vnode to render for ' + this.get_name())\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\treturn promise\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * PROCESS RENDERING VNODE: CREATE OR UPDATE DOM ELEMENT.\r\n\t */\r\n\tprocess_rendering_vnode(arg_rendering_result, arg_credentials)\r\n\t{\r\n\t\tthis._rendering.process_rendering_vnode(arg_rendering_result, arg_credentials)\r\n\r\n\t\tthis._is_visible = true\r\n\t\t// PROCESS CHILDREN\r\n\t\t// ...\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Destroy component DOM element.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tdestroy()\r\n\t{\r\n\t\tthis.enter_group('destroy')\r\n\r\n\t\tif (this._dom_element)\r\n\t\t{\r\n\t\t\tthis._dom_element.parentNode.removeChild(this._dom_element)\r\n\t\t}\r\n\t\t\r\n\t\tthis.leave_group('destroy')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Save rendering virtul node. Update component VNode with current component HTML.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tsave_rendering()\r\n\t{\r\n\t\tthis._rendering.save_rendering()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Update component size with its content.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tupdate_size()\r\n\t{\r\n\t\t// NOTHING TO DO\r\n\t}\r\n\t\r\n\r\n\r\n\t/**\r\n\t * Get assets promises.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tget_assets_promise()\r\n\t{\r\n\t\treturn this._assets_promise\r\n\t}\r\n\t\r\n\r\n\r\n\t/**\r\n\t * Get assets dependancies.\r\n\t * \r\n\t * @returns {array}\r\n\t */\r\n\tget_assets_dependancies()\r\n\t{\r\n\t\treturn this._assets_dependancies\r\n\t}\r\n\t\r\n\r\n\r\n\t/**\r\n\t * Add assets dependancy.\r\n\t * \r\n\t * @param {string} arg_asset_id - asset element id.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tadd_assets_dependancy(arg_asset_id)\r\n\t{\r\n\t\treturn this._assets_dependancies.push(arg_asset_id)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Init assets promises.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tinit_assets()\r\n\t{\r\n\t\tthis.enter_group('init_assets')\r\n\r\n\t\tconst assets_promises = []\r\n\t\tthis._assets_dependancies.forEach(\r\n\t\t\t(asset_id)=>{\r\n\t\t\t\tassets_promises.push( window.devapt().asset_promise(asset_id) )\r\n\t\t\t}\r\n\t\t)\r\n\t\t// console.log(context + ':init:%s:assets:', this.get_name(), this._assets_dependancies)\r\n\r\n\t\tthis._assets_promise = Promise.all(assets_promises)\r\n\r\n\t\tthis.leave_group('init_assets')\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/base/component/rendered_dom.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 169,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/component/rendered_dom.js",
    "static": true,
    "longname": "js/base/component/rendered_dom.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/base/component/rendered_dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 170,
    "kind": "class",
    "name": "RenderedDDom",
    "memberof": "js/base/component/rendered_dom.js",
    "static": true,
    "longname": "js/base/component/rendered_dom.js~RenderedDDom",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/base/component/rendered_dom.js",
    "importStyle": "RenderedDDom",
    "description": "",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "UI rendered dom class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0\n\n@example:\n\tAPI\n\t\t->render():Promise - Render component DOM element.\n\t\t->process_rendering_vnode(arg_rendering_result, arg_credentials):nothing - Process rendering VNode: create or update DOM element.\n\t\t->save_rendering():nothing - Save rendering virtul node. Update component VNode with current component HTML.\n\n\t\t->get_assets_promise():Promise - Get assets promises.\n\t\t->get_assets_dependancies():array - Get assets dependancies.\n\t\t->add_assets_dependancy(arg_asset_id):nothing - Add assets dependancy.\n\t\t->init_assets():nothing - Init assets promises."
      }
    ],
    "interface": false,
    "extends": [
      "js/base/component/dom.js~Dom"
    ]
  },
  {
    "__docId__": 171,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/component/rendered_dom.js~RenderedDDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/rendered_dom.js~RenderedDDom#constructor",
    "access": "public",
    "description": "Creates an instance of RenderedDom.",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "RuntimeBase"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "Immutable.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component initial state."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "context of traces of this instance (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 172,
    "kind": "member",
    "name": "is_rendered_dom",
    "memberof": "js/base/component/rendered_dom.js~RenderedDDom",
    "static": false,
    "longname": "js/base/component/rendered_dom.js~RenderedDDom#is_rendered_dom",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 173,
    "kind": "member",
    "name": "is_menubar",
    "memberof": "js/base/component/rendered_dom.js~RenderedDDom",
    "static": false,
    "longname": "js/base/component/rendered_dom.js~RenderedDDom#is_menubar",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 174,
    "kind": "member",
    "name": "is_breadcrumbs",
    "memberof": "js/base/component/rendered_dom.js~RenderedDDom",
    "static": false,
    "longname": "js/base/component/rendered_dom.js~RenderedDDom#is_breadcrumbs",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 175,
    "kind": "member",
    "name": "_ready_promise",
    "memberof": "js/base/component/rendered_dom.js~RenderedDDom",
    "static": false,
    "longname": "js/base/component/rendered_dom.js~RenderedDDom#_ready_promise",
    "access": "private",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 176,
    "kind": "member",
    "name": "_assets_dependancies",
    "memberof": "js/base/component/rendered_dom.js~RenderedDDom",
    "static": false,
    "longname": "js/base/component/rendered_dom.js~RenderedDDom#_assets_dependancies",
    "access": "private",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 177,
    "kind": "member",
    "name": "_assets_promise",
    "memberof": "js/base/component/rendered_dom.js~RenderedDDom",
    "static": false,
    "longname": "js/base/component/rendered_dom.js~RenderedDDom#_assets_promise",
    "access": "private",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 178,
    "kind": "method",
    "name": "render",
    "memberof": "js/base/component/rendered_dom.js~RenderedDDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/rendered_dom.js~RenderedDDom#render",
    "access": "public",
    "description": "Render component DOM element.",
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of this to chain promises."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_force",
        "description": "should force creation of a new VNode if a previous rendering exists."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of this to chain promises."
    }
  },
  {
    "__docId__": 180,
    "kind": "method",
    "name": "_render",
    "memberof": "js/base/component/rendered_dom.js~RenderedDDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/rendered_dom.js~RenderedDDom#_render",
    "access": "private",
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "params": [
      {
        "name": "arg_force",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 181,
    "kind": "method",
    "name": "process_rendering_vnode",
    "memberof": "js/base/component/rendered_dom.js~RenderedDDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/rendered_dom.js~RenderedDDom#process_rendering_vnode",
    "access": "public",
    "description": "PROCESS RENDERING VNODE: CREATE OR UPDATE DOM ELEMENT.",
    "lineNumber": 141,
    "params": [
      {
        "name": "arg_rendering_result",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_credentials",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 182,
    "kind": "member",
    "name": "_is_visible",
    "memberof": "js/base/component/rendered_dom.js~RenderedDDom",
    "static": false,
    "longname": "js/base/component/rendered_dom.js~RenderedDDom#_is_visible",
    "access": "private",
    "description": null,
    "lineNumber": 145,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 183,
    "kind": "method",
    "name": "destroy",
    "memberof": "js/base/component/rendered_dom.js~RenderedDDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/rendered_dom.js~RenderedDDom#destroy",
    "access": "public",
    "description": "Destroy component DOM element.",
    "lineNumber": 157,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 184,
    "kind": "method",
    "name": "save_rendering",
    "memberof": "js/base/component/rendered_dom.js~RenderedDDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/rendered_dom.js~RenderedDDom#save_rendering",
    "access": "public",
    "description": "Save rendering virtul node. Update component VNode with current component HTML.",
    "lineNumber": 176,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 185,
    "kind": "method",
    "name": "update_size",
    "memberof": "js/base/component/rendered_dom.js~RenderedDDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/rendered_dom.js~RenderedDDom#update_size",
    "access": "public",
    "description": "Update component size with its content.",
    "lineNumber": 188,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 186,
    "kind": "method",
    "name": "get_assets_promise",
    "memberof": "js/base/component/rendered_dom.js~RenderedDDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/rendered_dom.js~RenderedDDom#get_assets_promise",
    "access": "public",
    "description": "Get assets promises.",
    "lineNumber": 200,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 187,
    "kind": "method",
    "name": "get_assets_dependancies",
    "memberof": "js/base/component/rendered_dom.js~RenderedDDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/rendered_dom.js~RenderedDDom#get_assets_dependancies",
    "access": "public",
    "description": "Get assets dependancies.",
    "lineNumber": 212,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 188,
    "kind": "method",
    "name": "add_assets_dependancy",
    "memberof": "js/base/component/rendered_dom.js~RenderedDDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/rendered_dom.js~RenderedDDom#add_assets_dependancy",
    "access": "public",
    "description": "Add assets dependancy.",
    "lineNumber": 226,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_asset_id",
        "description": "asset element id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 189,
    "kind": "method",
    "name": "init_assets",
    "memberof": "js/base/component/rendered_dom.js~RenderedDDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/rendered_dom.js~RenderedDDom#init_assets",
    "access": "public",
    "description": "Init assets promises.",
    "lineNumber": 238,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 191,
    "kind": "file",
    "name": "js/base/component/rendering.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport vdom_parser from 'vdom-parser'\r\nimport diff from 'virtual-dom/diff'\r\nimport patch from 'virtual-dom/patch'\r\nimport create_element from 'virtual-dom/create-element'\r\n\r\n// COMMON IMPORTS\r\nimport T                        from 'devapt-core-common/dist/js/utils/types'\r\nimport rendering_factory        from 'devapt-core-common/dist/js/rendering/rendering_factory'\r\nimport RenderingResolverBuilder from 'devapt-core-common/dist/js/rendering/rendering_resolver'\r\n\r\n// BROWSER IMPORTS\r\n\r\n\r\nconst context = 'browser/base/component/rendering'\r\n\r\n\r\n\r\n/**\r\n * @file UI component rendering class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class Rendering\r\n{\r\n\t/**\r\n\t * Creates an instance of Rendering.\r\n\t * \r\n\t * @param {Component} arg_component - component instance.\r\n\t * @param {string} arg_dom_id - component dom element id\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_component, arg_dom_id)\r\n\t{\r\n\t\tthis.is_rendering = true\r\n\r\n\t\tthis._component = arg_component\r\n\r\n\t\tassert( T.isNotEmptyString(arg_dom_id), context + ':constructor:bad dom id string')\r\n\r\n\t\t// GET OR CREATE DOM ELEMENT\r\n\t\tlet dom_element = document.getElementById(arg_dom_id)\r\n\t\tif (! dom_element)\r\n\t\t{\r\n\t\t\tdom_element = document.createElement('div')\r\n\t\t\tdom_element.setAttribute('id', arg_dom_id)\r\n\t\t}\r\n\r\n\t\tthis._dom_id = arg_dom_id\r\n\t\tthis._event_delegator = undefined\r\n\t\tthis.set_dom_element(dom_element)\r\n\t\tthis._dom_vnode = undefined\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get DOM id.\r\n\t * \r\n\t * @returns {string} - component DOM id.\r\n\t */\r\n\tget_dom_id()\r\n\t{\r\n\t\treturn this._dom_id\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Test DOM Element instance.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\thas_dom_element()\r\n\t{\r\n\t\treturn T.isObject(this._dom_element) // TODO ENHANCE ELEMENT TYPE CHECK\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get DOM element.\r\n\t * \r\n\t * @returns {Element} - DOM Element instance.\r\n\t */\r\n\tget_dom_element()\r\n\t{\r\n\t\treturn this._dom_element\r\n\t}\r\n\r\n\r\n\thas_child_element(arg_parent_element, arg_child_element)\r\n\t{\r\n\t\tthis._component.enter_group('has_child_element')\r\n\r\n\t\tconst elements = arg_parent_element ? arg_parent_element.children : undefined\r\n\r\n\t\tif (elements && elements.length > 0)\r\n\t\t{\r\n\t\t\tlet child = undefined\r\n\t\t\tlet i = 0\r\n\t\t\twhile(i < elements.length)\r\n\t\t\t{\r\n\t\t\t\tchild = elements[i]\r\n\t\t\t\tif (child == arg_child_element)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis._component.leave_group('has_child_element:found')\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t\t++i\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._component.leave_group('has_child_element:not found')\r\n\t\treturn false\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Set DOM element.\r\n\t * \r\n\t * @param {Element} arg_element - element instance.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tset_dom_element(arg_element)\r\n\t{\r\n\t\tthis._component.enter_group('set_dom_element')\r\n\r\n\t\t// CHECK GIVEN DOM ELEMENT\r\n\t\tif (! arg_element)\r\n\t\t{\r\n\t\t\tthis._component.error('set_dom_element:no given dom element')\r\n\t\t\t\r\n\t\t\tthis._component.leave_group('set_dom_element:no given dom element')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tassert( (typeof arg_element) == 'object', context + ':set_dom_element:bad element object')\r\n\r\n\t\tconst new_elm = arg_element\r\n\t\tconst prev_elm = this.get_dom_element()\r\n\t\tconst parent_elm = prev_elm ? prev_elm.parentNode : undefined\r\n\r\n\t\t// DEBUG\r\n\t\t// console.log(prev_elm, context + ':set_dom_element:prev_elm')\r\n\t\t// console.log(new_elm,  context + ':set_dom_element:new_elm')\r\n\t\t// console.log(parent_elm,  context + ':set_dom_element:parent_elm')\r\n\r\n\r\n\t\t// REMOVE PREVIOUS NODE FROM ITS PARENT\r\n\t\tif (prev_elm != new_elm)\r\n\t\t{\r\n\t\t\tthis._component.debug('set_dom_element:prev_elm <> new_elm')\r\n\r\n\t\t\t// DISABLE EVENT DELEGATION\r\n\t\t\tif (this._event_delegator)\r\n\t\t\t{\r\n\t\t\t\tthis._component.debug('set_dom_element:destroy existing event delegator')\r\n\t\t\t\tthis._event_delegator.destroy()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// APPEND DOM ELEMENT TO ITS PARENT\r\n\t\tif (parent_elm)\r\n\t\t{\r\n\t\t\tthis._component.debug('set_dom_element:has parent_elm')\r\n\r\n\t\t\tif ( ! this.has_child_element(parent_elm, new_elm) )\r\n\t\t\t{\r\n\t\t\t\tthis._component.debug('set_dom_element:has parent_elm:append child')\r\n\t\t\t\tparent_elm.appendChild(new_elm)\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// SET DOM ELEMENT\r\n\t\tthis._dom_element = new_elm\r\n\t\t\r\n\t\t// ENABLE EVENT DELEGATION FOR ALL DOM SUB ELEMENTS\r\n\t\tif (! this._event_delegator)\r\n\t\t{\r\n\t\t\tthis._component.debug('set_dom_element:create event delegator')\r\n\t\t\tconst EventDelegate = require('dom-delegate').Delegate\r\n\t\t\tthis._event_delegator = new EventDelegate(this._dom_element)\r\n\t\t} else {\r\n\t\t\tthis._event_delegator.root(this._dom_element)\r\n\t\t}\r\n\r\n\t\tthis._component.leave_group('set_dom_element')\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Mount dom event handler.\r\n\t * \r\n\t * @{string}   arg_dom_event - dom event name.\r\n\t * @{string}   arg_dom_selector - dom selector string ('tag_name.class1.class2').\r\n\t * @{function} arg_handler - handler function f(component, event name, selection, event, target).\r\n\t * @{any}      arg_data - handler datas, default undefined (optional).\r\n\t * @{boolean}  arg_debug - trace flag, default true (optional).\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\ton_dom_event(arg_dom_event, arg_dom_selector, arg_handler, arg_data=undefined, arg_debug=true)\r\n\t{\r\n\t\tassert( T.isObject(this._event_delegator), context + ':on_dom_event:bad event delegator object' )\r\n\r\n\t\tconst name = this._component.get_name()\r\n\t\tlet selector = undefined\r\n\t\tif ( T.isObject(arg_dom_selector) && arg_dom_selector.is_component)\r\n\t\t{\r\n\t\t\tselector = arg_dom_selector.get_dom_id()\r\n\t\t} else if ( T.isString(arg_dom_selector) )\r\n\t\t{\r\n\t\t\tselector = arg_dom_selector\r\n\t\t} else {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\t\r\n\t\tthis._event_delegator.on(arg_dom_event, selector,\r\n\t\t\t(event, target)=>{\r\n\t\t\t\tif (arg_debug)\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.log(context + ':on_dom_event:handler:component=%s event=%s selector=%s target=', name, arg_dom_event, arg_dom_selector, target, event, arg_data)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( T.isFunction(arg_handler) )\r\n\t\t\t\t{\r\n\t\t\t\t\targ_handler(this._component, arg_dom_event, arg_dom_selector, event, target, arg_data)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tevent.stopPropagation()\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\treturn true\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Test DOM Virtual Node.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\thas_dom_vnode()\r\n\t{\r\n\t\treturn T.isObject(this._dom_vnode) // TODO ENHANCE VNODE TYPE CHECK\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get DOM Virtual Node.\r\n\t * \r\n\t * @returns {VNode}\r\n\t */\r\n\tget_dom_vnode()\r\n\t{\r\n\t\treturn this._dom_vnode\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Set DOM Virtual Node.\r\n\t * \r\n\t * @param {VNode} arg_vnode - VNode instance.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tset_dom_vnode(arg_vnode)\r\n\t{\r\n\t\tif ( T.isObject(arg_vnode) ) // TODO ENHANCE VNODE TYPE CHECK\r\n\t\t{\r\n\t\t\tthis._dom_vnode = arg_vnode\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Render component VNode.\r\n\t * \r\n\t * @returns {Promise} - Promise of this component to chain promises.\r\n\t */\r\n\trender()\r\n\t{\r\n\t\tthis._component.enter_group('render')\r\n\t\t\r\n\t\tconst credentials = this._component._runtime.get_session_credentials()\r\n\t\tconst res_resolver = this._component._runtime.ui().get_resource_description_resolver()\r\n\t\tconst rf_resolver  = this._component._runtime.ui().get_rendering_function_resolver()\r\n\t\tconst rendering_resolver = RenderingResolverBuilder.from_resolvers('browser resolver from ui', res_resolver, rf_resolver)\r\n\r\n\t\tconst rendering_context = {\r\n\t\t\ttrace_fn:undefined,//console.log,//\r\n\t\t\tresolver:rendering_resolver,\r\n\t\t\tcredentials:credentials,\r\n\t\t\trendering_factory:rendering_factory\r\n\t\t}\r\n\t\t\r\n\t\t// debugger\r\n\r\n\t\tconst description = res_resolver( this._component.get_name() )\r\n\t\tdescription.settings = description.settings ? description.settings : {}\r\n\t\tdescription.settings.id = this.get_dom_id()\r\n\t\t\r\n\t\tconst rendering_result = rendering_factory(description, rendering_context, undefined)\r\n\t\t\r\n\t\tconst vnode = rendering_result.get_vtree(this.get_dom_id())\r\n\r\n\t\tif (!vnode)\r\n\t\t{\r\n\t\t\tconst msg = context + ':render:%s:bad vnode for rendering result'\r\n\t\t\t\r\n\t\t\tconsole.error(msg + ' for ' + this._component.get_name())\r\n\t\t\tconsole.log(msg + ':rendering_result=', this._component.get_name(), rendering_result)\r\n\t\t\tconsole.log(msg + ':description=', this._component.get_name(), description)\r\n\t\t\t\r\n\t\t\tthis._component.leave_group('render:error')\r\n\t\t\treturn Promise.reject(msg)\r\n\t\t}\r\n\r\n\t\tconst ui = window.devapt().ui()\r\n\t\tlet p = this.process_rendering_vnode(vnode)\r\n\r\n\t\t// PROCESS HEADERS\r\n\t\tui._ui_rendering.process_rendering_result_headers(rendering_result.headers, credentials)\r\n\r\n\t\t// PROCESS HEAD STYLES AND SCRIPTS\r\n\t\tui._ui_rendering.process_rendering_result_styles_urls (document.head, rendering_result.head_styles_urls, credentials)\r\n\t\tui._ui_rendering.process_rendering_result_styles_tags (document.head, rendering_result.head_styles_tags, credentials)\r\n\t\tui._ui_rendering.process_rendering_result_scripts_urls(document.head, rendering_result.head_scripts_urls, credentials)\r\n\t\tui._ui_rendering.process_rendering_result_scripts_tags(document.head, rendering_result.head_scripts_tags, credentials)\r\n\r\n\t\t// PROCESS BODY STYLES AND SCRIPTS\r\n\t\tui._ui_rendering.process_rendering_result_styles_urls (document.body, rendering_result.body_styles_urls, credentials)\r\n\t\tui._ui_rendering.process_rendering_result_styles_tags (document.body, rendering_result.body_styles_tags, credentials)\r\n\t\tui._ui_rendering.process_rendering_result_scripts_urls(document.body, rendering_result.body_scripts_urls, credentials)\r\n\t\tui._ui_rendering.process_rendering_result_scripts_tags(document.body, rendering_result.body_scripts_tags, credentials)\r\n\r\n\t\tthis._component.leave_group('render:async')\r\n\t\treturn p\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Process rendered VNode: Create or update DOM element.\r\n\t * \r\n\t * @param {VNode} arg_vnode - rendered virtual node.\r\n\t * \r\n\t * @returns {Promise} - Promise of this component to chain promises.\r\n\t */\r\n\tprocess_rendering_vnode(arg_vnode)\r\n\t{\r\n\t\tthis._component.enter_group('process_rendering_vnode')\r\n\r\n\t\t// DEBUG\r\n\t\t// debugger\r\n\t\t// console.log(context + ':process_rendering_vnode:%s:vnode', this._component.get_name(), arg_vnode)\r\n\r\n\t\t// GET COMPONENT ATTRIBUTES\r\n\t\tconst dom_id = this.get_dom_id()\r\n\t\tthis._component.debug('process_rendering_vnode:dom_id=' + dom_id)\r\n\t\t\r\n\t\t\r\n\t\t// GET PREVIOUS VNODE OR BUILD IT FROM EXISTING HTML DOM\r\n\t\tlet prev_element = this.get_dom_element()\r\n\t\tlet prev_vnode = this.get_dom_vnode()\r\n\t\tif ( ! prev_vnode && prev_element)\r\n\t\t{\r\n\t\t\tthis._component.debug('process_rendering_vnode:no previous node, one previous element: create a previous vnode (parse previous element)')\r\n\t\t\t// console.log(context + ':process_rendering_vnode:no previous vnode and dom element')\r\n\t\t\t\r\n\t\t\tprev_vnode = vdom_parser(prev_element)\r\n\t\t}\r\n\t\tif (! prev_element)\r\n\t\t{\r\n\t\t\tthis._component.debug('process_rendering_vnode:no previous element: create previous element with a DIV')\r\n\t\t\t// console.log(context + ':process_rendering_vnode:create dom element')\r\n\t\t\t\r\n\t\t\tprev_element = document.createElement('DIV')\r\n\t\t\tprev_element.setAttribute('id', dom_id)\r\n\t\t\tthis.set_dom_element(prev_element)\r\n\r\n\t\t\tprev_vnode = undefined\r\n\t\t}\r\n\r\n\r\n\t\t// SET NEW VNODE FROM JSON RESULT\r\n\t\tlet new_element = undefined\r\n\t\tlet new_vnode = arg_vnode\r\n\t\tif (!new_vnode)\r\n\t\t{\r\n\t\t\tthis._component.leave_group('process_rendering_vnode:new vnode not found')\r\n\t\t\treturn Promise.reject(context + ':process_rendering_vnode:new vnode not found for ' + this._component.get_name())\r\n\t\t}\r\n\t\tthis.set_dom_vnode(new_vnode)\r\n\r\n\r\n\t\t// PATCH EXISTING HTML DOM\r\n\t\tif (prev_vnode && new_vnode && prev_element)\r\n\t\t{\r\n\t\t\tthis._component.debug('process_rendering_vnode:previous node, new vnode, previous element:patch existing DOM for ' + this._component.get_name())\r\n\t\t\t// console.log(context + ':process_rendering_vnode:previous vnode and new vnode and dom element exist')\r\n\r\n\t\t\t// console.log(context + ':process_rendering_vnode:prev_element', prev_element )\r\n\t\t\t// console.log(context + ':process_rendering_vnode:prev_vnode', prev_vnode )\r\n\t\t\t// console.log(context + ':process_rendering_vnode:new_vnode', new_vnode )\r\n\r\n\t\t\tconst patches = diff(prev_vnode, new_vnode)\r\n\t\t\tthis._component.debug('patches', patches)\r\n\t\t\t// console.log(context + ':process_rendering_vnode:patches', patches)\r\n\t\t\t\r\n\t\t\tnew_element = patch(prev_element, patches)\r\n\t\t\tthis.set_dom_element(new_element)\r\n\r\n\t\t\tthis._component.debug('process_rendering_vnode:new_element', new_element )\r\n\t\t\t// console.log(context + ':process_rendering_vnode:new_element', new_element)\r\n\t\t}\r\n\r\n\r\n\t\t// BUILD HTML DOM\r\n\t\tif (! prev_vnode && new_vnode)\r\n\t\t{\r\n\t\t\tthis._component.debug('process_rendering_vnode:no previous node, new vnode:create element with new vnode')\r\n\t\t\t// console.log(context + ':process_rendering_vnode:no previous vnode and new vnode', new_vnode)\r\n\r\n\t\t\tconst dom_element = create_element(new_vnode)\r\n\t\t\tthis.set_dom_element(dom_element)\r\n\t\t\t\r\n\t\t\t// console.log(context + ':process_rendering_vnode:dom_elm', dom_element, this.get_dom_element())\r\n\t\t}\r\n\r\n\r\n\t\tthis._component.leave_group('process_rendering_vnode')\r\n\t\treturn Promise.resolve(this._component)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Save rendering virtul node. Update component VNode with current component HTML.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tsave_rendering()\r\n\t{\r\n\t\tthis._component.info('save_rendering')\r\n\r\n\t\tconst dom_element = this.get_dom_element()\r\n\t\tconst vnode = vdom_parser(dom_element)\r\n\t\t\r\n\t\t// console.info(context + ':save_rendering:vnode', vnode)\r\n\r\n\t\tthis.set_dom_vnode(vnode)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/base/component/rendering.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 192,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/component/rendering.js",
    "static": true,
    "longname": "js/base/component/rendering.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/base/component/rendering.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 193,
    "kind": "class",
    "name": "Rendering",
    "memberof": "js/base/component/rendering.js",
    "static": true,
    "longname": "js/base/component/rendering.js~Rendering",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/base/component/rendering.js",
    "importStyle": "Rendering",
    "description": "",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "UI component rendering class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 194,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/component/rendering.js~Rendering",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/rendering.js~Rendering#constructor",
    "access": "public",
    "description": "Creates an instance of Rendering.",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Component"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_component",
        "description": "component instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_dom_id",
        "description": "component dom element id"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 195,
    "kind": "member",
    "name": "is_rendering",
    "memberof": "js/base/component/rendering.js~Rendering",
    "static": false,
    "longname": "js/base/component/rendering.js~Rendering#is_rendering",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 196,
    "kind": "member",
    "name": "_component",
    "memberof": "js/base/component/rendering.js~Rendering",
    "static": false,
    "longname": "js/base/component/rendering.js~Rendering#_component",
    "access": "private",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 197,
    "kind": "member",
    "name": "_dom_id",
    "memberof": "js/base/component/rendering.js~Rendering",
    "static": false,
    "longname": "js/base/component/rendering.js~Rendering#_dom_id",
    "access": "private",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 198,
    "kind": "member",
    "name": "_event_delegator",
    "memberof": "js/base/component/rendering.js~Rendering",
    "static": false,
    "longname": "js/base/component/rendering.js~Rendering#_event_delegator",
    "access": "private",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 199,
    "kind": "member",
    "name": "_dom_vnode",
    "memberof": "js/base/component/rendering.js~Rendering",
    "static": false,
    "longname": "js/base/component/rendering.js~Rendering#_dom_vnode",
    "access": "private",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 200,
    "kind": "method",
    "name": "get_dom_id",
    "memberof": "js/base/component/rendering.js~Rendering",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/rendering.js~Rendering#get_dom_id",
    "access": "public",
    "description": "Get DOM id.",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - component DOM id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "component DOM id."
    },
    "params": []
  },
  {
    "__docId__": 201,
    "kind": "method",
    "name": "has_dom_element",
    "memberof": "js/base/component/rendering.js~Rendering",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/rendering.js~Rendering#has_dom_element",
    "access": "public",
    "description": "Test DOM Element instance.",
    "lineNumber": 78,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 202,
    "kind": "method",
    "name": "get_dom_element",
    "memberof": "js/base/component/rendering.js~Rendering",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/rendering.js~Rendering#get_dom_element",
    "access": "public",
    "description": "Get DOM element.",
    "lineNumber": 90,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Element} - DOM Element instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": "DOM Element instance."
    },
    "params": []
  },
  {
    "__docId__": 203,
    "kind": "method",
    "name": "has_child_element",
    "memberof": "js/base/component/rendering.js~Rendering",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/rendering.js~Rendering#has_child_element",
    "access": "public",
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "params": [
      {
        "name": "arg_parent_element",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_child_element",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 204,
    "kind": "method",
    "name": "set_dom_element",
    "memberof": "js/base/component/rendering.js~Rendering",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/rendering.js~Rendering#set_dom_element",
    "access": "public",
    "description": "Set DOM element.",
    "lineNumber": 131,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_element",
        "description": "element instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 205,
    "kind": "member",
    "name": "_dom_element",
    "memberof": "js/base/component/rendering.js~Rendering",
    "static": false,
    "longname": "js/base/component/rendering.js~Rendering#_dom_element",
    "access": "private",
    "description": null,
    "lineNumber": 181,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 207,
    "kind": "method",
    "name": "on_dom_event",
    "memberof": "js/base/component/rendering.js~Rendering",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/rendering.js~Rendering#on_dom_event",
    "access": "public",
    "description": "Mount dom event handler.\n\n@{string}   arg_dom_event - dom event name.\n@{string}   arg_dom_selector - dom selector string ('tag_name.class1.class2').\n@{function} arg_handler - handler function f(component, event name, selection, event, target).\n@{any}      arg_data - handler datas, default undefined (optional).\n@{boolean}  arg_debug - trace flag, default true (optional).",
    "lineNumber": 209,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "arg_dom_event",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_dom_selector",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_handler",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_data",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "undefined",
        "defaultValue": "undefined"
      },
      {
        "name": "arg_debug",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      }
    ]
  },
  {
    "__docId__": 208,
    "kind": "method",
    "name": "has_dom_vnode",
    "memberof": "js/base/component/rendering.js~Rendering",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/rendering.js~Rendering#has_dom_vnode",
    "access": "public",
    "description": "Test DOM Virtual Node.",
    "lineNumber": 252,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 209,
    "kind": "method",
    "name": "get_dom_vnode",
    "memberof": "js/base/component/rendering.js~Rendering",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/rendering.js~Rendering#get_dom_vnode",
    "access": "public",
    "description": "Get DOM Virtual Node.",
    "lineNumber": 264,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{VNode}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "VNode"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 210,
    "kind": "method",
    "name": "set_dom_vnode",
    "memberof": "js/base/component/rendering.js~Rendering",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/rendering.js~Rendering#set_dom_vnode",
    "access": "public",
    "description": "Set DOM Virtual Node.",
    "lineNumber": 278,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "VNode"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_vnode",
        "description": "VNode instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 212,
    "kind": "method",
    "name": "render",
    "memberof": "js/base/component/rendering.js~Rendering",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/rendering.js~Rendering#render",
    "access": "public",
    "description": "Render component VNode.",
    "lineNumber": 293,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of this component to chain promises."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of this component to chain promises."
    },
    "params": []
  },
  {
    "__docId__": 213,
    "kind": "method",
    "name": "process_rendering_vnode",
    "memberof": "js/base/component/rendering.js~Rendering",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/rendering.js~Rendering#process_rendering_vnode",
    "access": "public",
    "description": "Process rendered VNode: Create or update DOM element.",
    "lineNumber": 362,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of this component to chain promises."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "VNode"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_vnode",
        "description": "rendered virtual node."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of this component to chain promises."
    }
  },
  {
    "__docId__": 214,
    "kind": "method",
    "name": "save_rendering",
    "memberof": "js/base/component/rendering.js~Rendering",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/rendering.js~Rendering#save_rendering",
    "access": "public",
    "description": "Save rendering virtul node. Update component VNode with current component HTML.",
    "lineNumber": 455,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 215,
    "kind": "file",
    "name": "js/base/component/stated_dom.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport _ from 'lodash'\r\n\r\n// COMMON IMPORTS\r\nimport T   from 'devapt-core-common/dist/js/utils/types'\r\nimport uid from 'devapt-core-common/dist/js/utils/uid.js'\r\n\r\n// BROWSER IMPORTS\r\nimport BoundDom       from './bound_dom'\r\n\r\n\r\nconst context = 'browser/base/component/stated_dom'\r\n\r\n\r\n\r\n/**\r\n * @file UI stated dom class.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example:\r\n * \tAPI\r\n * \t\t->update():Promise - Update view with current state.\r\n * \t\t->update_children():Promise - Update view with current state.\r\n * \r\n * \t\t->clear():Promise - Clear component to initial values.\r\n * \r\n *\t\t->dispatch_update_state_action(arg_new_state):nothing - Dispatch update state action.\r\n * \t\t->dispatch_update_state_value_action(arg_path, arg_value):nothing - Dispatch update state action.\r\n * \r\n * \t\t->get_children_component():array - Get view children components.\r\n * \r\n */\r\nexport default class StatedDom extends BoundDom\r\n{\r\n\t/**\r\n\t * Creates an instance of StatedDom.\r\n\t * \r\n\t * @param {RuntimeBase}   arg_runtime     - client runtime.\r\n\t * @param {Immutable.Map} arg_state       - component initial state.\r\n\t * @param {string}        arg_log_context - context of traces of this instance (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_state, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_runtime, arg_state, log_context)\r\n\t\t\r\n\t\tthis.is_stated_dom   = true\r\n\r\n\t\t// CHILDREN COMPONENTS\r\n\t\tthis._children_components = undefined\r\n\r\n\t\t// DEBUG\r\n\t\t// console.info(context + ':constructor:creating component ' + this.get_name())\r\n\t\t// this.enable_trace()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Update view with current state.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tupdate()\r\n\t{\r\n\t\tthis.enter_group('update')\r\n\r\n\t\tconsole.info(context + ':update:%s', this.get_name())\r\n\r\n\t\tthis._ready_promise = this._ready_promise.then(\r\n\t\t\t()=>{\r\n\t\t\t\treturn this._update()\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tthis.leave_group('update:async')\r\n\t\treturn this._ready_promise\r\n\t}\r\n\r\n\r\n\t_update()\r\n\t{\r\n\t\tthis.debug('update:name=' + this.get_name() + ',dom_id=' + this.get_dom_id() )\r\n\r\n\t\tconst new_elm = document.getElementById(this.get_dom_id())\r\n\t\tconst prev_elm = this.get_dom_element()\r\n\t\t// console.log(prev_elm, context + ':update:prev_elm')\r\n\t\t// console.log(new_elm,  context + ':update:new_elm')\r\n\r\n\t\tif (!new_elm)\r\n\t\t{\r\n\t\t\t// this.leave_group('update')\r\n\t\t\treturn Promise.resolve()\r\n\t\t}\r\n\r\n\t\tif (prev_elm != new_elm)\r\n\t\t{\r\n\t\t\tthis.debug(':update:prev_elm <> new_elm')\r\n\t\t\tif (prev_elm.parentNode)\r\n\t\t\t{\r\n\t\t\t\tprev_elm.parentNode.removeChild(prev_elm)\r\n\t\t\t}\r\n\t\t\tthis._dom_element = new_elm\r\n\t\t}\r\n\t\t\r\n\t\tlet promise = Promise.resolve()\r\n\t\tif ( T.isFunction(this._update_self) )\r\n\t\t{\r\n\t\t\tthis.debug(':update:call _update_self (async)')\r\n\r\n\t\t\tpromise = promise.then(\r\n\t\t\t\t()=>{\r\n\t\t\t\t\tthis._update_self(prev_elm, new_elm)\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tpromise = promise.then(\r\n\t\t\t()=>\r\n\t\t\t{\r\n\t\t\t\tthis.update_children()\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\treturn promise\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Update view with current state.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tupdate_children()\r\n\t{\r\n\t\tthis.enter_group('update_children')\r\n\r\n\t\tthis.get_children_component().forEach(\r\n\t\t\t(component)=>{\r\n\t\t\t\tthis.debug(':update_children:component=' + component.get_name())\r\n\t\t\t\tcomponent.update()\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tthis.leave_group('update_children')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Clear component to initial values.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tclear()\r\n\t{\r\n\t\t// TO OVERWRITE\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get a named stream.\r\n\t * \r\n\t * @param {string} arg_stream_name - stream name.\r\n\t * \r\n\t * @returns {Stream|undefined} - found stream.\r\n\t */\r\n\tget_named_stream(arg_stream_name)\r\n\t{\r\n\t\tswitch(arg_stream_name.toLocaleLowerCase()) {\r\n\t\t\tcase 'runtime_logs': return this._runtime.logs_stream\r\n\t\t}\r\n\t\t\r\n\t\tconsole.warn(context + ':get_named_stream:%s:unknow named stream', this.get_name(), arg_stream_name.toLocaleLowerCase())\r\n\t\treturn undefined\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Dispatch update state action.\r\n\t * \r\n\t * @param {Immutable.Map} arg_new_state - new state Immutable Map.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdispatch_update_state_action(arg_new_state)\r\n\t{\r\n\t\tif ( ! T.isObject(arg_new_state) )\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst new_state = arg_new_state.toJS ? arg_new_state.toJS() : arg_new_state\r\n\t\t// console.log(context + ':dispatch_update_state_action:new state:', new_state)\r\n\r\n\t\tconst action = { type:'ADD_JSON_RESOURCE', resource:this.get_name(), path:this.get_state_path(), json:new_state }\r\n\t\twindow.devapt().ui().store.dispatch(action)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Dispatch update state action.\r\n\t * \r\n\t * @param {array|string} arg_path - component state path.\r\n\t * @param {any} arg_value - component state value.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdispatch_update_state_value_action(arg_path, arg_value)\r\n\t{\r\n\t\tif (! T.isArray(arg_path) )\r\n\t\t{\r\n\t\t\tconsole.error(context + ':dispatch_update_state_value_action:bad path array:path,value:', arg_path, arg_value)\r\n\t\t\treturn\r\n\t\t}\r\n\t\t// console.log(context + ':dispatch_update_state_value_action:path,value:', arg_path, arg_value)\r\n\t\t\r\n\t\tconst new_state = this.get_state().setIn(arg_path, arg_value)\r\n\t\tthis.dispatch_update_state_action(new_state)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get view children components.\r\n\t * \r\n\t * @returns {array} - list of Component.\r\n\t */\r\n\tget_children_component()\r\n\t{\r\n\t\t// SKIP FOR MENUBAR\r\n\t\tif (this.is_menubar)\r\n\t\t{\r\n\t\t\treturn []\r\n\t\t}\r\n\t\t\r\n\t\tif ( ! this._children_components)\r\n\t\t{\r\n\t\t\tthis._children_components = []\r\n\r\n\t\t\t// GET APPLICATION STATE AND INIT APPLICATION STATE PATH\r\n\t\t\tconst ui = window.devapt().ui()\r\n\t\t\tconst current_app_state = ui.store.get_state()\r\n\t\t\tconst state_path = ['views']\r\n\r\n\t\t\t// GET COMPONENT DESCRIPTION AND CHILDREN\r\n\t\t\tconst component_desc = ui._ui_factory.find_component_desc(current_app_state, this.get_name(), state_path)\r\n\t\t\tconst children = component_desc ? component_desc.get('children', undefined) : undefined\r\n\t\t\tconst children_names = children ? Object.keys( children.toJS() ) : []\r\n\t\t\tthis.debug(':get_children_component:init with children_names:', children_names)\r\n\r\n\t\t\t// GET COMPONENT ITEMS\r\n\t\t\tconst items = this.get_state_value('items', [])\r\n\t\t\tthis.debug(':get_children_component:init with items:', JSON.stringify(items))\r\n\r\n\t\t\tconst all_children = _.concat(children_names, items)\r\n\t\t\t// console.info(context + ':get_children_component:all_children:%s:', this.get_name(), all_children)\r\n\r\n\t\t\tconst unique_children = {}\r\n\t\t\tall_children.forEach(\r\n\t\t\t\t(item)=>{\r\n\t\t\t\t\tif ( T.isObject(item) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.debug(':get_children_component:loop on item object')\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif ( T.isString(item.view) )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (item.viewitem in unique_children)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tthis.debug(':get_children_component:loop on item string:', item.view)\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tconst component = window.devapt().ui(item.view)\r\n\t\t\t\t\t\t\tif (component && component.is_component)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis._children_components.push(component)\r\n\t\t\t\t\t\t\t\tunique_children[component.get_name()] = true\r\n\t\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tthis.warn(':get_children_component:bad item component for:', item.view)\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.warn(':get_children_component:bad item object for:', JSON.stringify(item))\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif ( T.isString(item) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (item in unique_children)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.debug(':get_children_component:loop on item string:', item)\r\n\t\t\t\t\t\tconst component = window.devapt().ui(item)\r\n\t\t\t\t\t\tif (component && component.is_component)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis._children_components.push(component)\r\n\t\t\t\t\t\t\tunique_children[component.get_name()] = true\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.warn(':get_children_component:bad item component for:', item)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.warn(':get_children_component:bad item type for:', item.toString())\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\t\r\n\t\tthis.debug(':get_children_component:', this._children_components)\r\n\t\treturn this._children_components\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Render a component inside this element from a json description.\r\n\t * \r\n\t * @param {object} arg_options - json source configuration.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tregister_and_render_inside_from_json(arg_options)\r\n\t{\r\n\t\tthis.enter_group('register_and_render_inside_from_json')\r\n\r\n\t\tconst json = this.register_from_json(arg_options)\r\n\r\n\t\tif (! T.isObject(json) )\r\n\t\t{\r\n\t\t\tthis.leave_group('register_and_render_inside_from_json:error:bad json object')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tthis.render_inside_from_json(json.name, json)\r\n\r\n\t\tthis.leave_group('register_and_render_inside_from_json')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Register a component description from a json content.\r\n\t * \r\n\t * @param {object} arg_options - json source configuration.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tregister_from_json(arg_options)\r\n\t{\r\n\t\tthis.enter_group('register_from_json')\r\n\t\t\r\n\t\tconsole.log(context + ':register_from_json:options=', arg_options)\r\n\t\t\r\n\t\tif (arg_options.is_event_handler)\r\n\t\t{\r\n\t\t\targ_options = arg_options.data\r\n\t\t}\r\n\r\n\t\t// CHECK CONFIGURATION\r\n\t\tif ( ! T.isObject(arg_options) )\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':register_from_json:bad options object')\r\n\t\t\tthis.leave_group('register_from_json:error:bad options object')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif ( ! T.isString(arg_options.json_source_view) )\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':register_from_json:bad options.json_source_view string')\r\n\t\t\tthis.leave_group('register_from_json:error:bad options.json_source_view string')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif ( ! T.isString(arg_options.json_source_getter) )\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':register_from_json:bad options.json_source_getter string')\r\n\t\t\tthis.leave_group('register_from_json:error:bad options.json_source_getter string')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst source_object = this.get_runtime().ui().get(arg_options.json_source_view)\r\n\t\tif ( ! T.isObject(source_object) || ! source_object.is_component )\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':register_from_json:%s:view=%s:bad json source component', this.get_name(), arg_options.json_source_view, source_object)\r\n\t\t\tthis.leave_group('register_from_json:error:bad json source component')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif ( ! (arg_options.json_source_getter in source_object) )\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':register_from_json:bad json source method for component')\r\n\t\t\tthis.leave_group('register_from_json:error:bad json source method for component')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif ( ! ( T.isFunction( source_object[arg_options.json_source_getter] )) )\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':register_from_json:bad json source method for component')\r\n\t\t\tthis.leave_group('register_from_json:error:bad json source method for component')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// GET JSON FROM SOURCE\r\n\t\ttry{\r\n\t\t\tconst json = source_object[arg_options.json_source_getter]()\r\n\r\n\t\t\t// DEBUG\r\n\t\t\tconsole.log(context + ':register_from_json:json=', json)\r\n\r\n\t\t\t// CHECK COMPONENT NAME\r\n\t\t\tif ( ! T.isString(json.name) )\r\n\t\t\t{\r\n\t\t\t\tconsole.warn(context + ':register_from_json:bad json.name string')\r\n\t\t\t\tthis.leave_group('register_from_json:error:bad json.name string')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\t// STORE COMPONENT DESCRIPTION\r\n\t\t\tconst action = { type:'ADD_JSON_RESOURCE', resource:json.name, collection:'views', json:json }\r\n\t\t\tthis.get_runtime().get_state_store().dispatch(action)\r\n\r\n\t\t\tthis.leave_group('register_from_json')\r\n\t\t\treturn json\r\n\t\t}\r\n\t\tcatch(e) {\r\n\t\t\tconsole.warn(context + ':register_from_json:error %s', e)\r\n\r\n\t\t\tthis.leave_group('register_from_json:error:' + e)\r\n\t\t\treturn undefined\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Render a component inside this element from a json description.\r\n\t * \r\n\t * @param {string} arg_name - component name.\r\n\t * @param {object} arg_json_desc - component description.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\trender_inside_from_json(arg_name, arg_json_desc)\r\n\t{\r\n\t\tthis.enter_group('render_inside_from_json')\r\n\t\t\r\n\t\tconsole.log(context + ':render_inside_from_json:name and description:', arg_name, arg_json_desc)\r\n\t\t\r\n\t\ttry{\r\n\t\t\t// CREATE COMPONENT ELEMENT\r\n\t\t\tconst this_element = this.get_dom_element()\r\n\t\t\tif ( ! this_element)\r\n\t\t\t{\r\n\t\t\t\tconsole.warn(context + ':render_inside_from_json:bad dom element')\r\n\t\t\t\tthis.leave_group('render_inside_from_json:error:bad dom element')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tconst this_document = this_element.ownerDocument\r\n\t\t\tconst existing_element = this_document.getElementById(arg_name)\r\n\t\t\tlet sub_element = undefined\r\n\t\t\tif (existing_element)\r\n\t\t\t{\r\n\t\t\t\tif (existing_element.parentElement == this_element)\r\n\t\t\t\t{\r\n\t\t\t\t\tsub_element = existing_element\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.warn(context + ':render_inside_from_json:a previous element exist with given name=%s', arg_name)\r\n\t\t\t\t\tthis.leave_group('render_inside_from_json:error:bad dom element')\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsub_element = this_element.ownerDocument.createElement('div')\r\n\t\t\t\tsub_element.setAttribute('id', arg_name)\r\n\t\t\t\tthis_element.appendChild(sub_element)\r\n\t\t\t}\r\n\r\n\t\t\tconst component = this.get_runtime().ui().create_local(arg_name, arg_json_desc)\r\n\t\t\tcomponent.render(true)\r\n\t\t\t.then(\r\n\t\t\t\t()=>{\r\n\t\t\t\t\twindow.devapt().content_rendered()\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t} catch(e){\r\n\t\t\tconsole.warn(context + ':render_inside_from_json:error %s', e)\r\n\t\t\treturn\r\n\t\t}\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/base/component/stated_dom.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 216,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/component/stated_dom.js",
    "static": true,
    "longname": "js/base/component/stated_dom.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/base/component/stated_dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 217,
    "kind": "class",
    "name": "StatedDom",
    "memberof": "js/base/component/stated_dom.js",
    "static": true,
    "longname": "js/base/component/stated_dom.js~StatedDom",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/base/component/stated_dom.js",
    "importStyle": "StatedDom",
    "description": "",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "UI stated dom class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0\n\n@example:\n\tAPI\n\t\t->update():Promise - Update view with current state.\n\t\t->update_children():Promise - Update view with current state.\n\n\t\t->clear():Promise - Clear component to initial values.\n\n\t->dispatch_update_state_action(arg_new_state):nothing - Dispatch update state action.\n\t\t->dispatch_update_state_value_action(arg_path, arg_value):nothing - Dispatch update state action.\n\n\t\t->get_children_component():array - Get view children components."
      }
    ],
    "interface": false,
    "extends": [
      "js/base/component/bound_dom.js~BoundDom"
    ]
  },
  {
    "__docId__": 218,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/component/stated_dom.js~StatedDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/stated_dom.js~StatedDom#constructor",
    "access": "public",
    "description": "Creates an instance of StatedDom.",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "RuntimeBase"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "Immutable.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component initial state."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "context of traces of this instance (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 219,
    "kind": "member",
    "name": "is_stated_dom",
    "memberof": "js/base/component/stated_dom.js~StatedDom",
    "static": false,
    "longname": "js/base/component/stated_dom.js~StatedDom#is_stated_dom",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 220,
    "kind": "member",
    "name": "_children_components",
    "memberof": "js/base/component/stated_dom.js~StatedDom",
    "static": false,
    "longname": "js/base/component/stated_dom.js~StatedDom#_children_components",
    "access": "private",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 221,
    "kind": "method",
    "name": "update",
    "memberof": "js/base/component/stated_dom.js~StatedDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/stated_dom.js~StatedDom#update",
    "access": "public",
    "description": "Update view with current state.",
    "lineNumber": 69,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 222,
    "kind": "member",
    "name": "_ready_promise",
    "memberof": "js/base/component/stated_dom.js~StatedDom",
    "static": false,
    "longname": "js/base/component/stated_dom.js~StatedDom#_ready_promise",
    "access": "private",
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 223,
    "kind": "method",
    "name": "_update",
    "memberof": "js/base/component/stated_dom.js~StatedDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/stated_dom.js~StatedDom#_update",
    "access": "private",
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 224,
    "kind": "member",
    "name": "_dom_element",
    "memberof": "js/base/component/stated_dom.js~StatedDom",
    "static": false,
    "longname": "js/base/component/stated_dom.js~StatedDom#_dom_element",
    "access": "private",
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 225,
    "kind": "method",
    "name": "update_children",
    "memberof": "js/base/component/stated_dom.js~StatedDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/stated_dom.js~StatedDom#update_children",
    "access": "public",
    "description": "Update view with current state.",
    "lineNumber": 140,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 226,
    "kind": "method",
    "name": "clear",
    "memberof": "js/base/component/stated_dom.js~StatedDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/stated_dom.js~StatedDom#clear",
    "access": "public",
    "description": "Clear component to initial values.",
    "lineNumber": 161,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 227,
    "kind": "method",
    "name": "get_named_stream",
    "memberof": "js/base/component/stated_dom.js~StatedDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/stated_dom.js~StatedDom#get_named_stream",
    "access": "public",
    "description": "Get a named stream.",
    "lineNumber": 175,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Stream|undefined} - found stream."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_stream_name",
        "description": "stream name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Stream",
        "undefined"
      ],
      "spread": false,
      "description": "found stream."
    }
  },
  {
    "__docId__": 228,
    "kind": "method",
    "name": "dispatch_update_state_action",
    "memberof": "js/base/component/stated_dom.js~StatedDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/stated_dom.js~StatedDom#dispatch_update_state_action",
    "access": "public",
    "description": "Dispatch update state action.",
    "lineNumber": 194,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Immutable.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_new_state",
        "description": "new state Immutable Map."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 229,
    "kind": "method",
    "name": "dispatch_update_state_value_action",
    "memberof": "js/base/component/stated_dom.js~StatedDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/stated_dom.js~StatedDom#dispatch_update_state_value_action",
    "access": "public",
    "description": "Dispatch update state action.",
    "lineNumber": 218,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_path",
        "description": "component state path."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_value",
        "description": "component state value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 230,
    "kind": "method",
    "name": "get_children_component",
    "memberof": "js/base/component/stated_dom.js~StatedDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/stated_dom.js~StatedDom#get_children_component",
    "access": "public",
    "description": "Get view children components.",
    "lineNumber": 238,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} - list of Component."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "list of Component."
    },
    "params": []
  },
  {
    "__docId__": 232,
    "kind": "method",
    "name": "register_and_render_inside_from_json",
    "memberof": "js/base/component/stated_dom.js~StatedDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/stated_dom.js~StatedDom#register_and_render_inside_from_json",
    "access": "public",
    "description": "Render a component inside this element from a json description.",
    "lineNumber": 339,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_options",
        "description": "json source configuration."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 233,
    "kind": "method",
    "name": "register_from_json",
    "memberof": "js/base/component/stated_dom.js~StatedDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/stated_dom.js~StatedDom#register_from_json",
    "access": "public",
    "description": "Register a component description from a json content.",
    "lineNumber": 365,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_options",
        "description": "json source configuration."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 234,
    "kind": "method",
    "name": "render_inside_from_json",
    "memberof": "js/base/component/stated_dom.js~StatedDom",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/stated_dom.js~StatedDom#render_inside_from_json",
    "access": "public",
    "description": "Render a component inside this element from a json description.",
    "lineNumber": 455,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "component name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_json_desc",
        "description": "component description."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 235,
    "kind": "file",
    "name": "js/base/component/unused_component.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport _ from 'lodash'\r\n\r\n// COMMON IMPORTS\r\nimport T   from '../../../node_modules/devapt-core-common/dist/js/utils/types'\r\nimport uid from '../../../node_modules/devapt-core-common/dist/js/utils/uid.js'\r\n\r\n// BROWSER IMPORTS\r\nimport BindingsLoader from './bindings_loader'\r\nimport Dom            from './dom'\r\n\r\n\r\nconst context = 'browser/base/component'\r\n\r\n\r\n\r\n/**\r\n * @file UI component class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class Component extends Dom\r\n{\r\n\t/**\r\n\t * Creates an instance of Component.\r\n\t * @extends Dom\r\n\t * \r\n\t * \tAPI\r\n\t * \t\t->render():Promise - Render component DOM element.\r\n\t * \t\t->process_rendering_vnode(arg_rendering_result, arg_credentials):nothing - Process rendering VNode: create or update DOM element.\r\n\t * \t\t->save_rendering():nothing - Save rendering virtul node. Update component VNode with current component HTML.\r\n\t * \r\n\t * \t\t->update():Promise - Update view with current state.\r\n\t * \t\t->update_children():Promise - Update view with current state.\r\n\t * \r\n\t * \t\t->clear():Promise - Clear component to initial values.\r\n\t * \t\t->destroy():Promise - Destroy component DOM element.\r\n\t * \r\n\t * \t\t->load(arg_state):nothing - Load and apply a component configuration.\r\n\t * \t\t->init_bindings():nothing - Init bindings.\r\n\t * \t\t->unload():nothing - Unload a component configuration.\r\n\t * \r\n\t *\t\t->dispatch_update_state_action(arg_new_state):nothing - Dispatch update state action.\r\n\t * \t\t->dispatch_update_state_value_action(arg_path, arg_value):nothing - Dispatch update state action.\r\n\t * \r\n\t * \t\t->get_children_component():array - Get view children components.\r\n\t * \r\n\t * \t\t->get_text_value():string - Get component content value string.\r\n\t * \t\t->set_text_value(arg_value):nothing - Set component content value string.\r\n\t * \r\n\t * \t\t->get_object_value():object - Get component content value object.\r\n\t * \t\t->set_object_value(arg_value):nothing - Set component content value object.\r\n\t * \r\n\t * @param {RuntimeBase} arg_runtime - client runtime.\r\n\t * @param {Immutable.Map} arg_state - component initial state.\r\n\t * @param {string} arg_log_context - context of traces of this instance (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_state, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_runtime, arg_state, log_context)\r\n\t\t\r\n\t\tthis.is_component   = true\r\n\t\tthis.is_menubar     = false\r\n\t\tthis.is_breadcrumbs = false\r\n\r\n\t\t// CHILDREN COMPONENTS\r\n\t\tthis._children_components = undefined\r\n\r\n\t\tthis._is_loaded = false\r\n\t\tthis._bindings = {}\r\n\r\n\t\tthis._ready_promise = Promise.resolve()\r\n\t\tthis._assets_dependancies = []\r\n\t\tthis._assets_promise = undefined\r\n\r\n\t\t// console.info(context + ':constructor:creating component ' + this.get_name())\r\n\r\n\t\t// this.enable_trace()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Render component DOM element.\r\n\t * \r\n\t * @param {boolean} arg_force - should force creation of a new VNode if a previous rendering exists.\r\n\t * \r\n\t * @returns {Promise} - Promise of this to chain promises.\r\n\t */\r\n\trender(arg_force)\r\n\t{\r\n\t\tthis.enter_group('render')\r\n\r\n\t\tthis._ready_promise = this._ready_promise.then(\r\n\t\t\t()=>{\r\n\t\t\t\treturn this._render(arg_force)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tthis.leave_group('render:async')\r\n\t\treturn this._ready_promise\r\n\t}\r\n\r\n\t_render(arg_force)\r\n\t{\r\n\t\t// const is_rendered = this.get_state_value('is_rendered', false)\r\n\t\t// if (! arg_force && this._is_rendered)\r\n\t\t// {\r\n\t\t// \tthis.leave_group('render:already rendered')\r\n\t\t// \treturn Promise.resolve()\r\n\t\t// }\r\n\t\t\r\n\t\tlet promise = Promise.resolve()\r\n\t\tif (arg_force)\r\n\t\t{\r\n\t\t\tthis.debug('render:force rendering')\r\n\t\t\tpromise = this._rendering.render()\r\n\t\t}\r\n\r\n\t\tpromise = promise.then(\r\n\t\t\t()=>{\r\n\t\t\t\t// SHOULD RENDER VNODE\r\n\t\t\t\tif ( ! this.has_dom_vnode())\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.debug('render:should create vnode')\r\n\t\t\t\t\tconst p = this._rendering.render()\r\n\t\t\t\t\tthis.leave_group('render:vnode is created')\r\n\t\t\t\t\treturn p\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// DISPLAY VNODE\r\n\t\t\t\tif ( this.has_dom_vnode())\r\n\t\t\t\t{\r\n\t\t\t\t\tconst vnode = this.get_dom_vnode()\r\n\t\t\t\t\tconst p = this.process_rendering_vnode(vnode)\r\n\t\t\t\t\tthis.leave_group('render:vnode is rendered')\r\n\t\t\t\t\treturn p\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// RENDERING FAILED\r\n\t\t\t\tthis.error('render:render:no vnode to render')\r\n\t\t\t\tthis.leave_group('render:no vnode to render')\r\n\t\t\t\treturn Promise.reject(context + ':render:no dom vnode to render for ' + this.get_name())\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\treturn promise\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * PROCESS RENDERING VNODE: CREATE OR UPDATE DOM ELEMENT.\r\n\t */\r\n\tprocess_rendering_vnode(arg_rendering_result, arg_credentials)\r\n\t{\r\n\t\tthis._rendering.process_rendering_vnode(arg_rendering_result, arg_credentials)\r\n\r\n\t\tthis._is_visible = true\r\n\t\t// PROCESS CHILDREN\r\n\t\t// ...\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Save rendering virtul node. Update component VNode with current component HTML.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tsave_rendering()\r\n\t{\r\n\t\tthis._rendering.save_rendering()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Update view with current state.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tupdate()\r\n\t{\r\n\t\tthis.enter_group('update')\r\n\r\n\t\tconsole.info(context + ':update:%s', this.get_name())\r\n\r\n\t\tthis._ready_promise = this._ready_promise.then(\r\n\t\t\t()=>{\r\n\t\t\t\treturn this._update()\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tthis.leave_group('update:async')\r\n\t\treturn this._ready_promise\r\n\t}\r\n\r\n\r\n\t_update()\r\n\t{\r\n\t\tthis.debug('update:name=' + this.get_name() + ',dom_id=' + this.get_dom_id() )\r\n\r\n\t\tconst new_elm = document.getElementById(this.get_dom_id())\r\n\t\tconst prev_elm = this.get_dom_element()\r\n\t\t// console.log(prev_elm, context + ':update:prev_elm')\r\n\t\t// console.log(new_elm,  context + ':update:new_elm')\r\n\r\n\t\tif (!new_elm)\r\n\t\t{\r\n\t\t\t// this.leave_group('update')\r\n\t\t\treturn Promise.resolve()\r\n\t\t}\r\n\r\n\t\tif (prev_elm != new_elm)\r\n\t\t{\r\n\t\t\tthis.debug(':update:prev_elm <> new_elm')\r\n\t\t\tif (prev_elm.parentNode)\r\n\t\t\t{\r\n\t\t\t\tprev_elm.parentNode.removeChild(prev_elm)\r\n\t\t\t}\r\n\t\t\tthis._dom_element = new_elm\r\n\t\t}\r\n\t\t\r\n\t\tlet promise = Promise.resolve()\r\n\t\tif ( T.isFunction(this._update_self) )\r\n\t\t{\r\n\t\t\tthis.debug(':update:call _update_self (async)')\r\n\r\n\t\t\tpromise = promise.then(\r\n\t\t\t\t()=>{\r\n\t\t\t\t\tthis._update_self(prev_elm, new_elm)\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tpromise = promise.then(\r\n\t\t\t()=>\r\n\t\t\t{\r\n\t\t\t\tthis.update_children()\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\treturn promise\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Update view with current state.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tupdate_children()\r\n\t{\r\n\t\tthis.enter_group('update_children')\r\n\r\n\t\tthis.get_children_component().forEach(\r\n\t\t\t(component)=>{\r\n\t\t\t\tthis.debug(':update_children:component=' + component.get_name())\r\n\t\t\t\tcomponent.update()\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tthis.leave_group('update_children')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Clear component to initial values.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tclear()\r\n\t{\r\n\t\t// TO OVERWRITE\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Destroy component DOM element.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tdestroy()\r\n\t{\r\n\t\tthis.enter_group('destroy')\r\n\r\n\t\tif (this._dom_element)\r\n\t\t{\r\n\t\t\tthis._dom_element.parentNode.removeChild(this._dom_element)\r\n\t\t}\r\n\t\t\r\n\t\tthis.leave_group('destroy')\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Load and apply a component configuration.\r\n\t * \r\n\t * @param {Immutable.Map|undefined} arg_state - component state to load (optional).\r\n\t * \r\n\t * @returns {nothing|Promise} \r\n\t */\r\n\tload(arg_state)\r\n\t{\r\n\t\tthis.enter_group('load')\r\n\r\n\t\tif (this._is_loaded)\r\n\t\t{\r\n\t\t\t// console.info(context + ':load:already loaded component ' + this.get_name())\r\n\t\t\tthis.leave_group('load:already loaded')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// const self = this\r\n\t\t// console.info(context + ':load:loading component ' + this.get_name())\r\n\t\t\r\n\t\tif (! this.store_unsubscribe)\r\n\t\t{\r\n\t\t\tthis.store_unsubscribe = this.get_runtime().create_store_observer(this)\r\n\t\t}\r\n\t\t\r\n\t\tconst state = arg_state ? arg_state : this.get_state()\r\n\t\t// console.log(state, 'load bindinds')\r\n\t\t\r\n\t\tif (! state)\r\n\t\t{\r\n\t\t\tthis.leave_group('load:no state found')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tthis.init_assets()\r\n\r\n\t\t// this.update()\r\n\r\n\t\tthis._is_loaded = true\r\n\t\tthis.leave_group('load')\r\n\t}\r\n\t\r\n\r\n\r\n\t/**\r\n\t * Get assets promises.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tget_assets_promise()\r\n\t{\r\n\t\treturn this._assets_promise\r\n\t}\r\n\t\r\n\r\n\r\n\t/**\r\n\t * Get assets dependancies.\r\n\t * \r\n\t * @returns {array}\r\n\t */\r\n\tget_assets_dependancies()\r\n\t{\r\n\t\treturn this._assets_dependancies\r\n\t}\r\n\t\r\n\r\n\r\n\t/**\r\n\t * Add assets dependancy.\r\n\t * \r\n\t * @param {string} arg_asset_id - asset element id.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tadd_assets_dependancy(arg_asset_id)\r\n\t{\r\n\t\treturn this._assets_dependancies.push(arg_asset_id)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Init assets promises.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tinit_assets()\r\n\t{\r\n\t\tthis.enter_group('init_assets')\r\n\r\n\t\tconst assets_promises = []\r\n\t\tthis._assets_dependancies.forEach(\r\n\t\t\t(asset_id)=>{\r\n\t\t\t\tassets_promises.push( window.devapt().asset_promise(asset_id) )\r\n\t\t\t}\r\n\t\t)\r\n\t\t// console.log(context + ':init:%s:assets:', this.get_name(), this._assets_dependancies)\r\n\r\n\t\tthis._assets_promise = Promise.all(assets_promises)\r\n\r\n\t\tthis.leave_group('init_assets')\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Init bindings.\r\n\t * \r\n\t * @returns {nothing} \r\n\t */\r\n\tinit_bindings()\r\n\t{\r\n\t\tthis.enter_group('init_bindings')\r\n\r\n\t\tconst state = this.get_state()\r\n\t\tconst bindings = state.has('bindings') ? state.get('bindings').toJS() : undefined\r\n\t\tif ( T.isObject(bindings) )\r\n\t\t{\r\n\t\t\tif ( T.isArray(bindings.services) )\r\n\t\t\t{\r\n\t\t\t\tbindings.services.forEach(\r\n\t\t\t\t\t(bind_cfg) => {\r\n\t\t\t\t\t\tbind_cfg.type = bind_cfg.timeline ? 'timeline' : (bind_cfg.dom_event ? 'emitter_jquery' : 'service')\r\n\t\t\t\t\t\tconst id = 'binding_' + uid()\r\n\t\t\t\t\t\tthis._bindings[id] = BindingsLoader.load(id, this._runtime, this, bind_cfg)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t\tif ( T.isArray(bindings.streams) )\r\n\t\t\t{\r\n\t\t\t\tbindings.streams.forEach(\r\n\t\t\t\t\t(bind_cfg) => {\r\n\t\t\t\t\t\t// console.log(context + ':load:stream binding:', bind_cfg)\r\n\t\t\t\t\t\tlet stream = bind_cfg.source_stream ? bind_cfg.source_stream : undefined\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif ( T.isString(stream) )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlet source_component = this\r\n\t\t\t\t\t\t\tif ( bind_cfg.source_type == 'views' && T.isNotEmptyString(bind_cfg.source_selector) )\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tsource_component = window.devapt().ui(bind_cfg.source_selector)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tstream = source_component.get_named_stream(stream)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( T.isObject(stream) && stream.is_stream )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tbind_cfg.type = 'stream'\r\n\t\t\t\t\t\t\tbind_cfg.source_stream = stream\r\n\t\t\t\t\t\t\tconst id = 'binding_' + uid()\r\n\t\t\t\t\t\t\tthis._bindings[id] = BindingsLoader.load(id, this._runtime, this, bind_cfg)\r\n\r\n\t\t\t\t\t\t\t// console.log(context + ':load:stream bound:', id, bind_cfg)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif ( T.isArray(bindings.emitter_jquery) )\r\n\t\t\t{\r\n\t\t\t\tbindings.emitter_jquery.forEach(\r\n\t\t\t\t\t(bind_cfg) => {\r\n\t\t\t\t\t\tbind_cfg.type = 'emitter_jquery'\r\n\t\t\t\t\t\tconst id = 'binding_' + uid()\r\n\t\t\t\t\t\tconst binding_streams = BindingsLoader.load(id, this._runtime, this, bind_cfg)\r\n\t\t\t\t\t\tif ( T.isArray(binding_streams) )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t_.forEach(binding_streams,\r\n\t\t\t\t\t\t\t\t(binding, index)=>{\r\n\t\t\t\t\t\t\t\t\tthis._bindings[id + '_' + index] = binding\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis._bindings[id] = binding_streams\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif ( T.isArray(bindings.emitter_dom) )\r\n\t\t\t{\r\n\t\t\t\tbindings.emitter_dom.forEach(\r\n\t\t\t\t\t(bind_cfg) => {\r\n\t\t\t\t\t\tbind_cfg.type = 'emitter_dom'\r\n\t\t\t\t\t\tconst id = 'binding_' + uid()\r\n\t\t\t\t\t\tconst binding_streams = BindingsLoader.load(id, this._runtime, this, bind_cfg)\r\n\t\t\t\t\t\tif ( T.isArray(binding_streams) )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t_.forEach(binding_streams,\r\n\t\t\t\t\t\t\t\t(binding, index)=>{\r\n\t\t\t\t\t\t\t\t\tthis._bindings[id + '_' + index] = binding\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis._bindings[id] = binding_streams\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.leave_group('init_bindings')\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Unload a component configuration.\r\n\t * \r\n\t * @returns {nothing} \r\n\t */\r\n\tunload()\r\n\t{\r\n\t\tthis.enter_group('unload')\r\n\r\n\t\tassert( T.isFunction(this.store_unsubscribe), context + ':unload:bad store_unsubscribe function')\r\n\t\t\r\n\t\t// UNBIND ALL BINDINGS\r\n\t\t_.forEach(this._bindings,\r\n\t\t\t(binding/*, id*/)=>{\r\n\t\t\t\tbinding._unsubscribe()\r\n\t\t\t\tif (binding._unsubscribe_state_update)\r\n\t\t\t\t{\r\n\t\t\t\t\tbinding._unsubscribe_state_update()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\t// DETACH STORE CHANGE LISTENER\r\n\t\tthis.store_unsubscribe()\r\n\r\n\t\tthis.leave_group('unload')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get a named stream.\r\n\t * \r\n\t * @param {string} arg_stream_name - stream name.\r\n\t * \r\n\t * @returns {Stream|undefined} - found stream.\r\n\t */\r\n\tget_named_stream(arg_stream_name)\r\n\t{\r\n\t\tswitch(arg_stream_name.toLocaleLowerCase()) {\r\n\t\t\tcase 'runtime_logs': return this._runtime.logs_stream\r\n\t\t}\r\n\t\t\r\n\t\tconsole.warn(context + ':get_named_stream:%s:unknow named stream', this.get_name(), arg_stream_name.toLocaleLowerCase())\r\n\t\treturn undefined\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Dispatch update state action.\r\n\t * \r\n\t * @param {Immutable.Map} arg_new_state - new state Immutable Map.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdispatch_update_state_action(arg_new_state)\r\n\t{\r\n\t\tif ( ! T.isObject(arg_new_state) )\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst new_state = arg_new_state.toJS ? arg_new_state.toJS() : arg_new_state\r\n\t\t// console.log(context + ':dispatch_update_state_action:new state:', new_state)\r\n\r\n\t\tconst action = { type:'ADD_JSON_RESOURCE', resource:this.get_name(), path:this.get_state_path(), json:new_state }\r\n\t\twindow.devapt().ui().store.dispatch(action)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Dispatch update state action.\r\n\t * \r\n\t * @param {array|string} arg_path - component state path.\r\n\t * @param {any} arg_value - component state value.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdispatch_update_state_value_action(arg_path, arg_value)\r\n\t{\r\n\t\tif (! T.isArray(arg_path) )\r\n\t\t{\r\n\t\t\tconsole.error(context + ':dispatch_update_state_value_action:bad path array:path,value:', arg_path, arg_value)\r\n\t\t\treturn\r\n\t\t}\r\n\t\t// console.log(context + ':dispatch_update_state_value_action:path,value:', arg_path, arg_value)\r\n\t\t\r\n\t\tconst new_state = this.get_state().setIn(arg_path, arg_value)\r\n\t\tthis.dispatch_update_state_action(new_state)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get view children components.\r\n\t * \r\n\t * @returns {array} - list of Component.\r\n\t */\r\n\tget_children_component()\r\n\t{\r\n\t\t// SKIP FOR MENUBAR\r\n\t\tif (this.is_menubar)\r\n\t\t{\r\n\t\t\treturn []\r\n\t\t}\r\n\t\t\r\n\t\tif ( ! this._children_components)\r\n\t\t{\r\n\t\t\tthis._children_components = []\r\n\r\n\t\t\t// GET APPLICATION STATE AND INIT APPLICATION STATE PATH\r\n\t\t\tconst ui = window.devapt().ui()\r\n\t\t\tconst current_app_state = ui.store.get_state()\r\n\t\t\tconst state_path = ['views']\r\n\r\n\t\t\t// GET COMPONENT DESCRIPTION AND CHILDREN\r\n\t\t\tconst component_desc = ui._ui_factory.find_component_desc(current_app_state, this.get_name(), state_path)\r\n\t\t\tconst children = component_desc ? component_desc.get('children', undefined) : undefined\r\n\t\t\tconst children_names = children ? Object.keys( children.toJS() ) : []\r\n\t\t\tthis.debug(':get_children_component:init with children_names:', children_names)\r\n\r\n\t\t\t// GET COMPONENT ITEMS\r\n\t\t\tconst items = this.get_state_value('items', [])\r\n\t\t\tthis.debug(':get_children_component:init with items:', JSON.stringify(items))\r\n\r\n\t\t\tconst all_children = _.concat(children_names, items)\r\n\t\t\t// console.info(context + ':get_children_component:all_children:%s:', this.get_name(), all_children)\r\n\r\n\t\t\tconst unique_children = {}\r\n\t\t\tall_children.forEach(\r\n\t\t\t\t(item)=>{\r\n\t\t\t\t\tif ( T.isObject(item) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.debug(':get_children_component:loop on item object')\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif ( T.isString(item.view) )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (item.viewitem in unique_children)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tthis.debug(':get_children_component:loop on item string:', item.view)\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tconst component = window.devapt().ui(item.view)\r\n\t\t\t\t\t\t\tif (component && component.is_component)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis._children_components.push(component)\r\n\t\t\t\t\t\t\t\tunique_children[component.get_name()] = true\r\n\t\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tthis.warn(':get_children_component:bad item component for:', item.view)\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.warn(':get_children_component:bad item object for:', JSON.stringify(item))\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif ( T.isString(item) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (item in unique_children)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.debug(':get_children_component:loop on item string:', item)\r\n\t\t\t\t\t\tconst component = window.devapt().ui(item)\r\n\t\t\t\t\t\tif (component && component.is_component)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis._children_components.push(component)\r\n\t\t\t\t\t\t\tunique_children[component.get_name()] = true\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.warn(':get_children_component:bad item component for:', item)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.warn(':get_children_component:bad item type for:', item.toString())\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\t\r\n\t\tthis.debug(':get_children_component:', this._children_components)\r\n\t\treturn this._children_components\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Get component content value string.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_text_value()\r\n\t{\r\n\t\treturn this.get_dom_text()\r\n\t}\r\n\t\r\n\r\n\r\n\t/**\r\n\t * Set component content value string.\r\n\t * \r\n\t * @param {string} arg_value - component values string.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tset_text_value(arg_value)\r\n\t{\r\n\t\tthis.set_dom_text('' + arg_value)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get component content value object.\r\n\t * \r\n\t * @returns {object}\r\n\t */\r\n\tget_object_value()\r\n\t{\r\n\t\tlet json = undefined\r\n\t\t\r\n\t\tconst str = this.get_dom_text()\r\n\r\n\t\ttry {\r\n\t\t\tjson = JSON.parse(str)\r\n\t\t}\r\n\t\tcatch(e){\r\n\t\t\tconsole.warn(context + ':get_object_value:error %s:bad json string=%s:', e, str)\r\n\t\t}\r\n\r\n\t\treturn json\r\n\t}\r\n\t\r\n\r\n\r\n\t/**\r\n\t * Set component content value object\r\n\t * \r\n\t * @param {object} arg_value - component values object.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tset_object_value(arg_value)\r\n\t{\r\n\t\ttry {\r\n\t\t\tconst str = JSON.stringify(arg_value)\r\n\t\t\tthis.set_dom_text(str)\r\n\t\t}\r\n\t\tcatch(e){\r\n\t\t\tconsole.warn(context + ':set_object_value:error %s:bad object=:', e, arg_value)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Render a component inside this element from a json description.\r\n\t * \r\n\t * @param {object} arg_options - json source configuration.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tregister_and_render_inside_from_json(arg_options)\r\n\t{\r\n\t\tthis.enter_group('register_and_render_inside_from_json')\r\n\r\n\t\tconst json = this.register_from_json(arg_options)\r\n\r\n\t\tif (! T.isObject(json) )\r\n\t\t{\r\n\t\t\tthis.leave_group('register_and_render_inside_from_json:error:bad json object')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tthis.render_inside_from_json(json.name, json)\r\n\r\n\t\tthis.leave_group('register_and_render_inside_from_json')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Register a component description from a json content.\r\n\t * \r\n\t * @param {object} arg_options - json source configuration.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tregister_from_json(arg_options)\r\n\t{\r\n\t\tthis.enter_group('register_from_json')\r\n\t\t\r\n\t\tconsole.log(context + ':register_from_json:options=', arg_options)\r\n\t\t\r\n\t\tif (arg_options.is_event_handler)\r\n\t\t{\r\n\t\t\targ_options = arg_options.data\r\n\t\t}\r\n\r\n\t\t// CHECK CONFIGURATION\r\n\t\tif ( ! T.isObject(arg_options) )\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':register_from_json:bad options object')\r\n\t\t\tthis.leave_group('register_from_json:error:bad options object')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif ( ! T.isString(arg_options.json_source_view) )\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':register_from_json:bad options.json_source_view string')\r\n\t\t\tthis.leave_group('register_from_json:error:bad options.json_source_view string')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif ( ! T.isString(arg_options.json_source_getter) )\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':register_from_json:bad options.json_source_getter string')\r\n\t\t\tthis.leave_group('register_from_json:error:bad options.json_source_getter string')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst source_object = this.get_runtime().ui().get(arg_options.json_source_view)\r\n\t\tif ( ! T.isObject(source_object) || ! source_object.is_component )\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':register_from_json:%s:view=%s:bad json source component', this.get_name(), arg_options.json_source_view, source_object)\r\n\t\t\tthis.leave_group('register_from_json:error:bad json source component')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif ( ! (arg_options.json_source_getter in source_object) )\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':register_from_json:bad json source method for component')\r\n\t\t\tthis.leave_group('register_from_json:error:bad json source method for component')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif ( ! ( T.isFunction( source_object[arg_options.json_source_getter] )) )\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':register_from_json:bad json source method for component')\r\n\t\t\tthis.leave_group('register_from_json:error:bad json source method for component')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// GET JSON FROM SOURCE\r\n\t\ttry{\r\n\t\t\tconst json = source_object[arg_options.json_source_getter]()\r\n\r\n\t\t\t// DEBUG\r\n\t\t\tconsole.log(context + ':register_from_json:json=', json)\r\n\r\n\t\t\t// CHECK COMPONENT NAME\r\n\t\t\tif ( ! T.isString(json.name) )\r\n\t\t\t{\r\n\t\t\t\tconsole.warn(context + ':register_from_json:bad json.name string')\r\n\t\t\t\tthis.leave_group('register_from_json:error:bad json.name string')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\t// STORE COMPONENT DESCRIPTION\r\n\t\t\tconst action = { type:'ADD_JSON_RESOURCE', resource:json.name, collection:'views', json:json }\r\n\t\t\tthis.get_runtime().get_state_store().dispatch(action)\r\n\r\n\t\t\tthis.leave_group('register_from_json')\r\n\t\t\treturn json\r\n\t\t}\r\n\t\tcatch(e) {\r\n\t\t\tconsole.warn(context + ':register_from_json:error %s', e)\r\n\r\n\t\t\tthis.leave_group('register_from_json:error:' + e)\r\n\t\t\treturn undefined\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Render a component inside this element from a json description.\r\n\t * \r\n\t * @param {string} arg_name - component name.\r\n\t * @param {object} arg_json_desc - component description.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\trender_inside_from_json(arg_name, arg_json_desc)\r\n\t{\r\n\t\tthis.enter_group('render_inside_from_json')\r\n\t\t\r\n\t\tconsole.log(context + ':render_inside_from_json:name and description:', arg_name, arg_json_desc)\r\n\t\t\r\n\t\ttry{\r\n\t\t\t// CREATE COMPONENT ELEMENT\r\n\t\t\tconst this_element = this.get_dom_element()\r\n\t\t\tif ( ! this_element)\r\n\t\t\t{\r\n\t\t\t\tconsole.warn(context + ':render_inside_from_json:bad dom element')\r\n\t\t\t\tthis.leave_group('render_inside_from_json:error:bad dom element')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tconst this_document = this_element.ownerDocument\r\n\t\t\tconst existing_element = this_document.getElementById(arg_name)\r\n\t\t\tlet sub_element = undefined\r\n\t\t\tif (existing_element)\r\n\t\t\t{\r\n\t\t\t\tif (existing_element.parentElement == this_element)\r\n\t\t\t\t{\r\n\t\t\t\t\tsub_element = existing_element\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.warn(context + ':render_inside_from_json:a previous element exist with given name=%s', arg_name)\r\n\t\t\t\t\tthis.leave_group('render_inside_from_json:error:bad dom element')\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsub_element = this_element.ownerDocument.createElement('div')\r\n\t\t\t\tsub_element.setAttribute('id', arg_name)\r\n\t\t\t\tthis_element.appendChild(sub_element)\r\n\t\t\t}\r\n\r\n\t\t\tconst component = this.get_runtime().ui().create_local(arg_name, arg_json_desc)\r\n\t\t\tcomponent.render(true)\r\n\t\t\t.then(\r\n\t\t\t\t()=>{\r\n\t\t\t\t\twindow.devapt().content_rendered()\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t} catch(e){\r\n\t\t\tconsole.warn(context + ':render_inside_from_json:error %s', e)\r\n\t\t\treturn\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Expand component to fullscreen (inside browser window).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\texpand_to_fullscreen()\r\n\t{\r\n\t\tconsole.log(context + ':expand_to_fullscreen')\r\n\r\n\t\tlet dom_elem = this.get_dom_element()\r\n\t\tconst bcolor = 'background-color'\r\n\t\tconst lmargin = 'margin-left'\r\n\r\n\t\tif (dom_elem.parentNode && dom_elem.parentNode.className.indexOf('devapt-dock-item') > -1)\r\n\t\t{\r\n\t\t\tdom_elem = dom_elem.parentNode\r\n\t\t}\r\n\r\n\t\tdom_elem.className = dom_elem.className ? dom_elem.className : ''\r\n\r\n\t\tif ( dom_elem.className.indexOf('devapt-fullscreen') < 0 )\r\n\t\t{\r\n\t\t\tthis.saved_dom = {\r\n\t\t\t\tbody_overflow:document.body.style.overflow,\r\n\t\t\t\tclassName:dom_elem.className,\r\n\t\t\t\tstyle:{\r\n\t\t\t\t\tposition:dom_elem.style.position,\r\n\t\t\t\t\tleft:    dom_elem.style.left,\r\n\t\t\t\t\ttop:     dom_elem.style.top,\r\n\t\t\t\t\theight:  dom_elem.style.height,\r\n\t\t\t\t\twidth:   dom_elem.style.width,\r\n\t\t\t\t\tbcolor:  dom_elem.style[bcolor],\r\n\t\t\t\t\tlmargin: dom_elem.style[lmargin],\r\n\t\t\t\t\tzindex:  dom_elem.style['z-index']\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdocument.body.style.overflow = 'hidden'\r\n\r\n\t\t\tdom_elem.style.position   = 'fixed'\r\n\t\t\tdom_elem.style.left       = '20px'\r\n\t\t\tdom_elem.style.top        = '20px'\r\n\t\t\tdom_elem.style.height     = '100%'\r\n\t\t\tdom_elem.style.width      = '100%'\r\n\t\t\tdom_elem.style[bcolor]    = 'white'\r\n\t\t\tdom_elem.style[lmargin]   = '0px'\r\n\t\t\tdom_elem.style['z-index'] = 999\r\n\t\t\tdom_elem.className       += ' devapt-fullscreen'\r\n\r\n\t\t\tthis.resize(dom_elem.offsetWidth, dom_elem.offsetHeight)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Collapse component from fullscreen to original size.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tcollapse_from_fullscreen()\r\n\t{\r\n\t\t// console.log(context + ':collapse_from_fullscreen')\r\n\r\n\t\tlet dom_elem = this.get_dom_element()\r\n\t\tconst bcolor = 'background-color'\r\n\t\tconst lmargin = 'margin-left'\r\n\r\n\t\tif (dom_elem.parentNode && dom_elem.parentNode.className.indexOf('devapt-dock-item') > -1)\r\n\t\t{\r\n\t\t\tdom_elem = dom_elem.parentNode\r\n\t\t}\r\n\r\n\t\tdom_elem.className = dom_elem.className ? dom_elem.className : ''\r\n\r\n\t\tif ( dom_elem.className.indexOf('devapt-fullscreen') > -1 && T.isObject(this.saved_dom) && T.isObject(this.saved_dom.style) )\r\n\t\t{\r\n\t\t\tdocument.body.style.overflow = this.saved_dom.body_overflow\r\n\r\n\t\t\tdom_elem.style.position   = this.saved_dom.style.position\r\n\t\t\tdom_elem.style.left       = this.saved_dom.style.left\r\n\t\t\tdom_elem.style.top        = this.saved_dom.style.top\r\n\t\t\tdom_elem.style.height     = this.saved_dom.style.height\r\n\t\t\tdom_elem.style.width      = this.saved_dom.style.width\r\n\t\t\tdom_elem.style[bcolor]    = this.saved_dom.style.bcolor\r\n\t\t\tdom_elem.style[lmargin]   = this.saved_dom.style.lmargin\r\n\t\t\tdom_elem.style['z-index'] = this.saved_dom.style.zindex\r\n\r\n\t\t\tdom_elem.className = this.saved_dom.className\r\n\r\n\t\t\tthis.saved_dom = {}\r\n\r\n\t\t\tthis.resize(dom_elem.offsetWidth, dom_elem.offsetHeight)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Toggle component fullscreen mode.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\ttoggle_from_fullscreen()\r\n\t{\r\n\t\tlet dom_elem = this.get_dom_element()\r\n\r\n\t\tif (dom_elem.parentNode && dom_elem.parentNode.className.indexOf('devapt-dock-item') > -1)\r\n\t\t{\r\n\t\t\tdom_elem = dom_elem.parentNode\r\n\t\t}\r\n\r\n\t\tdom_elem.className = dom_elem.className ? dom_elem.className : ''\r\n\r\n\t\tif ( dom_elem.className.indexOf('devapt-fullscreen') > -1 )\r\n\t\t{\r\n\t\t\tthis.collapse_from_fullscreen()\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tthis.expand_to_fullscreen()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Toggle component fullscreen mode.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tsave_()\r\n\t{\r\n\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Toggle component fullscreen mode.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\trestore_()\r\n\t{\r\n\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Resize component.\r\n\t * \r\n\t * @param {any} arg_width - css width value.\r\n\t * @param {any} arg_height - css height value.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tresize(arg_width, arg_height)\r\n\t{\r\n\t\tconsole.log(context + ':resize:width=%s height:%s', arg_width, arg_height)\r\n\r\n\t\t// TODO\r\n\t\tconst dom_elem = this.get_dom_element()\r\n\t\tif (! T.isNumber(arg_width))\r\n\t\t{\r\n\t\t\targ_width = dom_elem.offsetWidth\r\n\t\t}\r\n\t\tif (! T.isNumber(arg_height))\r\n\t\t{\r\n\t\t\targ_height = dom_elem.offsetHeight\r\n\t\t}\r\n\t\tconsole.log(context + ':resize:num width=%s num height:%s', arg_width, arg_height)\r\n\r\n\t\tthis.get_children_component().forEach(\r\n\t\t\t(component)=>{\r\n\t\t\t\tthis.debug(':resize:component=' + component.get_name())\r\n\t\t\t\tcomponent.resize(arg_width, arg_height)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/base/component/unused_component.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 236,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/component/unused_component.js",
    "static": true,
    "longname": "js/base/component/unused_component.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/base/component/unused_component.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 237,
    "kind": "class",
    "name": "Component",
    "memberof": "js/base/component/unused_component.js",
    "static": true,
    "longname": "js/base/component/unused_component.js~Component",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/base/component/unused_component.js",
    "importStyle": "Component",
    "description": "",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "UI component class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/component/dom.js~Dom"
    ]
  },
  {
    "__docId__": 238,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#constructor",
    "access": "public",
    "description": "Creates an instance of Component.",
    "lineNumber": 63,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "Dom\n\n\tAPI\n\t\t->render():Promise - Render component DOM element.\n\t\t->process_rendering_vnode(arg_rendering_result, arg_credentials):nothing - Process rendering VNode: create or update DOM element.\n\t\t->save_rendering():nothing - Save rendering virtul node. Update component VNode with current component HTML.\n\n\t\t->update():Promise - Update view with current state.\n\t\t->update_children():Promise - Update view with current state.\n\n\t\t->clear():Promise - Clear component to initial values.\n\t\t->destroy():Promise - Destroy component DOM element.\n\n\t\t->load(arg_state):nothing - Load and apply a component configuration.\n\t\t->init_bindings():nothing - Init bindings.\n\t\t->unload():nothing - Unload a component configuration.\n\n\t->dispatch_update_state_action(arg_new_state):nothing - Dispatch update state action.\n\t\t->dispatch_update_state_value_action(arg_path, arg_value):nothing - Dispatch update state action.\n\n\t\t->get_children_component():array - Get view children components.\n\n\t\t->get_text_value():string - Get component content value string.\n\t\t->set_text_value(arg_value):nothing - Set component content value string.\n\n\t\t->get_object_value():object - Get component content value object.\n\t\t->set_object_value(arg_value):nothing - Set component content value object."
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "RuntimeBase"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "Immutable.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component initial state."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "context of traces of this instance (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 239,
    "kind": "member",
    "name": "is_component",
    "memberof": "js/base/component/unused_component.js~Component",
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#is_component",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 240,
    "kind": "member",
    "name": "is_menubar",
    "memberof": "js/base/component/unused_component.js~Component",
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#is_menubar",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 241,
    "kind": "member",
    "name": "is_breadcrumbs",
    "memberof": "js/base/component/unused_component.js~Component",
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#is_breadcrumbs",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 242,
    "kind": "member",
    "name": "_children_components",
    "memberof": "js/base/component/unused_component.js~Component",
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#_children_components",
    "access": "private",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 243,
    "kind": "member",
    "name": "_is_loaded",
    "memberof": "js/base/component/unused_component.js~Component",
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#_is_loaded",
    "access": "private",
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 244,
    "kind": "member",
    "name": "_bindings",
    "memberof": "js/base/component/unused_component.js~Component",
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#_bindings",
    "access": "private",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 245,
    "kind": "member",
    "name": "_ready_promise",
    "memberof": "js/base/component/unused_component.js~Component",
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#_ready_promise",
    "access": "private",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 246,
    "kind": "member",
    "name": "_assets_dependancies",
    "memberof": "js/base/component/unused_component.js~Component",
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#_assets_dependancies",
    "access": "private",
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 247,
    "kind": "member",
    "name": "_assets_promise",
    "memberof": "js/base/component/unused_component.js~Component",
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#_assets_promise",
    "access": "private",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 248,
    "kind": "method",
    "name": "render",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#render",
    "access": "public",
    "description": "Render component DOM element.",
    "lineNumber": 96,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of this to chain promises."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_force",
        "description": "should force creation of a new VNode if a previous rendering exists."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of this to chain promises."
    }
  },
  {
    "__docId__": 250,
    "kind": "method",
    "name": "_render",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#_render",
    "access": "private",
    "description": null,
    "lineNumber": 110,
    "undocument": true,
    "params": [
      {
        "name": "arg_force",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 251,
    "kind": "method",
    "name": "process_rendering_vnode",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#process_rendering_vnode",
    "access": "public",
    "description": "PROCESS RENDERING VNODE: CREATE OR UPDATE DOM ELEMENT.",
    "lineNumber": 161,
    "params": [
      {
        "name": "arg_rendering_result",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_credentials",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 252,
    "kind": "member",
    "name": "_is_visible",
    "memberof": "js/base/component/unused_component.js~Component",
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#_is_visible",
    "access": "private",
    "description": null,
    "lineNumber": 165,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 253,
    "kind": "method",
    "name": "save_rendering",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#save_rendering",
    "access": "public",
    "description": "Save rendering virtul node. Update component VNode with current component HTML.",
    "lineNumber": 177,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 254,
    "kind": "method",
    "name": "update",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#update",
    "access": "public",
    "description": "Update view with current state.",
    "lineNumber": 189,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 256,
    "kind": "method",
    "name": "_update",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#_update",
    "access": "private",
    "description": null,
    "lineNumber": 206,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 257,
    "kind": "member",
    "name": "_dom_element",
    "memberof": "js/base/component/unused_component.js~Component",
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#_dom_element",
    "access": "private",
    "description": null,
    "lineNumber": 228,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 258,
    "kind": "method",
    "name": "update_children",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#update_children",
    "access": "public",
    "description": "Update view with current state.",
    "lineNumber": 260,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 259,
    "kind": "method",
    "name": "clear",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#clear",
    "access": "public",
    "description": "Clear component to initial values.",
    "lineNumber": 281,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 260,
    "kind": "method",
    "name": "destroy",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#destroy",
    "access": "public",
    "description": "Destroy component DOM element.",
    "lineNumber": 293,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 261,
    "kind": "method",
    "name": "load",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#load",
    "access": "public",
    "description": "Load and apply a component configuration.",
    "lineNumber": 314,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing|Promise} "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Immutable.Map",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state to load (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing",
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 262,
    "kind": "member",
    "name": "store_unsubscribe",
    "memberof": "js/base/component/unused_component.js~Component",
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#store_unsubscribe",
    "access": "public",
    "description": null,
    "lineNumber": 330,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 264,
    "kind": "method",
    "name": "get_assets_promise",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#get_assets_promise",
    "access": "public",
    "description": "Get assets promises.",
    "lineNumber": 357,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 265,
    "kind": "method",
    "name": "get_assets_dependancies",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#get_assets_dependancies",
    "access": "public",
    "description": "Get assets dependancies.",
    "lineNumber": 369,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 266,
    "kind": "method",
    "name": "add_assets_dependancy",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#add_assets_dependancy",
    "access": "public",
    "description": "Add assets dependancy.",
    "lineNumber": 383,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_asset_id",
        "description": "asset element id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 267,
    "kind": "method",
    "name": "init_assets",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#init_assets",
    "access": "public",
    "description": "Init assets promises.",
    "lineNumber": 395,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 269,
    "kind": "method",
    "name": "init_bindings",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#init_bindings",
    "access": "public",
    "description": "Init bindings.",
    "lineNumber": 418,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing} "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 270,
    "kind": "method",
    "name": "unload",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#unload",
    "access": "public",
    "description": "Unload a component configuration.",
    "lineNumber": 520,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing} "
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 271,
    "kind": "method",
    "name": "get_named_stream",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#get_named_stream",
    "access": "public",
    "description": "Get a named stream.",
    "lineNumber": 552,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Stream|undefined} - found stream."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_stream_name",
        "description": "stream name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Stream",
        "undefined"
      ],
      "spread": false,
      "description": "found stream."
    }
  },
  {
    "__docId__": 272,
    "kind": "method",
    "name": "dispatch_update_state_action",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#dispatch_update_state_action",
    "access": "public",
    "description": "Dispatch update state action.",
    "lineNumber": 571,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Immutable.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_new_state",
        "description": "new state Immutable Map."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 273,
    "kind": "method",
    "name": "dispatch_update_state_value_action",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#dispatch_update_state_value_action",
    "access": "public",
    "description": "Dispatch update state action.",
    "lineNumber": 595,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_path",
        "description": "component state path."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_value",
        "description": "component state value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 274,
    "kind": "method",
    "name": "get_children_component",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#get_children_component",
    "access": "public",
    "description": "Get view children components.",
    "lineNumber": 615,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} - list of Component."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "list of Component."
    },
    "params": []
  },
  {
    "__docId__": 276,
    "kind": "method",
    "name": "get_text_value",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#get_text_value",
    "access": "public",
    "description": "Get component content value string.",
    "lineNumber": 714,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 277,
    "kind": "method",
    "name": "set_text_value",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#set_text_value",
    "access": "public",
    "description": "Set component content value string.",
    "lineNumber": 728,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_value",
        "description": "component values string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 278,
    "kind": "method",
    "name": "get_object_value",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#get_object_value",
    "access": "public",
    "description": "Get component content value object.",
    "lineNumber": 740,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 279,
    "kind": "method",
    "name": "set_object_value",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#set_object_value",
    "access": "public",
    "description": "Set component content value object",
    "lineNumber": 765,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_value",
        "description": "component values object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 280,
    "kind": "method",
    "name": "register_and_render_inside_from_json",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#register_and_render_inside_from_json",
    "access": "public",
    "description": "Render a component inside this element from a json description.",
    "lineNumber": 785,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_options",
        "description": "json source configuration."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 281,
    "kind": "method",
    "name": "register_from_json",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#register_from_json",
    "access": "public",
    "description": "Register a component description from a json content.",
    "lineNumber": 811,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_options",
        "description": "json source configuration."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 282,
    "kind": "method",
    "name": "render_inside_from_json",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#render_inside_from_json",
    "access": "public",
    "description": "Render a component inside this element from a json description.",
    "lineNumber": 901,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "component name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_json_desc",
        "description": "component description."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 283,
    "kind": "method",
    "name": "expand_to_fullscreen",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#expand_to_fullscreen",
    "access": "public",
    "description": "Expand component to fullscreen (inside browser window).",
    "lineNumber": 956,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 284,
    "kind": "member",
    "name": "saved_dom",
    "memberof": "js/base/component/unused_component.js~Component",
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#saved_dom",
    "access": "public",
    "description": null,
    "lineNumber": 973,
    "undocument": true,
    "type": {
      "types": [
        "{\"body_overflow\": *, \"className\": *, \"style\": *}"
      ]
    }
  },
  {
    "__docId__": 285,
    "kind": "method",
    "name": "collapse_from_fullscreen",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#collapse_from_fullscreen",
    "access": "public",
    "description": "Collapse component from fullscreen to original size.",
    "lineNumber": 1011,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 287,
    "kind": "method",
    "name": "toggle_from_fullscreen",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#toggle_from_fullscreen",
    "access": "public",
    "description": "Toggle component fullscreen mode.",
    "lineNumber": 1054,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 288,
    "kind": "method",
    "name": "save_",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#save_",
    "access": "public",
    "description": "Toggle component fullscreen mode.",
    "lineNumber": 1081,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 289,
    "kind": "method",
    "name": "restore_",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#restore_",
    "access": "public",
    "description": "Toggle component fullscreen mode.",
    "lineNumber": 1093,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 290,
    "kind": "method",
    "name": "resize",
    "memberof": "js/base/component/unused_component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component/unused_component.js~Component#resize",
    "access": "public",
    "description": "Resize component.",
    "lineNumber": 1108,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_width",
        "description": "css width value."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_height",
        "description": "css height value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 291,
    "kind": "file",
    "name": "js/base/component.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport _ from 'lodash'\r\n\r\n// COMMON IMPORTS\r\nimport T   from 'devapt-core-common/dist/js/utils/types'\r\n\r\n// BROWSER IMPORTS\r\nimport StatedDom      from './component/stated_dom'\r\n\r\n\r\nconst context = 'browser/base/component'\r\n\r\n\r\n\r\n/**\r\n * @file UI component class.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example:\r\n * \tAPI\r\n *\t\t->get_text_value():string - Get component content value string.\r\n * \t\t->\r\n * \r\n * \t\t->\r\n * \r\n * \t\t->get_text_value():string - Get component content value string.\r\n * \t\t->set_text_value(arg_value):nothing - Set component content value string.\r\n * \r\n * \t\t->get_object_value():object - Get component content value object.\r\n * \t\t->set_object_value(arg_value):nothing - Set component content value object.\r\n * \r\n */\r\nexport default class Component extends StatedDom\r\n{\r\n\t/**\r\n\t * Creates an instance of Component.\r\n\t * \r\n\t * @param {RuntimeBase}   arg_runtime     - client runtime.\r\n\t * @param {Immutable.Map} arg_state       - component initial state.\r\n\t * @param {string}        arg_log_context - context of traces of this instance (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_state, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_runtime, arg_state, log_context)\r\n\t\t\r\n\t\tthis.is_component   = true\r\n\r\n\t\t// DEBUG\r\n\t\t// console.info(context + ':constructor:creating component ' + this.get_name())\r\n\t\t// this.enable_trace()\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Get component content value string.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_text_value()\r\n\t{\r\n\t\treturn this.get_dom_text()\r\n\t}\r\n\t\r\n\r\n\r\n\t/**\r\n\t * Set component content value string.\r\n\t * \r\n\t * @param {string} arg_value - component values string.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tset_text_value(arg_value)\r\n\t{\r\n\t\tthis.set_dom_text('' + arg_value)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get component content value object.\r\n\t * \r\n\t * @returns {object}\r\n\t */\r\n\tget_object_value()\r\n\t{\r\n\t\tlet json = undefined\r\n\t\t\r\n\t\tconst str = this.get_dom_text()\r\n\r\n\t\ttry {\r\n\t\t\tjson = JSON.parse(str)\r\n\t\t}\r\n\t\tcatch(e){\r\n\t\t\tconsole.warn(context + ':get_object_value:error %s:bad json string=%s:', e, str)\r\n\t\t}\r\n\r\n\t\treturn json\r\n\t}\r\n\t\r\n\r\n\r\n\t/**\r\n\t * Set component content value object\r\n\t * \r\n\t * @param {object} arg_value - component values object.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tset_object_value(arg_value)\r\n\t{\r\n\t\ttry {\r\n\t\t\tconst str = JSON.stringify(arg_value)\r\n\t\t\tthis.set_dom_text(str)\r\n\t\t}\r\n\t\tcatch(e){\r\n\t\t\tconsole.warn(context + ':set_object_value:error %s:bad object=:', e, arg_value)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Resize component.\r\n\t * \r\n\t * @param {any} arg_width - css width value.\r\n\t * @param {any} arg_height - css height value.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tresize(arg_width, arg_height)\r\n\t{\r\n\t\tconsole.log(context + ':resize:width=%s height:%s', arg_width, arg_height)\r\n\r\n\t\t// TODO\r\n\t\tconst dom_elem = this.get_dom_element()\r\n\t\tif (! T.isNumber(arg_width))\r\n\t\t{\r\n\t\t\targ_width = dom_elem.offsetWidth\r\n\t\t}\r\n\t\tif (! T.isNumber(arg_height))\r\n\t\t{\r\n\t\t\targ_height = dom_elem.offsetHeight\r\n\t\t}\r\n\t\tconsole.log(context + ':resize:num width=%s num height:%s', arg_width, arg_height)\r\n\r\n\t\tthis.get_children_component().forEach(\r\n\t\t\t(component)=>{\r\n\t\t\t\tthis.debug(':resize:component=' + component.get_name())\r\n\t\t\t\tcomponent.resize(arg_width, arg_height)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Update component size with its content.\r\n\t * \r\n\t * @returns {object} - size object { width:integer, height:integer }\r\n\t */\r\n\tupdate_size()\r\n\t{\r\n\t\tconsole.log(context + ':update_size:name=%s', this.get_name())\r\n\r\n\t\tconst size = {\r\n\t\t\twidth:0,\r\n\t\t\theight:0\r\n\t\t}\r\n\t\tthis.get_children_component().forEach(\r\n\t\t\t(component)=>{\r\n\t\t\t\tthis.debug(':update_size:component=' + component.get_name())\r\n\r\n\t\t\t\tconst child_size = component.update_size()\r\n\t\t\t\tsize.width  += child_size.width\r\n\t\t\t\tsize.height += child_size.height\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\t// DEBUG\r\n\t\tconsole.log(context + ':update_size:name=%s:width=%s height:%s', this.get_name(), size.width, size.height)\r\n\r\n\t\tconst dom_elem = this.get_dom_element()\r\n\r\n\t\tif (size.width == 0 || size.height == 0)\r\n\t\t{\r\n\t\t\tsize.width  = dom_elem.offsetWidth,\r\n\t\t\tsize.height = dom_elem.offsetHeight\r\n\t\t\tconsole.log(context + ':update_size:name=%s:from get_size:width=%s height:%s', this.get_name(), size.width, size.height)\r\n\t\t}\r\n\t\t\r\n\t\tdom_elem.style.width  = '' + size.width  + 'px;'\r\n\t\tdom_elem.style.height = '' + size.height + 'px;'\r\n\r\n\t\treturn size\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get component size.\r\n\t * \r\n\t * @returns {object} - size object { width:integer, height:integer }\r\n\t */\r\n\tget_size()\r\n\t{\r\n\t\tconst dom_elem = this.get_dom_element()\r\n\t\treturn {\r\n\t\t\twidth:dom_elem.offsetWidth,\r\n\t\t\theight:dom_elem.offsetHeight\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\r\n\t/**\r\n\t * Get component size.\r\n\t * \r\n\t * @returns {object} - size object { width:integer, height:integer }\r\n\t */\r\n\t// get_content_size()\r\n\t// {\r\n\t// \tconst dom_elem = this.get_dom_element()\r\n\t// \treturn {\r\n\t// \t\twidth:dom_elem.offsetWidth,\r\n\t// \t\theight:dom_elem.offsetHeight - 15\r\n\t// \t}\r\n\t// }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/base/component.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 292,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/component.js",
    "static": true,
    "longname": "js/base/component.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/base/component.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 293,
    "kind": "class",
    "name": "Component",
    "memberof": "js/base/component.js",
    "static": true,
    "longname": "js/base/component.js~Component",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/base/component.js",
    "importStyle": "Component",
    "description": "",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "UI component class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0\n\n@example:\n\tAPI\n\t->get_text_value():string - Get component content value string.\n\t\t->\n\n\t\t->\n\n\t\t->get_text_value():string - Get component content value string.\n\t\t->set_text_value(arg_value):nothing - Set component content value string.\n\n\t\t->get_object_value():object - Get component content value object.\n\t\t->set_object_value(arg_value):nothing - Set component content value object."
      }
    ],
    "interface": false,
    "extends": [
      "js/base/component/stated_dom.js~StatedDom"
    ]
  },
  {
    "__docId__": 294,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component.js~Component#constructor",
    "access": "public",
    "description": "Creates an instance of Component.",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "RuntimeBase"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "Immutable.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component initial state."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "context of traces of this instance (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 295,
    "kind": "member",
    "name": "is_component",
    "memberof": "js/base/component.js~Component",
    "static": false,
    "longname": "js/base/component.js~Component#is_component",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 296,
    "kind": "method",
    "name": "get_text_value",
    "memberof": "js/base/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component.js~Component#get_text_value",
    "access": "public",
    "description": "Get component content value string.",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 297,
    "kind": "method",
    "name": "set_text_value",
    "memberof": "js/base/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component.js~Component#set_text_value",
    "access": "public",
    "description": "Set component content value string.",
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_value",
        "description": "component values string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 298,
    "kind": "method",
    "name": "get_object_value",
    "memberof": "js/base/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component.js~Component#get_object_value",
    "access": "public",
    "description": "Get component content value object.",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 299,
    "kind": "method",
    "name": "set_object_value",
    "memberof": "js/base/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component.js~Component#set_object_value",
    "access": "public",
    "description": "Set component content value object",
    "lineNumber": 117,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_value",
        "description": "component values object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 300,
    "kind": "method",
    "name": "resize",
    "memberof": "js/base/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component.js~Component#resize",
    "access": "public",
    "description": "Resize component.",
    "lineNumber": 138,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_width",
        "description": "css width value."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_height",
        "description": "css height value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 301,
    "kind": "method",
    "name": "update_size",
    "memberof": "js/base/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component.js~Component#update_size",
    "access": "public",
    "description": "Update component size with its content.",
    "lineNumber": 169,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - size object { width:integer, height:integer }"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "size object { width:integer, height:integer }"
    },
    "params": []
  },
  {
    "__docId__": 302,
    "kind": "method",
    "name": "get_size",
    "memberof": "js/base/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/component.js~Component#get_size",
    "access": "public",
    "description": "Get component size.",
    "lineNumber": 212,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - size object { width:integer, height:integer }"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "size object { width:integer, height:integer }"
    },
    "params": []
  },
  {
    "__docId__": 303,
    "kind": "file",
    "name": "js/base/container.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport { fromJS } from 'immutable'\r\nimport _ from 'lodash'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../../../node_modules/devapt-core-common/dist/js/utils/types'\r\n\r\n// BROWSER IMPORTS\r\nimport Component from './component'\r\n\r\n\r\nconst context = 'browser/base/container'\r\n\r\n\r\n\r\n/**\r\n * @file UI component class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class Container extends Component\r\n{\r\n\t\r\n\t/**\r\n\t * Creates an instance of Container. A Container contains other Components through the 'children' property.\r\n\t * @extends Component\r\n\t * \r\n\t * Container state attributes:\r\n\t * \t- strategy: Immutable.Map (how to manage UI updates with items changes)\r\n\t * \t\t- update_mode: 'append' | 'prepend' | 'replace' | 'insert at'\r\n\t * \t\t- update_index: integer (position for 'insert at' mode)\r\n\t * \t\t- resize_mode: 'remove_last' | 'remove_first'\r\n\t * \t\t- resize_max: integer (max items count)\r\n\t * \r\n\t * \tAPI\r\n\t * \t\t->load(arg_state):nothing - load configuration\r\n\t * \r\n\t * \tAPI: DEFINE ACTION WRAPPERS (only dispatch an action to update the state)\r\n\t * \t\t->do_action_set_resize_max(arg_value):nothing - Set max items value for the container.\r\n\t * \t\t->do_action_clear_items():nothing - Clear container items.\r\n\t * \r\n\t * \t\t->do_action_append(arg_items_array, arg_items_count):nothing  - Append items to the container (an item can be a string or an array or an object or ...).\r\n\t * \t\t->do_action_prepend(arg_items_array, arg_items_count):nothing - Prepend an item (an item can be a string or an array or an object or ...).\r\n\t * \t\t->do_action_replace(arg_items_array, arg_items_count):nothing - Replace items to the container (an item can be a string or an array or an object or ...).\r\n\t * \t\t->do_action_insert_at(arg_index, arg_items_array, arg_items_count):nothing - Insert items at container position index (an item can be a string or an array or an object or ...).\r\n\t * \r\n\t * \t\t->do_action_remove_at_index(arg_index):nothing - Remove an item at given position.\r\n\t * \t\t->do_action_remove_first():nothing             - Remove an item at first position.\r\n\t * \t\t->do_action_remove_last(arg_count):nothing     - Remove an item at last position.\r\n\t * \r\n\t * \t\t->reduce_action(arg_previous_state, arg_action):Immutable.Map    - Store actions reducer pure function.\r\n\t * \t\t->handle_state_change(arg_previous_state, arg_new_state):nothing - Handle component state changes.\r\n\t * \r\n\t * \r\n\t * API: DEFINE UI HANDLERS FOR STATE UPDATE (only update UI)\r\n\t * \t\t->ui_items_get_count():nothing - Get container items count.\r\n\t * \t\t->ui_items_clear():nothing     - Erase container items.\r\n\t * \r\n\t * \t\t->ui_items_append(arg_items_array):nothing  - Append tems to the container.\r\n\t * \t\t->ui_items_prepend(arg_items_array):nothing - Prepend tems to the container.\r\n\t * \t\t->ui_items_replace(arg_items_array, arg_items_count):nothing - Replace container items.\r\n\t * \t\t->ui_items_insert_at(arg_index, arg_items_array, arg_items_count):nothing - Insert items at container position index.\r\n\t * \r\n\t * \t\t->ui_items_remove_at_index(arg_index):nothing - Remove an item at given position.\r\n\t * \t\t->ui_items_remove_first():nothing             - Remove a item at first position.\r\n\t * \t\t->ui_items_remove_last():nothing              - Remove an item at last position.\r\n\t * \r\n\t * API: state store actions\r\n\t * \t\t* 'set_resize_max'\r\n\t * \t\t* 'clear_items'\r\n\t * \r\n\t * \t\t* 'append'\r\n\t * \t\t* 'prepend'\r\n\t * \t\t* 'replace'\r\n\t * \t\t* 'insert_at'\r\n\t * \r\n\t * \t\t* 'remove_at_index'\r\n\t * \t\t* 'remove_first'\r\n\t * \t\t* 'remove_last'\r\n\t * \r\n\t * @param {object} arg_runtime - client runtime.\r\n\t * @param {object} arg_state - component state.\r\n\t * @param {string} arg_log_context - context of traces of this instance (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_state, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_runtime, arg_state, log_context)\r\n\t\t\r\n\t\tthis.is_container = true\r\n\t\t\r\n\t\tthis.strategy = undefined\r\n\t\t\r\n\t\tthis.strategy_update = undefined\r\n\t\tthis.strategy_resize_ui = undefined\r\n\t\tthis.strategy_resize_state = undefined\r\n\t\tthis.max_size = undefined\r\n\r\n\t\tthis._state_action_index = 0\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Load and apply a container component configuration.\r\n\t * \r\n\t * @param {Immutable.Map|undefined} arg_state - component state to load (optional).\r\n\t * \r\n\t * @returns {nothing} \r\n\t */\r\n\tload(arg_state)\r\n\t{\r\n\t\tthis.enter_group('load')\r\n\r\n\t\tconst state = arg_state ? arg_state : this.get_state()\r\n\t\t\r\n\t\t// console.info(context + ':load:loading ' + this.get_name())\r\n\t\t\r\n\t\tif (! state)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\tif (this.is_loaded)\r\n\t\t{\r\n\t\t\t// console.info(context + ':load:already loaded component ' + this.get_name())\r\n\t\t\tthis.leave_group('load:already loaded')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (! this.store_unsubscribe)\r\n\t\t{\r\n\t\t\tthis.store_unsubscribe = this.get_runtime().create_store_observer(this)\r\n\t\t}\r\n\r\n\r\n\t\t// GET CONTAINER STRATEGY: HOW TO UPDATE UI\r\n\t\tif (state.has('strategy'))\r\n\t\t{\r\n\t\t\tthis.strategy = state.get('strategy')\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t// DEFINE UPDATE FUNCTION\r\n\t\t\t\r\n\t\t\tthis.strategy_update = undefined\r\n\t\t\t\r\n\t\t\tif (this.strategy.has('update_mode'))\r\n\t\t\t{\r\n\t\t\t\tconst mode = this.strategy.get('update_mode')\r\n\t\t\t\tif (mode == 'append')\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.strategy_update = this.ui_items_append\r\n\t\t\t\t}\r\n\t\t\t\telse if (mode == 'prepend')\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.strategy_update = this.ui_items_prepend\r\n\t\t\t\t}\r\n\t\t\t\telse if (mode == 'replace')\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.strategy_update = this.ui_items_replace\r\n\t\t\t\t}\r\n\t\t\t\telse if (mode == 'insert at')\r\n\t\t\t\t{\r\n\t\t\t\t\tif ( this.strategy.has('update_index') )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst index = this.strategy.get('update_index')\r\n\t\t\t\t\t\tthis.strategy_update = () => { this.ui_items_insert_at_index(index) }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif ( ! T.isFunction(this.strategy_update) )\r\n\t\t\t{\r\n\t\t\t\tthis.strategy_update = this.ui_items_replace\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t// DEFINE RESIZE FUNCTION\r\n\t\t\t\r\n\t\t\tthis.strategy_resize_ui = undefined\r\n\t\t\tthis.strategy_resize_state = undefined\r\n\t\t\tthis.max_size = undefined\r\n\t\t\t\r\n\t\t\tif (this.strategy.has('resize_mode'))\r\n\t\t\t{\r\n\t\t\t\tconst mode = this.strategy.get('resize_mode')\r\n\t\t\t\t\r\n\t\t\t\tthis.max_size = 100\r\n\t\t\t\tif ( this.strategy.has('resize_max') )\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.max_size = this.strategy.get('resize_max')\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (mode == 'remove_last')\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.strategy_resize_ui = () => {\r\n\t\t\t\t\t\tconst count = this.ui_items_get_count() - this.max_size\r\n\t\t\t\t\t\tif (count > 0)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.ui_items_remove_last(count)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse /*if (mode == 'remove_first')*/\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.strategy_resize_ui = () => {\r\n\t\t\t\t\t\tconst count = this.ui_items_get_count() - this.max_size\r\n\t\t\t\t\t\tthis.ui_items_remove_first(count)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\tthis.strategy_resize_state = (arg_items, arg_next_state) => {\r\n\t\t\t\t\tif (arg_items && arg_items.count && this.max_size)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst count = arg_items.count() -  this.max_size\r\n\t\t\t\t\t\tif (count > 0)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tconst action = { type:mode, count:count }\r\n\t\t\t\t\t\t\treturn this.reduce_action(arg_next_state, action)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn arg_next_state\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// console.log(context + ':load:resize_mode', mode)\r\n\t\t\t\t// console.log(context + ':load:resize_max', max_size)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// SET DEFAULT METHOD\r\n\t\tif (! this.strategy_resize_state)\r\n\t\t{\r\n\t\t\tthis.strategy_resize_state = (items, next_state) => next_state\r\n\t\t}\r\n\t\tif (! this.strategy_resize_ui)\r\n\t\t{\r\n\t\t\tthis.strategy_resize_ui = () => {}\r\n\t\t}\r\n\r\n\t\t// this.init_bindings()\r\n\r\n\t\t// this.update()\r\n\t\t\r\n\t\tthis.is_loaded = true\r\n\t\tthis.leave_group('load')\r\n\t}\r\n\t\r\n\t\r\n\t// -----------------------------------------------------------------------------------------------------\r\n\t// DEFINE ACTION WRAPPERS (only dispatch an action to update the state)\r\n\t// -----------------------------------------------------------------------------------------------------\r\n\t\r\n\t/**\r\n\t * Set max items value for the container.\r\n\t * \r\n\t * @param {integer} arg_value - max items value.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdo_action_set_resize_max(arg_value)\r\n\t{\r\n\t\tlet value = T.isNumber(arg_value) ? arg_value : undefined\r\n\t\tif (!value)\r\n\t\t{\r\n\t\t\tif ( T.isObject(arg_value) )\r\n\t\t\t{\r\n\t\t\t\tif ( T.isNumber(arg_value.resize_max) )\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue = arg_value.resize_max\r\n\t\t\t\t}\r\n\t\t\t\telse if ( T.isString(arg_value.resize_max) )\r\n\t\t\t\t{\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tvalue = parseInt(arg_value.resize_max)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch(e)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconsole.error(context + ':do_action_set_resize_max:bad integer value from string', arg_value)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tassert( T.isNumber(value), context + ':do_action_set_resize_max:bad value number')\r\n\t\t\r\n\t\tthis.dispatch_action('set_resize_max', {resize_max:value})\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Clear container items.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdo_action_clear_items()\r\n\t{\r\n\t\tthis.dispatch_action('clear_items')\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Append items to the container (an item can be a string or an array or an object or ...).\r\n\t * \r\n\t * @param {array}  arg_items_array - items array.\r\n\t * @param {intege} arg_items_count - items count.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdo_action_append(arg_items_array, arg_items_count)\r\n\t{\r\n\t\tif (! arg_items_array)\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':do_action_append:%s:bad arguments', this.get_name())\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif ( arguments.length == 2 && T.isNumber(arg_items_array) )\r\n\t\t{\r\n\t\t\tconst tmp = arg_items_array\r\n\t\t\targ_items_array = arg_items_count\r\n\t\t\targ_items_count = tmp\r\n\t\t}\r\n\t\tif (! arg_items_count && T.isArray(arg_items_array) )\r\n\t\t{\r\n\t\t\targ_items_count = arg_items_array.length\r\n\t\t}\r\n\t\t\r\n\t\t// DEBUG\r\n\t\t// console.log(context + ':do_action_append:%s:items,count:', this.get_name(), arg_items_array, arg_items_count)\r\n\t\t\r\n\t\tassert( T.isNumber(arg_items_count), context + ':do_action_append:bad items count')\r\n\t\tassert( T.isArray(arg_items_array), context + ':do_action_append:bad items array')\r\n\r\n\t\tthis.dispatch_action('append', {values:arg_items_array, count:arg_items_count } )\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Prepend items to the container (an item can be a string or an array or an object or ...).\r\n\t * \r\n\t * @param {array}  arg_items_array - items array.\r\n\t * @param {intege} arg_items_count - items count.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdo_action_prepend(arg_items_array, arg_items_count)\r\n\t{\r\n\t\tif (! arg_items_array)\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':do_action_prepend:%s:bad arguments', this.get_name())\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif ( arguments.length == 2 && T.isNumber(arg_items_array) )\r\n\t\t{\r\n\t\t\tconst tmp = arg_items_array\r\n\t\t\targ_items_array = arg_items_count\r\n\t\t\targ_items_count = tmp\r\n\t\t}\r\n\t\tif (! arg_items_count && T.isArray(arg_items_array))\r\n\t\t{\r\n\t\t\targ_items_count = arg_items_array.length\r\n\t\t}\r\n\r\n\t\t// DEBUG\r\n\t\t// console.log(context + ':do_action_prepend:%s:items,count:', this.get_name(), arg_items_array, arg_items_count)\r\n\r\n\t\tassert( T.isNumber(arg_items_count), context + ':do_action_prepend:bad items count')\r\n\t\tassert( T.isArray(arg_items_array), context + ':do_action_prepend:bad items array')\r\n\t\t\r\n\t\t// DEBUG\r\n\t\t// console.log(context + ':do_action_prepend:arg_items_array', arg_items_array)\r\n\r\n\t\tthis.dispatch_action('prepend', { values:arg_items_array, count:arg_items_count } )\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Replace items to the container (an item can be a string or an array or an object or ...).\r\n\t * \r\n\t * @param {array}  arg_items_array - items array.\r\n\t * @param {intege} arg_items_count - items count.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdo_action_replace(arg_items_array, arg_items_count)\r\n\t{\r\n\t\tif (! arg_items_array)\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':do_action_replace:%s:bad arguments', this.get_name())\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif ( arguments.length == 2 && T.isNumber(arg_items_array) )\r\n\t\t{\r\n\t\t\tconst tmp = arg_items_array\r\n\t\t\targ_items_array = arg_items_count\r\n\t\t\targ_items_count = tmp\r\n\t\t}\r\n\t\t\r\n\t\t// DEBUG\r\n\t\t// console.log(context + ':do_action_replace:%s:items,count:', this.get_name(), arg_items_array, arg_items_count)\r\n\t\t\r\n\t\tassert( T.isNumber(arg_items_count), context + ':do_action_replace:bad items count')\r\n\t\tassert( T.isArray(arg_items_array), context + ':do_action_replace:bad items array')\r\n\r\n\t\tthis.dispatch_action('replace', {values:arg_items_array, count:arg_items_count } )\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Insert items at container position index (an item can be a string or an array or an object or ...).\r\n\t * \r\n\t * @param {intege} arg_index       - position index.\r\n\t * @param {array}  arg_items_array - items array.\r\n\t * @param {intege} arg_items_count - items count.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdo_action_insert_at(arg_index, arg_items_array, arg_items_count)\r\n\t{\r\n\t\tassert( T.isNumber(arg_index), context + ':do_action_insert_at:bad index number')\r\n\t\tassert( T.isNumber(arg_items_count), context + ':do_action_insert_at:bad items count')\r\n\t\t\r\n\t\tif (arg_items_count == 1)\r\n\t\t{\r\n\t\t\targ_items_array = [arg_items_array]\r\n\t\t}\r\n\t\tassert( T.isArray(arg_items_array), context + ':do_action_insert_at:bad items array')\r\n\r\n\t\tthis.dispatch_action('insert_at', {index:arg_index, values:arg_items_array, count:arg_items_count } )\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove an item at given position.\r\n\t * \r\n\t * @param {number} arg_index - item index.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdo_action_remove_at_index(arg_index)\r\n\t{\r\n\t\tassert( T.isNumber(arg_index), context + ':remove_at_index:bad index number' )\r\n\t\t\r\n\t\tthis.dispatch_action( { type:'remove_at_index', index:arg_index } )\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove an item at first position.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdo_action_remove_first()\r\n\t{\r\n\t\tthis.dispatch_action('remove_first')\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove an item at last position.\r\n\t *\r\n\t * @param {number} arg_count - items count.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdo_action_remove_last(arg_count)\r\n\t{\r\n\t\tthis.dispatch_action('remove_last', { count:arg_count })\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Store actions reducer pure function.\r\n\t * \r\n\t * @param {Immutable.Map} arg_previous_state - previous state.\r\n\t * @param {object} arg_action - store action: { type:'', component:'', ...}\r\n\t * \r\n\t * @returns {Immutable.Map} - new state\r\n\t */\r\n\treduce_action(arg_previous_state, arg_action)\r\n\t{\r\n\t\t// console.log(context + ':reduce_action:prev state', arg_previous_state.toJS())\r\n\t\t\r\n\t\tif (! arg_previous_state)\r\n\t\t{\r\n\t\t\tconsole.error(context + ':reduce_action:%s:bad previous state for action=', this.get_name(), arg_action)\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\t// PUSH ACTION ON UI ACTIONS STACK\r\n\t\tlet stack =  arg_previous_state.get('ui_actions_stack')\r\n\t\tstack = stack ? stack.push(arg_action) : fromJS([arg_action])\r\n\r\n\t\tif (this._state_action_index >= stack.size - 1)\r\n\t\t{\r\n\t\t\tthis._state_action_index = 0\r\n\t\t\tstack = fromJS([arg_action])\r\n\t\t\t// console.log(context + ':reduce_action:this._state_action_index(%s) >= stack.size(%s)', this._state_action_index, stack.size - 1)\r\n\t\t}\r\n\t\t\r\n\t\tlet next_state = arg_previous_state.set('ui_actions_stack', stack)\r\n\t\t// console.log(context + ':reduce_action:stack', stack)\r\n\r\n\t\tswitch(arg_action.type)\r\n\t\t{\r\n\t\t\tcase 'set_resize_max': {\r\n\t\t\t\tif ( ! T.isNumber(arg_action.resize_max) && arg_action.resize_max > 0 )\r\n\t\t\t\t{\r\n\t\t\t\t\treturn arg_previous_state\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.max_size = arg_action.resize_max\r\n\t\t\t\tconst items = arg_previous_state.get('items')\r\n\t\t\t\tnext_state = next_state.setIn(['strategy', 'resize_max'], arg_action.resize_max)\r\n\t\t\t\treturn this.strategy_resize_state(items, next_state)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase 'clear_items': {\r\n\t\t\t\tnext_state = next_state.set('items', fromJS([]))\r\n\t\t\t\treturn next_state\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase 'append': {\r\n\t\t\t\tconst values = arg_action.values\r\n\r\n\t\t\t\t// DEBUG\r\n\t\t\t\t// console.log('container:reduce_action:append:values', values)\r\n\t\t\t\t// console.log('container:reduce_action:append:prev items', arg_previous_state.get('items').toJS())\r\n\t\t\t\t\r\n\t\t\t\t// NOTHING TO APPEND\r\n\t\t\t\tif (values.length == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn arg_previous_state\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet items = arg_previous_state.get('items').concat(values)\r\n\t\t\t\tnext_state = next_state.set('items', items)\r\n\t\t\t\t\r\n\t\t\t\treturn this.strategy_resize_state(items, next_state)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase 'prepend': {\r\n\t\t\t\tconst values = arg_action.values\r\n\t\t\t\t// console.log(context + ':reduce_action:prepend:values', values)\r\n\t\t\t\t\r\n\t\t\t\tlet items = arg_previous_state.get('items')\r\n\t\t\t\tvalues.forEach(\r\n\t\t\t\t\t(value) => items = items.splice(0, 0, value)\r\n\t\t\t\t)\r\n\t\t\t\tnext_state = next_state.set('items', items)\r\n\t\t\t\t\r\n\t\t\t\treturn this.strategy_resize_state(items, next_state)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase 'replace': {\r\n\t\t\t\tconst values = arg_action.values\r\n\t\t\t\tconsole.log(context + ':reduce_action:replace:values', values)\r\n\t\t\t\t\r\n\t\t\t\tnext_state = next_state.set('items', fromJS(values))\r\n\t\t\t\t\r\n\t\t\t\treturn this.strategy_resize_state(fromJS(values), next_state)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase 'insert_at': {\r\n\t\t\t\tconst index = arg_action.index\r\n\t\t\t\tconst value = arg_action.value\r\n\t\t\t\t\r\n\t\t\t\tconst items = arg_previous_state.get('items').insert(index, value)\r\n\t\t\t\tnext_state = next_state.set('items', items)\r\n\t\t\t\t\r\n\t\t\t\treturn this.strategy_resize_state(items, next_state)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase 'remove_at_index': {\r\n\t\t\t\tconst index = arg_action.index\r\n\t\t\t\tconst items = arg_previous_state.get('items').delete(index)\r\n\t\t\t\tnext_state = next_state.set('items', items)\r\n\t\t\t\treturn next_state\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase 'remove_first': {\r\n\t\t\t\tconst items = arg_previous_state.get('items').delete(0)\r\n\t\t\t\tnext_state = next_state.set('items', items)\r\n\t\t\t\treturn next_state\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase 'remove_last': {\r\n\t\t\t\tif ( T.isNumber(arg_action.count) )\r\n\t\t\t\t{\r\n\t\t\t\t\tconst count = arg_action.count\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (count <= 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn arg_previous_state\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif ( ! arg_previous_state.has('items') )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn arg_previous_state\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet items = arg_previous_state.get('items')\r\n\t\t\t\t\tconst last = items.size\r\n\t\t\t\t\tif ( (last - count) < 0 )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn arg_previous_state.clear()\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\titems = items.splice(last - count, count)\r\n\t\t\t\t\treturn next_state.set('items', items)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tlet items = arg_previous_state.get('items')\r\n\t\t\t\tconst index = items.size\r\n\t\t\t\titems = items.delete(index)\r\n\t\t\t\t\r\n\t\t\t\tnext_state = next_state.set('items', items)\r\n\t\t\t\treturn next_state\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn arg_previous_state\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Handle component state changes.\r\n\t * \r\n\t * @param {Immutable.Map} arg_previous_state - previous state map.\r\n\t * @param {Immutable.Map} arg_new_state - new state map.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\thandle_state_change(arg_previous_state, arg_new_state)\r\n\t{\r\n\t\t// console.log(context + ':handle_state_change')\r\n\r\n\t\t// GET WAITING UI STATE CHANGE ACTIONS\r\n\t\tlet ui_actions_stack = arg_new_state.get('ui_actions_stack', [])\r\n\t\tui_actions_stack = ui_actions_stack.toJS ? ui_actions_stack.toJS() : ui_actions_stack\r\n\t\t\r\n\t\t// LOOP ON WAITING ACTIONS\r\n\t\tlet action = undefined\r\n\t\twhile(this._state_action_index < ui_actions_stack.length)\r\n\t\t{\r\n\t\t\taction = ui_actions_stack[this._state_action_index]\r\n\t\t\t// console.log(context + ':handle_state_change:action', action, ui_actions_stack)\r\n\t\t\tthis._state_action_index++\r\n\r\n\t\t\tthis.handle_state_change_action(action, arg_previous_state, arg_new_state)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Handle component state changes action.\r\n\t * \r\n\t * @param {object}        arg_action         - state change action\r\n\t * @param {Immutable.Map} arg_previous_state - previous state map.\r\n\t * @param {Immutable.Map} arg_new_state      - new state map.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\thandle_state_change_action(arg_action, arg_previous_state, arg_new_state)\r\n\t{\r\n\t\t// console.log(context + ':handle_state_change_action:action', arg_action)\r\n\r\n\t\tswitch(arg_action.type)\r\n\t\t{\r\n\t\t\tcase 'clear_items': {\r\n\t\t\t\tthis.ui_items_clear()\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase 'append': {\r\n\t\t\t\tthis.ui_items_append(arg_action.values, arg_action.count)\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase 'prepend': {\r\n\t\t\t\tthis.ui_items_prepend(arg_action.values, arg_action.count)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase 'replace': {\r\n\t\t\t\tthis.ui_items_replace(arg_action.values, arg_action.count)\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase 'insert_at': {\r\n\t\t\t\tthis.ui_items_insert_at(arg_action.index, arg_action.values, arg_action.count)\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase 'remove_at_index': {\r\n\t\t\t\tthis.ui_items_remove_at(arg_action.index)\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase 'remove_first': {\r\n\t\t\t\tthis.ui_items_remove_first()\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase 'remove_last': {\r\n\t\t\t\tthis.ui_items_remove_last(arg_action.count)\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( T.isFunction(this.strategy_resize_ui) )\r\n\t\t{\r\n\t\t\tthis.strategy_resize_ui()\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t// -----------------------------------------------------------------------------------------------------\r\n\t// DEFINE UI HANDLERS FOR STATE UPDATE\r\n\t// -----------------------------------------------------------------------------------------------------\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get container items count.\r\n\t * \r\n\t * @returns {integer}\r\n\t */\r\n\tui_items_get_count()\r\n\t{\r\n\t\tconst dom_elem = this.get_dom_element()\r\n\t\treturn dom_elem.children.length\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Erase container items.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_clear()\r\n\t{\r\n\t\tconst dom_elem = this.get_dom_element()\r\n\r\n\t\twhile(dom_elem.hasChildNodes())\r\n\t\t{\r\n\t\t\tconst child_elem = dom_elem.lastChild\r\n\t\t\tdom_elem.removeChild(child_elem)\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Append items to the container.\r\n\t * \r\n\t * @param {array} arg_items_array - items array.\r\n\t * @param {intege} arg_items_count - items count.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_append(arg_items_array, arg_items_count)\r\n\t{\r\n\t\tassert( T.isArray(arg_items_array), context + ':ui_items_append:bad items array')\r\n\t\tassert( T.isNumber(arg_items_count), context + ':ui_items_append:bad items count')\r\n\t\t\r\n\t\t// NOT YET IMPLEMENTED\r\n\r\n\t\tconst force_rendering = true\r\n\t\tthis.render(force_rendering)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Prepend items to the container.\r\n\t * \r\n\t * @param {array} arg_items_array - items array.\r\n\t * @param {intege} arg_items_count - items count.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_prepend(arg_items_array, arg_items_count)\r\n\t{\r\n\t\tassert( T.isArray(arg_items_array), context + ':ui_items_prepend:bad items array')\r\n\t\tassert( T.isNumber(arg_items_count), context + ':ui_items_prepend:bad items count')\r\n\t\t\r\n\t\t// NOT YET IMPLEMENTED\r\n\r\n\t\tconst force_rendering = true\r\n\t\tthis.render(force_rendering)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Replace container items.\r\n\t * \r\n\t * @param {array} arg_items_array - items array.\r\n\t * @param {intege} arg_items_count - items count.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_replace(arg_items_array, arg_items_count)\r\n\t{\r\n\t\tassert( T.isArray(arg_items_array), context + ':ui_items_replace:bad items array')\r\n\t\tassert( T.isNumber(arg_items_count), context + ':ui_items_replace:bad items count')\r\n\t\t\r\n\t\t// NOT YET IMPLEMENTED\r\n\r\n\t\tconst force_rendering = true\r\n\t\tthis.render(force_rendering)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Insert items at container position index.\r\n\t * \r\n\t * @param {intege} arg_index - position index.\r\n\t * @param {array} arg_items_array - items array.\r\n\t * @param {intege} arg_items_count - items count.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_insert_at(arg_index, arg_items_array, arg_items_count)\r\n\t{\r\n\t\tassert( T.isArray(arg_items_array), context + ':ui_items_replace:bad items array')\r\n\t\tassert( T.isNumber(arg_items_count), context + ':ui_items_replace:bad items count')\r\n\t\t\r\n\t\t// NOT YET IMPLEMENTED\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove an item at given position.\r\n\t * \r\n\t * @param {number} arg_index - item index.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_remove_at_index(arg_index)\r\n\t{\r\n\t\tassert( T.isNumber(arg_index), context + ':ui_items_remove_at_index:bad index number')\r\n\t\t\r\n\t\t// NOT YET IMPLEMENTED\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove a item at first position.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_remove_first()\r\n\t{\r\n\t\t// NOT YET IMPLEMENTED\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove an item at last position.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_remove_last()\r\n\t{\r\n\t\t// NOT YET IMPLEMENTED\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Hide an element.\r\n\t * \r\n\t * @param {Element} arg_element - DOM element to hide.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_hide_item(arg_element)\r\n\t{\r\n\t\targ_element.style.display = 'none'\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Show an element.\r\n\t * \r\n\t * @param {Element} arg_element - DOM element to hide.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_show_item(arg_element)\r\n\t{\r\n\t\targ_element.style.display = 'block'\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Toggle items visibility belonging a given filter.\r\n\t * \r\n\t * @param {string} arg_selector - items selector.\r\n\t * @param {string} arg_filter_text - filter string.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_filter(arg_selector, arg_filter_text)\r\n\t{\r\n\t\tconsole.log(context + ':ui_items_filter:selector=%s:filter=%s',arg_selector, arg_filter_text)\r\n\r\n\t\tconst dom_element = this.get_dom_element()\r\n\t\tconst selected_elements = dom_element.querySelectorAll(arg_selector)\r\n\t\tif ( ! T.isNodeList(selected_elements) || selected_elements.length == 0)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t_.forEach(selected_elements,\r\n\t\t\t(element)=>{\r\n\t\t\t\tconst text = '' + this._get_dom_text(element)\r\n\t\t\t\tif ( text.search(arg_filter_text) >= 0 )\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.ui_items_show_item(element)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.ui_items_hide_item(element)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Show component.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tshow()\r\n\t{\r\n\t\tsuper.show()\r\n\r\n\t\tconst children = this.get_children_component()\r\n\t\t_.forEach(children,\r\n\t\t\t(child)=>{\r\n\t\t\t\tchild.show()\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Hide component.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\thide()\r\n\t{\r\n\t\tsuper.hide()\r\n\r\n\t\tconst children = this.get_children_component()\r\n\t\t_.forEach(children,\r\n\t\t\t(child)=>{\r\n\t\t\t\tchild.hide()\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/base/container.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 304,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/container.js",
    "static": true,
    "longname": "js/base/container.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/base/container.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 305,
    "kind": "class",
    "name": "Container",
    "memberof": "js/base/container.js",
    "static": true,
    "longname": "js/base/container.js~Container",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/base/container.js",
    "importStyle": "Container",
    "description": "",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "UI component class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/component.js~Component"
    ]
  },
  {
    "__docId__": 306,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/container.js~Container",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/container.js~Container#constructor",
    "access": "public",
    "description": "Creates an instance of Container. A Container contains other Components through the 'children' property.",
    "lineNumber": 88,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "Component\n\nContainer state attributes:\n\t- strategy: Immutable.Map (how to manage UI updates with items changes)\n\t\t- update_mode: 'append' | 'prepend' | 'replace' | 'insert at'\n\t\t- update_index: integer (position for 'insert at' mode)\n\t\t- resize_mode: 'remove_last' | 'remove_first'\n\t\t- resize_max: integer (max items count)\n\n\tAPI\n\t\t->load(arg_state):nothing - load configuration\n\n\tAPI: DEFINE ACTION WRAPPERS (only dispatch an action to update the state)\n\t\t->do_action_set_resize_max(arg_value):nothing - Set max items value for the container.\n\t\t->do_action_clear_items():nothing - Clear container items.\n\n\t\t->do_action_append(arg_items_array, arg_items_count):nothing  - Append items to the container (an item can be a string or an array or an object or ...).\n\t\t->do_action_prepend(arg_items_array, arg_items_count):nothing - Prepend an item (an item can be a string or an array or an object or ...).\n\t\t->do_action_replace(arg_items_array, arg_items_count):nothing - Replace items to the container (an item can be a string or an array or an object or ...).\n\t\t->do_action_insert_at(arg_index, arg_items_array, arg_items_count):nothing - Insert items at container position index (an item can be a string or an array or an object or ...).\n\n\t\t->do_action_remove_at_index(arg_index):nothing - Remove an item at given position.\n\t\t->do_action_remove_first():nothing             - Remove an item at first position.\n\t\t->do_action_remove_last(arg_count):nothing     - Remove an item at last position.\n\n\t\t->reduce_action(arg_previous_state, arg_action):Immutable.Map    - Store actions reducer pure function.\n\t\t->handle_state_change(arg_previous_state, arg_new_state):nothing - Handle component state changes.\n\n\nAPI: DEFINE UI HANDLERS FOR STATE UPDATE (only update UI)\n\t\t->ui_items_get_count():nothing - Get container items count.\n\t\t->ui_items_clear():nothing     - Erase container items.\n\n\t\t->ui_items_append(arg_items_array):nothing  - Append tems to the container.\n\t\t->ui_items_prepend(arg_items_array):nothing - Prepend tems to the container.\n\t\t->ui_items_replace(arg_items_array, arg_items_count):nothing - Replace container items.\n\t\t->ui_items_insert_at(arg_index, arg_items_array, arg_items_count):nothing - Insert items at container position index.\n\n\t\t->ui_items_remove_at_index(arg_index):nothing - Remove an item at given position.\n\t\t->ui_items_remove_first():nothing             - Remove a item at first position.\n\t\t->ui_items_remove_last():nothing              - Remove an item at last position.\n\nAPI: state store actions\n\t\t* 'set_resize_max'\n\t\t* 'clear_items'\n\n\t\t* 'append'\n\t\t* 'prepend'\n\t\t* 'replace'\n\t\t* 'insert_at'\n\n\t\t* 'remove_at_index'\n\t\t* 'remove_first'\n\t\t* 'remove_last'"
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "context of traces of this instance (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 307,
    "kind": "member",
    "name": "is_container",
    "memberof": "js/base/container.js~Container",
    "static": false,
    "longname": "js/base/container.js~Container#is_container",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 308,
    "kind": "member",
    "name": "strategy",
    "memberof": "js/base/container.js~Container",
    "static": false,
    "longname": "js/base/container.js~Container#strategy",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 309,
    "kind": "member",
    "name": "strategy_update",
    "memberof": "js/base/container.js~Container",
    "static": false,
    "longname": "js/base/container.js~Container#strategy_update",
    "access": "public",
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 310,
    "kind": "member",
    "name": "strategy_resize_ui",
    "memberof": "js/base/container.js~Container",
    "static": false,
    "longname": "js/base/container.js~Container#strategy_resize_ui",
    "access": "public",
    "description": null,
    "lineNumber": 98,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 311,
    "kind": "member",
    "name": "strategy_resize_state",
    "memberof": "js/base/container.js~Container",
    "static": false,
    "longname": "js/base/container.js~Container#strategy_resize_state",
    "access": "public",
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 312,
    "kind": "member",
    "name": "max_size",
    "memberof": "js/base/container.js~Container",
    "static": false,
    "longname": "js/base/container.js~Container#max_size",
    "access": "public",
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 313,
    "kind": "member",
    "name": "_state_action_index",
    "memberof": "js/base/container.js~Container",
    "static": false,
    "longname": "js/base/container.js~Container#_state_action_index",
    "access": "private",
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 314,
    "kind": "method",
    "name": "load",
    "memberof": "js/base/container.js~Container",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/container.js~Container#load",
    "access": "public",
    "description": "Load and apply a container component configuration.",
    "lineNumber": 114,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing} "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Immutable.Map",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state to load (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 315,
    "kind": "member",
    "name": "store_unsubscribe",
    "memberof": "js/base/container.js~Container",
    "static": false,
    "longname": "js/base/container.js~Container#store_unsubscribe",
    "access": "public",
    "description": null,
    "lineNumber": 136,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 333,
    "kind": "member",
    "name": "is_loaded",
    "memberof": "js/base/container.js~Container",
    "static": false,
    "longname": "js/base/container.js~Container#is_loaded",
    "access": "public",
    "description": null,
    "lineNumber": 247,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 334,
    "kind": "method",
    "name": "do_action_set_resize_max",
    "memberof": "js/base/container.js~Container",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/container.js~Container#do_action_set_resize_max",
    "access": "public",
    "description": "Set max items value for the container.",
    "lineNumber": 263,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_value",
        "description": "max items value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 335,
    "kind": "method",
    "name": "do_action_clear_items",
    "memberof": "js/base/container.js~Container",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/container.js~Container#do_action_clear_items",
    "access": "public",
    "description": "Clear container items.",
    "lineNumber": 299,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 336,
    "kind": "method",
    "name": "do_action_append",
    "memberof": "js/base/container.js~Container",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/container.js~Container#do_action_append",
    "access": "public",
    "description": "Append items to the container (an item can be a string or an array or an object or ...).",
    "lineNumber": 314,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_array",
        "description": "items array."
      },
      {
        "nullable": null,
        "types": [
          "intege"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_count",
        "description": "items count."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 337,
    "kind": "method",
    "name": "do_action_prepend",
    "memberof": "js/base/container.js~Container",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/container.js~Container#do_action_prepend",
    "access": "public",
    "description": "Prepend items to the container (an item can be a string or an array or an object or ...).",
    "lineNumber": 352,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_array",
        "description": "items array."
      },
      {
        "nullable": null,
        "types": [
          "intege"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_count",
        "description": "items count."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 338,
    "kind": "method",
    "name": "do_action_replace",
    "memberof": "js/base/container.js~Container",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/container.js~Container#do_action_replace",
    "access": "public",
    "description": "Replace items to the container (an item can be a string or an array or an object or ...).",
    "lineNumber": 393,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_array",
        "description": "items array."
      },
      {
        "nullable": null,
        "types": [
          "intege"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_count",
        "description": "items count."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 339,
    "kind": "method",
    "name": "do_action_insert_at",
    "memberof": "js/base/container.js~Container",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/container.js~Container#do_action_insert_at",
    "access": "public",
    "description": "Insert items at container position index (an item can be a string or an array or an object or ...).",
    "lineNumber": 428,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "intege"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_index",
        "description": "position index."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_array",
        "description": "items array."
      },
      {
        "nullable": null,
        "types": [
          "intege"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_count",
        "description": "items count."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 340,
    "kind": "method",
    "name": "do_action_remove_at_index",
    "memberof": "js/base/container.js~Container",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/container.js~Container#do_action_remove_at_index",
    "access": "public",
    "description": "Remove an item at given position.",
    "lineNumber": 451,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_index",
        "description": "item index."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 341,
    "kind": "method",
    "name": "do_action_remove_first",
    "memberof": "js/base/container.js~Container",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/container.js~Container#do_action_remove_first",
    "access": "public",
    "description": "Remove an item at first position.",
    "lineNumber": 465,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 342,
    "kind": "method",
    "name": "do_action_remove_last",
    "memberof": "js/base/container.js~Container",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/container.js~Container#do_action_remove_last",
    "access": "public",
    "description": "Remove an item at last position.",
    "lineNumber": 479,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_count",
        "description": "items count."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 343,
    "kind": "method",
    "name": "reduce_action",
    "memberof": "js/base/container.js~Container",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/container.js~Container#reduce_action",
    "access": "public",
    "description": "Store actions reducer pure function.",
    "lineNumber": 494,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Immutable.Map} - new state"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Immutable.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_previous_state",
        "description": "previous state."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_action",
        "description": "store action: { type:'', component:'', ...}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Immutable.Map"
      ],
      "spread": false,
      "description": "new state"
    }
  },
  {
    "__docId__": 346,
    "kind": "method",
    "name": "handle_state_change",
    "memberof": "js/base/container.js~Container",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/container.js~Container#handle_state_change",
    "access": "public",
    "description": "Handle component state changes.",
    "lineNumber": 649,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Immutable.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_previous_state",
        "description": "previous state map."
      },
      {
        "nullable": null,
        "types": [
          "Immutable.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_new_state",
        "description": "new state map."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 347,
    "kind": "method",
    "name": "handle_state_change_action",
    "memberof": "js/base/container.js~Container",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/container.js~Container#handle_state_change_action",
    "access": "public",
    "description": "Handle component state changes action.",
    "lineNumber": 680,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_action",
        "description": "state change action"
      },
      {
        "nullable": null,
        "types": [
          "Immutable.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_previous_state",
        "description": "previous state map."
      },
      {
        "nullable": null,
        "types": [
          "Immutable.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_new_state",
        "description": "new state map."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 348,
    "kind": "method",
    "name": "ui_items_get_count",
    "memberof": "js/base/container.js~Container",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/container.js~Container#ui_items_get_count",
    "access": "public",
    "description": "Get container items count.",
    "lineNumber": 747,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{integer}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "integer"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 349,
    "kind": "method",
    "name": "ui_items_clear",
    "memberof": "js/base/container.js~Container",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/container.js~Container#ui_items_clear",
    "access": "public",
    "description": "Erase container items.",
    "lineNumber": 760,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 350,
    "kind": "method",
    "name": "ui_items_append",
    "memberof": "js/base/container.js~Container",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/container.js~Container#ui_items_append",
    "access": "public",
    "description": "Append items to the container.",
    "lineNumber": 781,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_array",
        "description": "items array."
      },
      {
        "nullable": null,
        "types": [
          "intege"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_count",
        "description": "items count."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 351,
    "kind": "method",
    "name": "ui_items_prepend",
    "memberof": "js/base/container.js~Container",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/container.js~Container#ui_items_prepend",
    "access": "public",
    "description": "Prepend items to the container.",
    "lineNumber": 802,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_array",
        "description": "items array."
      },
      {
        "nullable": null,
        "types": [
          "intege"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_count",
        "description": "items count."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 352,
    "kind": "method",
    "name": "ui_items_replace",
    "memberof": "js/base/container.js~Container",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/container.js~Container#ui_items_replace",
    "access": "public",
    "description": "Replace container items.",
    "lineNumber": 823,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_array",
        "description": "items array."
      },
      {
        "nullable": null,
        "types": [
          "intege"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_count",
        "description": "items count."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 353,
    "kind": "method",
    "name": "ui_items_insert_at",
    "memberof": "js/base/container.js~Container",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/container.js~Container#ui_items_insert_at",
    "access": "public",
    "description": "Insert items at container position index.",
    "lineNumber": 845,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "intege"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_index",
        "description": "position index."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_array",
        "description": "items array."
      },
      {
        "nullable": null,
        "types": [
          "intege"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_count",
        "description": "items count."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 354,
    "kind": "method",
    "name": "ui_items_remove_at_index",
    "memberof": "js/base/container.js~Container",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/container.js~Container#ui_items_remove_at_index",
    "access": "public",
    "description": "Remove an item at given position.",
    "lineNumber": 862,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_index",
        "description": "item index."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 355,
    "kind": "method",
    "name": "ui_items_remove_first",
    "memberof": "js/base/container.js~Container",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/container.js~Container#ui_items_remove_first",
    "access": "public",
    "description": "Remove a item at first position.",
    "lineNumber": 876,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 356,
    "kind": "method",
    "name": "ui_items_remove_last",
    "memberof": "js/base/container.js~Container",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/container.js~Container#ui_items_remove_last",
    "access": "public",
    "description": "Remove an item at last position.",
    "lineNumber": 888,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 357,
    "kind": "method",
    "name": "ui_items_hide_item",
    "memberof": "js/base/container.js~Container",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/container.js~Container#ui_items_hide_item",
    "access": "public",
    "description": "Hide an element.",
    "lineNumber": 902,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_element",
        "description": "DOM element to hide."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 358,
    "kind": "method",
    "name": "ui_items_show_item",
    "memberof": "js/base/container.js~Container",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/container.js~Container#ui_items_show_item",
    "access": "public",
    "description": "Show an element.",
    "lineNumber": 916,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_element",
        "description": "DOM element to hide."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 359,
    "kind": "method",
    "name": "ui_items_filter",
    "memberof": "js/base/container.js~Container",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/container.js~Container#ui_items_filter",
    "access": "public",
    "description": "Toggle items visibility belonging a given filter.",
    "lineNumber": 931,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_selector",
        "description": "items selector."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_filter_text",
        "description": "filter string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 360,
    "kind": "method",
    "name": "show",
    "memberof": "js/base/container.js~Container",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/container.js~Container#show",
    "access": "public",
    "description": "Show component.",
    "lineNumber": 962,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 361,
    "kind": "method",
    "name": "hide",
    "memberof": "js/base/container.js~Container",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/container.js~Container#hide",
    "access": "public",
    "description": "Hide component.",
    "lineNumber": 981,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 362,
    "kind": "file",
    "name": "js/base/feature.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from 'devapt-core-common/dist/js/utils/types'\r\n\r\n// BROWSER IMPORTS\r\nimport NameTypeSettingsLoggable from './name_type_settings_loggable'\r\n\r\n\r\nconst context = 'browser/base/feature'\r\n\r\n\r\n\r\n/**\r\n * @file Base stateless Feature class.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n * \tAPI\r\n * \t\t->get_name():string - get command name (INHERITED).\r\n * \t\t->get_type():string - get command type (INHERITED).\r\n * \t\t->get_settings():object - get instance type (INHERITED).\r\n * \t\t->is_valid():boolean - check if instance is valid (settings...) (INHERITED, SUBCLASSED).\r\n * \r\n * \t\t->get_author():string|object - get author id or record.\r\n * \t\t->get_license():string - get license name.\r\n * \t\t->get_about():string|object - get about doc content.\r\n * \t\t->get_help():string|object - get about doc content.\r\n * \t\t->get_refdoc():string|object - get about doc content.\r\n * \r\n */\r\nexport default class Feature extends NameTypeSettingsLoggable\r\n{\r\n\t/**\r\n\t * Creates an instance of Feature, do not use directly but in a sub class.\r\n\t * \r\n\t * A Feature configuration is a simple object with this common attributes:\r\n\t * \t\t- name:string  - unique name.\r\n\t * \t\t- type:string  - type of commnand from command factory known types list (example: display).\r\n\t * \t\t- about:string - string or doc object: { 'topicA':{ 'topicA1':'...' }, 'topicB':'...' }.\r\n\t * \t\t- help:string  - string or doc object: { 'topicA':{ 'topicA1':'...' }, 'topicB':'...' }.\r\n\t * \t\t- refdoc:string  - string or doc object: { 'topicA':{ 'topicA1':'...' }, 'topicB':'...' }.\r\n\t * \r\n\t * @param {object}           arg_runtime     - runtime.\r\n\t * @param {object}           arg_settings    - instance settings.\r\n\t * @param {string|undefined} arg_log_context - context of traces of this instance (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_settings, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_runtime, arg_settings, log_context)\r\n\t\t\r\n\t\tthis.is_feature = true\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get Author.\r\n\t * \r\n\t * @returns {string|object} - author id string or author record object\r\n\t */\r\n\tget_author()\r\n\t{\r\n\t\treturn ( T.isObject(this._settings) && ( T.isString(this._settings.author) || T.isObject(this._settings.author) ) ) ? this._settings.author : undefined\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get License name.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_license()\r\n\t{\r\n\t\treturn ( T.isObject(this._settings) && T.isString(this._settings.license) ) ? this._settings.license : undefined\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get About content.\r\n\t * \r\n\t * @returns {string|object}\r\n\t */\r\n\tget_about()\r\n\t{\r\n\t\treturn ( T.isObject(this._settings) && ( T.isString(this._settings.about) || T.isObject(this._settings.about) ) ) ? this._settings.about : undefined\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get Help content.\r\n\t * \r\n\t * @returns {string|object}\r\n\t */\r\n\tget_help()\r\n\t{\r\n\t\treturn ( T.isObject(this._settings) && ( T.isString(this._settings.help) || T.isObject(this._settings.help) ) ) ? this._settings.help : undefined\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get Referential Docs content.\r\n\t * \r\n\t * @returns {string|object}\r\n\t */\r\n\tget_refdoc()\r\n\t{\r\n\t\treturn ( T.isObject(this._settings) && T.isString(this._settings.refdoc) ) ? this._settings.refdoc : undefined\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Check if instance settings is valid.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tis_valid()\r\n\t{\r\n\t\treturn this.get_name() != 'no name'\r\n\t\t\t&& this.get_type() != 'no type'\r\n\t\t\t&& this.get_about()\r\n\t\t\t&& this.get_help()\r\n\t\t\t&& this.get_refdoc()\r\n\t}\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/base/feature.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 363,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/feature.js",
    "static": true,
    "longname": "js/base/feature.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/base/feature.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 364,
    "kind": "class",
    "name": "Feature",
    "memberof": "js/base/feature.js",
    "static": true,
    "longname": "js/base/feature.js~Feature",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/base/feature.js",
    "importStyle": "Feature",
    "description": "",
    "examples": [
      "\tAPI\n\t\t->get_name():string - get command name (INHERITED).\n\t\t->get_type():string - get command type (INHERITED).\n\t\t->get_settings():object - get instance type (INHERITED).\n\t\t->is_valid():boolean - check if instance is valid (settings...) (INHERITED, SUBCLASSED).\n\n\t\t->get_author():string|object - get author id or record.\n\t\t->get_license():string - get license name.\n\t\t->get_about():string|object - get about doc content.\n\t\t->get_help():string|object - get about doc content.\n\t\t->get_refdoc():string|object - get about doc content."
    ],
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Base stateless Feature class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable"
    ]
  },
  {
    "__docId__": 365,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/feature.js~Feature",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/feature.js~Feature#constructor",
    "access": "public",
    "description": "Creates an instance of Feature, do not use directly but in a sub class.\n\nA Feature configuration is a simple object with this common attributes:\n\t\t- name:string  - unique name.\n\t\t- type:string  - type of commnand from command factory known types list (example: display).\n\t\t- about:string - string or doc object: { 'topicA':{ 'topicA1':'...' }, 'topicB':'...' }.\n\t\t- help:string  - string or doc object: { 'topicA':{ 'topicA1':'...' }, 'topicB':'...' }.\n\t\t- refdoc:string  - string or doc object: { 'topicA':{ 'topicA1':'...' }, 'topicB':'...' }.",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "runtime."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "instance settings."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "context of traces of this instance (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 366,
    "kind": "member",
    "name": "is_feature",
    "memberof": "js/base/feature.js~Feature",
    "static": false,
    "longname": "js/base/feature.js~Feature#is_feature",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 367,
    "kind": "method",
    "name": "get_author",
    "memberof": "js/base/feature.js~Feature",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/feature.js~Feature#get_author",
    "access": "public",
    "description": "Get Author.",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|object} - author id string or author record object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "object"
      ],
      "spread": false,
      "description": "author id string or author record object"
    },
    "params": []
  },
  {
    "__docId__": 368,
    "kind": "method",
    "name": "get_license",
    "memberof": "js/base/feature.js~Feature",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/feature.js~Feature#get_license",
    "access": "public",
    "description": "Get License name.",
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 369,
    "kind": "method",
    "name": "get_about",
    "memberof": "js/base/feature.js~Feature",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/feature.js~Feature#get_about",
    "access": "public",
    "description": "Get About content.",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|object}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 370,
    "kind": "method",
    "name": "get_help",
    "memberof": "js/base/feature.js~Feature",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/feature.js~Feature#get_help",
    "access": "public",
    "description": "Get Help content.",
    "lineNumber": 104,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|object}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 371,
    "kind": "method",
    "name": "get_refdoc",
    "memberof": "js/base/feature.js~Feature",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/feature.js~Feature#get_refdoc",
    "access": "public",
    "description": "Get Referential Docs content.",
    "lineNumber": 116,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|object}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 372,
    "kind": "method",
    "name": "is_valid",
    "memberof": "js/base/feature.js~Feature",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/feature.js~Feature#is_valid",
    "access": "public",
    "description": "Check if instance settings is valid.",
    "lineNumber": 128,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 373,
    "kind": "file",
    "name": "js/base/layout/layout.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\n\r\n// BROWSER IMPORTS\r\nimport NameTypeSettingsLoggable from '../name_type_settings_loggable'\r\n\r\n\r\nconst context = 'browser/base/layout/layout'\r\n\r\n\r\n\r\n/**\r\n * @file Base stateless Layout class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class Layout extends NameTypeSettingsLoggable\r\n{\r\n\t/**\r\n\t * Creates an instance of Layout, do not use directly but in a sub class.\r\n\t * @extends Loggable\r\n\t * @abstract\r\n\t * \r\n\t * A Layout configuration is a simple object with this common attributes:\r\n\t * \t\t- name:string - command unique name.\r\n\t * \t\t- type:string - type of commnand from command factory known types list (example: display).\r\n\t * \r\n\t * \tAPI\r\n\t * \t\t->get_name():string - get command name (INHERITED).\r\n\t * \t\t->get_type():string - get command type (INHERITED).\r\n\t * \t\t->get_settings():object - get instance type (INHERITED).\r\n\t * \t\t->is_valid():boolean - check if instance is valid (settings...) (INHERITED).\r\n\t * \r\n\t * \t\t->render_page_content():Promise - render page content components.\r\n\t * \t\t->clear_page_content():Promise - clear page content components.\r\n\t * \r\n\t * @param {object}           arg_runtime     - runtime.\r\n\t * @param {object}           arg_settings    - instance settings.\r\n\t * @param {string|undefined} arg_log_context - context of traces of this instance (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_settings, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_runtime, arg_settings, log_context)\r\n\t\t\r\n\t\tthis.is_layout = true\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Render page content components.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\trender_page_content()\r\n\t{\r\n\t\tthrow context + ':render_page_content:not yet implemented'\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Clear page content components.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tclear_page_content()\r\n\t{\r\n\t\tthrow context + ':clear_page_content:not yet implemented'\r\n\t}\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/base/layout/layout.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 374,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/layout/layout.js",
    "static": true,
    "longname": "js/base/layout/layout.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/base/layout/layout.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 375,
    "kind": "class",
    "name": "Layout",
    "memberof": "js/base/layout/layout.js",
    "static": true,
    "longname": "js/base/layout/layout.js~Layout",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/base/layout/layout.js",
    "importStyle": "Layout",
    "description": "",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Base stateless Layout class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable"
    ]
  },
  {
    "__docId__": 376,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/layout/layout.js~Layout",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/layout/layout.js~Layout#constructor",
    "access": "public",
    "description": "Creates an instance of Layout, do not use directly but in a sub class.",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "Loggable"
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "runtime."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "instance settings."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "context of traces of this instance (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true
  },
  {
    "__docId__": 377,
    "kind": "member",
    "name": "is_layout",
    "memberof": "js/base/layout/layout.js~Layout",
    "static": false,
    "longname": "js/base/layout/layout.js~Layout#is_layout",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 378,
    "kind": "method",
    "name": "render_page_content",
    "memberof": "js/base/layout/layout.js~Layout",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/layout/layout.js~Layout#render_page_content",
    "access": "public",
    "description": "Render page content components.",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 379,
    "kind": "method",
    "name": "clear_page_content",
    "memberof": "js/base/layout/layout.js~Layout",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/layout/layout.js~Layout#clear_page_content",
    "access": "public",
    "description": "Clear page content components.",
    "lineNumber": 74,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 380,
    "kind": "file",
    "name": "js/base/layout/layout_simple.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\nimport _ from 'lodash'\r\nimport vdom_as_json from 'vdom-as-json'\r\nconst vdom_from_json = vdom_as_json.fromJson\r\nimport VNode from 'virtual-dom/vnode/vnode'\r\n\r\n// COMMON IMPORTS\r\nimport T from 'devapt-core-common/dist/js/utils/types'\r\n\r\n// BROWSER IMPORTS\r\nimport Layout from './layout'\r\n\r\n\r\nconst context = 'browser/base/layout/layout_simple'\r\n\r\n\r\n\r\n/**\r\n * @file LayoutSimple class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class LayoutSimple extends Layout\r\n{\r\n\t/**\r\n\t * Creates an instance of LayoutSimple:a simple layout with a content element which contains a menubar, a breadcrumbs, a separator and a main view.\r\n\t * @extends Layout\r\n\t * \r\n\t * A Layout configuration is a simple object with this common attributes:\r\n\t * \t\t- name:string - command unique name.\r\n\t * \t\t- type:string - type of commnand from command factory known types list (example: display).\r\n\t * \r\n\t * \tAPI\r\n\t * \t\t->get_name():string - get command name (INHERITED).\r\n\t * \t\t->get_type():string - get command type (INHERITED).\r\n\t * \t\t->get_settings():object - get instance type (INHERITED).\r\n\t * \t\t->is_valid():boolean - check if instance is valid (settings...) (INHERITED).\r\n\t * \r\n\t * \t\t->switch(arg_previous_component, arg_target_component_name, arg_is_menubar, arg_is_breadcrumbs):Promise({...}) - Switch previously displayed component with target component.\r\n\t * \t\t->render_page_content():Promise - render page content components.\r\n\t * \t\t->process_rendering_result(arg_rendering_result):array - Process a RenderingResult instance.\r\n\t * \r\n\t * \t\t->get_content_element():Element - Get page content element.\r\n\t * \t\t->init_content_element():Element - Init page content element.\r\n\t * \t\t->clear_page_content(do_not_hide_components):Promise - clear page content components.\r\n\t * \r\n\t * \t\t->render_page_content_vnode(arg_vnode, arg_rendering_result, arg_credentials):array - Render page content with a global VNode.\r\n\t * \r\n\t * @param {object}           arg_runtime     - runtime.\r\n\t * @param {object}           arg_settings    - instance settings.\r\n\t * @param {string|undefined} arg_log_context - context of traces of this instance (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_settings, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_runtime, arg_settings, log_context)\r\n\t\t\r\n\t\tthis.is_simple_layout = true\r\n\r\n\t\tthis._content_element = undefined\r\n\t\tthis._content_id = 'content'\r\n\r\n\t\t// this.enable_trace()\r\n\t\tthis.disable_trace()\r\n\t\tthis.update_trace_enabled()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Switch previously displayed component with target component.\r\n\t * \r\n\t * @param {Component} arg_previous_component    - previous component instance.\r\n\t * @param {string}    arg_target_component_name - target component name.\r\n\t * @param {boolean}   arg_is_menubar            - target component is a menubar?\r\n\t * @param {boolean}   arg_is_breadcrumbs        - target component is a breadcrumbs?\r\n\t * \r\n\t * @returns {Promise} - Promise of { switch:false, component:arg_previous_component }\r\n\t */\r\n\tswitch(arg_previous_component, arg_target_component_name, arg_is_menubar, arg_is_breadcrumbs)\r\n\t{\r\n\t\tthis.enter_group('switch: for ' + (arg_target_component_name ? arg_target_component_name : 'bad target name') )\r\n\r\n\t\tif ( ! T.isString(arg_target_component_name) )\r\n\t\t{\r\n\t\t\tthis.leave_group('switch:error bad target name for ' + (arg_target_component_name ? arg_target_component_name.toString().splice(0, 20) : '') )\r\n\t\t\treturn Promise.reject(context + ':switch:bad target name string')\r\n\t\t}\r\n\r\n\t\tif (arg_previous_component && arg_previous_component.get_name() == arg_target_component_name )\r\n\t\t{\r\n\t\t\tthis.debug('switch:previous component exists and has same name as target component name=' + arg_target_component_name)\r\n\r\n\t\t\targ_previous_component.show()\r\n\t\t\targ_previous_component.update()\r\n\t\t\targ_previous_component.is_menubar     = arg_is_menubar\r\n\t\t\targ_previous_component.is_breadcrumbs = arg_is_breadcrumbs\r\n\r\n\t\t\t\r\n\t\t\tthis.leave_group('switch:async for ' + (arg_target_component_name ? arg_target_component_name : 'bad target name') )\r\n\t\t\treturn Promise.resolve( { switch:false, component:arg_previous_component } )\r\n\t\t}\r\n\r\n\t\tlet previous_parent = undefined\r\n\t\tif (arg_previous_component && arg_previous_component.get_name() != arg_target_component_name )\r\n\t\t{\r\n\t\t\tthis.debug('switch:previous component [' + arg_previous_component.get_name() + '] exists and has a different name as target component name=' + arg_target_component_name)\r\n\t\t\targ_previous_component.hide()\r\n\t\t\tprevious_parent = arg_previous_component.get_dom_parent()\r\n\t\t}\r\n\r\n\t\tif ( ! this._ui.has(arg_target_component_name) )\r\n\t\t{\r\n\t\t\tthis.debug('switch:target component doesn t exists for name=' +arg_target_component_name)\r\n\r\n\t\t\t// CREATE ELEMENT\r\n\t\t\t// const dom_id = component.get_dom_id()\r\n\t\t\t// let element = document.getElementById(dom_id)\r\n\t\t\t// if (! element)\r\n\t\t\t// {\r\n\t\t\t// \tthis.debug('create:component dom element is created as a div:' + dom_id)\r\n\t\t\t// \telement = document.createElement('div')\r\n\t\t\t// \telement.setAttribute('id', dom_id)\r\n\t\t\t// \tconst content_element = this._runtime.ui()._ui_layout.get_content_element()\r\n\t\t\t// \tif (! content_element)\r\n\t\t\t// \t{\r\n\t\t\t// \t\tconst msg = 'create:no content element'\r\n\t\t\t// \t\tthis.error(msg)\r\n\t\t\t// \t\tthis.leave_group(msg)\r\n\t\t\t// \t\treturn { component:undefined, promise:Promise.reject(context + msg) }\r\n\t\t\t// \t}\r\n\t\t\t// \tcontent_element.appendChild(element)\r\n\t\t\t// }\r\n\r\n\r\n\t\t\tconst target_component_promise = this._ui.create(arg_target_component_name)\r\n\t\t\t.then(\r\n\t\t\t\t(component)=>{\r\n\t\t\t\t\tthis.debug('switch:target component is created for ' + arg_target_component_name)\r\n\r\n\t\t\t\t\t// console.log(context + ':render_page_content:%s:with view=', component.get_name(), component)\r\n\r\n\t\t\t\t\tthis._ui.page.content = component\r\n\t\t\t\t\tthis.is_menubar     = false\r\n\t\t\t\t\tthis.is_breadcrumbs = false\r\n\r\n\t\t\t\t\treturn component.render().then(()=>{return component})\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then(\r\n\t\t\t\t(component)=>{\r\n\t\t\t\t\tthis.debug('switch:target component is rendered for ' + arg_target_component_name)\r\n\r\n\t\t\t\t\tcomponent.set_dom_parent_of(arg_previous_component)\r\n\t\t\t\t\tcomponent.show()\r\n\t\t\t\t\tcomponent.update()\r\n\t\t\t\t\tcomponent.is_menubar     = arg_is_menubar\r\n\t\t\t\t\tcomponent.is_breadcrumbs = arg_is_breadcrumbs\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn component\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then(\r\n\t\t\t\t(component)=>{\r\n\t\t\t\t\tthis.debug('switch:target component is shown and updated for ' + arg_target_component_name)\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn { switch:true, component:component }\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.catch(\r\n\t\t\t\t(reason)=>{\r\n\t\t\t\t\tthis.error('switch:an error occures:' + reason)\r\n\t\t\t\t}\r\n\t\t\t)\r\n\r\n\t\t\tthis.leave_group('switch:async for ' + (arg_target_component_name ? arg_target_component_name : 'bad target name') )\r\n\t\t\treturn target_component_promise\r\n\t\t}\r\n\r\n\t\tthis.debug('switch:target component exists for ' + arg_target_component_name)\r\n\t\tconst component = this._ui.get(arg_target_component_name)\r\n\t\tif (! component.has_dom_parent(previous_parent) )\r\n\t\t{\r\n\t\t\tthis.debug('switch:target component [' + arg_target_component_name + ']:set dom parent')\r\n\t\t\tcomponent.set_dom_parent(previous_parent)\r\n\t\t}\r\n\t\tcomponent.show()\r\n\t\tcomponent.update()\r\n\t\tcomponent.is_menubar     = arg_is_menubar\r\n\t\tcomponent.is_breadcrumbs = arg_is_breadcrumbs\r\n\r\n\t\treturn Promise.resolve( { switch:true, component:component } )\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Render page content with components names.\r\n\t * \r\n\t * @param {object} arg_components - components to display: { view:'', menubar:'', breadcrumbs:'' }\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\trender_page_content(arg_components)\r\n\t{\r\n\t\tthis.enter_group('render_page_content')\r\n\r\n\t\tif (! T.isObject(arg_components) )\r\n\t\t{\r\n\t\t\treturn Promise.reject(context + ':render_page_content:bad components object')\r\n\t\t}\r\n\r\n\t\tconst separator_name   = 'separator'\r\n\t\tconst middleware       = T.isString(arg_components.middleware)       ? arg_components.middleware : undefined\r\n\t\tconst route            = T.isString(arg_components.route)            ? arg_components.route : undefined\r\n\t\tlet view_name          = T.isString(arg_components.view)             ? arg_components.view : undefined\r\n\t\tlet menubar_name       = T.isString(arg_components.menubar)          ? arg_components.menubar : undefined\r\n\t\tlet breadcrumbs_name   = T.isString(arg_components.breadcrumbs)      ? arg_components.breadcrumbs : undefined\r\n\t\tconst rendering_result = T.isObject(arg_components.rendering_result) ? arg_components.rendering_result : undefined\r\n\r\n\t\tthis.debug('render_page_content:middleware:',       middleware)\r\n\t\tthis.debug('render_page_content:route:',            route)\r\n\t\tthis.debug('render_page_content:view_name:',        view_name)\r\n\t\tthis.debug('render_page_content:menubar_name:',     menubar_name)\r\n\t\tthis.debug('render_page_content:breadcrumbs_name:', breadcrumbs_name)\r\n\t\tthis.debug('render_page_content:rendering_result:', rendering_result && rendering_result.settings ? rendering_result.settings.name : '')\r\n\r\n\t\tlet promise = Promise.resolve()\r\n\t\t\r\n\r\n\t\t// GET CONTENT STATE ITEMS\r\n\t\tconst body_contents_path = ['views', 'content', 'state', 'body_contents']\r\n\t\tlet content_state_items = this.get_state_store().get_state().getIn(body_contents_path)\r\n\r\n\t\tcontent_state_items = content_state_items ? content_state_items.toJS() : []\r\n\t\tthis.debug('render_page_content:content_state_items', content_state_items)\r\n\r\n\t\tif (content_state_items.length > 0)\r\n\t\t{\r\n\t\t\tif ( T.isString(menubar_name) && content_state_items[0] != menubar_name)\r\n\t\t\t{\r\n\t\t\t\tcontent_state_items[0] = menubar_name\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (content_state_items.length > 1)\r\n\t\t{\r\n\t\t\tif ( T.isString(separator_name) && content_state_items[1] != separator_name)\r\n\t\t\t{\r\n\t\t\t\tcontent_state_items[1] = separator_name\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (content_state_items.length > 2)\r\n\t\t{\r\n\t\t\tif ( T.isString(view_name) && content_state_items[2] != view_name)\r\n\t\t\t{\r\n\t\t\t\tcontent_state_items[2] = view_name\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// GET CONTENT ELEMENT\r\n\t\tconst content_element = this.get_content_element()\r\n\t\tif (! content_element)\r\n\t\t{\r\n\t\t\tthis.error('render_page_content:no content element')\r\n\t\t\tthis.leave_group('render_page_content:error:no content element')\r\n\t\t\treturn Promise.reject('render_page_content:no content element')\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t// INIT CONTENT ELEMENTS\r\n\t\tif (! content_state_items)\r\n\t\t{\r\n\t\t\tthis.error('render_page_content:error:no content state item')\r\n\t\t\tthis.leave_group('render_page_content:error:no content state item')\r\n\t\t\treturn Promise.reject('render_page_content:no content state items')\r\n\t\t}\r\n\t\t_.forEach(content_state_items,\r\n\t\t\t(item)=>{\r\n\t\t\t\tlet element = document.getElementById(item)\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.debug('render_page_content:content item exists:' + item)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tthis.debug('render_page_content:content item is created as a div:' + item)\r\n\t\t\t\telement = document.createElement('div')\r\n\t\t\t\telement.setAttribute('id', item)\r\n\t\t\t\tcontent_element.appendChild(element)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\t// REQUEST MIDDLEWARE\r\n\t\tif(middleware)\r\n\t\t{\r\n\t\t\tthis.debug('render_page_content:request middleware:async')\r\n\r\n\t\t\tpromise = promise\r\n\t\t\t.then(\r\n\t\t\t\t()=>this._ui.request_middleware(middleware, route)\r\n\t\t\t)\r\n\t\t\t.then(\r\n\t\t\t\t(rendering_result)=>{\r\n\t\t\t\t\tthis.debug('render_page_content:request middleware:rendering result')\r\n\r\n\t\t\t\t\tconst components = this.process_rendering_result(rendering_result)\r\n\t\t\t\t\treturn components\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\t// PROCESS RENDERING RESULT\r\n\t\tif (rendering_result)\r\n\t\t{\r\n\t\t\tthis.debug('render_page_content:process rendering result:async')\r\n\r\n\t\t\tpromise = promise\r\n\t\t\t.then(\r\n\t\t\t\t()=>{\r\n\t\t\t\t\tconst components = this.process_rendering_result(rendering_result)\r\n\t\t\t\t\treturn components\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t\t\r\n\t\t// PROCESS COMPONENTS\r\n\t\tpromise = promise.then(\r\n\t\t\t(components)=>{\r\n\t\t\t\tthis.debug('render_page_content:process components:async')\r\n\r\n\t\t\t\t// SEARCH VIEW NAME, MENUBAR NAME AND BREADCRUMBS NAME INSIDE COMPONENTS LIST\r\n\t\t\t\t// console.log(context + 'render_page_content:process components:components=', components)\r\n\t\t\t\tcomponents = T.isArray(components) ? components : []\r\n\t\t\t\t_.forEach(components,\r\n\t\t\t\t\t(component)=>{\r\n\t\t\t\t\t\tconst classes = component.get_dom_element().className\r\n\r\n\t\t\t\t\t\tthis.debug('render_page_content:search components:component=' + component.get_name())\r\n\t\t\t\t\t\tthis.debug('render_page_content:search components:component.is_menubar=' + component.is_menubar)\r\n\t\t\t\t\t\tthis.debug('render_page_content:search components:component.is_breadcrumbs=' + component.is_breadcrumbs)\r\n\t\t\t\t\t\tthis.debug('render_page_content:search components:component.is_view=' + component.is_view)\r\n\t\t\t\t\t\tthis.debug('render_page_content:search components:component.classes=' + classes)\r\n\t\t\t\t\t\tthis.debug('render_page_content:search components:component.has menubar class=' + (classes.search('devapt-kindof-menubar') > -1))\r\n\t\t\t\t\t\tthis.debug('render_page_content:search components:component.has breadcrumbs class=' + (classes.search('devapt-kindof-breadcrumbs') > -1))\r\n\r\n\t\t\t\t\t\tif (! T.isString(menubar_name) && (component.is_menubar || classes.search('devapt-kindof-menubar') > -1) )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tmenubar_name = component.get_name()\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (! T.isString(breadcrumbs_name) && (component.is_breadcrumbs || classes.search('devapt-kindof-breadcrumbs') > -1) )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tbreadcrumbs_name = component.get_name()\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (! T.isString(view_name) && component.get_name() != separator_name)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tview_name = component.get_name()\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\r\n\t\t\t\tthis.debug('render_page_content:view_name:',        view_name)\r\n\t\t\t\tthis.debug('render_page_content:menubar_name:',     menubar_name)\r\n\t\t\t\tthis.debug('render_page_content:breadcrumbs_name:', breadcrumbs_name)\r\n\r\n\t\t\t\tlet promises = []\r\n\r\n\t\t\t\tif( T.isString(view_name) )\r\n\t\t\t\t{\r\n\t\t\t\t\tconst content_promise = this.switch(this._ui.page.content, view_name, false, false)\r\n\t\t\t\t\t.then(\r\n\t\t\t\t\t\t(component_switch)=>{\r\n\t\t\t\t\t\t\tthis._ui.page.content = component_switch.component\r\n\t\t\t\t\t\t\treturn component_switch\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t\tpromises.push(content_promise)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( T.isString(menubar_name) )\r\n\t\t\t\t{\r\n\t\t\t\t\tconst menubar_promise = this.switch(this._ui.page.menubar, menubar_name, true, false)\r\n\t\t\t\t\t.then(\r\n\t\t\t\t\t\t(component_switch)=>{\r\n\t\t\t\t\t\t\tthis._ui.page.menubar = component_switch.component\r\n\t\t\t\t\t\t\treturn component_switch\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t\tpromises.push(menubar_promise)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( T.isString(breadcrumbs_name) )\r\n\t\t\t\t{\r\n\t\t\t\t\tconst  breadcrumbs_promise = this.switch(this._ui.page. breadcrumbs, breadcrumbs_name, false, true)\r\n\t\t\t\t\t.then(\r\n\t\t\t\t\t\t(component_switch)=>{\r\n\t\t\t\t\t\t\tthis._ui.page. breadcrumbs = component_switch.component\r\n\t\t\t\t\t\t\treturn component_switch\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t\tpromises.push( breadcrumbs_promise)\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn Promise.all(promises)\r\n\t\t\t}\r\n\t\t)\r\n\t\t.then(\r\n\t\t\t(components_switchs)=>{\r\n\t\t\t\t\r\n\t\t\t\t// UPDATE PAGE CONTENT BODY STATE\r\n\t\t\t\tconst components_names = []\r\n\t\t\t\t_.forEach(components_switchs,\r\n\t\t\t\t\t(component_switch)=>{\r\n\t\t\t\t\t\tconst component = component_switch.component\r\n\t\t\t\t\t\t// const should_switch = component_switch.switch\r\n\t\t\t\t\t\tconst name = component.get_name()\r\n\r\n\t\t\t\t\t\tcomponents_names.push(name)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\r\n\t\t\t\tconst action = { type:'SET_PAGE_CONTENT', resource:'content', content_body:components_names }\r\n\t\t\t\tthis.get_state_store().dispatch(action)\r\n\r\n\t\t\t\t// EXECUTE BOOTSTRAP HANDLERS\r\n\t\t\t\twindow.devapt().content_rendered()\r\n\t\t\t}\r\n\t\t)\r\n\t\t.catch(\r\n\t\t\t(reason)=>{\r\n\t\t\t\treturn Promise.reject(context + ':render_page_content:' + reason)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tthis.leave_group('render_page_content:async')\r\n\t\treturn promise\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Process a RenderingResult instance.\r\n\t * \r\n\t * @param {RenderingResult} arg_rendering_result - rendering result.\r\n\t * \r\n\t * @param {array} - rendered components.\r\n\t */\r\n\tprocess_rendering_result(arg_rendering_result)\r\n\t{\r\n\t\tthis.enter_group('process_rendering_result')\r\n\r\n\t\t// DEBUG\r\n\t\t// console.log(context + ':process_rendering_result:arg_rendering_result', arg_rendering_result)\r\n\t\t// console.log(context + ':process_rendering_result:arg_rendering_result.vtrees', arg_rendering_result.vtrees)\r\n\r\n\t\tconst vnodes = arg_rendering_result.vtrees\r\n\t\tthis.debug('process_rendering_result:rendering_result has vnodes count=' + _.size(vnodes))\r\n\r\n\t\tlet components = []\r\n\r\n\t\t_.forEach(vnodes,\r\n\t\t\t(vnode_json, id)=>{\r\n\t\t\t\tthis.debug('process_rendering_result:id:', id)\r\n\r\n\t\t\t\tconst credentials = undefined\r\n\r\n\t\t\t\t// DESERIALIZE VNODE JSON\r\n\t\t\t\tlet vnode = vdom_from_json(vnode_json)\r\n\t\t\t\tvnode.prototype = VNode.prototype\r\n\t\t\t\tthis.debug('process_rendering_result:vnode:', vnode)\r\n\t\t\t\t\r\n\t\t\t\t// PROCESS CONTENT VNODE\r\n\t\t\t\tif (id == this._content_id)\r\n\t\t\t\t{\r\n\t\t\t\t\tconst content_components = this.render_page_content_vnode(vnode, arg_rendering_result, credentials)\r\n\t\t\t\t\tcomponents = components.concat(content_components)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// PROCESS OTHER COMPONENT VNODE\r\n\t\t\t\tconst component = this._ui.get(id)\r\n\t\t\t\tif (component && component.is_component)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.debug('process_rendering_result:component found for id ' + id)\r\n\r\n\t\t\t\t\tcomponent.process_rendering_vnode(vnode)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.warn('process_rendering_result:component not found for id ' + id)\r\n\t\t\t\t\tcomponents.push(component)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tthis.leave_group('process_rendering_result:components.length=' + components.length)\r\n\t\treturn components\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get page content element.\r\n\t * \r\n\t * @returns {Element}\r\n\t */\r\n\tget_content_element()\r\n\t{\r\n\t\tif (! this._content_element)\r\n\t\t{\r\n\t\t\tthis.init_content_element()\r\n\t\t\tif (! this._content_element)\r\n\t\t\t{\r\n\t\t\t\tthis.error('get_content_element:content:no content element')\r\n\t\t\t\treturn undefined\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._content_element\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Init page content element.\r\n\t * \r\n\t * @returns {Element}\r\n\t */\r\n\tinit_content_element()\r\n\t{\r\n\t\tthis._content_element = document.getElementById(this._content_id)\r\n\t\tif (! this._content_element)\r\n\t\t{\r\n\t\t\tthis._content_element = document.createElement('div')\r\n\t\t\tthis._content_element.setAttribute('id', this._content_id)\r\n\t\t\tdocument.body.appendChild(this._content_element)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Clear page content components.\r\n\t * \r\n\t * @param {array} arg_do_not_hide_components - components names array to leave unchanged.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n/*\tclear_page_content(arg_do_not_hide_components=[])\r\n\t{\r\n\t\tthis.enter_group('clear_content')\r\n\r\n\t\t// GET CONTENT ELEMENT\r\n\t\tconst content_element = this.get_content_element()\r\n\t\tif (! content_element)\r\n\t\t{\r\n\t\t\tthis.error('clear_content:content:no content element')\r\n\t\t\tthis.leave_group('clear_content:error')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst hidden_children = {}\r\n\t\tlet child_index = 0\r\n\t\tlet children_count = content_element.children.length\r\n\t\twhile(child_index < children_count)\r\n\t\t{\r\n\t\t\tconst child_element = content_element.children[child_index]\r\n\t\t\tthis.debug('clear_content:remove: child_element', child_element)\r\n\r\n\r\n\t\t\tconst child_id = child_element.getAttribute('id')\r\n\t\t\tif (! child_id)\r\n\t\t\t{\r\n\t\t\t\tthis.debug('clear_content:child without id at position ' + child_index - 1)\r\n\t\t\t\tcontent_element.removeChild(child_element)\r\n\t\t\t\tchildren_count = content_element.children.length\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\r\n\t\t\tif ( arg_do_not_hide_components.indexOf(child_id) > -1 )\r\n\t\t\t{\r\n\t\t\t\tthis.debug('clear_content:do not hide ' + child_id)\r\n\t\t\t\t++child_index\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst child_component = this._ui.get(child_id)\r\n\t\t\tif (! child_component)\r\n\t\t\t{\r\n\t\t\t\tthis.debug('clear_content:child component not found for id  ' + child_id)\r\n\t\t\t\tcontent_element.removeChild(child_element)\r\n\t\t\t\tchildren_count = content_element.children.length\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst classes = child_component.get_dom_element().className\r\n\t\t\tif (classes.search('devapt-layout-persistent') > -1)\r\n\t\t\t{\r\n\t\t\t\tthis.debug('clear_content:peristent child component found for id  ' + child_id)\r\n\t\t\t\t++child_index\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\r\n\t\t\tthis.debug('clear_content:child component is hidden for id  ' + child_id)\r\n\t\t\thidden_children[child_id] = child_component\r\n\t\t\tchild_component.hide()\r\n\t\t\t++child_index\r\n\t\t}\r\n\r\n\t\tthis.leave_group('clear_content:children count=' + children_count + ' hidden count=' + Object.keys(hidden_children).length)\r\n\t}*/\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Render page content with a global VNode.\r\n\t * \r\n\t * @param {VNode}           arg_vnode            - rendered virtual dom node.\r\n\t * @param {RenderingResult} arg_rendering_result - rendering result associated with given vnode.\r\n\t * @param {Credentials}     arg_credentials      - user session credentials.\r\n\t * \r\n\t * @returns {array} - array of rendered Component instances.\r\n\t */\r\n\trender_page_content_vnode(arg_vnode, arg_rendering_result, arg_credentials)\r\n\t{\r\n\t\tthis.enter_group('render_page_content_vnode')\r\n\r\n\t\t// GET CONTENT ELEMENT\r\n\t\tconst content_element = this.get_content_element()\r\n\t\tif (! content_element)\r\n\t\t{\r\n\t\t\tthis.error('render_page_content_vnode:content:no content element')\r\n\t\t\tthis.leave_group('render_page_content_vnode:error')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// DEBUG\r\n\t\t// console.log(context + ':render_page_content_vnode:arg_vnode', arg_vnode)\r\n\t\t// console.log(context + ':render_page_content_vnode:arg_rendering_result', arg_rendering_result)\r\n\r\n\t\t// GET CONTENT STATE ITEMS\r\n\t\tconst body_contents_path = ['views', 'content', 'state', 'body_contents']\r\n\t\tlet content_state_items = this.get_state_store().get_state().getIn(body_contents_path)\r\n\r\n\t\tcontent_state_items = content_state_items ? content_state_items.toJS() : undefined\r\n\t\tthis.debug('render_page_content_vnode:content_state_items', content_state_items)\r\n\r\n\t\t// GET VNODE CHILDREN NAMES\r\n\t\tconst get_vnode_id_fn = (vnode)=>{\r\n\t\t\treturn vnode && vnode.properties && vnode.properties.id ? vnode.properties.id : undefined\r\n\t\t}\r\n\t\tconst vnode_children = arg_vnode.children\r\n\t\tconst vnode_children_names = vnode_children.map(get_vnode_id_fn).filter( (v)=>! T.isUndefined(v) )\r\n\t\tthis.debug('process_content_vnode:vnode_children_names', vnode_children_names)\r\n\r\n\t\t// GET ORDERED CHILDREN LIST\r\n\t\tconst ordered_children_names = vnode_children_names && vnode_children_names.length > 0 ? vnode_children_names : content_state_items\r\n\t\tthis.debug('render_page_content_vnode:ordered_children_names', ordered_children_names)\r\n\t\t\r\n\t\t// LOOP ON VNODE CHILDREN\r\n\t\tconst children_components = []\r\n\t\tconst components_names = []\r\n\t\t_.forEach(ordered_children_names,\r\n\t\t\t(child_name)=>{\r\n\t\t\t\tthis.debug('render_page_content_vnode:loop on child node:' + child_name)\r\n\r\n\t\t\t\tconst child_vnode = vnode_children.find( (vnode)=>vnode.properties.id == child_name )\r\n\t\t\t\t// console.log(context + ':process_content_vnode:child name=%s child_vnode=', child_name, child_vnode)\r\n\r\n\t\t\t\tif (! child_vnode)\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.warn(context + ':render_page_content_vnode:child name=%s bad child_vnode', child_name)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst child_id = child_name\r\n\t\t\t\tthis.debug('render_page_content_vnode:content child found for id ' + child_id)\r\n\r\n\t\t\t\t// GET CONTENT CHILD COMPONENT\r\n\t\t\t\tconst child_component = this._ui.get(child_name)\r\n\t\t\t\tif (! child_component || ! child_component.is_component)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.warn('render_page_content_vnode:bad child component for name [' + child_name + ']', child_component)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// RENDER CONTENT CHILD COMPONENT\r\n\t\t\t\tthis.debug('render_page_content_vnode:process rendering vnode for ' + child_id)\r\n\t\t\t\tchild_component.process_rendering_vnode(child_vnode, arg_rendering_result, arg_credentials)\r\n\t\t\t\t\r\n\t\t\t\t// APPEND CHILD DOM ELEMENT TO CONTENT DOM ELEMENT\r\n\t\t\t\tif ( ! child_component.has_dom_parent(content_element) )\r\n\t\t\t\t{\r\n\t\t\t\t\tlet child_element = child_component.get_dom_element()\r\n\t\t\t\t\tif (! child_element)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.error('render_page_content_vnode:no dom element for child ' + child_id)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontent_element.appendChild(child_element)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tchildren_components.push(child_component)\r\n\t\t\t\tcomponents_names.push(child_component.get_name())\r\n\t\t\t}\r\n\t\t)\r\n\r\n\r\n\t\t// UPDATE ASSETS URL\r\n\t\tthis._ui._ui_rendering.process_assets_urls_templates(arg_rendering_result.assets_urls_templates)\r\n\r\n\t\t// UPDATE HEADERS AND ASSETS\r\n\t\tthis._ui._ui_rendering.process_rendering_result_headers(arg_rendering_result.headers, arg_credentials)\r\n\t\t\r\n\t\t// PROCESS HEAD STYLES AND SCRIPTS\r\n\t\tthis._ui._ui_rendering.process_rendering_result_styles_urls (document.head, arg_rendering_result.head_styles_urls, arg_credentials)\r\n\t\tthis._ui._ui_rendering.process_rendering_result_styles_tags (document.head, arg_rendering_result.head_styles_tags, arg_credentials)\r\n\t\tthis._ui._ui_rendering.process_rendering_result_scripts_urls(document.head, arg_rendering_result.head_scripts_urls, arg_credentials)\r\n\t\tthis._ui._ui_rendering.process_rendering_result_scripts_tags(document.head, arg_rendering_result.head_scripts_tags, arg_credentials)\r\n\r\n\t\t// PROCESS BODY STYLES AND SCRIPTS\r\n\t\tthis._ui._ui_rendering.process_rendering_result_styles_urls (document.body, arg_rendering_result.body_styles_urls, arg_credentials)\r\n\t\tthis._ui._ui_rendering.process_rendering_result_styles_tags (document.body, arg_rendering_result.body_styles_tags, arg_credentials)\r\n\t\tthis._ui._ui_rendering.process_rendering_result_scripts_urls(document.body, arg_rendering_result.body_scripts_urls, arg_credentials)\r\n\t\tthis._ui._ui_rendering.process_rendering_result_scripts_tags(document.body, arg_rendering_result.body_scripts_tags, arg_credentials)\r\n\r\n\t\tthis.leave_group('render_page_content_vnode:content')\r\n\t\treturn children_components\r\n\t}\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/base/layout/layout_simple.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 381,
    "kind": "variable",
    "name": "vdom_from_json",
    "memberof": "js/base/layout/layout_simple.js",
    "static": true,
    "longname": "js/base/layout/layout_simple.js~vdom_from_json",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/base/layout/layout_simple.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 382,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/layout/layout_simple.js",
    "static": true,
    "longname": "js/base/layout/layout_simple.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/base/layout/layout_simple.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 383,
    "kind": "class",
    "name": "LayoutSimple",
    "memberof": "js/base/layout/layout_simple.js",
    "static": true,
    "longname": "js/base/layout/layout_simple.js~LayoutSimple",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/base/layout/layout_simple.js",
    "importStyle": "LayoutSimple",
    "description": "",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "LayoutSimple class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/layout/layout.js~Layout"
    ]
  },
  {
    "__docId__": 384,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/layout/layout_simple.js~LayoutSimple",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/layout/layout_simple.js~LayoutSimple#constructor",
    "access": "public",
    "description": "Creates an instance of LayoutSimple:a simple layout with a content element which contains a menubar, a breadcrumbs, a separator and a main view.",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "Layout\n\nA Layout configuration is a simple object with this common attributes:\n\t\t- name:string - command unique name.\n\t\t- type:string - type of commnand from command factory known types list (example: display).\n\n\tAPI\n\t\t->get_name():string - get command name (INHERITED).\n\t\t->get_type():string - get command type (INHERITED).\n\t\t->get_settings():object - get instance type (INHERITED).\n\t\t->is_valid():boolean - check if instance is valid (settings...) (INHERITED).\n\n\t\t->switch(arg_previous_component, arg_target_component_name, arg_is_menubar, arg_is_breadcrumbs):Promise({...}) - Switch previously displayed component with target component.\n\t\t->render_page_content():Promise - render page content components.\n\t\t->process_rendering_result(arg_rendering_result):array - Process a RenderingResult instance.\n\n\t\t->get_content_element():Element - Get page content element.\n\t\t->init_content_element():Element - Init page content element.\n\t\t->clear_page_content(do_not_hide_components):Promise - clear page content components.\n\n\t\t->render_page_content_vnode(arg_vnode, arg_rendering_result, arg_credentials):array - Render page content with a global VNode."
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "runtime."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "instance settings."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "context of traces of this instance (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 385,
    "kind": "member",
    "name": "is_simple_layout",
    "memberof": "js/base/layout/layout_simple.js~LayoutSimple",
    "static": false,
    "longname": "js/base/layout/layout_simple.js~LayoutSimple#is_simple_layout",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 386,
    "kind": "member",
    "name": "_content_element",
    "memberof": "js/base/layout/layout_simple.js~LayoutSimple",
    "static": false,
    "longname": "js/base/layout/layout_simple.js~LayoutSimple#_content_element",
    "access": "private",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 387,
    "kind": "member",
    "name": "_content_id",
    "memberof": "js/base/layout/layout_simple.js~LayoutSimple",
    "static": false,
    "longname": "js/base/layout/layout_simple.js~LayoutSimple#_content_id",
    "access": "private",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 388,
    "kind": "method",
    "name": "switch",
    "memberof": "js/base/layout/layout_simple.js~LayoutSimple",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/layout/layout_simple.js~LayoutSimple#switch",
    "access": "public",
    "description": "Switch previously displayed component with target component.",
    "lineNumber": 85,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of { switch:false, component:arg_previous_component }"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Component"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_previous_component",
        "description": "previous component instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_target_component_name",
        "description": "target component name."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_is_menubar",
        "description": "target component is a menubar?"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_is_breadcrumbs",
        "description": "target component is a breadcrumbs?"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of { switch:false, component:arg_previous_component }"
    }
  },
  {
    "__docId__": 389,
    "kind": "member",
    "name": "is_menubar",
    "memberof": "js/base/layout/layout_simple.js~LayoutSimple",
    "static": false,
    "longname": "js/base/layout/layout_simple.js~LayoutSimple#is_menubar",
    "access": "public",
    "description": null,
    "lineNumber": 149,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 390,
    "kind": "member",
    "name": "is_breadcrumbs",
    "memberof": "js/base/layout/layout_simple.js~LayoutSimple",
    "static": false,
    "longname": "js/base/layout/layout_simple.js~LayoutSimple#is_breadcrumbs",
    "access": "public",
    "description": null,
    "lineNumber": 150,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 391,
    "kind": "method",
    "name": "render_page_content",
    "memberof": "js/base/layout/layout_simple.js~LayoutSimple",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/layout/layout_simple.js~LayoutSimple#render_page_content",
    "access": "public",
    "description": "Render page content with components names.",
    "lineNumber": 209,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_components",
        "description": "components to display: { view:'', menubar:'', breadcrumbs:'' }"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 392,
    "kind": "method",
    "name": "process_rendering_result",
    "memberof": "js/base/layout/layout_simple.js~LayoutSimple",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/layout/layout_simple.js~LayoutSimple#process_rendering_result",
    "access": "public",
    "description": "Process a RenderingResult instance.",
    "lineNumber": 456,
    "params": [
      {
        "nullable": null,
        "types": [
          "RenderingResult"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_result",
        "description": "rendering result."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "-",
        "description": "rendered components."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 393,
    "kind": "method",
    "name": "get_content_element",
    "memberof": "js/base/layout/layout_simple.js~LayoutSimple",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/layout/layout_simple.js~LayoutSimple#get_content_element",
    "access": "public",
    "description": "Get page content element.",
    "lineNumber": 513,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Element}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 394,
    "kind": "method",
    "name": "init_content_element",
    "memberof": "js/base/layout/layout_simple.js~LayoutSimple",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/layout/layout_simple.js~LayoutSimple#init_content_element",
    "access": "public",
    "description": "Init page content element.",
    "lineNumber": 535,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Element}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 397,
    "kind": "method",
    "name": "render_page_content_vnode",
    "memberof": "js/base/layout/layout_simple.js~LayoutSimple",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/layout/layout_simple.js~LayoutSimple#render_page_content_vnode",
    "access": "public",
    "description": "Render page content with a global VNode.",
    "lineNumber": 630,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} - array of rendered Component instances."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "VNode"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_vnode",
        "description": "rendered virtual dom node."
      },
      {
        "nullable": null,
        "types": [
          "RenderingResult"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rendering_result",
        "description": "rendering result associated with given vnode."
      },
      {
        "nullable": null,
        "types": [
          "Credentials"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "user session credentials."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "array of rendered Component instances."
    }
  },
  {
    "__docId__": 398,
    "kind": "file",
    "name": "js/base/mixwith.js",
    "content": "// SOURCE: https://github.com/justinfagnani/mixwith.js/blob/master/mixwith.js\r\n// LICENSE APACHE 2: https://github.com/justinfagnani/mixwith.js/blob/master/LICENSE\r\n\r\n/*\r\nDefining Mixins\r\n\r\nThe Mixin decorator function wraps a plain subclass factory to add deduplication, caching and instanceof support:\r\n\r\nlet MyMixin = Mixin((superclass) => class extends superclass {\r\n\r\n  constructor(args...) {\r\n    // mixins should either 1) not define a constructor, 2) require a specific\r\n    // constructor signature, or 3) pass along all arguments.\r\n    super(...args);\r\n  }\r\n\r\n  foo() {\r\n    console.log('foo from MyMixin');\r\n    // this will call superclass.foo()\r\n    super.foo();\r\n  }\r\n\r\n});\r\nMixins defined with the mixwith.js decorators do not require any helpers to use, they still work like plain subclass factories.\r\n\r\nUsing Mixins\r\n\r\nClasses use mixins in their extends clause. Classes that use mixins can define and override constructors and methods as usual.\r\n\r\nclass MyClass extends mix(MySuperClass).with(MyMixin) {\r\n\r\n  constructor(a, b) {\r\n    super(a, b); // calls MyMixin(a, b)\r\n  }\r\n\r\n  foo() {\r\n    console.log('foo from MyClass');\r\n    super.foo(); // calls MyMixin.foo()\r\n  }\r\n\r\n}\r\n*/\r\n\r\n'use strict'\r\n\r\n// used by apply() and isApplicationOf()\r\n;\r\n\r\n(function (global, factory) {\r\n  if (typeof define === \"function\" && define.amd) {\r\n    define(['exports'], factory);\r\n  } else if (typeof exports !== \"undefined\") {\r\n    factory(exports);\r\n  } else {\r\n    var mod = {\r\n      exports: {}\r\n    };\r\n    factory(mod.exports);\r\n    global.mixwith = mod.exports;\r\n  }\r\n})(this, function (exports) {\r\n  Object.defineProperty(exports, \"__esModule\", {\r\n    value: true\r\n  });\r\n  const _appliedMixin = '__mixwith_appliedMixin';\r\n\r\n  const apply = exports.apply = (superclass, mixin) => {\r\n    let application = mixin(superclass);\r\n    application.prototype[_appliedMixin] = unwrap(mixin);\r\n    return application;\r\n  };\r\n\r\n  const isApplicationOf = exports.isApplicationOf = (proto, mixin) => proto.hasOwnProperty(_appliedMixin) && proto[_appliedMixin] === unwrap(mixin);\r\n\r\n  const hasMixin = exports.hasMixin = (o, mixin) => {\r\n    while (o != null) {\r\n      if (isApplicationOf(o, mixin)) return true;\r\n      o = Object.getPrototypeOf(o);\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const _wrappedMixin = '__mixwith_wrappedMixin';\r\n\r\n  const wrap = exports.wrap = (mixin, wrapper) => {\r\n    Object.setPrototypeOf(wrapper, mixin);\r\n    if (!mixin[_wrappedMixin]) {\r\n      mixin[_wrappedMixin] = mixin;\r\n    }\r\n    return wrapper;\r\n  };\r\n\r\n  const unwrap = exports.unwrap = wrapper => wrapper[_wrappedMixin] || wrapper;\r\n\r\n  const _cachedApplications = '__mixwith_cachedApplications';\r\n\r\n  const Cached = exports.Cached = mixin => wrap(mixin, superclass => {\r\n    // Get or create a symbol used to look up a previous application of mixin\r\n    // to the class. This symbol is unique per mixin definition, so a class will have N\r\n    // applicationRefs if it has had N mixins applied to it. A mixin will have\r\n    // exactly one _cachedApplicationRef used to store its applications.\r\n\r\n    let cachedApplications = superclass[_cachedApplications];\r\n    if (!cachedApplications) {\r\n      cachedApplications = superclass[_cachedApplications] = new Map();\r\n    }\r\n\r\n    let application = cachedApplications.get(mixin);\r\n    if (!application) {\r\n      application = mixin(superclass);\r\n      cachedApplications.set(mixin, application);\r\n    }\r\n\r\n    return application;\r\n  });\r\n\r\n  const DeDupe = exports.DeDupe = mixin => wrap(mixin, superclass => hasMixin(superclass.prototype, mixin) ? superclass : mixin(superclass));\r\n\r\n  const HasInstance = exports.HasInstance = mixin => {\r\n    if (Symbol && Symbol.hasInstance && !mixin[Symbol.hasInstance]) {\r\n      Object.defineProperty(mixin, Symbol.hasInstance, {\r\n        value(o) {\r\n          return hasMixin(o, mixin);\r\n        }\r\n      });\r\n    }\r\n    return mixin;\r\n  };\r\n\r\n  const BareMixin = exports.BareMixin = mixin => wrap(mixin, s => apply(s, mixin));\r\n\r\n  const Mixin = exports.Mixin = mixin => DeDupe(Cached(BareMixin(mixin)));\r\n\r\n  const mix = exports.mix = superclass => new MixinBuilder(superclass);\r\n\r\n  class MixinBuilder {\r\n    constructor(superclass) {\r\n      this.superclass = superclass || class {};\r\n    }\r\n\r\n    with(...mixins) {\r\n      return mixins.reduce((c, m) => m(c), this.superclass);\r\n    }\r\n\r\n  }\r\n});",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/base/mixwith.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 399,
    "kind": "file",
    "name": "js/base/name_type_settings_loggable.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T        from 'devapt-core-common/dist/js/utils/types'\r\nimport Loggable from 'devapt-core-common/dist/js/base/loggable'\r\n\r\n// BROWSER IMPORTS\r\n\r\n\r\nconst context = 'browser/base/name_type_settings_loggable'\r\n\r\n\r\n\r\n/**\r\n * @file Base stateless class with name, type and settings.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class NameTypeSettingsLoggable extends Loggable\r\n{\r\n\t/**\r\n\t * Creates an instance of NameTypeSettingsLoggable, do not use directly but in a sub class.\r\n\t * @extends Loggable\r\n\t * @abstract\r\n\t * \r\n\t * A configuration is a simple object with this common attributes:\r\n\t * \t\t- name:string - command unique name.\r\n\t * \t\t- type:string - type of commnand from command factory known types list (example: display).\r\n\t * \r\n\t * \tAPI\r\n\t * \t\t->get_name():string - get instance name.\r\n\t * \t\t->get_type():string - get instance type.\r\n\t * \t\t->get_settings():object - get instance type.\r\n\t * \t\t->is_valid():boolean - check if instance is valid (settings...).\r\n\t * \r\n\t * @param {object}           arg_runtime     - runtime.\r\n\t * @param {object}           arg_settings    - instance settings.\r\n\t * @param {string|undefined} arg_log_context - context of traces of this instance (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_settings, arg_log_context=context)\r\n\t{\r\n\t\t// CHECK RUNTIME AND SETTINGS\r\n\t\targ_settings = arg_settings.toJS ? arg_settings.toJS() : arg_settings\r\n\t\tassert( T.isObject(arg_runtime) && arg_runtime.is_browser_runtime, context + ':constructor:bad runtime object')\r\n\t\tassert( T.isObject(arg_settings) && T.isString(arg_settings.type) && T.isString(arg_settings.name), context + ':constructor:bad settings object')\r\n\t\t\r\n\t\tsuper(arg_log_context, arg_runtime.get_logger_manager())\r\n\t\t\r\n\t\tthis.is_name_type_settings_loggable = true\r\n\t\t\r\n\t\tthis._runtime = arg_runtime\r\n\t\tthis._ui = arg_runtime.ui()\r\n\t\tthis._settings = arg_settings\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get runtime.\r\n\t * \r\n\t * @returns {ClientRuntime}\r\n\t */\r\n\tget_runtime()\r\n\t{\r\n\t\treturn this._runtime\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get runtime state store.\r\n\t * \r\n\t * @returns {Store}\r\n\t */\r\n\tget_state_store()\r\n\t{\r\n\t\treturn this._runtime.get_state_store()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get UI.\r\n\t * \r\n\t * @returns {UI}\r\n\t */\r\n\tget_ui()\r\n\t{\r\n\t\treturn this._ui\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get router.\r\n\t * \r\n\t * @returns {Router}\r\n\t */\r\n\tget_router()\r\n\t{\r\n\t\treturn this._runtime.router()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get instance name.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_name()\r\n\t{\r\n\t\treturn ( T.isObject(this._settings) && T.isString(this._settings.name) ) ? this._settings.name : 'no name'\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get instance type.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_type()\r\n\t{\r\n\t\treturn ( T.isObject(this._settings) && T.isString(this._settings.type) ) ? this._settings.type : 'no type'\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get instance settings.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_settings()\r\n\t{\r\n\t\treturn this._settings\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Check if instance settings is valid.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tis_valid()\r\n\t{\r\n\t\treturn true\r\n\t}\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/base/name_type_settings_loggable.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 400,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/name_type_settings_loggable.js",
    "static": true,
    "longname": "js/base/name_type_settings_loggable.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/base/name_type_settings_loggable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 401,
    "kind": "class",
    "name": "NameTypeSettingsLoggable",
    "memberof": "js/base/name_type_settings_loggable.js",
    "static": true,
    "longname": "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/base/name_type_settings_loggable.js",
    "importStyle": "NameTypeSettingsLoggable",
    "description": "",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Base stateless class with name, type and settings."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "devapt-core-common/dist/js/base/loggable~Loggable"
    ]
  },
  {
    "__docId__": 402,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable#constructor",
    "access": "public",
    "description": "Creates an instance of NameTypeSettingsLoggable, do not use directly but in a sub class.",
    "lineNumber": 45,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "Loggable"
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "runtime."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "instance settings."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "context of traces of this instance (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true
  },
  {
    "__docId__": 403,
    "kind": "member",
    "name": "is_name_type_settings_loggable",
    "memberof": "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable",
    "static": false,
    "longname": "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable#is_name_type_settings_loggable",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 404,
    "kind": "member",
    "name": "_runtime",
    "memberof": "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable",
    "static": false,
    "longname": "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable#_runtime",
    "access": "private",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 405,
    "kind": "member",
    "name": "_ui",
    "memberof": "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable",
    "static": false,
    "longname": "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable#_ui",
    "access": "private",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 406,
    "kind": "member",
    "name": "_settings",
    "memberof": "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable",
    "static": false,
    "longname": "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable#_settings",
    "access": "private",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 407,
    "kind": "method",
    "name": "get_runtime",
    "memberof": "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable#get_runtime",
    "access": "public",
    "description": "Get runtime.",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ClientRuntime}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ClientRuntime"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 408,
    "kind": "method",
    "name": "get_state_store",
    "memberof": "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable#get_state_store",
    "access": "public",
    "description": "Get runtime state store.",
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Store}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Store"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 409,
    "kind": "method",
    "name": "get_ui",
    "memberof": "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable#get_ui",
    "access": "public",
    "description": "Get UI.",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{UI}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "UI"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 410,
    "kind": "method",
    "name": "get_router",
    "memberof": "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable#get_router",
    "access": "public",
    "description": "Get router.",
    "lineNumber": 104,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Router}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Router"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 411,
    "kind": "method",
    "name": "get_name",
    "memberof": "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable#get_name",
    "access": "public",
    "description": "Get instance name.",
    "lineNumber": 116,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 412,
    "kind": "method",
    "name": "get_type",
    "memberof": "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable#get_type",
    "access": "public",
    "description": "Get instance type.",
    "lineNumber": 128,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 413,
    "kind": "method",
    "name": "get_settings",
    "memberof": "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable#get_settings",
    "access": "public",
    "description": "Get instance settings.",
    "lineNumber": 140,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 414,
    "kind": "method",
    "name": "is_valid",
    "memberof": "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable#is_valid",
    "access": "public",
    "description": "Check if instance settings is valid.",
    "lineNumber": 152,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 415,
    "kind": "file",
    "name": "js/base/web_worker.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../../../node_modules/devapt-core-common/dist/js/utils/types'\r\n\r\n// BROWSER IMPORTS\r\n\r\n\r\nconst context = 'browser/base/web_worker'\r\n\r\n\r\n\r\n/**\r\n * Web worker class.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n * \r\n * \tAPI:\r\n * \t\t->do():Promise - do display.\r\n * \t\t->start()\r\n * \t\t->stop()\r\n */\r\nexport default class WebWorker\r\n{\r\n\t/**\r\n\t * Creates a web worker instance.\r\n\t * \r\n\t * @param {string} arg_worker_name - worker name.\r\n\t * @param {string} arg_script_url - worker script url.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_worker_name, arg_script_url)\r\n\t{\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_web_worker = true\r\n\r\n\t\t\r\n\t\t// WORKER NOT SUPPORTED\r\n\t\tif (typeof(Worker) === \"undefined\")\r\n\t\t{\r\n\t\t\tthrow Error(context + ':worker=[' + arg_worker_name + ']:Worker is not supported')\r\n\t\t}\r\n\r\n\t\tthis._name = arg_worker_name\r\n\t\tthis._worker = new Worker(arg_script_url)\r\n\r\n\t\tthis._requests = {}\r\n\t\tthis._requests_count = 0\r\n\t\t\r\n\t\tconst self = this\r\n\r\n\t\tthis._worker.addEventListener('message',\r\n\t\t\tfunction(event)\r\n\t\t\t{\r\n\t\t\t\tself.process_response(event.data)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tthis._worker.addEventListener('error',\r\n\t\t\tfunction(error)\r\n\t\t\t{\r\n\t\t\t\tself.process_error(error)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get worker name.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_name()\r\n\t{\r\n\t\treturn this._name\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Process error.\r\n\t * \r\n\t * @param {any} arg_error - processing error.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tprocess_error(arg_error)\r\n\t{\r\n\t\tconsole.error(context + ':worker=[' + this.get_name() + ']:error=[' + JSON.stringify(arg_error) + ']')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Process message response.\r\n\t * \r\n\t * @param {any} arg_data - response data.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tprocess_response(arg_data)\r\n\t{\r\n\t\tconsole.log(context + ':process_response:data=', arg_data)\r\n\r\n\t\ttry{\r\n\t\t\tconst response = JSON.parse(arg_data)\r\n\t\t\t\r\n\t\t\tif (response && response.id && (response.id in this._requests) )\r\n\t\t\t{\r\n\t\t\t\tthis._requests[response.id].resolve(response.result)\r\n\t\t\t\tdelete this._requests[response.id]\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(e)\r\n\t\t{\r\n\t\t\tif (arg_data && arg_data.id && (arg_data.id in this._requests) )\r\n\t\t\t{\r\n\t\t\t\tthis._requests[arg_data.id].reject(e)\r\n\t\t\t\tdelete this._requests[arg_data.id]\r\n\t\t\t}\r\n\t\t\tthis.process_error(e)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Submit a request.\r\n\t * \r\n\t * @param {any} arg_data - request data.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tsubmit_request(arg_data)\r\n\t{\r\n\t\tconsole.log(context + ':submit_request:data=', arg_data)\r\n\r\n\t\tconst id = ++this._requests_count\r\n\t\tconst request = {\r\n\t\t\tid: id,\r\n\t\t\tdata: JSON.stringify(arg_data)\r\n\t\t}\r\n\r\n\t\tconst response_promise = new Promise(\r\n\t\t\t(resolve_fn, reject_fn)=>{\r\n\t\t\t\tthis._requests[id] = {\r\n\t\t\t\t\trequest: request,\r\n\t\t\t\t\tresolve: resolve_fn,\r\n\t\t\t\t\treject:  reject_fn,\r\n\t\t\t\t\tpromise: response_promise\r\n\t\t\t\t}\r\n\t\t\t\tthis._worker.postMessage(request)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tresponse_promise.then(\r\n\t\t\t(results)=>{\r\n\t\t\t\treturn results\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\treturn response_promise\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Stop worker.\r\n\t */\r\n\tstop()\r\n\t{\r\n\t\tconsole.log(context + ':stop')\r\n\r\n\t\tif (typeof(this._worker) !== \"undefined\")\r\n\t\t{\r\n\t\t\tthis._worker.terminate()\r\n\t\t\tthis._worker = undefined\r\n\t\t\t// this._worker_promise = undefined // DO NOT DELETE RESULTS PROMISE\r\n\t\t}\r\n\t}\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/base/web_worker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 416,
    "kind": "variable",
    "name": "context",
    "memberof": "js/base/web_worker.js",
    "static": true,
    "longname": "js/base/web_worker.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/base/web_worker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 417,
    "kind": "class",
    "name": "WebWorker",
    "memberof": "js/base/web_worker.js",
    "static": true,
    "longname": "js/base/web_worker.js~WebWorker",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/base/web_worker.js",
    "importStyle": "WebWorker",
    "description": "Web worker class.",
    "examples": [
      "\n\tAPI:\n\t\t->do():Promise - do display.\n\t\t->start()\n\t\t->stop()"
    ],
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 418,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/base/web_worker.js~WebWorker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/web_worker.js~WebWorker#constructor",
    "access": "public",
    "description": "Creates a web worker instance.",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_worker_name",
        "description": "worker name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_script_url",
        "description": "worker script url."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 419,
    "kind": "member",
    "name": "is_web_worker",
    "memberof": "js/base/web_worker.js~WebWorker",
    "static": false,
    "longname": "js/base/web_worker.js~WebWorker#is_web_worker",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 420,
    "kind": "member",
    "name": "_name",
    "memberof": "js/base/web_worker.js~WebWorker",
    "static": false,
    "longname": "js/base/web_worker.js~WebWorker#_name",
    "access": "private",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 421,
    "kind": "member",
    "name": "_worker",
    "memberof": "js/base/web_worker.js~WebWorker",
    "static": false,
    "longname": "js/base/web_worker.js~WebWorker#_worker",
    "access": "private",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 422,
    "kind": "member",
    "name": "_requests",
    "memberof": "js/base/web_worker.js~WebWorker",
    "static": false,
    "longname": "js/base/web_worker.js~WebWorker#_requests",
    "access": "private",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 423,
    "kind": "member",
    "name": "_requests_count",
    "memberof": "js/base/web_worker.js~WebWorker",
    "static": false,
    "longname": "js/base/web_worker.js~WebWorker#_requests_count",
    "access": "private",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 424,
    "kind": "method",
    "name": "get_name",
    "memberof": "js/base/web_worker.js~WebWorker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/web_worker.js~WebWorker#get_name",
    "access": "public",
    "description": "Get worker name.",
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 425,
    "kind": "method",
    "name": "process_error",
    "memberof": "js/base/web_worker.js~WebWorker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/web_worker.js~WebWorker#process_error",
    "access": "public",
    "description": "Process error.",
    "lineNumber": 96,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_error",
        "description": "processing error."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 426,
    "kind": "method",
    "name": "process_response",
    "memberof": "js/base/web_worker.js~WebWorker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/web_worker.js~WebWorker#process_response",
    "access": "public",
    "description": "Process message response.",
    "lineNumber": 110,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_data",
        "description": "response data."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 427,
    "kind": "method",
    "name": "submit_request",
    "memberof": "js/base/web_worker.js~WebWorker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/web_worker.js~WebWorker#submit_request",
    "access": "public",
    "description": "Submit a request.",
    "lineNumber": 143,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_data",
        "description": "request data."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 428,
    "kind": "method",
    "name": "stop",
    "memberof": "js/base/web_worker.js~WebWorker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/base/web_worker.js~WebWorker#stop",
    "access": "public",
    "description": "Stop worker.",
    "lineNumber": 179,
    "params": [],
    "return": null
  },
  {
    "__docId__": 430,
    "kind": "file",
    "name": "js/commands/command.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\n\r\n// BROWSER IMPORTS\r\nimport NameTypeSettingsLoggable from '../base/name_type_settings_loggable'\r\n\r\n\r\nconst context = 'browser/commands/command'\r\n\r\n\r\n\r\n/**\r\n * @file Base stateless Command class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class Command extends NameTypeSettingsLoggable\r\n{\r\n\t/**\r\n\t * Creates an instance of Command, do not use directly but in a sub class.\r\n\t * @extends Loggable\r\n\t * @abstract\r\n\t * \r\n\t * A Command configuration is a simple object with this common attributes:\r\n\t * \t\t- name:string - command unique name.\r\n\t * \t\t- type:string - type of commnand from command factory known types list (example: display).\r\n\t * \t\t- label:string - displayable short descriptive string.\r\n\t * \r\n\t * \tAPI\r\n\t * \t\t->get_name():string - get command name (INHERITED).\r\n\t * \t\t->get_type():string - get command type (INHERITED).\r\n\t * \t\t->get_settings():object - get instance type (INHERITED).\r\n\t * \t\t->is_valid():boolean - check if instance is valid (settings...) (INHERITED).\r\n\t * \r\n\t * \t\t->do():Promise - do command.\r\n\t * \t\t->undo():Promise - undo command.\r\n\t * \r\n\t * @param {object}           arg_runtime     - runtime.\r\n\t * @param {object}           arg_settings    - instance settings.\r\n\t * @param {string|undefined} arg_log_context - context of traces of this instance (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_settings, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_runtime, arg_settings, log_context)\r\n\t\t\r\n\t\tthis.is_command = true\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Do command.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tdo()\r\n\t{\r\n\t\tthis.enter_group('do')\r\n\r\n\t\tlet promise = undefined\r\n\t\ttry {\r\n\t\t\tpromise = this._do()\r\n\t\t}\r\n\t\tcatch(e) {\r\n\t\t\tpromise = Promise.reject(context + ':do:an exception occures:' + e.toString())\r\n\t\t}\r\n\r\n\t\tthis.leave_group('do:async')\r\n\t\treturn promise\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Do command.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\t_do()\r\n\t{\r\n\t\treturn Promise.reject(context + ':do:not yet implemented')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Undo command.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tundo()\r\n\t{\r\n\t\tthis.enter_group('undo')\r\n\r\n\t\tlet promise = undefined\r\n\t\ttry {\r\n\t\t\tpromise = this._undo()\r\n\t\t}\r\n\t\tcatch(e) {\r\n\t\t\tpromise = Promise.reject(context + ':undo:an exception occures:' + e.toString())\r\n\t\t}\r\n\r\n\t\tthis.leave_group('undo:async')\r\n\t\treturn promise\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Undo command.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\t_undo()\r\n\t{\r\n\t\treturn Promise.reject(context + ':undo:not yet implemented')\r\n\t}\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/commands/command.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 431,
    "kind": "variable",
    "name": "context",
    "memberof": "js/commands/command.js",
    "static": true,
    "longname": "js/commands/command.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/commands/command.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 432,
    "kind": "class",
    "name": "Command",
    "memberof": "js/commands/command.js",
    "static": true,
    "longname": "js/commands/command.js~Command",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/commands/command.js",
    "importStyle": "Command",
    "description": "",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Base stateless Command class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/name_type_settings_loggable.js~NameTypeSettingsLoggable"
    ]
  },
  {
    "__docId__": 433,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/commands/command.js~Command",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/commands/command.js~Command#constructor",
    "access": "public",
    "description": "Creates an instance of Command, do not use directly but in a sub class.",
    "lineNumber": 48,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "Loggable"
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "runtime."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "instance settings."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "context of traces of this instance (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true
  },
  {
    "__docId__": 434,
    "kind": "member",
    "name": "is_command",
    "memberof": "js/commands/command.js~Command",
    "static": false,
    "longname": "js/commands/command.js~Command#is_command",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 435,
    "kind": "method",
    "name": "do",
    "memberof": "js/commands/command.js~Command",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/commands/command.js~Command#do",
    "access": "public",
    "description": "Do command.",
    "lineNumber": 63,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 436,
    "kind": "method",
    "name": "_do",
    "memberof": "js/commands/command.js~Command",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/commands/command.js~Command#_do",
    "access": "private",
    "description": "Do command.",
    "lineNumber": 86,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 437,
    "kind": "method",
    "name": "undo",
    "memberof": "js/commands/command.js~Command",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/commands/command.js~Command#undo",
    "access": "public",
    "description": "Undo command.",
    "lineNumber": 98,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 438,
    "kind": "method",
    "name": "_undo",
    "memberof": "js/commands/command.js~Command",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/commands/command.js~Command#_undo",
    "access": "private",
    "description": "Undo command.",
    "lineNumber": 121,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 439,
    "kind": "file",
    "name": "js/commands/display_command.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../../../node_modules/devapt-core-common/dist/js/utils/types'\r\n\r\n// BROWSER IMPORTS\r\nimport Command from './command'\r\n\r\n\r\nconst context = 'browser/commands/display_command'\r\n\r\n\r\n\r\n/**\r\n * Display command class.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n * \r\n * \tAPI\r\n * \t\t->do():Promise - do display.\r\n * \t\t->undo():Promise - undo display and display history previous content.\r\n * \r\n */\r\nexport default class DisplayCommand extends Command\r\n{\r\n\t/**\r\n\t * Creates an instance of DisplayCommand.\r\n\t * \r\n\t * A DisplayCommand configuration is a simple object with:\r\n\t * \r\n\t * Common attributes:\r\n\t * \t\t- name:string - command unique name.\r\n\t * \t\t- type:string - type of commnand from command factory known types list (example: display).\r\n\t * \t\t- label:string - displayable short descriptive string.\r\n\t * \t\t- url or route:string : route to display content.\r\n\t * \t\r\n\t * Middleware route attributes:\r\n\t * \t\t- middleware:string - middleware name to call on server side.\r\n\t * \t\r\n\t * Browser route attributes:\r\n\t * \t\t- view:string - view name to render on browser side.\r\n\t * \t\t- menubar:string - menubar name to render on browser side (optional).\r\n\t * \r\n\t * @param {object} arg_runtime - client runtime.\r\n\t * @param {object} arg_settings - command settings.\r\n\t * @param {string} arg_log_context - context of traces of this instance (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_settings, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_runtime, arg_settings, log_context)\r\n\t\t\r\n\t\tthis.is_display_command = true\r\n\r\n\t\t// this.enable_trace()\r\n\t\t// this.update_trace_enabled()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Check if command settings is valid.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tis_valid()\r\n\t{\r\n\t\tconst has_route  = T.isString(this._settings.url) || T.isString(this._settings.route)\r\n\t\tconst has_action = T.isString(this._settings.middleware) || T.isString(this._settings.view)\r\n\t\t\r\n\t\treturn has_route && has_action\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get route.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_route()\r\n\t{\r\n\t\treturn this._settings.route ? this._settings.route : this._settings.url\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get target route.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_target_route()\r\n\t{\r\n\t\t// MIDDLEWARE RENDERING\r\n\t\tconst middleware = this._settings.middleware\r\n\t\tif ( T.isString(middleware) )\r\n\t\t{\r\n\t\t\tconst app_url = this._runtime.get_state_store().get_state().get('app_url', undefined)\r\n\t\t\tconst mw_route = T.isString(app_url) ? '/' + app_url + this._settings.url : this._settings.url\r\n\t\t\treturn mw_route\r\n\t\t}\r\n\r\n\t\t// VIEW RENDERING\r\n\t\tif ( T.isString(this._settings.view) )\r\n\t\t{\r\n\t\t\treturn this._settings.url\r\n\t\t}\r\n\r\n\t\treturn undefined\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Do command.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\t_do()\r\n\t{\r\n\t\t// VIEW RENDERING\r\n\t\tif ( T.isString(this._settings.view) )\r\n\t\t{\r\n\t\t\t// console.log(context + ':do:%s:with view=%s', this.get_name(), this._settings.view)\r\n\r\n\t\t\tconst view_name        = T.isString(this._settings.view)        ? this._settings.view        : undefined\r\n\t\t\tconst menubar_name     = T.isString(this._settings.menubar)     ? this._settings.menubar     : undefined\r\n\t\t\tconst breadcrumbs_name = T.isString(this._settings.breadcrumbs) ? this._settings.breadcrumbs : undefined\r\n\t\t\t\r\n\t\t\tlet promise = null\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tconst components = {\r\n\t\t\t\t\tview:view_name,\r\n\t\t\t\t\tmenubar:menubar_name,\r\n\t\t\t\t\tbreadcrumbs:breadcrumbs_name,\r\n\t\t\t\t\tmiddleware:undefined,\r\n\t\t\t\t\troute:undefined\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// MIDDLEWARE RENDERING\r\n\t\t\t\tconst middleware = this._settings.middleware\r\n\t\t\t\tif ( T.isString(middleware) )\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.log(context + ':do:%s:with middleware=%s', this.get_name(), middleware)\r\n\r\n\t\t\t\t\t// GET ROUTE\r\n\t\t\t\t\tconst route = this.get_route()\r\n\t\t\t\t\tif (! route)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn Promise.reject(context + ':do:bad route')\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tcomponents.route = route\r\n\t\t\t\t\tcomponents.middleware = middleware\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpromise = this.get_runtime().ui().get_current_layout().render_page_content(components)\r\n\t\t\t}\r\n\t\t\tcatch(e)\r\n\t\t\t{\r\n\t\t\t\tconsole.error(e, context)\r\n\t\t\t\tpromise = Promise.reject(context + ':do:view:error=' + e.toString())\r\n\t\t\t}\r\n\r\n\t\t\treturn promise\r\n\t\t}\r\n\r\n\t\t\r\n\t\tif ( T.isObject(this._settings.vnode) && T.isObject(this._settings.rendering_result) )\r\n\t\t{\r\n\t\t\t// console.log(context + ':do:%s:with vnode=', this.get_name(), this._settings.vnode)\r\n\t\t\t\r\n\t\t\tlet promise = null\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tconst components = this.get_runtime().ui().get_current_layout().render_page_content_vnode(this._settings.vnode, this._settings.rendering_result, undefined)\r\n\t\t\t\tpromise = Promise.resolve(components)\r\n\t\t\t}\r\n\t\t\tcatch(e)\r\n\t\t\t{\r\n\t\t\t\tconsole.error(e, context)\r\n\t\t\t\tpromise = Promise.reject(context + ':do:vnode:error=' + e.toString())\r\n\t\t\t}\r\n\r\n\t\t\treturn promise\r\n\t\t}\r\n\r\n\t\t\r\n\t\t// RENDERING RESULT PROCESSING\r\n\t\tconst rendering_result = this._settings.rendering_result\r\n\t\tif ( T.isObject(rendering_result) && rendering_result.is_rendering_result )\r\n\t\t{\r\n\t\t\t// console.log(context + ':do:%s:with rendering_result=', rendering_result)\r\n\t\t\t\r\n\t\t\tlet promise = null\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tconst components = {\r\n\t\t\t\t\tview:undefined,\r\n\t\t\t\t\tmenubar:undefined,\r\n\t\t\t\t\tbreadcrumbs:undefined,\r\n\t\t\t\t\tmiddleware:undefined,\r\n\t\t\t\t\troute:undefined,\r\n\t\t\t\t\trendering_result:rendering_result\r\n\t\t\t\t}\r\n\t\t\t\tpromise = this.get_runtime().ui().get_current_layout().render_page_content(components)\r\n\t\t\t}\r\n\t\t\tcatch(e)\r\n\t\t\t{\r\n\t\t\t\tconsole.error(e, context)\r\n\t\t\t\tpromise = Promise.reject(context + ':do:rendering_result:error=' + e.toString())\r\n\t\t\t}\r\n\r\n\t\t\treturn promise\r\n\t\t}\r\n\r\n\t\treturn Promise.reject(context + ':do:bad settings')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Undo command.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\t_undo()\r\n\t{\r\n\t\treturn Promise.reject(context + ':undo:not yet implemented')\r\n\t}\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/commands/display_command.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 440,
    "kind": "variable",
    "name": "context",
    "memberof": "js/commands/display_command.js",
    "static": true,
    "longname": "js/commands/display_command.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/commands/display_command.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 441,
    "kind": "class",
    "name": "DisplayCommand",
    "memberof": "js/commands/display_command.js",
    "static": true,
    "longname": "js/commands/display_command.js~DisplayCommand",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/commands/display_command.js",
    "importStyle": "DisplayCommand",
    "description": "Display command class.",
    "examples": [
      "\n\tAPI\n\t\t->do():Promise - do display.\n\t\t->undo():Promise - undo display and display history previous content."
    ],
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/commands/command.js~Command"
    ]
  },
  {
    "__docId__": 442,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/commands/display_command.js~DisplayCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/commands/display_command.js~DisplayCommand#constructor",
    "access": "public",
    "description": "Creates an instance of DisplayCommand.\n\nA DisplayCommand configuration is a simple object with:\n\nCommon attributes:\n\t\t- name:string - command unique name.\n\t\t- type:string - type of commnand from command factory known types list (example: display).\n\t\t- label:string - displayable short descriptive string.\n\t\t- url or route:string : route to display content.\n\t\nMiddleware route attributes:\n\t\t- middleware:string - middleware name to call on server side.\n\t\nBrowser route attributes:\n\t\t- view:string - view name to render on browser side.\n\t\t- menubar:string - menubar name to render on browser side (optional).",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "command settings."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "context of traces of this instance (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 443,
    "kind": "member",
    "name": "is_display_command",
    "memberof": "js/commands/display_command.js~DisplayCommand",
    "static": false,
    "longname": "js/commands/display_command.js~DisplayCommand#is_display_command",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 444,
    "kind": "method",
    "name": "is_valid",
    "memberof": "js/commands/display_command.js~DisplayCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/commands/display_command.js~DisplayCommand#is_valid",
    "access": "public",
    "description": "Check if command settings is valid.",
    "lineNumber": 72,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 445,
    "kind": "method",
    "name": "get_route",
    "memberof": "js/commands/display_command.js~DisplayCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/commands/display_command.js~DisplayCommand#get_route",
    "access": "public",
    "description": "Get route.",
    "lineNumber": 87,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 446,
    "kind": "method",
    "name": "get_target_route",
    "memberof": "js/commands/display_command.js~DisplayCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/commands/display_command.js~DisplayCommand#get_target_route",
    "access": "public",
    "description": "Get target route.",
    "lineNumber": 99,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 447,
    "kind": "method",
    "name": "_do",
    "memberof": "js/commands/display_command.js~DisplayCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/commands/display_command.js~DisplayCommand#_do",
    "access": "private",
    "description": "Do command.",
    "lineNumber": 126,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 448,
    "kind": "method",
    "name": "_undo",
    "memberof": "js/commands/display_command.js~DisplayCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/commands/display_command.js~DisplayCommand#_undo",
    "access": "private",
    "description": "Undo command.",
    "lineNumber": 235,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 449,
    "kind": "file",
    "name": "js/commands/worker_command.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../../../node_modules/devapt-core-common/dist/js/utils/types'\r\n\r\n// BROWSER IMPORTS\r\nimport Command from './command'\r\n\r\n\r\nconst context = 'browser/commands/worker_command'\r\n\r\n\r\n\r\n/**\r\n * Web worker command class.\r\n * \r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n * \r\n * @example\r\n * \r\n * \tAPI:\r\n * \t\t->do():Promise - do display.\r\n * \t\t->undo():Promise - undo display and display history previous content.\r\n * \t\t->start()\r\n * \t\t->stop()\r\n */\r\nexport default class WorkerCommand extends Command\r\n{\r\n\t/**\r\n\t * Creates a web worker command instance.\r\n\t * \r\n\t * Command configuration is a simple object with:\r\n\t * \t\t- url: local script url\r\n\t * \r\n\t * @param {object} arg_runtime - client runtime.\r\n\t * @param {object} arg_settings - command settings.\r\n\t * @param {string} arg_log_context - context of traces of this instance (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_settings, arg_log_context=context)\r\n\t{\r\n\t\tsuper(arg_runtime, arg_settings, arg_log_context)\r\n\t\t\r\n\t\t/**\r\n\t\t * Class type flag.\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.is_worker_command = true\r\n\r\n\t\tthis._worker = undefined\r\n\t\tthis._worker_promise = undefined\r\n\r\n\t\tthis._script_url = T.isObject(this._settings) && T.isNotEmptyString(this._settings.script_url) ? this._settings.script_url : undefined\r\n\t\tthis._script_operands = T.isObject(this._settings) && this._settings.script_operands ? this._settings.script_operands : undefined\r\n\t\t\r\n\t\t// this.enable_trace()\r\n\t\t// this.update_trace_enabled()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Check if command settings is valid.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tis_valid()\r\n\t{\r\n\t\tconst has_url  = T.isNotEmptyString(this._script_url) || this._script_operands == undefined\r\n\t\t\r\n\t\treturn has_url\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Do command.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\t_do()\r\n\t{\r\n\t\t// WORKER NOT SUPPORTED\r\n\t\tif (typeof(Worker) === \"undefined\")\r\n\t\t{\r\n\t\t\treturn Promise.reject(context + ':do:worker is not supported')\r\n\t\t}\r\n\r\n\t\t// WORKER ALREADY EXISTS\r\n\t\tif (typeof(this._worker) !== \"undefined\")\r\n\t\t{\r\n\t\t\treturn this._worker_promise && this._worker_promise.then ? this._worker_promise : Promise.reject(context + ':' + this.get_name() + ':bad worker promise')\r\n\t\t}\r\n\r\n\t\t// CREATE WORKER\r\n\t\tconst resolve_fn = (results)=>{\r\n\t\t\treturn results\r\n\t\t}\r\n\r\n\t\tconst reject_fn = (err)=>{\r\n\t\t\treturn err\r\n\t\t}\r\n\r\n\t\tif ( ! this.is_valid() )\r\n\t\t{\r\n\t\t\treturn Promise.reject(context + ':do:bad settings')\r\n\t\t}\r\n\r\n\t\tthis._worker = new Worker(this._script_url)\r\n\t\tthis._worker.onmessage = function(event){\r\n\t\t\tresolve_fn(event.data)\r\n\t\t}\r\n\t\t\r\n\t\tthis._worker.onerror = function(error){\r\n\t\t\treject_fn(error)\r\n\t\t}\r\n\r\n\t\tthis._worker_promise = new Promise(resolve_fn, reject_fn)\r\n\t\tthis._worker_promise.then(\r\n\t\t\t(results)=>{\r\n\t\t\t\tthis.stop()\r\n\t\t\t\treturn results\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\t// START\r\n\t\tthis._worker.postMessage(this._script_operands)\r\n\r\n\t\treturn this._worker_promise\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Undo command.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\t_undo()\r\n\t{\r\n\t\tif (typeof(Worker) === \"undefined\")\r\n\t\t{\r\n\t\t\treturn Promise.reject(context + ':undo:worker is not supported')\r\n\t\t}\r\n\r\n\t\treturn Promise.reject(context + ':undo:not yet implemented')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Stop worker.\r\n\t */\r\n\tstop()\r\n\t{\r\n\t\tif (typeof(this._worker) !== \"undefined\")\r\n\t\t{\r\n\t\t\tthis._worker.terminate()\r\n\t\t\tthis._worker = undefined\r\n\t\t\t// this._worker_promise = undefined // DO NOT DELETE RESULTS PROMISE\r\n\t\t}\r\n\t}\r\n}",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/commands/worker_command.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 450,
    "kind": "variable",
    "name": "context",
    "memberof": "js/commands/worker_command.js",
    "static": true,
    "longname": "js/commands/worker_command.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/commands/worker_command.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 451,
    "kind": "class",
    "name": "WorkerCommand",
    "memberof": "js/commands/worker_command.js",
    "static": true,
    "longname": "js/commands/worker_command.js~WorkerCommand",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/commands/worker_command.js",
    "importStyle": "WorkerCommand",
    "description": "Web worker command class.",
    "examples": [
      "\n\tAPI:\n\t\t->do():Promise - do display.\n\t\t->undo():Promise - undo display and display history previous content.\n\t\t->start()\n\t\t->stop()"
    ],
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/commands/command.js~Command"
    ]
  },
  {
    "__docId__": 452,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/commands/worker_command.js~WorkerCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/commands/worker_command.js~WorkerCommand#constructor",
    "access": "public",
    "description": "Creates a web worker command instance.\n\nCommand configuration is a simple object with:\n\t\t- url: local script url",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "command settings."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "context of traces of this instance (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 453,
    "kind": "member",
    "name": "is_worker_command",
    "memberof": "js/commands/worker_command.js~WorkerCommand",
    "static": false,
    "longname": "js/commands/worker_command.js~WorkerCommand#is_worker_command",
    "access": "public",
    "description": "Class type flag.",
    "lineNumber": 51,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 454,
    "kind": "member",
    "name": "_worker",
    "memberof": "js/commands/worker_command.js~WorkerCommand",
    "static": false,
    "longname": "js/commands/worker_command.js~WorkerCommand#_worker",
    "access": "private",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 455,
    "kind": "member",
    "name": "_worker_promise",
    "memberof": "js/commands/worker_command.js~WorkerCommand",
    "static": false,
    "longname": "js/commands/worker_command.js~WorkerCommand#_worker_promise",
    "access": "private",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 456,
    "kind": "member",
    "name": "_script_url",
    "memberof": "js/commands/worker_command.js~WorkerCommand",
    "static": false,
    "longname": "js/commands/worker_command.js~WorkerCommand#_script_url",
    "access": "private",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 457,
    "kind": "member",
    "name": "_script_operands",
    "memberof": "js/commands/worker_command.js~WorkerCommand",
    "static": false,
    "longname": "js/commands/worker_command.js~WorkerCommand#_script_operands",
    "access": "private",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 458,
    "kind": "method",
    "name": "is_valid",
    "memberof": "js/commands/worker_command.js~WorkerCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/commands/worker_command.js~WorkerCommand#is_valid",
    "access": "public",
    "description": "Check if command settings is valid.",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 459,
    "kind": "method",
    "name": "_do",
    "memberof": "js/commands/worker_command.js~WorkerCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/commands/worker_command.js~WorkerCommand#_do",
    "access": "private",
    "description": "Do command.",
    "lineNumber": 84,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 462,
    "kind": "method",
    "name": "_undo",
    "memberof": "js/commands/worker_command.js~WorkerCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/commands/worker_command.js~WorkerCommand#_undo",
    "access": "private",
    "description": "Undo command.",
    "lineNumber": 142,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 463,
    "kind": "method",
    "name": "stop",
    "memberof": "js/commands/worker_command.js~WorkerCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/commands/worker_command.js~WorkerCommand#stop",
    "access": "public",
    "description": "Stop worker.",
    "lineNumber": 157,
    "params": [],
    "return": null
  },
  {
    "__docId__": 465,
    "kind": "file",
    "name": "js/components/attributes_table.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\nimport _ from 'lodash'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../../../node_modules/devapt-core-common/dist/js/utils/types'\r\n\r\n// BROWSER IMPORTS\r\nimport Table from './table'\r\n\r\n\r\nconst context = 'browser/components/attributes_table'\r\n\r\n\r\n\r\n/**\r\n * @file UI Attributes table component class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class AttributesTable extends Table\r\n{\r\n\t\r\n\t/**\r\n\t * Creates an instance of Component.\r\n\t * \r\n\t * @param {object} arg_runtime - client runtime.\r\n\t * @param {object} arg_state - component state.\r\n\t * @param {string} arg_log_context - context of traces of this instance (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_state, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_runtime, arg_state, log_context)\r\n\t\t\r\n\t\tthis.is_attributes_table_component = true\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Set all object attributes.\r\n\t * \r\n\t * @param {object}  arg_object - attributes object.\r\n\t * @param {integer} arg_max_depth - nested attributes max deep (TODO).\r\n\t * \r\n\t * @returns {noting}\r\n\t */\r\n\tset_view_attributes_by_name(arg_view_name, arg_max_depth)\r\n\t{\r\n\t\tconsole.log(context + ':set_view_attributes_by_name:%s:view name=%s,max depth=%i', this.get_name(), arg_view_name, arg_max_depth)\r\n\t\t\r\n\t\tif ( ! T.isString(arg_view_name) )\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':set_view_attributes_by_name:%s:bad view name string=%s', this.get_name(), arg_view_name)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst view_desc = this.get_runtime().ui().get_resource_description_resolver()(arg_view_name)\r\n\t\tif (! view_desc)\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':set_view_attributes_by_name:%s:view not found=%s', this.get_name(), arg_view_name)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tthis.set_object_attributes(view_desc, arg_max_depth)\r\n\t}\r\n\r\n\r\n\tparse_integer(arg_string)\r\n\t{\r\n\t\tlet integer = 0\r\n\t\ttry{\r\n\t\t\tinteger = parseInt(arg_string)\r\n\t\t}\r\n\t\tcatch(e){\r\n\t\t\tconsole.warn(context + ':build_row:click handler:bad integer for string', arg_string)\r\n\t\t\tinteger = 0\r\n\t\t}\r\n\t\treturn integer\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Set all object attributes.\r\n\t * \r\n\t * @param {object}  arg_object - attributes object.\r\n\t * @param {integer} arg_max_depth - nested attributes max deep (TODO).\r\n\t * \r\n\t * @returns {noting}\r\n\t */\r\n\tset_object_attributes(arg_object/*, arg_max_depth*/)\r\n\t{\r\n\t\tif ( ! T.isObject(arg_object) )\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':set_object_attributes:%s:bad object instance=', this.get_name(), arg_object)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst attributes = []\r\n\t\tconst attributes_exclude = this.get_state_value('attributes_exclude', undefined)\r\n\t\tlet attributes_path = this.get_state_value('attributes_path', undefined)\r\n\r\n\t\t// DEBUG\r\n\t\t// console.log(context + ':set_object_attributes:%s:attributes_exclude=', this.get_name(), attributes_exclude)\r\n\t\t// console.log(context + ':set_object_attributes:%s:attributes_path=', this.get_name(), attributes_path)\r\n\r\n\t\tif (attributes_path)\r\n\t\t{\r\n\t\t\tif (attributes_path.toJS)\r\n\t\t\t{\r\n\t\t\t\tattributes_path = attributes_path.toJS()\r\n\t\t\t}\r\n\t\t\tif ( T.isArray(attributes_path) && attributes_path.length > 0 )\r\n\t\t\t{\r\n\t\t\t\t// console.log(context + ':set_object_attributes:%s:attributes_path is a non empty array=', this.get_name(), attributes_path)\r\n\t\t\t\t\r\n\t\t\t\tlet key = attributes_path.shift()\r\n\t\t\t\twhile(key)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (key in arg_object)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// console.log(context + ':set_object_attributes:%s:attributes_path:loop on key=%s (found, go inside)', this.get_name(), key)\r\n\t\t\t\t\t\targ_object = arg_object[key]\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// console.warn(context + ':set_object_attributes:%s:attributes_path:loop on key=%s (not found in current object)', this.get_name(), key)\r\n\t\t\t\t\t\tthis.do_action_clear_items()\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tkey = attributes_path.shift()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst keys = Object.keys(arg_object)\r\n\t\t// console.log(context + ':set_object_attributes:%s:keys=', this.get_name(), keys)\r\n\t\tkeys.forEach(\r\n\t\t\t(key/*, index*/)=>{\r\n\t\t\t\tif (attributes_exclude)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (attributes_exclude.indexOf(key) > -1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// console.log(context + ':set_object_attributes:%s:skip key=%s', this.get_name(), key)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst value = arg_object[key] ? arg_object[key] : 'undefined'\r\n\t\t\t\t// console.log(context + ':set_object_attributes:%s:key=%s,value=%s', this.get_name(), key, value)\r\n\r\n\t\t\t\t// const formated_value = (T.isString(value) || T.isNumber(value) || T.isBoolean(value)) ? value : ( T.isFunction(value) ? 'Function' : value.toString())\r\n\t\t\t\tconst formated_value = value\r\n\t\t\t\tattributes.push( [key, formated_value] )\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\t// console.log(context + ':set_object_attributes:%s:object&attributes=', this.get_name(), arg_object, attributes)\r\n\r\n\t\tthis.do_action_replace(attributes, attributes.length)\r\n\r\n\t\t// COLLAPSE / EXPAND CLICK HANDLER\r\n\t\t// handler signature: f(component, event name, selection, event, target)\r\n\t\tconst handler = (component, event_name, selection, event, target)=>{\r\n\t\t\tif (! target || ! component)\r\n\t\t\t{\r\n\t\t\t\tconsole.warn(context + ':build_row:click handler:bad target or component')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tconst parent_tr_elem = target.parentNode\r\n\t\t\tconst collapsed = target.getAttribute('devapt-collapsed') == 'true' ? true : false\r\n\t\t\tconst css_display = collapsed ? 'table-row' : 'none'\r\n\t\t\tlet parent_depth = parent_tr_elem ? this.parse_integer( parent_tr_elem.getAttribute('devapt-depth') ) : 0\r\n\r\n\t\t\t// DEBUG\r\n\t\t\t// console.log(context + ':build_row:click handler:parent_tr_elem=', parent_tr_elem)\r\n\t\t\t// console.log(context + ':build_row:click handler:collapsed=%b', collapsed)\r\n\t\t\t// console.log(context + ':build_row:click handler:css_display=%s', css_display)\r\n\t\t\t// console.log(context + ':build_row:click handler:parent_depth=%i', parent_depth)\r\n\r\n\t\t\tlet tr_elem = parent_tr_elem ? parent_tr_elem.nextSibling : undefined\r\n\t\t\tlet elem_depth = tr_elem ? this.parse_integer( tr_elem.getAttribute('devapt-depth') ) : 0\r\n\t\t\twhile(tr_elem && elem_depth > parent_depth)\r\n\t\t\t{\r\n\t\t\t\t// console.log(context + ':build_row:click handler:loop on elem', tr_elem)\r\n\r\n\t\t\t\ttr_elem.style.display = css_display\r\n\t\t\t\ttr_elem = tr_elem.nextSibling\r\n\t\t\t}\r\n\t\t\ttarget.setAttribute('devapt-collapsed', !collapsed)\r\n\t\t\ttarget.firstChild.textContent = (! collapsed) ? '\\u25B9' : '\\u25BF'\r\n\t\t}\r\n\t\tthis.on_dom_event('click', 'td.devapt-collapsable-row', handler, undefined, false)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get object from attributes.\r\n\t * \r\n\t * @returns {object}\r\n\t */\r\n\tget_object_attributes()// TODO\r\n\t{\r\n\t\tconst result_object = {}\r\n\t\tconst table_elem = this.get_dom_element()\r\n\t\tconst table_body_elem = table_elem.getElementsByTagName( \"tbody\" )[0]\r\n\t\tconst tr_elems = table_body_elem.children\r\n\r\n\t\tlet row_index = 0\r\n\t\t// let previous_index = undefined\r\n\t\tfor( ; row_index < tr_elems.length ; row_index++)\r\n\t\t{\r\n\t\t\tconst tr_elem  = tr_elems[row_index]\r\n\t\t\tconst tr_index = tr_elem.getAttribute('devapt-row-index')\r\n\t\t\tconst td_key_elem   = tr_elem.firstChild\r\n\t\t\tconst td_value_elem = td_key_elem.nextSibling\r\n\t\t\tconst value_type = td_value_elem.getAttribute('devapt-data-type')\r\n\t\t\tconst key = td_key_elem.textContent\r\n\t\t\tconst value = td_value_elem.textContent\r\n\r\n\t\t\tswitch(value_type) {\r\n\t\t\t\tcase 'string':  result_object[key] = value ; break\r\n\t\t\t\tcase 'number':  result_object[key] = new Number(value) ; break\r\n\t\t\t\tcase 'boolean': result_object[key] = (value == 'true') ? true : false ; break\r\n\t\t\t\t// case 'array': \r\n\t\t\t\t// case 'object':\r\n\t\t\t}\r\n\r\n\t\t\t// previous_index = tr_index\r\n\t\t}\r\n\r\n\t\treturn result_object\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Build a row cell DOM element.\r\n\t *\r\n\t * @param {any}      arg_cell_value   - cell value.\r\n\t * @param {integer}  arg_row_index    - row index.\r\n\t * @param {integer}  arg_column_index - column index.\r\n\t * @param {Document} arg_document     - DOM document.\r\n\t * \r\n\t * @returns {Element} - TD DOM Element.\r\n\t */\r\n\tbuild_cell(arg_cell_value, arg_row_index, arg_column_index, arg_document)\r\n\t{\r\n\t\tconst td_elem = arg_document.createElement('td')\r\n\t\ttd_elem.setAttribute('devapt-column-index', arg_column_index)\r\n\r\n\t\tif ( T.isString(arg_cell_value) )\r\n\t\t{\r\n\t\t\t// console.log(context + ':build_cell:%s:string:at row %i:value=%s', this.get_name(), arg_row_index, arg_cell_value)\r\n\r\n\t\t\ttd_elem.innerText = arg_cell_value\r\n\t\t\ttd_elem.setAttribute('devapt-data-type', 'string')\r\n\t\t\treturn td_elem\r\n\t\t}\r\n\t\telse if ( T.isNumber(arg_cell_value) )\r\n\t\t{\r\n\t\t\t// console.log(context + ':build_cell:%s:number:at row %i:value=%s', this.get_name(), arg_row_index, arg_cell_value)\r\n\r\n\t\t\ttd_elem.innerText = arg_cell_value\r\n\t\t\ttd_elem.setAttribute('devapt-data-type', 'number')\r\n\t\t}\r\n\t\telse if ( T.isBoolean(arg_cell_value) )\r\n\t\t{\r\n\t\t\t// console.log(context + ':build_cell:%s:boolean:at row %i:value=%s', this.get_name(), arg_row_index, arg_cell_value)\r\n\r\n\t\t\ttd_elem.innerText = arg_cell_value ? 'true' : 'false'\r\n\t\t\ttd_elem.setAttribute('devapt-data-type', 'boolean')\r\n\t\t}\r\n\t\telse if ( T.isFunction(arg_cell_value) )\r\n\t\t{\r\n\t\t\t// console.log(context + ':build_cell:%s:function:at row %i:value=%s', this.get_name(), arg_row_index, 'Function')\r\n\r\n\t\t\ttd_elem.innerText = 'Function'\r\n\t\t\ttd_elem.setAttribute('devapt-data-type', 'function')\r\n\t\t} else {\r\n\t\t\t// console.log(context + ':build_cell:%s:array:at row %i:unknow=%s', this.get_name(), arg_row_index, arg_cell_value)\r\n\r\n\t\t\ttd_elem.innerText = 'unknow'\r\n\t\t\ttd_elem.setAttribute('devapt-data-type', 'unknow')\r\n\t\t}\r\n\t\t\r\n\t\treturn td_elem\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Build a table row DOM element.\r\n\t *\r\n\t * @param {array} arg_row_array   - row values array.\r\n\t * @param {integer} arg_row_index - row index.\r\n\t * @param {integer} arg_max_cols  - max columns number.\r\n\t * @param {integer} arg_depth     - path depth.\r\n\t * \r\n\t * @returns {Element} - TD DOM Element.\r\n\t */\r\n\tbuild_row(arg_row_array, arg_row_index, arg_max_cols, arg_depth=0)\r\n\t{\r\n\t\tconst this_document = this.get_dom_element().ownerDocument\r\n\t\tconst row_elem = this_document.createElement('tr')\r\n\t\trow_elem.setAttribute('devapt-row-index', arg_row_index)\r\n\t\trow_elem.setAttribute('devapt-depth', arg_depth)\r\n\r\n\t\t// console.log(context + ':build_row:rows_index=%i row_array max_cols', arg_row_index, arg_row_array, arg_max_cols)\r\n\t\t\r\n\t\tif( ! T.isArray(arg_row_array) || arg_row_array.length != 2 )\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':build_row:row_array is not an array of size 2 at rows_index=%i', arg_row_index, arg_row_array)\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\tconst attribute_name  = arg_row_array[0]\r\n\t\tconst attribute_value = arg_row_array[1]\r\n\t\tconst pad_left = 10\r\n\t\t\r\n\t\tconst td_name_elem = this_document.createElement('td')\r\n\t\ttd_name_elem.setAttribute('devapt-column-index', 0)\r\n\t\ttd_name_elem.style.paddingLeft = td_name_elem.style.paddingLeft ? td_name_elem.style.paddingLeft + arg_depth * pad_left : arg_depth * pad_left\r\n\t\ttd_name_elem.innerText = attribute_name\r\n\t\trow_elem.appendChild(td_name_elem)\r\n\r\n\t\tconst td_value_elem = this.build_cell(attribute_value, arg_row_index, 1, this_document, arg_depth)\r\n\t\trow_elem.appendChild(td_value_elem)\r\n\t\t\r\n\t\treturn row_elem\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Build a table row DOM element.\r\n\t *\r\n\t * @param {array} arg_row_array   - row values array.\r\n\t * @param {integer} arg_row_index - row index.\r\n\t * @param {integer} arg_max_cols  - max columns number.\r\n\t * @param {integer} arg_depth     - path depth.\r\n\t * \r\n\t * @returns {Element} - TD DOM Element.\r\n\t */\r\n\tbuild_row_collapsed(arg_row_array, arg_row_index, arg_max_cols, arg_depth=0)\r\n\t{\r\n\t\tconst this_document = this.get_dom_element().ownerDocument\r\n\t\tconst row_elem = this_document.createElement('tr')\r\n\t\trow_elem.setAttribute('devapt-row-index', arg_row_index)\r\n\t\trow_elem.setAttribute('devapt-depth', arg_depth)\r\n\r\n\t\t// console.log(context + ':build_row:rows_index=%i row_array max_cols', arg_row_index, arg_row_array, arg_max_cols)\r\n\t\t\r\n\t\tif( ! T.isArray(arg_row_array) || arg_row_array.length != 2 )\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':build_row:row_array is not an array of size 2 at rows_index=%i', arg_row_index, arg_row_array)\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\tconst attribute_name  = arg_row_array[0]\r\n\t\tconst attribute_value = arg_row_array[1]\r\n\t\tconst pad_left = 10\r\n\t\t\r\n\t\tconst td_name_elem = this_document.createElement('td')\r\n\t\ttd_name_elem.setAttribute('devapt-column-index', 0)\r\n\t\ttd_name_elem.setAttribute('devapt-collapsed', false)\r\n\t\ttd_name_elem.className = 'devapt-collapsable-row'\r\n\t\ttd_name_elem.style.paddingLeft = td_name_elem.style.paddingLeft ? td_name_elem.style.paddingLeft + arg_depth * pad_left : arg_depth * pad_left\r\n\t\t// td_name_elem.innerText = attribute_name\r\n\t\trow_elem.appendChild(td_name_elem)\r\n\r\n\t\tconst span_elem = this_document.createElement('span')\r\n\t\tspan_elem.textContent = '\\u25BF'\r\n\t\ttd_name_elem.appendChild(span_elem)\r\n\r\n\t\tconst text_elem = this_document.createElement('span')\r\n\t\ttext_elem.textContent = attribute_name\r\n\t\ttd_name_elem.appendChild(text_elem)\r\n\t\t\r\n\r\n\t\tconst td_value_elem = this.build_cell(attribute_value, arg_row_index, 1, this_document, arg_depth)\r\n\t\trow_elem.appendChild(td_value_elem)\r\n\t\t\r\n\t\treturn row_elem\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Build a table row DOM element.\r\n\t *\r\n\t * @param {Element} arg_body_element - table body element.\r\n\t * @param {array}   arg_row_array    - row values array.\r\n\t * @param {integer} arg_row_index    - row index.\r\n\t * @param {integer} arg_max_rows     - max rows number.\r\n\t * @param {integer} arg_max_cols     - max columns number.\r\n\t * @param {string}  arg_mode         - fill mode:append/prepend\r\n\t * @param {string}  arg_max_rows_action - action on max rows.\r\n\t * @param {integer} arg_depth        - path depth.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tprocess_row_array(arg_body_element, arg_row_array, arg_row_index, arg_max_rows, arg_max_cols, arg_mode, arg_max_rows_action, arg_depth=0)\r\n\t{\r\n\t\t// console.log(context + ':process_row_array:%s:at %i:max cols=%i:depth=%i:row array=', this.get_name(), arg_row_index, 2, arg_depth, arg_row_array)\r\n\r\n\t\tconst attribute_name  = arg_row_array[0]\r\n\t\tconst attribute_value = arg_row_array[1]\r\n\t\tconst pad_left = 10\r\n\r\n\t\tif ( T.isArray(attribute_value) )\r\n\t\t{\r\n\t\t\t// console.log(context + ':process_row_array:%s:array:at row %i:depth=%i', this.get_name(), arg_row_index, arg_depth )\r\n\r\n\t\t\t/*\r\n\t\t\tTODO EXPANDABLE ICONS:\r\n\t\t\t\t'<span class=\"node_closed\">\\u25B9</span>'\r\n\t\t\t\t'<span class=\"node_opened\">\\u25BF</span>'\r\n\t\t\t*/\r\n\t\t\tconst first_row_elem = this.build_row_collapsed([attribute_name, ''], arg_row_index, 2, arg_depth)\r\n\t\t\tif (! first_row_elem)\r\n\t\t\t{\r\n\t\t\t\tconsole.warn(context + ':process_row_array:%s:at %i:max cols=%i:array:bad row element for ', this.get_name(), arg_row_index, 2, arg_row_array)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tfirst_row_elem.setAttribute('devapt-data-type', 'array')\r\n\t\t\targ_body_element.appendChild(first_row_elem)\r\n\r\n\t\t\t_.forEach(attribute_value,\r\n\t\t\t\t(item, index)=>{\r\n\t\t\t\t\tthis.process_row_array(arg_body_element, [index, item], arg_row_index, arg_max_rows, arg_max_cols, arg_mode, arg_max_rows_action, arg_depth + 1)\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\treturn\r\n\t\t}\r\n\t\telse if ( T.isObject(attribute_value) )\r\n\t\t{\r\n\t\t\t// console.log(context + ':process_row_array:%s:object:at row %i:depth=%i', this.get_name(), arg_row_index, arg_depth )\r\n\r\n\t\t\t// OPEN=\\u25BF CLOSE=\\u25B9\r\n\t\t\tconst first_row_elem = this.build_row_collapsed([attribute_name, ''], arg_row_index, 2, arg_depth)\r\n\t\t\tif (! first_row_elem)\r\n\t\t\t{\r\n\t\t\t\tconsole.warn(context + ':process_row_array:%s:at %i:max cols=%i:object:bad row element for ', this.get_name(), arg_row_index, 2, arg_row_array)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tfirst_row_elem.setAttribute('devapt-data-type', 'object')\r\n\t\t\targ_body_element.appendChild(first_row_elem)\r\n\r\n\t\t\t_.forEach(attribute_value,\r\n\t\t\t\t(item, key)=>{\r\n\t\t\t\t\tthis.process_row_array(arg_body_element, [key, item], arg_row_index, arg_max_rows, arg_max_cols, arg_mode, arg_max_rows_action, arg_depth + 1)\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// DEFAULT CASE\r\n\t\t// console.log(context + ':process_row_array:%s:default:at row %i:depth=%i', this.get_name(), arg_row_index, arg_depth )\r\n\t\t\r\n\t\tconst row_elem = this.build_row(arg_row_array, arg_row_index, 2, arg_depth)\r\n\t\tif (! row_elem)\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':process_row_array:%s:at %i:max cols=%i:default:bad row element for ', this.get_name(), arg_row_index, 2, arg_row_array)\r\n\t\t\treturn\r\n\t\t}\r\n\t\trow_elem.style.paddingLeft = row_elem.style.paddingLeft ? row_elem.style.paddingLeft + (arg_depth + 1) * pad_left : (arg_depth + 1) * pad_left\r\n\t\targ_body_element.appendChild(row_elem)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/components/attributes_table.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 466,
    "kind": "variable",
    "name": "context",
    "memberof": "js/components/attributes_table.js",
    "static": true,
    "longname": "js/components/attributes_table.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/components/attributes_table.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 467,
    "kind": "class",
    "name": "AttributesTable",
    "memberof": "js/components/attributes_table.js",
    "static": true,
    "longname": "js/components/attributes_table.js~AttributesTable",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/components/attributes_table.js",
    "importStyle": "AttributesTable",
    "description": "",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "UI Attributes table component class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/components/table.js~Table"
    ]
  },
  {
    "__docId__": 468,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/components/attributes_table.js~AttributesTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/attributes_table.js~AttributesTable#constructor",
    "access": "public",
    "description": "Creates an instance of Component.",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "context of traces of this instance (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 469,
    "kind": "member",
    "name": "is_attributes_table_component",
    "memberof": "js/components/attributes_table.js~AttributesTable",
    "static": false,
    "longname": "js/components/attributes_table.js~AttributesTable#is_attributes_table_component",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 470,
    "kind": "method",
    "name": "set_view_attributes_by_name",
    "memberof": "js/components/attributes_table.js~AttributesTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/attributes_table.js~AttributesTable#set_view_attributes_by_name",
    "access": "public",
    "description": "Set all object attributes.",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{noting}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_object",
        "description": "attributes object."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_max_depth",
        "description": "nested attributes max deep (TODO)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "noting"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 471,
    "kind": "method",
    "name": "parse_integer",
    "memberof": "js/components/attributes_table.js~AttributesTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/attributes_table.js~AttributesTable#parse_integer",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "params": [
      {
        "name": "arg_string",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 472,
    "kind": "method",
    "name": "set_object_attributes",
    "memberof": "js/components/attributes_table.js~AttributesTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/attributes_table.js~AttributesTable#set_object_attributes",
    "access": "public",
    "description": "Set all object attributes.",
    "lineNumber": 97,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{noting}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_object",
        "description": "attributes object."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_max_depth",
        "description": "nested attributes max deep (TODO)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "noting"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 473,
    "kind": "method",
    "name": "get_object_attributes",
    "memberof": "js/components/attributes_table.js~AttributesTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/attributes_table.js~AttributesTable#get_object_attributes",
    "access": "public",
    "description": "Get object from attributes.",
    "lineNumber": 208,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 474,
    "kind": "method",
    "name": "build_cell",
    "memberof": "js/components/attributes_table.js~AttributesTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/attributes_table.js~AttributesTable#build_cell",
    "access": "public",
    "description": "Build a row cell DOM element.",
    "lineNumber": 253,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Element} - TD DOM Element."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_cell_value",
        "description": "cell value."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_row_index",
        "description": "row index."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_column_index",
        "description": "column index."
      },
      {
        "nullable": null,
        "types": [
          "Document"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_document",
        "description": "DOM document."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": "TD DOM Element."
    }
  },
  {
    "__docId__": 475,
    "kind": "method",
    "name": "build_row",
    "memberof": "js/components/attributes_table.js~AttributesTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/attributes_table.js~AttributesTable#build_row",
    "access": "public",
    "description": "Build a table row DOM element.",
    "lineNumber": 308,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Element} - TD DOM Element."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_row_array",
        "description": "row values array."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_row_index",
        "description": "row index."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_max_cols",
        "description": "max columns number."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_depth",
        "description": "path depth."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": "TD DOM Element."
    }
  },
  {
    "__docId__": 476,
    "kind": "method",
    "name": "build_row_collapsed",
    "memberof": "js/components/attributes_table.js~AttributesTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/attributes_table.js~AttributesTable#build_row_collapsed",
    "access": "public",
    "description": "Build a table row DOM element.",
    "lineNumber": 351,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Element} - TD DOM Element."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_row_array",
        "description": "row values array."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_row_index",
        "description": "row index."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_max_cols",
        "description": "max columns number."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_depth",
        "description": "path depth."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": "TD DOM Element."
    }
  },
  {
    "__docId__": 477,
    "kind": "method",
    "name": "process_row_array",
    "memberof": "js/components/attributes_table.js~AttributesTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/attributes_table.js~AttributesTable#process_row_array",
    "access": "public",
    "description": "Build a table row DOM element.",
    "lineNumber": 409,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_body_element",
        "description": "table body element."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_row_array",
        "description": "row values array."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_row_index",
        "description": "row index."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_max_rows",
        "description": "max rows number."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_max_cols",
        "description": "max columns number."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_mode",
        "description": "fill mode:append/prepend"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_max_rows_action",
        "description": "action on max rows."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_depth",
        "description": "path depth."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 478,
    "kind": "file",
    "name": "js/components/dock.js",
    "content": "// NPM IMPORTS\r\nimport _ from 'lodash'\r\nimport assert from 'assert'\r\nimport { fromJS } from 'immutable'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../../../node_modules/devapt-core-common/dist/js/utils/types'\r\n\r\n// BROWSER IMPORTS\r\nimport Container from '../base/container'\r\nimport DockItem  from './dock_item'\r\n\r\n\r\nconst context = 'browser/components/dock'\r\n\r\n\r\n\r\nexport default class Dock extends Container\r\n{\r\n\t/**\r\n\t * Creates an instance of Component.\r\n\t * @extends Component\r\n\t * \r\n\t * @param {object} arg_runtime - client runtime.\r\n\t * @param {object} arg_state - component state.\r\n\t * @param {string} arg_log_context - context of traces of this instance (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_state, arg_log_context)\r\n\t{\t\r\n\t\tsuper(arg_runtime, arg_state, arg_log_context ? arg_log_context : context)\r\n\r\n\t\tthis.is_dock_component = true\r\n\r\n\t\tthis._dock_item_components = []\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t_update_self(arg_prev_element, arg_new_element)\r\n\t{\r\n\t\t// console.log(context + ':_update_self', arg_prev_element, arg_new_element)\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Get a component instance from a name, a description...\r\n\t * \r\n\t * @param {any} arg_value - string or object value.\r\n\t * \r\n\t * @returns {undefined|Component}\r\n\t */\r\n\tget_component(arg_value)\r\n\t{\r\n\t\tif ( T.isString(arg_value) )\r\n\t\t{\r\n\t\t\treturn window.devapt().ui(arg_value)\r\n\t\t}\r\n\r\n\t\tif ( T.isObject(arg_value) )\r\n\t\t{\r\n\t\t\tif (arg_value.is_component)\r\n\t\t\t{\r\n\t\t\t\treturn arg_value\r\n\t\t\t}\r\n\r\n\t\t\tif ( T.isNotEmptyString(arg_value.type) && T.isNotEmptyString(arg_value.name) )\r\n\t\t\t{\r\n\t\t\t\treturn  window.devapt().ui().create_local(arg_value.name, arg_value)\r\n\t\t\t}\r\n\r\n\t\t\tif ( T.isNotEmptyString(arg_value.view) )\r\n\t\t\t{\r\n\t\t\t\treturn  window.devapt().ui(arg_value.view)\r\n\t\t\t}\r\n\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\treturn undefined\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get view children components.\r\n\t * \r\n\t * @returns {array} - list of Component.\r\n\t */\r\n\tget_children_component()\r\n\t{\r\n\t\tif ( ! this._children_components)\r\n\t\t{\r\n\t\t\tthis._dock_item_components = []\r\n\t\t}\r\n\t\treturn this._dock_item_components\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Append items to the container.\r\n\t * \r\n\t * @param {array} arg_items_array - items array.\r\n\t * @param {intege} arg_items_count - items count.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_append(arg_items_array, arg_items_count)\r\n\t{\r\n\t\t// console.log(context + ':ui_items_append:arg_items_array', arg_items_array, arg_items_count)\r\n\t\t\r\n\t\tconst dom_elem = this.get_dom_element()\r\n\r\n\t\tif (arg_items_count > arg_items_array.length)\r\n\t\t{\r\n\t\t\targ_items_array.splice(arg_items_count)\r\n\t\t}\r\n\t\t\r\n\t\tconst runtime = this.get_runtime()\r\n\t\t_.forEach(arg_items_array,\r\n\t\t\t(item, index)=>{\r\n\t\t\t\tconst component = this.get_component(item)\r\n\r\n\t\t\t\tif (! component)\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.warn(context + ':ui_items_append:bad item component at %i for ', index, item)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst name = component.get_name() + '_dock_item'\r\n\t\t\t\tconst state = {\r\n\t\t\t\t\t\"name\":name,\r\n\t\t\t\t\t\"state\":{\r\n\t\t\t\t\t\t\"items\":[component]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tconst dock_item = new DockItem(runtime, fromJS(state), context + ':add item:item name=' + name)\r\n\t\t\t\tdock_item.set_dom_parent(dom_elem)\r\n\t\t\t\tthis._dock_item_components.push(dock_item)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Prepend items to the container.\r\n\t * \r\n\t * @param {array} arg_items_array - items array.\r\n\t * @param {intege} arg_items_count - items count.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t// ui_items_prepend(arg_items_array, arg_items_count)\r\n\t// {\r\n\t// \t// console.log(context + ':ui_items_prepend:%s:count=%s:arg_items_array', this.get_name(), arg_items_count, arg_items_array)\r\n\t\t\r\n\t// }\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Replace container items.\r\n\t * \r\n\t * @param {array} arg_items_array - items array.\r\n\t * @param {intege} arg_items_count - items count.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t// ui_items_replace(arg_items_array/*, arg_items_count*/)\r\n\t// {\r\n\t// \t// console.log(context + ':ui_items_replace:arg_items_array', arg_items_array.length)\r\n\t\t\r\n\t// \t// REMOVE ALL EXISTING ROWS\r\n\t// \tthis.ui_items_clear()\r\n\t\t\r\n\t// }\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Insert items at container position index.\r\n\t * \r\n\t * @param {intege} arg_index - position index.\r\n\t * @param {array} arg_items_array - items array.\r\n\t * @param {intege} arg_items_count - items count.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t// ui_items_insert_at(arg_index, arg_items_array, arg_items_count)\r\n\t// {\r\n\t// \tassert( T.isArray(arg_items_array), context + ':ui_items_replace:bad items array')\r\n\t// \tassert( T.isNumber(arg_items_count), context + ':ui_items_replace:bad items count')\r\n\t\t\r\n\t// \t// NOT YET IMPLEMENTED\r\n\t// }\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove a row at given position.\r\n\t * \r\n\t * @param {number} arg_index - row index.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_remove_at_index(arg_index)\r\n\t{\r\n\t\tassert( T.isNumber(arg_index), context + ':ui_items_remove_at_index:bad index number')\r\n\r\n\t\tconst dom_elem = this.get_dom_element()\r\n\t\tif (arg_index < 0 || arg_index >= dom_elem.children.length)\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':ui_items_remove_at_index:%s:bad item index=%s', this.get_name(), arg_index)\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst child_elem = dom_elem.children[arg_index]\r\n\t\tdom_elem.removeChild(child_elem)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove a row at first position.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_remove_first()\r\n\t{\r\n\t\tconst dom_elem = this.get_dom_element()\r\n\t\tconst first_elem = dom_elem.firstElementChild()\r\n\t\tdom_elem.removeChild(first_elem)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove a row at last position.\r\n\t * \r\n\t * @param {integer} arg_count - items count to remove.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_remove_last(arg_count=1)\r\n\t{\r\n\t\t// console.log(context + ':ui_items_remove_last:arg_count', arg_count)\r\n\t\t\r\n\t\tif (arg_count <= 0)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\tconst dom_elem = this.get_dom_element()\r\n\t\tconst children_elems = dom_elem.children\r\n\t\tconst last_index = children_elems.length - arg_count - 1\r\n\t\tlet row_index = last_index - 1 >= 0 ? last_index - 1 : 0\r\n\t\tfor( ; row_index < children_elems.length ; row_index++)\r\n\t\t{\r\n\t\t\tconst child_elem = children_elems[row_index]\r\n\t\t\tdom_elem.removeChild(child_elem)\r\n\t\t}\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/components/dock.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 479,
    "kind": "variable",
    "name": "context",
    "memberof": "js/components/dock.js",
    "static": true,
    "longname": "js/components/dock.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/components/dock.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 480,
    "kind": "class",
    "name": "Dock",
    "memberof": "js/components/dock.js",
    "static": true,
    "longname": "js/components/dock.js~Dock",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/components/dock.js",
    "importStyle": "Dock",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/base/container.js~Container"
    ]
  },
  {
    "__docId__": 481,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/components/dock.js~Dock",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/dock.js~Dock#constructor",
    "access": "public",
    "description": "Creates an instance of Component.",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "Component"
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "context of traces of this instance (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 482,
    "kind": "member",
    "name": "is_dock_component",
    "memberof": "js/components/dock.js~Dock",
    "static": false,
    "longname": "js/components/dock.js~Dock#is_dock_component",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 483,
    "kind": "member",
    "name": "_dock_item_components",
    "memberof": "js/components/dock.js~Dock",
    "static": false,
    "longname": "js/components/dock.js~Dock#_dock_item_components",
    "access": "private",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 484,
    "kind": "method",
    "name": "_update_self",
    "memberof": "js/components/dock.js~Dock",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/dock.js~Dock#_update_self",
    "access": "private",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [
      {
        "name": "arg_prev_element",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_new_element",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 485,
    "kind": "method",
    "name": "get_component",
    "memberof": "js/components/dock.js~Dock",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/dock.js~Dock#get_component",
    "access": "public",
    "description": "Get a component instance from a name, a description...",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{undefined|Component}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_value",
        "description": "string or object value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined",
        "Component"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 486,
    "kind": "method",
    "name": "get_children_component",
    "memberof": "js/components/dock.js~Dock",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/dock.js~Dock#get_children_component",
    "access": "public",
    "description": "Get view children components.",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} - list of Component."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "list of Component."
    },
    "params": []
  },
  {
    "__docId__": 488,
    "kind": "method",
    "name": "ui_items_append",
    "memberof": "js/components/dock.js~Dock",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/dock.js~Dock#ui_items_append",
    "access": "public",
    "description": "Append items to the container.",
    "lineNumber": 110,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_array",
        "description": "items array."
      },
      {
        "nullable": null,
        "types": [
          "intege"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_count",
        "description": "items count."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 489,
    "kind": "method",
    "name": "ui_items_remove_at_index",
    "memberof": "js/components/dock.js~Dock",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/dock.js~Dock#ui_items_remove_at_index",
    "access": "public",
    "description": "Remove a row at given position.",
    "lineNumber": 209,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_index",
        "description": "row index."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 490,
    "kind": "method",
    "name": "ui_items_remove_first",
    "memberof": "js/components/dock.js~Dock",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/dock.js~Dock#ui_items_remove_first",
    "access": "public",
    "description": "Remove a row at first position.",
    "lineNumber": 230,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 491,
    "kind": "method",
    "name": "ui_items_remove_last",
    "memberof": "js/components/dock.js~Dock",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/dock.js~Dock#ui_items_remove_last",
    "access": "public",
    "description": "Remove a row at last position.",
    "lineNumber": 246,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_count",
        "description": "items count to remove."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 492,
    "kind": "file",
    "name": "js/components/dock_item.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T         from 'devapt-core-common/dist/js/utils/types'\r\nimport Stream    from 'devapt-core-common/dist/js/messaging/stream'\r\n\r\n// BROWSER IMPORTS\r\nimport Container from '../base/container'\r\n\r\n\r\nconst context = 'browser/components/dock_item'\r\n\r\n\r\n\r\nexport default class DockItem extends Container\r\n{\r\n\t/**\r\n\t * Creates an instance of DockItem.\r\n\t * \r\n\t * @param {object} arg_runtime - client runtime.\r\n\t * @param {object} arg_state - component state.\r\n\t * @param {string} arg_log_context - context of traces of this instance (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_state, arg_log_context)\r\n\t{\t\r\n\t\tsuper(arg_runtime, arg_state, arg_log_context ? arg_log_context : context)\r\n\r\n\t\tthis.is_dock_item = true\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Expand component to fullscreen (inside browser window).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\texpand_to_fullscreen()\r\n\t{\r\n\t\tconsole.log(context + ':expand_to_fullscreen')\r\n\r\n\t\tlet dom_elem = this.get_dom_element()\r\n\t\tconst bcolor = 'background-color'\r\n\t\tconst lmargin = 'margin-left'\r\n\r\n\t\tif (dom_elem.parentNode && dom_elem.parentNode.className.indexOf('devapt-dock-item') > -1)\r\n\t\t{\r\n\t\t\tdom_elem = dom_elem.parentNode\r\n\t\t}\r\n\r\n\t\tdom_elem.className = dom_elem.className ? dom_elem.className : ''\r\n\r\n\t\tif ( dom_elem.className.indexOf('devapt-fullscreen') < 0 )\r\n\t\t{\r\n\t\t\tthis._save_styles()\r\n\r\n\t\t\tdocument.body.style.overflow = 'hidden'\r\n\r\n\t\t\tdom_elem.style.position   = 'fixed'\r\n\t\t\tdom_elem.style.left       = '20px'\r\n\t\t\tdom_elem.style.top        = '20px'\r\n\t\t\tdom_elem.style.height     = '100%'\r\n\t\t\tdom_elem.style.width      = '100%'\r\n\t\t\tdom_elem.style[bcolor]    = 'white'\r\n\t\t\tdom_elem.style[lmargin]   = '0px'\r\n\t\t\tdom_elem.style['z-index'] = 999\r\n\t\t\tdom_elem.className       += ' devapt-fullscreen'\r\n\r\n\t\t\tthis.resize(dom_elem.offsetWidth, dom_elem.offsetHeight)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Collapse component from fullscreen to original size.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tcollapse_from_fullscreen()\r\n\t{\r\n\t\t// console.log(context + ':collapse_from_fullscreen')\r\n\r\n\t\tlet dom_elem = this.get_dom_element()\r\n\t\tconst bcolor = 'background-color'\r\n\t\tconst lmargin = 'margin-left'\r\n\r\n\t\tif (dom_elem.parentNode && dom_elem.parentNode.className.indexOf('devapt-dock-item') > -1)\r\n\t\t{\r\n\t\t\tdom_elem = dom_elem.parentNode\r\n\t\t}\r\n\r\n\t\tdom_elem.className = dom_elem.className ? dom_elem.className : ''\r\n\r\n\t\tif ( dom_elem.className.indexOf('devapt-fullscreen') > -1 && T.isObject(this.saved_dom) && T.isObject(this.saved_dom.style) )\r\n\t\t{\r\n\t\t\tthis._restore_styles()\r\n\r\n\t\t\tthis.resize(dom_elem.offsetWidth, dom_elem.offsetHeight)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Toggle component fullscreen mode.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\ttoggle_from_fullscreen()\r\n\t{\r\n\t\tlet dom_elem = this.get_dom_element()\r\n\r\n\t\tif (dom_elem.parentNode && dom_elem.parentNode.className.indexOf('devapt-dock-item') > -1)\r\n\t\t{\r\n\t\t\tdom_elem = dom_elem.parentNode\r\n\t\t}\r\n\r\n\t\tdom_elem.className = dom_elem.className ? dom_elem.className : ''\r\n\r\n\t\tif ( dom_elem.className.indexOf('devapt-fullscreen') > -1 )\r\n\t\t{\r\n\t\t\tthis.collapse_from_fullscreen()\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tthis.expand_to_fullscreen()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Save style attributes.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t_save_styles()\r\n\t{\r\n\t\tconst bcolor = 'background-color'\r\n\t\tconst lmargin = 'margin-left'\r\n\t\tlet dom_elem = this.get_dom_element()\r\n\r\n\t\tif (dom_elem.parentNode && dom_elem.parentNode.className.indexOf('devapt-dock-item') > -1)\r\n\t\t{\r\n\t\t\tdom_elem = dom_elem.parentNode\r\n\t\t}\r\n\r\n\t\tdom_elem.className = dom_elem.className ? dom_elem.className : ''\r\n\r\n\t\tthis.saved_dom = {\r\n\t\t\tbody_overflow:window.document.body.style.overflow,\r\n\t\t\tclassName:dom_elem.className,\r\n\t\t\tstyle:{\r\n\t\t\t\tposition:dom_elem.style.position,\r\n\t\t\t\tleft:    dom_elem.style.left,\r\n\t\t\t\ttop:     dom_elem.style.top,\r\n\t\t\t\theight:  dom_elem.style.height,\r\n\t\t\t\twidth:   dom_elem.style.width,\r\n\t\t\t\tbcolor:  dom_elem.style[bcolor],\r\n\t\t\t\tlmargin: dom_elem.style[lmargin],\r\n\t\t\t\tzindex:  dom_elem.style['z-index']\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Toggle component fullscreen mode.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t_restore_styles()\r\n\t{\r\n\t\tconst bcolor = 'background-color'\r\n\t\tconst lmargin = 'margin-left'\r\n\t\tlet dom_elem = this.get_dom_element()\r\n\t\t\r\n\t\tif (dom_elem.parentNode && dom_elem.parentNode.className.indexOf('devapt-dock-item') > -1)\r\n\t\t{\r\n\t\t\tdom_elem = dom_elem.parentNode\r\n\t\t}\r\n\t\t\r\n\t\twindow.document.body.style.overflow = this.saved_dom.body_overflow\r\n\r\n\t\tdom_elem.style.position   = this.saved_dom.style.position\r\n\t\tdom_elem.style.left       = this.saved_dom.style.left\r\n\t\tdom_elem.style.top        = this.saved_dom.style.top\r\n\t\tdom_elem.style.height     = this.saved_dom.style.height\r\n\t\tdom_elem.style.width      = this.saved_dom.style.width\r\n\t\tdom_elem.style[bcolor]    = this.saved_dom.style.bcolor\r\n\t\tdom_elem.style[lmargin]   = this.saved_dom.style.lmargin\r\n\t\tdom_elem.style['z-index'] = this.saved_dom.style.zindex\r\n\r\n\t\tdom_elem.className = this.saved_dom.className\r\n\r\n\t\tthis.saved_dom = {}\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/components/dock_item.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 493,
    "kind": "variable",
    "name": "context",
    "memberof": "js/components/dock_item.js",
    "static": true,
    "longname": "js/components/dock_item.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/components/dock_item.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 494,
    "kind": "class",
    "name": "DockItem",
    "memberof": "js/components/dock_item.js",
    "static": true,
    "longname": "js/components/dock_item.js~DockItem",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/components/dock_item.js",
    "importStyle": "DockItem",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/base/container.js~Container"
    ]
  },
  {
    "__docId__": 495,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/components/dock_item.js~DockItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/dock_item.js~DockItem#constructor",
    "access": "public",
    "description": "Creates an instance of DockItem.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "context of traces of this instance (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 496,
    "kind": "member",
    "name": "is_dock_item",
    "memberof": "js/components/dock_item.js~DockItem",
    "static": false,
    "longname": "js/components/dock_item.js~DockItem#is_dock_item",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 497,
    "kind": "method",
    "name": "expand_to_fullscreen",
    "memberof": "js/components/dock_item.js~DockItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/dock_item.js~DockItem#expand_to_fullscreen",
    "access": "public",
    "description": "Expand component to fullscreen (inside browser window).",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 498,
    "kind": "method",
    "name": "collapse_from_fullscreen",
    "memberof": "js/components/dock_item.js~DockItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/dock_item.js~DockItem#collapse_from_fullscreen",
    "access": "public",
    "description": "Collapse component from fullscreen to original size.",
    "lineNumber": 83,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 499,
    "kind": "method",
    "name": "toggle_from_fullscreen",
    "memberof": "js/components/dock_item.js~DockItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/dock_item.js~DockItem#toggle_from_fullscreen",
    "access": "public",
    "description": "Toggle component fullscreen mode.",
    "lineNumber": 113,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 500,
    "kind": "method",
    "name": "_save_styles",
    "memberof": "js/components/dock_item.js~DockItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/dock_item.js~DockItem#_save_styles",
    "access": "private",
    "description": "Save style attributes.",
    "lineNumber": 140,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 501,
    "kind": "member",
    "name": "saved_dom",
    "memberof": "js/components/dock_item.js~DockItem",
    "static": false,
    "longname": "js/components/dock_item.js~DockItem#saved_dom",
    "access": "public",
    "description": null,
    "lineNumber": 153,
    "undocument": true,
    "type": {
      "types": [
        "{\"body_overflow\": *, \"className\": *, \"style\": *}"
      ]
    }
  },
  {
    "__docId__": 502,
    "kind": "method",
    "name": "_restore_styles",
    "memberof": "js/components/dock_item.js~DockItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/dock_item.js~DockItem#_restore_styles",
    "access": "private",
    "description": "Toggle component fullscreen mode.",
    "lineNumber": 176,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 504,
    "kind": "file",
    "name": "js/components/input-field.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport Stream from '../../../node_modules/devapt-core-common/dist/js/messaging/stream'\r\n\r\n// BROWSER IMPORTS\r\nimport Component from '../base/component'\r\n\r\n\r\nconst context = 'browser/components/input-field'\r\n\r\n\r\n\r\nexport default class InputField extends Component\r\n{\r\n\t/**\r\n\t * Creates an instance of Component.\r\n\t * @extends Component\r\n\t * \r\n\t * @param {object} arg_runtime - client runtime.\r\n\t * @param {object} arg_state - component state.\r\n\t * @param {string} arg_log_context - context of traces of this instance (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_state, arg_log_context)\r\n\t{\t\r\n\t\tsuper(arg_runtime, arg_state, arg_log_context ? arg_log_context : context)\r\n\r\n\t\tthis.is_input_field = true\r\n\r\n\t\tthis.init()\r\n\t}\r\n\t\r\n\t\r\n\t// _update_self(arg_prev_element, arg_new_element)\r\n\t// {\r\n\t// \t// console.log(context + ':_update_self', arg_prev_element, arg_new_element)\r\n\r\n\t// \tif (arg_prev_element != arg_new_element)\r\n\t// \t{\r\n\t// \t\t// console.log(context + ':_update_self:different elements')\r\n\t// \t\tif (this.sparkline)\r\n\t// \t\t{\r\n\t// \t\t\t// console.log(context + ':_update_self:sparkline exists')\r\n\t// \t\t\targ_new_element.innerHTML = arg_prev_element.innerHTML\r\n\t// \t\t\tdelete this.sparkline\r\n\t// \t\t}\r\n\t// \t}\r\n\t// }\r\n\r\n\r\n\t// handle_items_change(arg_path, arg_previous_value, arg_new_value)\r\n\t// {\r\n\t// \t// console.log(context + ':handle_items_change', arg_path, arg_previous_value, arg_new_value)\r\n\t// }\r\n\r\n\t\r\n\tinit()\r\n\t{\r\n\t\t// console.log(context + ':init')\r\n\r\n\t\t// var self = this\r\n\t\t// var elm = this.get_dom_element()\r\n\t\t// console.log(this.get_name(), context + ':this.get_name()')\r\n\t\t// console.log(this.get_dom_id(), context + ':this.get_dom_id()')\r\n\t\t// console.log(elm, context + ':elm')\r\n\r\n\t\t// var view_state = this.get_state().toJS()\r\n\t\t// var value = view_state.value ? view_state.value : ''\r\n\t}\r\n\t\r\n\r\n\r\n\t/**\r\n\t * Get a named stream.\r\n\t * \r\n\t * @param {string} arg_stream_name - stream name.\r\n\t * \r\n\t * @returns {Stream|undefined} - found stream.\r\n\t */\r\n\tget_named_stream(arg_stream_name)\r\n\t{\r\n\t\tconst dom_elem = this.get_dom_element()\r\n\t\tif (! dom_elem)\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':get_named_stream:%s:undefined dom element', this.get_name())\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\tswitch(arg_stream_name.toLocaleLowerCase()) {\r\n\t\t\tcase 'enter':{\r\n\t\t\t\t// console.log(context + ':get_named_stream:%s:stream found=%s', this.get_name(), arg_stream_name.toLocaleLowerCase())\r\n\t\t\t\t\r\n\t\t\t\tconst stream = new Stream.from_dom_event(dom_elem, 'keydown')\r\n\r\n\t\t\t\tconst xform_stream = stream.get_source_stream()\r\n\t\t\t\t.debounce(300) // limit the rate of queries\r\n\t\t\t\t.filter( // get text value\r\n\t\t\t\t\t(event)=>{\r\n\t\t\t\t\t\tconsole.log(context + ':keydown(enter) stream:value', event.target.value)\r\n\t\t\t\t\t\treturn event.keyCode == 13\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\t.skipDuplicates() // Ignore duplicate events with same text\r\n\r\n\t\t\t\tstream.set_transformed_stream(xform_stream)\r\n\t\t\t\treturn stream\r\n\t\t\t}\r\n\t\t\tcase 'keydown':{\r\n\t\t\t\t// console.log(context + ':get_named_stream:%s:stream found=%s', this.get_name(), arg_stream_name.toLocaleLowerCase())\r\n\t\t\t\t\r\n\t\t\t\tconst stream = new Stream.from_dom_event(dom_elem, 'keydown')\r\n\r\n\t\t\t\tconst xform_stream = stream.get_source_stream()\r\n\t\t\t\t.debounce(300) // limit the rate of queries\r\n\t\t\t\t.map( // get text value\r\n\t\t\t\t\t(event)=>{\r\n\t\t\t\t\t\t// console.log(context + ':keydown stream:value', event.target.value)\r\n\t\t\t\t\t\treturn event.target.value\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\t.skipDuplicates() // Ignore duplicate events with same text\r\n\r\n\t\t\t\tstream.set_transformed_stream(xform_stream)\r\n\t\t\t\treturn stream\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tconsole.warn(context + ':get_named_stream:%s:unknow named stream=%s', this.get_name(), arg_stream_name.toLocaleLowerCase())\r\n\t\treturn undefined\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/components/input-field.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 505,
    "kind": "variable",
    "name": "context",
    "memberof": "js/components/input-field.js",
    "static": true,
    "longname": "js/components/input-field.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/components/input-field.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 506,
    "kind": "class",
    "name": "InputField",
    "memberof": "js/components/input-field.js",
    "static": true,
    "longname": "js/components/input-field.js~InputField",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/components/input-field.js",
    "importStyle": "InputField",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/base/component.js~Component"
    ]
  },
  {
    "__docId__": 507,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/components/input-field.js~InputField",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/input-field.js~InputField#constructor",
    "access": "public",
    "description": "Creates an instance of Component.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "Component"
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "context of traces of this instance (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 508,
    "kind": "member",
    "name": "is_input_field",
    "memberof": "js/components/input-field.js~InputField",
    "static": false,
    "longname": "js/components/input-field.js~InputField#is_input_field",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 509,
    "kind": "method",
    "name": "init",
    "memberof": "js/components/input-field.js~InputField",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/input-field.js~InputField#init",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 510,
    "kind": "method",
    "name": "get_named_stream",
    "memberof": "js/components/input-field.js~InputField",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/input-field.js~InputField#get_named_stream",
    "access": "public",
    "description": "Get a named stream.",
    "lineNumber": 83,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Stream|undefined} - found stream."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_stream_name",
        "description": "stream name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Stream",
        "undefined"
      ],
      "spread": false,
      "description": "found stream."
    }
  },
  {
    "__docId__": 511,
    "kind": "file",
    "name": "js/components/logs_table.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\nimport _ from 'lodash'\r\nimport Immutable from 'immutable'\r\n\r\n// COMMON IMPORTS\r\nimport T   from '../../../node_modules/devapt-core-common/dist/js/utils/types'\r\nimport uid from '../../../node_modules/devapt-core-common/dist/js/utils/uid'\r\n\r\n// BROWSER IMPORTS\r\nimport Table from './table'\r\n\r\n\r\nconst context = 'browser/components/logs_table'\r\n\r\n\r\n\r\n/**\r\n * @file UI component class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class LogsTable extends Table\r\n{\r\n\t\r\n\t/**\r\n\t * Creates an instance of LogsTable.\r\n\t * \r\n\t * @param {object} arg_runtime - client runtime.\r\n\t * @param {object} arg_state - component state.\r\n\t * @param {string} arg_log_context - context of traces of this instance (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_state, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_runtime, arg_state, log_context)\r\n\t\t\r\n\t\tthis.is_logs_table_component = true\r\n\r\n\t\tthis.register_state_value_change_handle(['selected_column'], 'handle_selected_column_change')\r\n\r\n\t\tthis._elements_cache = {}\r\n\t\tthis._filters = {}\r\n\r\n\t\t// DEBUG\r\n\t\t// this.enable_trace()\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Build a table row DOM element.\r\n\t *\r\n\t * @param {array} arg_row_array - row values array.\r\n\t * @param {integer} arg_row_index - row index.\r\n\t * @param {integer} arg_max_cols - max columns number.\r\n\t * \r\n\t * @returns {Element} - TD DOM Element.\r\n\t */\r\n\tbuild_row(arg_row_array, arg_row_index, arg_max_cols)\r\n\t{\r\n\t\tconst td_elem = super.build_row(arg_row_array, arg_row_index, arg_max_cols)\r\n\t\t\r\n\t\tconst log_uid = 'log_' + uid()\r\n\t\targ_row_array.push(log_uid)\r\n\t\ttd_elem.setAttribute('data-devapt-log_uid', log_uid)\r\n\r\n\t\tconst row_record = {\r\n\t\t\telem:td_elem,\r\n\t\t\tlog:arg_row_array,\r\n\t\t\tlog_uid:log_uid,\r\n\t\t\trow_index:arg_row_index\r\n\t\t}\r\n\t\tthis._elements_cache[log_uid] = row_record\r\n\r\n\t\tthis.apply_filter_on_row_record(row_record)\r\n\r\n\t\treturn td_elem\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get column index from its name.\r\n\t *\r\n\t * @param {string} arg_column_name - column name.\r\n\t * \r\n\t * @returns {integer} - column index\r\n\t */\r\n\tget_column_index(arg_column_name)\r\n\t{\r\n\t\tswitch(arg_column_name){\r\n\t\t\tcase 'ts':       return 0\r\n\t\t\tcase 'level':    return 1\r\n\t\t\tcase 'source':   return 2\r\n\t\t\tcase 'context':  return 3\r\n\t\t\tcase 'instance': return 4\r\n\t\t\tcase 'group':    return 5\r\n\t\t\tcase 'action':   return 6\r\n\t\t\tcase 'text':     return 7\r\n\t\t}\r\n\r\n\t\treturn 0\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Delete table row DOM element.\r\n\t *\r\n\t * @param {Element} arg_row_elem - row TR Element.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdelete_row_elem(arg_row_elem)\r\n\t{\r\n\t\tconst log_uid = arg_row_elem.getAttribute('data-devapt-log_uid')\r\n\t\tdelete this._elements_cache[log_uid]\r\n\t}\r\n\r\n\r\n\tapply_filter(arg_filter_value, arg_cell_value)\r\n\t{\r\n\t\tconst filter_mode_not = ('' + arg_filter_value).startsWith('NOT ') ? true : false\r\n\t\tif (filter_mode_not)\r\n\t\t{\r\n\t\t\treturn ('' + arg_cell_value).search(arg_filter_value.substr(4)) < 0\r\n\t\t}\r\n\t\treturn ('' + arg_cell_value).search(arg_filter_value) >= 0\r\n\t}\r\n\r\n\r\n\tapply_filter_on_row_record(arg_row_record)\r\n\t{\r\n\t\tlet match = true\r\n\t\t_.forEach(this._filters,\r\n\t\t\t(filter)=>{\r\n\t\t\t\tif (match && arg_row_record.log.length > filter.index)\r\n\t\t\t\t{\r\n\t\t\t\t\tconst column_value = arg_row_record.log[filter.index]\r\n\t\t\t\t\tconst cell_match = this.apply_filter(filter.value, column_value)\r\n\r\n\t\t\t\t\tmatch = filter.value == '' || cell_match\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t\t\t\t\r\n\t\t// console.log('apply_filter_on_row_record:match %b', match, this._filters, row_record.elem.style.display)\r\n\t\t\r\n\t\tif (match)\r\n\t\t{\r\n\t\t\targ_row_record.elem.style.display = 'table-row'\r\n\t\t} else {\r\n\t\t\targ_row_record.elem.style.display = 'none'\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Filter a column.\r\n\t *\r\n\t * @param {array} arg_row_array - row values array.\r\n\t * @param {integer} arg_row_index - row index.\r\n\t * @param {integer} arg_max_cols - max columns number.\r\n\t * \r\n\t * @returns {string} - HTML TR string\r\n\t */\r\n\tdo_action_filter_column(arg_column_name, arg_filter_value)\r\n\t{\r\n\t\t// console.log(context + ':do_action_filter_column:column=%s, filter=%s',arg_column_name, arg_filter_value, this._elements_cache)\r\n\r\n\t\tconst column_index = this.get_column_index(arg_column_name)\r\n\t\tthis._filters[arg_column_name] = { value:arg_filter_value, index:column_index }\r\n\r\n\t\t_.forEach(this._elements_cache,\r\n\t\t\t(row_record)=>{\r\n\t\t\t\tthis.apply_filter_on_row_record(row_record)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Handle click on TH tags.\r\n\t * \r\n\t * @param {any} arg_stream_data - object record: { component_name:string,  event_name:string, dom_selector:string, target:object, data:any }.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdo_click_th(arg_stream_data)\r\n\t{\r\n\t\tthis.dispatch_update_state_value_action(['selected_column'], arg_stream_data.target.id)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Handle selected_column state change.\r\n\t * \r\n\t * @param {array}       arg_path           - value state path.\r\n\t * @param {Immutable.*} arg_previous_value - previous state value.\r\n\t * @param {Immutable.*} arg_new_value      - new state value.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\thandle_selected_column_change(arg_path, arg_previous_value, arg_new_value)\r\n\t{\r\n\t\tconsole.log(context + ':handle_selected_column_change', arg_path, arg_previous_value, arg_new_value)\r\n\t\t\r\n\t\tif (! arg_previous_value && ! arg_new_value)\r\n\t\t{\r\n\t\t\tconsole.log(context + ':handle_selected_column_change:no previous and no new values', arg_path, arg_previous_value, arg_new_value)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif ( Immutable.is(arg_previous_value, arg_new_value) )\r\n\t\t{\r\n\t\t\tconsole.log(context + ':handle_selected_column_change:previous value = new value', arg_path, arg_previous_value, arg_new_value)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst new_value = arg_new_value && arg_new_value.toJS() ? arg_new_value.toJS() : undefined\r\n\t\tif ( ! T.isString(new_value) )\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':handle_selected_column_change:bad new value string', arg_path, arg_previous_value, arg_new_value)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// TODO\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/components/logs_table.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 512,
    "kind": "variable",
    "name": "context",
    "memberof": "js/components/logs_table.js",
    "static": true,
    "longname": "js/components/logs_table.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/components/logs_table.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 513,
    "kind": "class",
    "name": "LogsTable",
    "memberof": "js/components/logs_table.js",
    "static": true,
    "longname": "js/components/logs_table.js~LogsTable",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/components/logs_table.js",
    "importStyle": "LogsTable",
    "description": "",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "UI component class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/components/table.js~Table"
    ]
  },
  {
    "__docId__": 514,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/components/logs_table.js~LogsTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/logs_table.js~LogsTable#constructor",
    "access": "public",
    "description": "Creates an instance of LogsTable.",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "context of traces of this instance (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 515,
    "kind": "member",
    "name": "is_logs_table_component",
    "memberof": "js/components/logs_table.js~LogsTable",
    "static": false,
    "longname": "js/components/logs_table.js~LogsTable#is_logs_table_component",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 516,
    "kind": "member",
    "name": "_elements_cache",
    "memberof": "js/components/logs_table.js~LogsTable",
    "static": false,
    "longname": "js/components/logs_table.js~LogsTable#_elements_cache",
    "access": "private",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 517,
    "kind": "member",
    "name": "_filters",
    "memberof": "js/components/logs_table.js~LogsTable",
    "static": false,
    "longname": "js/components/logs_table.js~LogsTable#_filters",
    "access": "private",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 518,
    "kind": "method",
    "name": "build_row",
    "memberof": "js/components/logs_table.js~LogsTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/logs_table.js~LogsTable#build_row",
    "access": "public",
    "description": "Build a table row DOM element.",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Element} - TD DOM Element."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_row_array",
        "description": "row values array."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_row_index",
        "description": "row index."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_max_cols",
        "description": "max columns number."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": "TD DOM Element."
    }
  },
  {
    "__docId__": 519,
    "kind": "method",
    "name": "get_column_index",
    "memberof": "js/components/logs_table.js~LogsTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/logs_table.js~LogsTable#get_column_index",
    "access": "public",
    "description": "Get column index from its name.",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{integer} - column index"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_column_name",
        "description": "column name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "integer"
      ],
      "spread": false,
      "description": "column index"
    }
  },
  {
    "__docId__": 520,
    "kind": "method",
    "name": "delete_row_elem",
    "memberof": "js/components/logs_table.js~LogsTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/logs_table.js~LogsTable#delete_row_elem",
    "access": "public",
    "description": "Delete table row DOM element.",
    "lineNumber": 117,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_row_elem",
        "description": "row TR Element."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 521,
    "kind": "method",
    "name": "apply_filter",
    "memberof": "js/components/logs_table.js~LogsTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/logs_table.js~LogsTable#apply_filter",
    "access": "public",
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "params": [
      {
        "name": "arg_filter_value",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_cell_value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 522,
    "kind": "method",
    "name": "apply_filter_on_row_record",
    "memberof": "js/components/logs_table.js~LogsTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/logs_table.js~LogsTable#apply_filter_on_row_record",
    "access": "public",
    "description": null,
    "lineNumber": 135,
    "undocument": true,
    "params": [
      {
        "name": "arg_row_record",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 523,
    "kind": "method",
    "name": "do_action_filter_column",
    "memberof": "js/components/logs_table.js~LogsTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/logs_table.js~LogsTable#do_action_filter_column",
    "access": "public",
    "description": "Filter a column.",
    "lineNumber": 171,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - HTML TR string"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_row_array",
        "description": "row values array."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_row_index",
        "description": "row index."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_max_cols",
        "description": "max columns number."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "HTML TR string"
    }
  },
  {
    "__docId__": 524,
    "kind": "method",
    "name": "do_click_th",
    "memberof": "js/components/logs_table.js~LogsTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/logs_table.js~LogsTable#do_click_th",
    "access": "public",
    "description": "Handle click on TH tags.",
    "lineNumber": 194,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_stream_data",
        "description": "object record: { component_name:string,  event_name:string, dom_selector:string, target:object, data:any }."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 525,
    "kind": "method",
    "name": "handle_selected_column_change",
    "memberof": "js/components/logs_table.js~LogsTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/logs_table.js~LogsTable#handle_selected_column_change",
    "access": "public",
    "description": "Handle selected_column state change.",
    "lineNumber": 210,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_path",
        "description": "value state path."
      },
      {
        "nullable": null,
        "types": [
          "Immutable.*"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_previous_value",
        "description": "previous state value."
      },
      {
        "nullable": null,
        "types": [
          "Immutable.*"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_new_value",
        "description": "new state value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 526,
    "kind": "file",
    "name": "js/components/page.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\nimport vdom_parser    from 'vdom-parser'\r\nimport diff           from 'virtual-dom/diff'\r\nimport patch          from 'virtual-dom/patch'\r\nimport create_element from 'virtual-dom/create-element'\r\nimport VNode          from 'virtual-dom/vnode/vnode'\r\nimport VText          from 'virtual-dom/vnode/vtext'\r\nimport html_to_vdom   from 'html-to-vdom'\r\n\r\n// COMMON IMPORTS\r\n\r\n\r\nconst convertHTML = html_to_vdom({\r\n\tVNode: VNode,\r\n\tVText: VText\r\n})\r\n\r\n\r\n// let context = 'browser/components/page'\r\n\r\n\r\n\r\n/**\r\n * @file client page class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class Page\r\n{\r\n\t/**\r\n\t * Create a Page instance.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.target_elem_head = window.document.head\r\n\t\tthis.target_elem_body = window.document.body\r\n\t\tthis.target_tree_head = undefined\r\n\t\tthis.target_tree_body = undefined\r\n\t\tthis.target_node_head = undefined\r\n\t\tthis.target_node_body = undefined\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Render a page.\r\n\t */\r\n\trender_html(arg_html)\r\n\t{\r\n\t\tconsole.log('Page.render_html')\r\n\t\t$(document.body).html(arg_html)\r\n\t\t// this.render_html_with_vdom(arg_html)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Render a page.\r\n\t */\r\n\trender_html_with_vdom(arg_html)\r\n\t{\r\n\t\tconsole.log('Page.render_html_with_vdom')\r\n\r\n\t\tif (! this.target_tree)\r\n\t\t{\r\n\t\t\tconsole.log('Page.render_html_with_vdom:init')\r\n\r\n\t\t\tthis.target_tree_head = vdom_parser(this.target_elem_head)\r\n\t\t\tthis.target_tree_body = vdom_parser(this.target_elem_body)\r\n\r\n\t\t\tthis.target_node_head = create_element(this.target_tree_head)\r\n\t\t\tthis.target_node_body = create_element(this.target_tree_body)\r\n\r\n\t\t\t// console.log('Page.render_html:init:target_node', this.target_node)\r\n\t\t\t// console.log('Page.render_html:init:target_node', this.target_node)\r\n\t\t}\r\n\r\n\t\tconst new_tree = convertHTML(arg_html)\r\n\r\n\t\tconst new_tree_head = new_tree.children[0]\r\n\t\tconst new_tree_body = new_tree.children[2]\r\n\r\n\t\tconst patches_head = diff(this.target_tree_head, new_tree_head)\r\n\t\tconst patches_body = diff(this.target_tree_body, new_tree_body)\r\n\r\n\t\tconsole.log('Page.render_html:new_tree_body', new_tree_body)\r\n\t\tconsole.log('Page.render_html:patches_body', patches_body)\r\n\r\n\t\tthis.target_node_head = patch(this.target_node_head, patches_head)\r\n\t\tthis.target_node_body = patch(this.target_node_body, patches_body)\r\n\r\n\t\tthis.target_tree_head = new_tree_head\r\n\t\tthis.target_tree_body = new_tree_body\r\n\r\n\t\tconsole.log('Page.render_html:target_node_body', this.target_node_body)\r\n\t\t// console.log('Page.render_html:target_tree_body', this.target_tree_body)\r\n\t\t\r\n\t\t// $(document.body).html(arg_html)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/components/page.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 527,
    "kind": "variable",
    "name": "convertHTML",
    "memberof": "js/components/page.js",
    "static": true,
    "longname": "js/components/page.js~convertHTML",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/components/page.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 528,
    "kind": "class",
    "name": "Page",
    "memberof": "js/components/page.js",
    "static": true,
    "longname": "js/components/page.js~Page",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/components/page.js",
    "importStyle": "Page",
    "description": "",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "client page class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 529,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/components/page.js~Page",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/page.js~Page#constructor",
    "access": "public",
    "description": "Create a Page instance.",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 530,
    "kind": "member",
    "name": "target_elem_head",
    "memberof": "js/components/page.js~Page",
    "static": false,
    "longname": "js/components/page.js~Page#target_elem_head",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 531,
    "kind": "member",
    "name": "target_elem_body",
    "memberof": "js/components/page.js~Page",
    "static": false,
    "longname": "js/components/page.js~Page#target_elem_body",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 532,
    "kind": "member",
    "name": "target_tree_head",
    "memberof": "js/components/page.js~Page",
    "static": false,
    "longname": "js/components/page.js~Page#target_tree_head",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 533,
    "kind": "member",
    "name": "target_tree_body",
    "memberof": "js/components/page.js~Page",
    "static": false,
    "longname": "js/components/page.js~Page#target_tree_body",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 534,
    "kind": "member",
    "name": "target_node_head",
    "memberof": "js/components/page.js~Page",
    "static": false,
    "longname": "js/components/page.js~Page#target_node_head",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 535,
    "kind": "member",
    "name": "target_node_body",
    "memberof": "js/components/page.js~Page",
    "static": false,
    "longname": "js/components/page.js~Page#target_node_body",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 536,
    "kind": "method",
    "name": "render_html",
    "memberof": "js/components/page.js~Page",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/page.js~Page#render_html",
    "access": "public",
    "description": "Render a page.",
    "lineNumber": 52,
    "params": [
      {
        "name": "arg_html",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 537,
    "kind": "method",
    "name": "render_html_with_vdom",
    "memberof": "js/components/page.js~Page",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/page.js~Page#render_html_with_vdom",
    "access": "public",
    "description": "Render a page.",
    "lineNumber": 64,
    "params": [
      {
        "name": "arg_html",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 546,
    "kind": "file",
    "name": "js/components/records_table.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../../../node_modules/devapt-core-common/dist/js/utils/types'\r\n\r\n// BROWSER IMPORTS\r\nimport Table from './table'\r\n\r\n\r\nconst context = 'browser/components/records_table'\r\n\r\n\r\n\r\n/**\r\n * @file UI component class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class RecordsTable extends Table\r\n{\r\n\t\r\n\t/**\r\n\t * Creates an instance of Component.\r\n\t * @extends Table\r\n\t * \r\n\t * @param {object} arg_runtime - client runtime.\r\n\t * @param {object} arg_state - component state.\r\n\t * @param {string} arg_log_context - context of traces of this instance (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_state, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_runtime, arg_state, log_context)\r\n\t\t\r\n\t\tthis.is_one_record_table_component = true\r\n\t\t\r\n\t\t// this.table_jqo = $(\"#\" + this.get_dom_id())\r\n\t\tthis.records = {}\r\n\t\t\r\n\t\tconst state = this.get_state_js()\r\n\t\tthis.fields = ('fields' in state) ? state.fields : []\r\n\t\tthis.labels = ('labels' in state) ? state.labels : []\r\n\t\tthis.records_key = ('records_key' in state) ? state.records_key : 'records'\r\n\t\tthis.record_key  = ('record_key' in state) ? state.record_key : 'record_key'\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Update the table with records.\r\n\t * \r\n\t * @param {objetc} arg_records - datas records, plain object.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tupdate_records(arg_records)\r\n\t{\r\n\t\t// console.log(arg_records, 'table.update_records:arg_records')\r\n\t\t\r\n\t\tvar self = this\r\n\t\t\r\n\t\tif (typeof arg_records != \"object\")\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\tif ( ! (this.records_key in arg_records) )\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\tconst records_of_key = arg_records[this.records_key]\r\n\t\tif ( T.isArray(records_of_key) )\r\n\t\t{\r\n\t\t\trecords_of_key.forEach(\r\n\t\t\t\tfunction(record)\r\n\t\t\t\t{\r\n\t\t\t\t\tif ( T.isString(record) || T.isNumber(record) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tself.add_record_string(record)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Add one record to the table.\r\n\t * \r\n\t * @param {string} arg_record_str - datas with one record string.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tadd_record_string(arg_record_str)\r\n\t{\r\n\t\t// console.log(arg_record, 'table.add_record:arg_record')\r\n\t\t\r\n\t\tvar self = this\r\n\t\t\r\n\t\tif (arg_record_str in this.records)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\tvar row_id = this.get_dom_id() + '_' + arg_record_str\r\n\t\t// var html = '<tr colspan=\"3\" id=\"' + row_id + '\"><td>' + arg_record_str + '</td></tr>'\r\n\t\t\r\n\t\tconst table_elem = this.get_dom_element()\r\n\t\tconst table_body_elem = table_elem.getElementsByTagName( \"tbody\" )[0]\r\n\r\n\t\t// APPEND FIRST ROW\r\n\t\tlet tr_element = document.createElement('tr')\r\n\t\ttr_element.setAttribute('colspan', '3')\r\n\t\ttr_element.setAttribute('id', row_id)\r\n\t\ttable_body_elem.appendChild(tr_element)\r\n\t\t\r\n\t\tlet td_element = document.createElement('td')\r\n\t\ttd_element.innerHTML = arg_record_str\r\n\t\ttr_element.appendChild(td_element)\r\n\r\n\t\t// APPEND FIELDS ROWS\r\n\t\tthis.fields.forEach(\r\n\t\t\tfunction(field, index)\r\n\t\t\t{\r\n\t\t\t\ttr_element = document.createElement('tr')\r\n\t\t\t\ttable_body_elem.appendChild(tr_element)\r\n\r\n\t\t\t\ttd_element = document.createElement('td')\r\n\t\t\t\ttd_element.innerHTML = ''\r\n\t\t\t\ttr_element.appendChild(td_element)\r\n\t\t\t\t\r\n\t\t\t\ttd_element = document.createElement('td')\r\n\t\t\t\ttd_element.innerHTML = index < self.labels.length ? self.labels[index] : ''\r\n\t\t\t\ttr_element.appendChild(td_element)\r\n\r\n\t\t\t\ttd_element = document.createElement('td')\r\n\t\t\t\ttd_element.innerHTML = '0'\r\n\t\t\t\ttd_element.setAttribute('id', row_id + '_' + field)\r\n\t\t\t\ttr_element.appendChild(td_element)\r\n\r\n\t\t\t\t// html += '<tr> <td></td> <td>' + self.labels[index] + '</td> <td id=\"' + row_id + '_' + field + '\">0</td> </tr>'\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\t// $('tbody', this.table_jqo).append(html)\r\n\r\n\t\tthis.records[arg_record_str] = row_id\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Update table with records values.\r\n\t * \r\n\t * @param {array} arg_values - datas values, plain objects array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tupdate_values(arg_values)\r\n\t{\r\n\t\t// console.log(arg_values, 'table.update_values')\r\n\t\t\r\n\t\tvar self = this\r\n\t\t\r\n\t\tif (! arg_values)\r\n\t\t{\r\n\t\t\tconsole.log(table_id, 'no values', 'table.update_values')\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\tconst table_id = this.get_dom_id()\r\n\t\t\r\n\t\t// console.log(arg_values, 'table.update_values')\r\n\t\t\r\n\t\targ_values = Array.isArray(arg_values) ? arg_values : [arg_values]\r\n\t\t\r\n\t\targ_values.forEach(\r\n\t\t\tfunction(values)\r\n\t\t\t{\r\n\t\t\t\tif (values)\r\n\t\t\t\t{\r\n\t\t\t\t\tself.update_record_values(values)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Update table with one record values.\r\n\t * \r\n\t * @param {object} arg_record_values - datas values, plain objects.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tupdate_record_values(arg_record_values)\r\n\t{\r\n\t\t// console.log(context + ':update_record_values:values', arg_record_values)\r\n\t\t\r\n\t\tvar self = this\r\n\t\t\r\n\t\tif (! arg_record_values || ! arg_record_values[this.record_key] )\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\tconst values_key = arg_record_values[this.record_key]\r\n\t\tif (! (values_key in self.records) )\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\tvar row_id = self.records[values_key]\r\n\t\t// console.log(row_id, 'table.update_record_values:row_id')\r\n\t\t\r\n\t\tthis.fields.forEach(\r\n\t\t\tfunction(field)\r\n\t\t\t{\r\n\t\t\t\tif (field in arg_record_values)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar value = arg_record_values[field]\r\n\t\t\t\t\tif (typeof value == 'number')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvalue = value.toFixed()\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar field_id = row_id + '_' + field\r\n\t\t\t\t\t// $(\"#\" + field_id).text(value)\r\n\t\t\t\t\tconst element = document.getElementById(field_id)\r\n\t\t\t\t\telement.textContent = value\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.log('field not found in record', field, arg_record_values)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/components/records_table.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 547,
    "kind": "variable",
    "name": "context",
    "memberof": "js/components/records_table.js",
    "static": true,
    "longname": "js/components/records_table.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/components/records_table.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 548,
    "kind": "class",
    "name": "RecordsTable",
    "memberof": "js/components/records_table.js",
    "static": true,
    "longname": "js/components/records_table.js~RecordsTable",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/components/records_table.js",
    "importStyle": "RecordsTable",
    "description": "",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "UI component class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/components/table.js~Table"
    ]
  },
  {
    "__docId__": 549,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/components/records_table.js~RecordsTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/records_table.js~RecordsTable#constructor",
    "access": "public",
    "description": "Creates an instance of Component.",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "Table"
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "context of traces of this instance (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 550,
    "kind": "member",
    "name": "is_one_record_table_component",
    "memberof": "js/components/records_table.js~RecordsTable",
    "static": false,
    "longname": "js/components/records_table.js~RecordsTable#is_one_record_table_component",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 551,
    "kind": "member",
    "name": "records",
    "memberof": "js/components/records_table.js~RecordsTable",
    "static": false,
    "longname": "js/components/records_table.js~RecordsTable#records",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 552,
    "kind": "member",
    "name": "fields",
    "memberof": "js/components/records_table.js~RecordsTable",
    "static": false,
    "longname": "js/components/records_table.js~RecordsTable#fields",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 553,
    "kind": "member",
    "name": "labels",
    "memberof": "js/components/records_table.js~RecordsTable",
    "static": false,
    "longname": "js/components/records_table.js~RecordsTable#labels",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 554,
    "kind": "member",
    "name": "records_key",
    "memberof": "js/components/records_table.js~RecordsTable",
    "static": false,
    "longname": "js/components/records_table.js~RecordsTable#records_key",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 555,
    "kind": "member",
    "name": "record_key",
    "memberof": "js/components/records_table.js~RecordsTable",
    "static": false,
    "longname": "js/components/records_table.js~RecordsTable#record_key",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 556,
    "kind": "method",
    "name": "update_records",
    "memberof": "js/components/records_table.js~RecordsTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/records_table.js~RecordsTable#update_records",
    "access": "public",
    "description": "Update the table with records.",
    "lineNumber": 59,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "objetc"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_records",
        "description": "datas records, plain object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 557,
    "kind": "method",
    "name": "add_record_string",
    "memberof": "js/components/records_table.js~RecordsTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/records_table.js~RecordsTable#add_record_string",
    "access": "public",
    "description": "Add one record to the table.",
    "lineNumber": 99,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record_str",
        "description": "datas with one record string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 558,
    "kind": "method",
    "name": "update_values",
    "memberof": "js/components/records_table.js~RecordsTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/records_table.js~RecordsTable#update_values",
    "access": "public",
    "description": "Update table with records values.",
    "lineNumber": 164,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_values",
        "description": "datas values, plain objects array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 559,
    "kind": "method",
    "name": "update_record_values",
    "memberof": "js/components/records_table.js~RecordsTable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/records_table.js~RecordsTable#update_record_values",
    "access": "public",
    "description": "Update table with one record values.",
    "lineNumber": 202,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_record_values",
        "description": "datas values, plain objects."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 560,
    "kind": "file",
    "name": "js/components/table.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T             from '../../../node_modules/devapt-core-common/dist/js/utils/types'\r\nimport html_entities from '../../../node_modules/devapt-core-common/dist/js/utils/html_entities'\r\n\r\n// BROWSER IMPORTS\r\nimport Container from '../base/container'\r\n\r\n\r\nconst context = 'browser/components/table'\r\n\r\n\r\n\r\n/**\r\n * @file UI component class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class Table extends Container\r\n{\r\n\t\r\n\t/**\r\n\t * Creates an instance of Table.\r\n\t * \r\n\t * @param {object} arg_runtime - client runtime.\r\n\t * @param {object} arg_state - component state.\r\n\t * @param {string} arg_log_context - context of traces of this instance (optional).\r\n\t * \r\n\t * API:\r\n\t * \t\t->get_children_component():array - Get view children components.\r\n\t * \r\n\t * \t\t->ui_items_get_count():integer - Get container items count.\r\n\t * \r\n\t * \t\t->ui_items_append(arg_items_array, arg_items_count):nothing  - Append tems to the container.\r\n\t * \t\t->ui_items_prepend(arg_items_array, arg_items_count):nothing - Prepend tems to the container.\r\n\t * \t\t->ui_items_insert_at(arg_index, arg_items_array, arg_items_count):nothing - Insert items at container position index.\r\n\t * \t\t->ui_items_replace(arg_items_array, arg_items_count):nothing - Replace container items.\r\n\t * \r\n\t * \t\t->ui_items_remove_at_index(arg_index):nothing - Remove a row at given position.\r\n\t * \t\t->ui_items_remove_first():nothing - Remove a row at first position.\r\n\t * \t\t->ui_items_remove_last(arg_count):nothing - Remove a row at last position.\r\n\t * \r\n\t * \t\t->build_row(arg_row_array, arg_row_index, arg_max_cols):string - Build a table row html tag.\r\n\t * \t\t->update_rows(arg_rows_array, arg_options):nothing - Append or prepend a row.\r\n\t * \t\t->update_section_collection(arg_collection_def, arg_collection_values):nothing - Update values on a table part.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_state, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_runtime, arg_state, log_context)\r\n\t\t\r\n\t\tthis.is_table_component = true\r\n\t\t\r\n\t\t// DEBUG\r\n\t\t// this.enable_trace()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get view children components.\r\n\t * \r\n\t * @returns {array} - list of Component.\r\n\t */\r\n\tget_children_component()\r\n\t{\r\n\t\tif ( ! this._children_component)\r\n\t\t{\r\n\t\t\tthis._children_component = []\r\n\r\n\t\t\tconst items = this.get_state_value('items', [])\r\n\t\t\tconst headers = this.get_state_value('headers', [])\r\n\t\t\tconst footers = this.get_state_value('headers', [])\r\n\t\t\t// console.log(context + ':get_children_component:init with items:', items)\r\n\r\n\t\t\theaders.forEach(\r\n\t\t\t\t(row)=>{\r\n\t\t\t\t\tif ( T.isArray(row) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trow.forEach(\r\n\t\t\t\t\t\t\t(cell)=>{\r\n\t\t\t\t\t\t\t\tif ( T.isObject(cell) )\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tif (cell.is_component)\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tthis._children_component.push(cell)\r\n\t\t\t\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tif ( T.isString(cell.view) )\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tconst component = window.devapt().ui(cell.view)\r\n\t\t\t\t\t\t\t\t\t\tif (component && component.is_component)\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tthis._children_component.push(component)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\r\n\t\t\tfooters.forEach(\r\n\t\t\t\t(row)=>{\r\n\t\t\t\t\tif ( T.isArray(row) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trow.forEach(\r\n\t\t\t\t\t\t\t(cell)=>{\r\n\t\t\t\t\t\t\t\tif ( T.isObject(cell) )\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tif (cell.is_component)\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tthis._children_component.push(cell)\r\n\t\t\t\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tif ( T.isString(cell.view) )\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tconst component = window.devapt().ui(cell.view)\r\n\t\t\t\t\t\t\t\t\t\tif (component && component.is_component)\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tthis._children_component.push(component)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\r\n\t\t\titems.forEach(\r\n\t\t\t\t(row)=>{\r\n\t\t\t\t\tif ( T.isArray(row) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trow.forEach(\r\n\t\t\t\t\t\t\t(cell)=>{\r\n\t\t\t\t\t\t\t\tif ( T.isObject(cell) )\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tif (cell.is_component)\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tthis._children_component.push(cell)\r\n\t\t\t\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif ( T.isString(cell.key) )\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tif ( T.isString(cell.view) )\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tconst component = window.devapt().ui(cell.view)\r\n\t\t\t\t\t\t\t\t\t\t\tif (component && component.is_component)\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis._children_component.push(component)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn this._children_component\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get container items count.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_get_count()\r\n\t{\r\n\t\tconst table_body_elem = document.getElementById(this.get_dom_id())\r\n\t\tconst tr_elems = table_body_elem.children\r\n\t\treturn tr_elems.length\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Erase container items.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_clear()\r\n\t{\r\n\t\tconst table_elem = this.get_dom_element()\r\n\t\tconst table_body_elem = table_elem.getElementsByTagName( \"tbody\" )[0]\r\n\r\n\t\twhile(table_body_elem.hasChildNodes())\r\n\t\t{\r\n\t\t\tconst tr_elem = table_body_elem.lastChild\r\n\t\t\tthis.delete_row_elem(tr_elem)\r\n\t\t\ttable_body_elem.removeChild(tr_elem)\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Append items to the container.\r\n\t * \r\n\t * @param {array} arg_items_array - items array.\r\n\t * @param {intege} arg_items_count - items count.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_append(arg_items_array, arg_items_count)\r\n\t{\r\n\t\t// console.log(context + ':ui_items_append:arg_items_array', arg_items_array, arg_items_count)\r\n\r\n\t\tlet arg_options = arg_options ? arg_options : {}\r\n\t\targ_options.mode = 'append'\r\n\t\tthis.update_rows(arg_items_array, arg_options)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Prepend items to the container.\r\n\t * \r\n\t * @param {array} arg_items_array - items array.\r\n\t * @param {intege} arg_items_count - items count.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_prepend(arg_items_array, arg_items_count)\r\n\t{\r\n\t\t// console.log(context + ':ui_items_prepend:%s:count=%s:arg_items_array', this.get_name(), arg_items_count, arg_items_array)\r\n\t\t\r\n\t\tlet arg_options = arg_options ? arg_options : {}\r\n\t\targ_options.mode = 'prepend'\r\n\t\tthis.update_rows(arg_items_array, arg_options)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Replace container items.\r\n\t * \r\n\t * @param {array} arg_items_array - items array.\r\n\t * @param {intege} arg_items_count - items count.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_replace(arg_items_array/*, arg_items_count*/)\r\n\t{\r\n\t\t// console.log(context + ':ui_items_replace:arg_items_array', arg_items_array.length)\r\n\t\t\r\n\t\t// REMOVE ALL EXISTING ROWS\r\n\t\tthis.ui_items_clear()\r\n\t\t\r\n\t\tlet arg_options = arg_options ? arg_options : {}\r\n\t\targ_options.mode = 'replace'\r\n\t\tthis.update_rows(arg_items_array, arg_options)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Insert items at container position index.\r\n\t * \r\n\t * @param {intege} arg_index - position index.\r\n\t * @param {array} arg_items_array - items array.\r\n\t * @param {intege} arg_items_count - items count.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_insert_at(arg_index, arg_items_array, arg_items_count)\r\n\t{\r\n\t\tassert( T.isArray(arg_items_array), context + ':ui_items_replace:bad items array')\r\n\t\tassert( T.isNumber(arg_items_count), context + ':ui_items_replace:bad items count')\r\n\t\t\r\n\t\t// NOT YET IMPLEMENTED\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove a row at given position.\r\n\t * \r\n\t * @param {number} arg_index - row index.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_remove_at_index(arg_index)\r\n\t{\r\n\t\tassert( T.isNumber(arg_index), context + ':ui_items_remove_at_index:bad index number')\r\n\r\n\t\tconst table_elem = this.get_dom_element()\r\n\t\tconst table_body_elem = table_elem.getElementsByTagName( \"tbody\" )[0]\r\n\t\tif (arg_index < 0 || arg_index >= table_body_elem.children.length)\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':ui_items_remove_at_index:%s:bad item index=%s', this.get_name(), arg_index)\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst tr_elem = table_body_elem.children[arg_index]\r\n\t\tthis.delete_row_elem(tr_elem)\r\n\t\ttable_body_elem.removeChild(tr_elem)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove a row at first position.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_remove_first()\r\n\t{\r\n\t\tconst table_elem = this.get_dom_element()\r\n\t\tconst table_body_elem = table_elem.getElementsByTagName( \"tbody\" )[0]\r\n\t\tconst tr_elem = table_body_elem.firstElementChild()\r\n\t\tthis.delete_row_elem(tr_elem)\r\n\t\ttable_body_elem.removeChild(tr_elem)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove a row at last position.\r\n\t * \r\n\t * @param {integer} arg_count - items count to remove.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_remove_last(arg_count=1)\r\n\t{\r\n\t\t// console.log(context + ':ui_items_remove_last:arg_count', arg_count)\r\n\t\t\r\n\t\tif (arg_count <= 0)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\tconst table_elem = this.get_dom_element()\r\n\t\tconst table_body_elem = table_elem.getElementsByTagName( \"tbody\" )[0]\r\n\t\tconst tr_elems = table_body_elem.children\r\n\t\tconst last_index = tr_elems.length - arg_count - 1\r\n\t\tlet row_index = last_index - 1 >= 0 ? last_index - 1 : 0\r\n\t\tfor( ; row_index < tr_elems.length ; row_index++)\r\n\t\t{\r\n\t\t\tconst tr_elem = tr_elems[row_index]\r\n\t\t\tthis.delete_row_elem(tr_elem)\r\n\t\t\ttable_body_elem.removeChild(tr_elem)\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Delete table rows DOM elements.\r\n\t *\r\n\t * @param {array} arg_rows_array - rows Element array.\r\n\t * \r\n\t * @returns {Element} - TD DOM Element.\r\n\t */\r\n\tdelete_row_elem(arg_row_elem)\r\n\t{\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Build a row cell DOM element.\r\n\t *\r\n\t * @param {any}      arg_cell_value   - cell value.\r\n\t * @param {integer}  arg_row_index    - row index.\r\n\t * @param {integer}  arg_column_index - column index.\r\n\t * @param {Document} arg_document     - DOM document.\r\n\t * \r\n\t * @returns {Element} - TD DOM Element.\r\n\t */\r\n\tbuild_cell(arg_cell_value, arg_row_index, arg_column_index, arg_document)\r\n\t{\r\n\t\tconst td_elem = arg_document.createElement('td')\r\n\r\n\t\ttd_elem.setAttribute('data-column-index', arg_column_index)\r\n\t\ttd_elem.innerText = arg_cell_value\r\n\r\n\t\treturn td_elem\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Build a table row DOM element.\r\n\t *\r\n\t * @param {array} arg_row_array - row values array.\r\n\t * @param {integer} arg_row_index - row index.\r\n\t * @param {integer} arg_max_cols - max columns number.\r\n\t * @param {integer} arg_depth        - path depth.\r\n\t * \r\n\t * @returns {Element} - TD DOM Element.\r\n\t */\r\n\tbuild_row(arg_row_array, arg_row_index, arg_max_cols/*, arg_depth*/)\r\n\t{\r\n\t\tconst this_document = this.get_dom_element().ownerDocument\r\n\t\tconst row_elem = this_document.createElement('tr')\r\n\t\trow_elem.setAttribute('data-row-index', arg_row_index)\r\n\r\n\t\t// DEBUG\r\n\t\t// console.log(context + ':build_row:rows_index=%i row_array max_cols', arg_row_index, arg_row_array, arg_max_cols)\r\n\t\t\r\n\t\tif( ! T.isArray(arg_row_array) )\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':build_row:row_array is not an array at rows_index=%i', arg_row_index, arg_row_array)\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\targ_row_array.forEach(\r\n\t\t\t(cell, index) => {\r\n\t\t\t\tif (arg_max_cols && index > arg_max_cols)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst td_elem = this.build_cell(cell, arg_row_index, index, this_document)\r\n\t\t\t\tif (! td_elem)\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.warn(context + ':build_row:bad cell element at rows_index=%i at column_index=%i', arg_row_index, index)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\trow_elem.appendChild(td_elem)\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\treturn row_elem\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Build a table row DOM element.\r\n\t *\r\n\t * @param {Element} arg_body_element - table body element.\r\n\t * @param {array}   arg_row_array    - row values array.\r\n\t * @param {integer} arg_row_index    - row index.\r\n\t * @param {integer} arg_max_rows     - max rows number.\r\n\t * @param {integer} arg_max_cols     - max columns number.\r\n\t * @param {string}  arg_mode         - fill mode:append/prepend\r\n\t * @param {string}  arg_max_rows_action - action on max rows.\r\n\t * @param {integer} arg_depth        - path depth.\r\n\t * \r\n\t * @returns {Element} - TD DOM Element.\r\n\t */\r\n\tprocess_row_array(arg_body_element, arg_row_array, arg_row_index, arg_max_rows, arg_max_cols, arg_mode, arg_max_rows_action, arg_depth=0)\r\n\t{\r\n\t\tconst rows_count = arg_body_element.children.length\r\n\t\tconst row_elem = this.build_row(arg_row_array, arg_row_index, arg_max_cols, arg_depth)\r\n\t\tif (! row_elem)\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':update_rows:%s:at %i:max cols=%i:bad row element for ', this.get_name(), arg_row_index, arg_max_cols, arg_row_array)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (arg_max_rows && (rows_count + arg_row_index) > arg_max_rows)\r\n\t\t{\r\n\t\t\tif (arg_max_rows_action == 'remove_bottom')\r\n\t\t\t{\r\n\t\t\t\t// TODO\r\n\t\t\t\tconsole.warn('TODO remove_bottom')\r\n\t\t\t}\r\n\t\t\telse if (arg_max_rows_action == 'remove_top')\r\n\t\t\t{\r\n\t\t\t\t// TODO\r\n\t\t\t\tconsole.warn('TODO remove_top')\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\t// console.log(context + ':update_rows:rows_index=%i mode=%s', row_index, arg_options.mode)\r\n\t\tif (arg_mode == 'prepend')\r\n\t\t{\r\n\t\t\targ_body_element.insertBefore(row_elem, arg_body_element.firstChild )\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\targ_body_element.appendChild(row_elem)\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Append or prepend a row.\r\n\t *\r\n\t * @param {array} arg_rows_array - rows array.\r\n\t * @param {object} arg_options - operation settigs (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tupdate_rows(arg_rows_array, arg_options)\r\n\t{\r\n\t\tconst arg_table_id = this.get_dom_id()\r\n\t\tassert( T.isString(arg_table_id), context + ':update_rows:bad table id string:' + arg_table_id)\r\n\t\tassert( T.isArray(arg_rows_array), context + ':update_rows:bad rows array')\r\n\t\t\r\n\t\tconst state = this.get_state()\r\n\t\t\r\n\t\targ_options = arg_options ? arg_options : {}\r\n\t\targ_options.mode = arg_options.mode ? arg_options.mode : 'append'\r\n\t\t\r\n\t\tconst table_elem = this.get_dom_element()\r\n\t\tconst table_body_elem = table_elem.getElementsByTagName( \"tbody\" )[0]\r\n\r\n\t\tconst max_cols = T.isNumber(state.max_columns) ? state.max_columns : undefined\r\n\t\tconst max_rows = T.isNumber(state.max_rows) ? state.max_rows : undefined\r\n\t\tconst max_rows_action = T.isString(state.max_rows_action) ? state.max_rows_action : undefined\r\n\r\n\t\tlet fields_count = this.get_state_value('fields_count', 0)\r\n\t\tif (fields_count == 0)\r\n\t\t{\r\n\t\t\tconst headers = this.get_state_value('headers', [])\r\n\t\t\tif ( T.isArray(headers) && headers.length > 0 )\r\n\t\t\t{\r\n\t\t\t\tconst last_headers = headers[headers.length - 1]\r\n\t\t\t\tif ( T.isArray(last_headers) )\r\n\t\t\t\t{\r\n\t\t\t\t\tfields_count = last_headers.length\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// DEBUG\r\n\t\t// console.log( context + ':update_rows:arg_rows_array=', arg_rows_array)\r\n\t\t// console.log( context + ':update_rows:rows_count=%i', rows_count)\r\n\t\t\r\n\t\targ_rows_array.forEach(\r\n\t\t\t(arg_row_array, row_index) => {\r\n\r\n\t\t\t\tconst row_array = T.isArray(arg_row_array) ? arg_row_array : (fields_count == 1 ? [arg_row_array] : undefined)\r\n\t\t\t\tif (! row_array)\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.warn(context + ':update_rows:%s:at %i:fields_count=%i:bad row array for ', this.get_name(), row_index, fields_count, arg_row_array)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.process_row_array(table_body_elem, row_array, row_index, max_rows, max_cols, arg_options.mode, max_rows_action)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Update values on a table part.\r\n\t * \r\n\t * @param {object} arg_collection_def - plain object map of collection definition ({collection_name:\"\", collection_dom_id:\"\"}.\r\n\t * @param {object} arg_collection_values - plain object map of collection key/value pairs.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tupdate_section_collection(arg_collection_def, arg_collection_values)\r\n\t{\r\n\t\tconst table_id = this.get_dom_id()\r\n\r\n\t\t// console.log(context + ':update_section_collection:%s:def= values=', this.get_name(), arg_collection_def, arg_collection_values)\r\n\r\n\t\tif (arg_collection_def && arg_collection_def.collection_name && arg_collection_def.collection_dom_id && arg_collection_values)\r\n\t\t{\r\n\t\t\tconst arg_collection_name = arg_collection_def.collection_name\r\n\t\t\t\r\n\t\t\tconst collection_elem = document.getElementById(arg_collection_def.collection_dom_id)\r\n\t\t\tif (!collection_elem)\r\n\t\t\t{\r\n\t\t\t\t// CALLED BY BINDING ON A VIEW WHICH IS NOT VISIBLE\r\n\t\t\t\t// console.log(context + ':update_section_collection:' + this.get_name() + ':collection element not found for id [' + arg_collection_def.collection_dom_id + ']')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tvar collection_dom_template_default = \"<tr> <td></td> <td> {collection_key} </td> <td id='{collection_id}'>{collection_value}</td> </tr>\"\r\n\t\t\tvar collection_dom_template = arg_collection_def.collection_dom_template ? html_entities.decode(arg_collection_def.collection_dom_template) : collection_dom_template_default\r\n\t\t\t\r\n\t\t\t// DEBUG\r\n\t\t\t// console.log(context + ':update_section_collection:arg_collection_def.collection_dom_template=%s', arg_collection_def.collection_dom_template)\r\n\t\t\t// console.log(context + ':update_section_collection:collection_dom_template=%s', collection_dom_template)\r\n\r\n\t\t\tvar collection_key_safe = undefined\r\n\t\t\tvar collection_value = undefined\r\n\t\t\tvar collection_id = undefined\r\n\t\t\tvar collection_value_elem = undefined\r\n\t\t\tvar collection_value_html = undefined\r\n\t\t\tvar collection_keys = Object.keys(arg_collection_values)\r\n\t\t\tvar re = /[^a-zA-Z0-9]/gi\r\n\r\n\t\t\t// console.log('update_metric_collection2:collection=%s keys= jqo=', arg_collection_name, collection_keys, arg_collection_jqo)\r\n\t\t\t\r\n\t\t\tcollection_keys.forEach(\r\n\t\t\t\tfunction(collection_key)\r\n\t\t\t\t{\r\n\t\t\t\t\tcollection_key_safe = collection_key.replace(re, '_')\r\n\t\t\t\t\t// console.log('update_metric_collection2:collection=%s loop on key=', arg_collection_name, collection_key)\r\n\r\n\t\t\t\t\tcollection_value = arg_collection_values[collection_key]\r\n\t\t\t\t\tcollection_id = table_id + \"_\" + arg_collection_name + \"_\" + collection_key_safe\r\n\t\t\t\t\tcollection_value_elem = document.getElementById(collection_id)\r\n\r\n\t\t\t\t\tif (! collection_value_elem )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// console.log('update_metric_collection2:collection=%s loop on key=', collection_key)\r\n\r\n\t\t\t\t\t\tcollection_value_html = collection_dom_template.replace('{collection_key}', collection_key).replace('{collection_id}', collection_id).replace('{collection_value}', collection_value)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// console.log(context + ':update_section_collection:html', collection_value_html)\r\n\t\t\t\r\n\t\t\t\t\t\tconst tr_elem = document.createElement('tr')\r\n\t\t\t\t\t\ttr_elem.innerHTML = collection_value_html\r\n\t\t\t\t\t\tcollection_elem.parentNode.insertBefore(tr_elem, collection_elem.nextSibling)\r\n\t\t\t\t\t\tcollection_value_elem = document.getElementById(collection_id)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tcollection_value_elem.textContent = collection_value\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/components/table.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 561,
    "kind": "variable",
    "name": "context",
    "memberof": "js/components/table.js",
    "static": true,
    "longname": "js/components/table.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/components/table.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 562,
    "kind": "class",
    "name": "Table",
    "memberof": "js/components/table.js",
    "static": true,
    "longname": "js/components/table.js~Table",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/components/table.js",
    "importStyle": "Table",
    "description": "",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "UI component class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/container.js~Container"
    ]
  },
  {
    "__docId__": 563,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/components/table.js~Table",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table.js~Table#constructor",
    "access": "public",
    "description": "Creates an instance of Table.",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "context of traces of this instance (optional).\n\nAPI:\n\t\t->get_children_component():array - Get view children components.\n\n\t\t->ui_items_get_count():integer - Get container items count.\n\n\t\t->ui_items_append(arg_items_array, arg_items_count):nothing  - Append tems to the container.\n\t\t->ui_items_prepend(arg_items_array, arg_items_count):nothing - Prepend tems to the container.\n\t\t->ui_items_insert_at(arg_index, arg_items_array, arg_items_count):nothing - Insert items at container position index.\n\t\t->ui_items_replace(arg_items_array, arg_items_count):nothing - Replace container items.\n\n\t\t->ui_items_remove_at_index(arg_index):nothing - Remove a row at given position.\n\t\t->ui_items_remove_first():nothing - Remove a row at first position.\n\t\t->ui_items_remove_last(arg_count):nothing - Remove a row at last position.\n\n\t\t->build_row(arg_row_array, arg_row_index, arg_max_cols):string - Build a table row html tag.\n\t\t->update_rows(arg_rows_array, arg_options):nothing - Append or prepend a row.\n\t\t->update_section_collection(arg_collection_def, arg_collection_values):nothing - Update values on a table part."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 564,
    "kind": "member",
    "name": "is_table_component",
    "memberof": "js/components/table.js~Table",
    "static": false,
    "longname": "js/components/table.js~Table#is_table_component",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 565,
    "kind": "method",
    "name": "get_children_component",
    "memberof": "js/components/table.js~Table",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table.js~Table#get_children_component",
    "access": "public",
    "description": "Get view children components.",
    "lineNumber": 69,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} - list of Component."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "list of Component."
    },
    "params": []
  },
  {
    "__docId__": 566,
    "kind": "member",
    "name": "_children_component",
    "memberof": "js/components/table.js~Table",
    "static": false,
    "longname": "js/components/table.js~Table#_children_component",
    "access": "private",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 567,
    "kind": "method",
    "name": "ui_items_get_count",
    "memberof": "js/components/table.js~Table",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table.js~Table#ui_items_get_count",
    "access": "public",
    "description": "Get container items count.",
    "lineNumber": 183,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 568,
    "kind": "method",
    "name": "ui_items_clear",
    "memberof": "js/components/table.js~Table",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table.js~Table#ui_items_clear",
    "access": "public",
    "description": "Erase container items.",
    "lineNumber": 197,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 569,
    "kind": "method",
    "name": "ui_items_append",
    "memberof": "js/components/table.js~Table",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table.js~Table#ui_items_append",
    "access": "public",
    "description": "Append items to the container.",
    "lineNumber": 220,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_array",
        "description": "items array."
      },
      {
        "nullable": null,
        "types": [
          "intege"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_count",
        "description": "items count."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 570,
    "kind": "method",
    "name": "ui_items_prepend",
    "memberof": "js/components/table.js~Table",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table.js~Table#ui_items_prepend",
    "access": "public",
    "description": "Prepend items to the container.",
    "lineNumber": 239,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_array",
        "description": "items array."
      },
      {
        "nullable": null,
        "types": [
          "intege"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_count",
        "description": "items count."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 571,
    "kind": "method",
    "name": "ui_items_replace",
    "memberof": "js/components/table.js~Table",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table.js~Table#ui_items_replace",
    "access": "public",
    "description": "Replace container items.",
    "lineNumber": 258,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_array",
        "description": "items array."
      },
      {
        "nullable": null,
        "types": [
          "intege"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_count",
        "description": "items count."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 572,
    "kind": "method",
    "name": "ui_items_insert_at",
    "memberof": "js/components/table.js~Table",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table.js~Table#ui_items_insert_at",
    "access": "public",
    "description": "Insert items at container position index.",
    "lineNumber": 281,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "intege"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_index",
        "description": "position index."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_array",
        "description": "items array."
      },
      {
        "nullable": null,
        "types": [
          "intege"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_count",
        "description": "items count."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 573,
    "kind": "method",
    "name": "ui_items_remove_at_index",
    "memberof": "js/components/table.js~Table",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table.js~Table#ui_items_remove_at_index",
    "access": "public",
    "description": "Remove a row at given position.",
    "lineNumber": 298,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_index",
        "description": "row index."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 574,
    "kind": "method",
    "name": "ui_items_remove_first",
    "memberof": "js/components/table.js~Table",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table.js~Table#ui_items_remove_first",
    "access": "public",
    "description": "Remove a row at first position.",
    "lineNumber": 321,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 575,
    "kind": "method",
    "name": "ui_items_remove_last",
    "memberof": "js/components/table.js~Table",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table.js~Table#ui_items_remove_last",
    "access": "public",
    "description": "Remove a row at last position.",
    "lineNumber": 339,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_count",
        "description": "items count to remove."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 576,
    "kind": "method",
    "name": "delete_row_elem",
    "memberof": "js/components/table.js~Table",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table.js~Table#delete_row_elem",
    "access": "public",
    "description": "Delete table rows DOM elements.",
    "lineNumber": 370,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Element} - TD DOM Element."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rows_array",
        "description": "rows Element array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": "TD DOM Element."
    }
  },
  {
    "__docId__": 577,
    "kind": "method",
    "name": "build_cell",
    "memberof": "js/components/table.js~Table",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table.js~Table#build_cell",
    "access": "public",
    "description": "Build a row cell DOM element.",
    "lineNumber": 386,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Element} - TD DOM Element."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_cell_value",
        "description": "cell value."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_row_index",
        "description": "row index."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_column_index",
        "description": "column index."
      },
      {
        "nullable": null,
        "types": [
          "Document"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_document",
        "description": "DOM document."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": "TD DOM Element."
    }
  },
  {
    "__docId__": 578,
    "kind": "method",
    "name": "build_row",
    "memberof": "js/components/table.js~Table",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table.js~Table#build_row",
    "access": "public",
    "description": "Build a table row DOM element.",
    "lineNumber": 408,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Element} - TD DOM Element."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_row_array",
        "description": "row values array."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_row_index",
        "description": "row index."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_max_cols",
        "description": "max columns number."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_depth",
        "description": "path depth."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": "TD DOM Element."
    }
  },
  {
    "__docId__": 579,
    "kind": "method",
    "name": "process_row_array",
    "memberof": "js/components/table.js~Table",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table.js~Table#process_row_array",
    "access": "public",
    "description": "Build a table row DOM element.",
    "lineNumber": 460,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Element} - TD DOM Element."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_body_element",
        "description": "table body element."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_row_array",
        "description": "row values array."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_row_index",
        "description": "row index."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_max_rows",
        "description": "max rows number."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_max_cols",
        "description": "max columns number."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_mode",
        "description": "fill mode:append/prepend"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_max_rows_action",
        "description": "action on max rows."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_depth",
        "description": "path depth."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": "TD DOM Element."
    }
  },
  {
    "__docId__": 580,
    "kind": "method",
    "name": "update_rows",
    "memberof": "js/components/table.js~Table",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table.js~Table#update_rows",
    "access": "public",
    "description": "Append or prepend a row.",
    "lineNumber": 510,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_rows_array",
        "description": "rows array."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_options",
        "description": "operation settigs (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 581,
    "kind": "method",
    "name": "update_section_collection",
    "memberof": "js/components/table.js~Table",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table.js~Table#update_section_collection",
    "access": "public",
    "description": "Update values on a table part.",
    "lineNumber": 571,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_collection_def",
        "description": "plain object map of collection definition ({collection_name:\"\", collection_dom_id:\"\"}."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_collection_values",
        "description": "plain object map of collection key/value pairs."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 582,
    "kind": "file",
    "name": "js/components/table_tree.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T   from '../../../node_modules/devapt-core-common/dist/js/utils/types'\r\nimport uid from '../../../node_modules/devapt-core-common/dist/js/utils/uid'\r\n\r\n// BROWSER IMPORTS\r\nimport Component from '../base/component'\r\n\r\n\r\nconst context = 'browser/components/table_tree'\r\n\r\n\r\n\r\n/**\r\n * @file UI Tree component class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class TableTree extends Component\r\n{\r\n\t\r\n\t/**\r\n\t * Creates an instance of Component.\r\n\t * \r\n\t * @param {object} arg_runtime - client runtime.\r\n\t * @param {object} arg_state - component state.\r\n\t * @param {string} arg_log_context - context of traces of this instance (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_state, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_runtime, arg_state, log_context)\r\n\t\t\r\n\t\tthis.is_table_tree_component = true\r\n\t\t\r\n\t\tthis.init()\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get container items count.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_get_count()\r\n\t{\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Erase container items.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_clear()\r\n\t{\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Append rows to the container.\r\n\t * \r\n\t * @param {array} arg_items_array - items array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_append(/*arg_items_array*/)\r\n\t{\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Prepend a row.\r\n\t * \r\n\t * @param {array} arg_items_array - rows array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_prepend(/*arg_items_array*/)\r\n\t{\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove a row at given position.\r\n\t * \r\n\t * @param {number} arg_index - row index.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_remove_at_index(arg_index)\r\n\t{\r\n\t\tassert( T.isNumber(arg_index), context + ':ui_items_remove_at_index:bad index number' )\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove a row at first position.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_remove_first()\r\n\t{\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove a row at last position.\r\n\t * \r\n\t * @param {integer} arg_count - items count to remove.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_remove_last(/*arg_count*/)\r\n\t{\r\n\t\t// console.log(context + ':ui_items_remove_last:arg_count', arg_count)\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Init view.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tinit()\r\n\t{\r\n\t\tlet styles = '<style type=\"text/css\">\\n'\r\n\t\tstyles += '#content      { margin-left: 50px; }\\n'\r\n\t\tstyles += '.node_branch  { cursor: default; font-size: 0.8em; line-height:1em; }\\n'\r\n\t\tstyles += '.node_a       { position: relative; cursor: pointer; }\\n'\r\n\t\tstyles += '.node_content { cursor: default; margin-left: 10px; font-site:0,1em; font-size: 0.8em; line-height:1em; }\\n'\r\n\t\tstyles += '</style>\\n'\r\n\t\t$('head').append(styles)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Update tree.\r\n\t * \r\n\t * @param {object} arg_tree - tree nodes.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tupdate_tree(arg_tree)\r\n\t{\r\n\t\tvar self = this\r\n\r\n\t\tif (! arg_tree)\r\n\t\t{\r\n\t\t\targ_tree = this.get_state_value('tree', {})\r\n\t\t}\r\n\t\tif (arg_tree.datas)\r\n\t\t{\r\n\t\t\targ_tree = arg_tree.datas\r\n\t\t}\r\n\r\n\t\tconsole.log('tree.update_tree', arg_tree)\r\n\r\n\t\tconst pollers = this.get_state_value(['bindings', 'services', 0, 'options', 'method', 'pollers'], undefined)\r\n\t\tconst svc_name = this.get_state_value(['bindings', 'services', 0, 'service'], undefined)\r\n\t\tconst method_name = this.get_state_value(['bindings', 'services', 0, 'method'], undefined)\r\n\t\tif ( ! pollers && svc_name && method_name && this.unbind && this.unbind[svc_name] && this.unbind[svc_name][method_name] )\r\n\t\t{\r\n\t\t\tthis.unbind[svc_name][method_name]()\r\n\t\t}\r\n\r\n\t\tconst tree_id = this.get_dom_id()\r\n\t\t\r\n\t\tif (! this.tree_jqo)\r\n\t\t{\r\n\t\t\tthis.tree_jqo = $('#' + tree_id)\r\n\t\t\tthis.tbody_jqo = $('tbody', this.tree_jqo)\r\n\t\t} else {\r\n\t\t\t$('tr', this.tbody_jqo).remove()\r\n\t\t}\r\n\r\n\t\tthis.max_depth = this.get_state_value('max_depth', 20)\r\n\t\tthis.max_depth = T.isNumber(this.max_depth) ? this.max_depth : 20\r\n\r\n\t\tvar collapsed = this.get_state_value('collapsed', false)\r\n\r\n\t\tconst key = this.get_state_value(['bindings', 'services', 0, 'transform', 'fields', 0, 'name'], undefined)\r\n\t\tconst sub_tree = key ? arg_tree[key] : arg_tree\r\n\t\tif (! sub_tree)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\t\tthis.render_node(sub_tree, 1, this.get_state_value(label), ! collapsed)\r\n\r\n\t\tif (collapsed)\r\n\t\t{\r\n\t\t\t$('.node_branch', this.tree_jqo).hide()\r\n\t\t\t$('.node_content', this.tree_jqo).hide()\r\n\t\t\t$('span.node_opened', this.tree_jqo).hide()\r\n\t\t\t$('span.node_closed', this.tree_jqo).show()\r\n\t\t\t\r\n\t\t\t$('tr').removeClass('expanded').addClass('collapsed').hide()\r\n\r\n\t\t\t$('tr').filter(\r\n\t\t\t\tfunction () {\r\n\t\t\t\t\treturn $(this).data('depth') == 1\r\n\t\t\t\t}\r\n\t\t\t).show()\r\n\t\t} else {\r\n\t\t\t$('.node_branch', this.tree_jqo).show()\r\n\t\t\t$('.node_content', this.tree_jqo).show()\r\n\t\t\t$('span.node_opened', this.tree_jqo).show()\r\n\t\t\t$('span.node_closed', this.tree_jqo).hide()\r\n\t\t\t\r\n\t\t\t$('tr').removeClass('collapsed').addClass('expanded').show()\r\n\t\t}\r\n\t\t\r\n\t\t$('a.node_a', this.tbody_jqo).click(\r\n\t\t\tfunction(ev)\r\n\t\t\t{\r\n\t\t\t\t// var el = $(ev.currentTarget)\r\n\t\t\t\t// var tr = el.closest('tr')\r\n\t\t\t\tvar tr = $(ev.currentTarget).parent().parent()\r\n\t\t\t\t\r\n\t\t\t\tvar children = self.find_children(tr)\r\n\t\t\t\t// console.log('a.click:children=', children)\r\n\r\n\r\n\t\t\t\tif ( tr.hasClass('collapsed') )\r\n\t\t\t\t{\r\n\t\t\t\t\t// BECOME EXPANDED\r\n\t\t\t\t\t$('span.node_closed', tr).hide()\r\n\t\t\t\t\t$('span.node_opened', tr).show()\r\n\t\t\t\t\ttr.removeClass('collapsed').addClass('expanded')\r\n\t\t\t\t\tchildren.removeClass('collapsed').addClass('expanded').show()\r\n\t\t\t\t\t$('span.node_closed', children).hide()\r\n\t\t\t\t\t$('span.node_opened', children).show()\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// BECOME COLLAPSED\r\n\t\t\t\t\t$('span.node_closed', tr).show()\r\n\t\t\t\t\t$('span.node_opened', tr).hide()\r\n\t\t\t\t\ttr.removeClass('expanded').addClass('collapsed')\r\n\t\t\t\t\tchildren.removeClass('expanded').addClass('collapsed').hide()\r\n\t\t\t\t\t$('span.node_closed', children).show()\r\n\t\t\t\t\t$('span.node_opened', children).hide()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tfind_children(arg_tr)\r\n\t{\r\n\t\tvar depth = arg_tr.data('depth')\r\n\r\n\t\treturn arg_tr.nextUntil(\r\n\t\t\t$('tr').filter(\r\n\t\t\t\tfunction () {\r\n\t\t\t\t\treturn $(this).data('depth') <= depth\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Append a table row\r\n\t */\r\n\tappend_row(arg_key, arg_content, arg_depth, arg_expanded)\r\n\t{\r\n\t\tvar id = 'tr_' + uid()\r\n\t\tvar style = 'padding-left:' + arg_depth * 20 + 'px'\r\n\t\t// var style = ''\r\n\t\tvar class_expanded = arg_expanded ? 'expanded' : 'collapsed'\r\n\r\n\t\tvar html_row = '<tr id=\"' + id + '\" class=\"node_content ' + class_expanded + '\" data-depth=\"' + arg_depth + '\">'\r\n\t\thtml_row += '<td style=\"' + style + '\">' + arg_key + '</td>'\r\n\t\thtml_row += '<td>' + arg_content + '</td>'\r\n\t\thtml_row += '</tr>'\r\n\t\t\r\n\t\tthis.tbody_jqo.append(html_row)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\trender_expandable_node(arg_label, arg_depth, arg_expanded)\r\n\t{\r\n\t\tvar id = 'tr_' + uid()\r\n\t\tvar style = 'padding-left:' + arg_depth * 20 + 'px'\r\n\t\tvar class_expanded = arg_expanded ? 'expanded' : 'collapsed'\r\n\r\n\t\tvar str = ''\r\n\t\tstr += '<tr id=\"' + id + '\" class=\"node_branch ' + class_expanded + '\" data-depth=\"' + arg_depth + '\"><td style=\"' + style + '\">'\r\n\t\tstr += '<a class=\"node_a\">'\r\n\t\tstr += '<span class=\"node_closed\">\\u25B9</span>'\r\n\t\tstr += '<span class=\"node_opened\">\\u25BF</span>'\r\n\t\tstr += '<b>' + arg_label + '</b>'\r\n\t\tstr += '</a>'\r\n\t\tstr += '</td><td></td></tr>'\r\n\r\n\t\tthis.tbody_jqo.append(str)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\trender_safe_string(arg_value)\r\n\t{\r\n\t\t// console.log('tree.render_safe_string', arg_value)\r\n\t\t\r\n\t\t// arg_value = arg_value.replace('<script>', 'AscriptB').replace('A/scriptB', '\\A/script\\B')\r\n\t\tif ( T.isString(arg_value) && arg_value.indexOf('<') > -1)\r\n\t\t{\r\n\t\t\t// console.log('Tree:render_safe_string: value=%s', arg_value)\r\n\t\t\treturn '<code>' + arg_value.replace('<', '&lt;').replace('>', '&gt;') + '</code>'\r\n\t\t}\r\n\r\n\t\tvar translations = {\r\n\t\t\t'<script>' :'!scripta!',\r\n\t\t\t'</script>':'!scriptb!',\r\n\t\t\t'<div>' :'!diva!',\r\n\t\t\t'</div>':'!divb!',\r\n\t\t\t'<li>'  :'!lia!',\r\n\t\t\t'</li>' :'!lib!',\r\n\t\t\t'<ul>'  :'!ula!',\r\n\t\t\t'</ul>' :'!ulb!',\r\n\t\t\t'<'     :'!aaa!',\r\n\t\t\t'>'     :'!bbb!'\r\n\t\t}\r\n\t\t// arg_value = arg_value ? arg_value.toString().replace('<div>', '!diva!').replace('</div>', '!divb!') : arg_value\r\n\t\t// return arg_value ? arg_value.toString().replace('<li>', '!lia!').replace('</li>', '!lib!').replace('<ul>', '!ula!').replace('</ul>', '!ulb!').replace('<', '!aaa!').replace('>', '!bbb!') : arg_value\r\n\t\t\r\n\t\tif ( T.isString(arg_value) )\r\n\t\t{\r\n\t\t\tvar tr = ''\r\n\t\t\tObject.keys(translations).forEach(\r\n\t\t\t\tfunction(key)\r\n\t\t\t\t{\r\n\t\t\t\t\ttr = translations[key]\r\n\t\t\t\t\targ_value = arg_value.replace(key, tr)\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\tconsole.error('tree.render_safe_string: value is not a string', arg_value)\r\n\t\t}\r\n\r\n\t\treturn arg_value\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\trender_node(arg_value, arg_depth, arg_label, arg_expanded)\r\n\t{\r\n\t\t// console.log('tree.render_node', arg_label)\r\n\r\n\t\tvar self = this\r\n\r\n\t\targ_depth = arg_depth ? arg_depth : 1\r\n\t\targ_label = arg_label == 0 ? '0' : arg_label\r\n\t\targ_label = arg_label ? arg_label : 'no name'\r\n\t\targ_label = '' + arg_label\r\n\t\t\r\n\t\tif (arg_depth > this.max_depth)\r\n\t\t{\r\n\t\t\tconsole.log('MAX DEPTH ' + this.max_depth + ' is reached')\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\tif (T.isString(arg_value))\r\n\t\t{\r\n\t\t\t// console.log('tree.render_node with string content', arg_label)\r\n\t\t\tthis.append_row(this.render_safe_string(arg_label), this.render_safe_string(arg_value), arg_depth, arg_expanded)\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\tif (T.isNumber(arg_value))\r\n\t\t{\r\n\t\t\t// console.log('tree.render_node with number content', arg_label)\r\n\t\t\tthis.append_row(this.render_safe_string(arg_label), arg_value, arg_depth, arg_expanded)\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\tif (T.isBoolean(arg_value))\r\n\t\t{\r\n\t\t\t// console.log('tree.render_node with boolean content', arg_label)\r\n\t\t\tthis.append_row(this.render_safe_string(arg_label), (arg_value ? 'true' : 'false'), arg_depth, arg_expanded)\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\tif (T.isArray(arg_value))\r\n\t\t{\r\n\t\t\t// console.log('tree.render_node with array content', arg_label)\r\n\r\n\t\t\tif (arg_value.length == 0)\r\n\t\t\t{\r\n\t\t\t\tthis.append_row(this.render_safe_string(arg_label), '[]', arg_depth, arg_expanded)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.render_expandable_node(arg_label, arg_depth, arg_expanded)\r\n\t\t\t\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\targ_value.forEach(\r\n\t\t\t\t\tfunction(value, index) {\r\n\t\t\t\t\t\tself.render_node(value, arg_depth + 1, index, arg_expanded)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tcatch(e)\r\n\t\t\t{\r\n\t\t\t\t// NOTHING TO DO\r\n\t\t\t\tconsole.error(e)\r\n\t\t\t}\r\n\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\tif (T.isObject(arg_value))\r\n\t\t{\r\n\t\t\t// console.log('tree.render_node with object content', arg_label)\r\n\r\n\t\t\tthis.render_expandable_node(arg_label, arg_depth, arg_expanded)\r\n\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tObject.keys(arg_value).forEach(\r\n\t\t\t\t\tfunction(key)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tself.render_node(arg_value[key], arg_depth + 1, key, arg_expanded)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tcatch(e)\r\n\t\t\t{\r\n\t\t\t\t// NOTHING TO DO\r\n\t\t\t\tconsole.error(e)\r\n\t\t\t}\r\n\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\tif ( T.isNull(arg_value))\r\n\t\t{\r\n\t\t\t// console.log('tree.render_node with null content', arg_label)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconsole.error(arg_value, 'value is unknow, unknow node of type [' + (typeof arg_value) + ']')\r\n\t\treturn\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * On bindings refresh.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdo_refresh()\r\n\t{\r\n\t\t// console.log('new state', arg_operands)\r\n\t\t// this.update_tree(arg_operands.datas)\r\n\t\tthis.load()\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/components/table_tree.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 583,
    "kind": "variable",
    "name": "context",
    "memberof": "js/components/table_tree.js",
    "static": true,
    "longname": "js/components/table_tree.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/components/table_tree.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 584,
    "kind": "class",
    "name": "TableTree",
    "memberof": "js/components/table_tree.js",
    "static": true,
    "longname": "js/components/table_tree.js~TableTree",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/components/table_tree.js",
    "importStyle": "TableTree",
    "description": "",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "UI Tree component class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/component.js~Component"
    ]
  },
  {
    "__docId__": 585,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/components/table_tree.js~TableTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table_tree.js~TableTree#constructor",
    "access": "public",
    "description": "Creates an instance of Component.",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "context of traces of this instance (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 586,
    "kind": "member",
    "name": "is_table_tree_component",
    "memberof": "js/components/table_tree.js~TableTree",
    "static": false,
    "longname": "js/components/table_tree.js~TableTree#is_table_tree_component",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 587,
    "kind": "method",
    "name": "ui_items_get_count",
    "memberof": "js/components/table_tree.js~TableTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table_tree.js~TableTree#ui_items_get_count",
    "access": "public",
    "description": "Get container items count.",
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 588,
    "kind": "method",
    "name": "ui_items_clear",
    "memberof": "js/components/table_tree.js~TableTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table_tree.js~TableTree#ui_items_clear",
    "access": "public",
    "description": "Erase container items.",
    "lineNumber": 63,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 589,
    "kind": "method",
    "name": "ui_items_append",
    "memberof": "js/components/table_tree.js~TableTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table_tree.js~TableTree#ui_items_append",
    "access": "public",
    "description": "Append rows to the container.",
    "lineNumber": 76,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_array",
        "description": "items array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 590,
    "kind": "method",
    "name": "ui_items_prepend",
    "memberof": "js/components/table_tree.js~TableTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table_tree.js~TableTree#ui_items_prepend",
    "access": "public",
    "description": "Prepend a row.",
    "lineNumber": 89,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_array",
        "description": "rows array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 591,
    "kind": "method",
    "name": "ui_items_remove_at_index",
    "memberof": "js/components/table_tree.js~TableTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table_tree.js~TableTree#ui_items_remove_at_index",
    "access": "public",
    "description": "Remove a row at given position.",
    "lineNumber": 102,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_index",
        "description": "row index."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 592,
    "kind": "method",
    "name": "ui_items_remove_first",
    "memberof": "js/components/table_tree.js~TableTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table_tree.js~TableTree#ui_items_remove_first",
    "access": "public",
    "description": "Remove a row at first position.",
    "lineNumber": 115,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 593,
    "kind": "method",
    "name": "ui_items_remove_last",
    "memberof": "js/components/table_tree.js~TableTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table_tree.js~TableTree#ui_items_remove_last",
    "access": "public",
    "description": "Remove a row at last position.",
    "lineNumber": 128,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_count",
        "description": "items count to remove."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 594,
    "kind": "method",
    "name": "init",
    "memberof": "js/components/table_tree.js~TableTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table_tree.js~TableTree#init",
    "access": "public",
    "description": "Init view.",
    "lineNumber": 141,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 595,
    "kind": "method",
    "name": "update_tree",
    "memberof": "js/components/table_tree.js~TableTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table_tree.js~TableTree#update_tree",
    "access": "public",
    "description": "Update tree.",
    "lineNumber": 161,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_tree",
        "description": "tree nodes."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 596,
    "kind": "member",
    "name": "tree_jqo",
    "memberof": "js/components/table_tree.js~TableTree",
    "static": false,
    "longname": "js/components/table_tree.js~TableTree#tree_jqo",
    "access": "public",
    "description": null,
    "lineNumber": 188,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 597,
    "kind": "member",
    "name": "tbody_jqo",
    "memberof": "js/components/table_tree.js~TableTree",
    "static": false,
    "longname": "js/components/table_tree.js~TableTree#tbody_jqo",
    "access": "public",
    "description": null,
    "lineNumber": 189,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 598,
    "kind": "member",
    "name": "max_depth",
    "memberof": "js/components/table_tree.js~TableTree",
    "static": false,
    "longname": "js/components/table_tree.js~TableTree#max_depth",
    "access": "public",
    "description": null,
    "lineNumber": 194,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 600,
    "kind": "method",
    "name": "find_children",
    "memberof": "js/components/table_tree.js~TableTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table_tree.js~TableTree#find_children",
    "access": "public",
    "description": "",
    "lineNumber": 268,
    "params": [
      {
        "name": "arg_tr",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 601,
    "kind": "method",
    "name": "append_row",
    "memberof": "js/components/table_tree.js~TableTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table_tree.js~TableTree#append_row",
    "access": "public",
    "description": "Append a table row",
    "lineNumber": 286,
    "params": [
      {
        "name": "arg_key",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_content",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_depth",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_expanded",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 602,
    "kind": "method",
    "name": "render_expandable_node",
    "memberof": "js/components/table_tree.js~TableTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table_tree.js~TableTree#render_expandable_node",
    "access": "public",
    "description": "",
    "lineNumber": 306,
    "params": [
      {
        "name": "arg_label",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_depth",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_expanded",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 603,
    "kind": "method",
    "name": "render_safe_string",
    "memberof": "js/components/table_tree.js~TableTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table_tree.js~TableTree#render_safe_string",
    "access": "public",
    "description": "",
    "lineNumber": 329,
    "params": [
      {
        "name": "arg_value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 604,
    "kind": "method",
    "name": "render_node",
    "memberof": "js/components/table_tree.js~TableTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table_tree.js~TableTree#render_node",
    "access": "public",
    "description": "",
    "lineNumber": 377,
    "params": [
      {
        "name": "arg_value",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_depth",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_label",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_expanded",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 605,
    "kind": "method",
    "name": "do_refresh",
    "memberof": "js/components/table_tree.js~TableTree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/table_tree.js~TableTree#do_refresh",
    "access": "public",
    "description": "On bindings refresh.",
    "lineNumber": 485,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 606,
    "kind": "file",
    "name": "js/components/tabs.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../../../node_modules/devapt-core-common/dist/js/utils/types'\r\n\r\n// BROWSER IMPORTS\r\nimport Container from '../base/container'\r\n\r\n\r\nconst context = 'browser/components/tabs'\r\n\r\n\r\n\r\n/**\r\n * @file UI component class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class Tabs extends Container\r\n{\r\n\t\r\n\t/**\r\n\t * Creates an instance of Component.\r\n\t * \r\n\t * @param {object} arg_runtime - client runtime.\r\n\t * @param {object} arg_state - component state.\r\n\t * @param {string} arg_log_context - context of traces of this instance (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_state, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_runtime, arg_state, log_context)\r\n\t\t\r\n\t\tthis.is_tabs_component = true\r\n\t\t\r\n\t\t$(this._dom_element).on('change.zf.tabs',\r\n\t\t\t()=>{\r\n\t\t\t\tconst tab_id = $(this._dom_element).find('.is-active a').attr('id')\r\n\t\t\t\tthis.on_tabs_change(tab_id)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\t// DEBUG\r\n\t\t// this.enable_trace()\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t_update_self(arg_prev_element, arg_new_element)\r\n\t{\r\n\t\t// console.log(context + ':_update_self', arg_prev_element, arg_new_element)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get view children components.\r\n\t * \r\n\t * @returns {array} - list of Component.\r\n\t */\r\n\tget_children_component()\r\n\t{\r\n\t\tif ( ! this._children_component)\r\n\t\t{\r\n\t\t\tthis._children_component = []\r\n\r\n\t\t\tconst items = this.get_state_value('items', [])\r\n\t\t\t// console.log(context + ':get_children_component:init with items:', items)\r\n\r\n\t\t\titems.forEach(\r\n\t\t\t\t(tab)=>{\r\n\t\t\t\t\tif ( T.isObject(tab) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif ( T.isString(tab.content) )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tconst component = window.devapt().ui(tab.content)\r\n\t\t\t\t\t\t\tif (component && component.is_component)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis._children_component.push(component)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn this._children_component\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Update state with selected tab.\r\n\t * \r\n\t * @param {string} arg_selected_tab_id - selected tab id.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\ton_tabs_change(arg_selected_tab_id)\r\n\t{\r\n\t\t// console.log(context + ':on_tabs_change:selected=' + arg_selected_tab_id)\r\n\r\n\t\tconst prev_state = this.get_state()\r\n\t\tconst new_state = prev_state.set('selected_id', arg_selected_tab_id)\r\n\t\t// console.log(context + ':on_tabs_change:selected=' + arg_selected_tab_id, prev_state)\r\n\t\t// console.log(context + ':on_tabs_change:selected=' + arg_selected_tab_id, new_state)\r\n\r\n\t\t// const action = { type:'ADD_JSON_RESOURCE', resource:this.get_name(), path:this.get_state_path(), json:new_state.toJS() }\r\n\t\t// window.devapt().ui().store.dispatch(action)\r\n\r\n\t\tthis.dispatch_update_state_action(new_state)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/components/tabs.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 607,
    "kind": "variable",
    "name": "context",
    "memberof": "js/components/tabs.js",
    "static": true,
    "longname": "js/components/tabs.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/components/tabs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 608,
    "kind": "class",
    "name": "Tabs",
    "memberof": "js/components/tabs.js",
    "static": true,
    "longname": "js/components/tabs.js~Tabs",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/components/tabs.js",
    "importStyle": "Tabs",
    "description": "",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "UI component class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/container.js~Container"
    ]
  },
  {
    "__docId__": 609,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/components/tabs.js~Tabs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/tabs.js~Tabs#constructor",
    "access": "public",
    "description": "Creates an instance of Component.",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "context of traces of this instance (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 610,
    "kind": "member",
    "name": "is_tabs_component",
    "memberof": "js/components/tabs.js~Tabs",
    "static": false,
    "longname": "js/components/tabs.js~Tabs#is_tabs_component",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 611,
    "kind": "method",
    "name": "_update_self",
    "memberof": "js/components/tabs.js~Tabs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/tabs.js~Tabs#_update_self",
    "access": "private",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "params": [
      {
        "name": "arg_prev_element",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_new_element",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 612,
    "kind": "method",
    "name": "get_children_component",
    "memberof": "js/components/tabs.js~Tabs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/tabs.js~Tabs#get_children_component",
    "access": "public",
    "description": "Get view children components.",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} - list of Component."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "list of Component."
    },
    "params": []
  },
  {
    "__docId__": 613,
    "kind": "member",
    "name": "_children_component",
    "memberof": "js/components/tabs.js~Tabs",
    "static": false,
    "longname": "js/components/tabs.js~Tabs#_children_component",
    "access": "private",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 614,
    "kind": "method",
    "name": "on_tabs_change",
    "memberof": "js/components/tabs.js~Tabs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/tabs.js~Tabs#on_tabs_change",
    "access": "public",
    "description": "Update state with selected tab.",
    "lineNumber": 102,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_selected_tab_id",
        "description": "selected tab id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 615,
    "kind": "file",
    "name": "js/components/topology.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../../../node_modules/devapt-core-common/dist/js/utils/types'\r\n\r\n// BROWSER IMPORTS\r\nimport Component from '../base/component'\r\n\r\n\r\nconst context = 'browser/components/topology'\r\n\r\n\r\n\r\n/**\r\n * @file UI Topology component class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class Topology extends Component\r\n{\r\n\t\r\n\t/**\r\n\t * Creates an instance of Component.\r\n\t * \r\n\t * @param {object} arg_runtime - client runtime.\r\n\t * @param {object} arg_state - component state.\r\n\t * @param {string} arg_log_context - context of traces of this instance (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_state, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_runtime, arg_state, log_context)\r\n\t\t\r\n\t\tthis.is_topology_component = true\r\n\t\t\r\n\t\tthis.init()\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get container items count.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_get_count()\r\n\t{\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Erase container items.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_clear()\r\n\t{\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Append rows to the container.\r\n\t * \r\n\t * @param {array} arg_items_array - items array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_append(/*arg_items_array*/)\r\n\t{\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Prepend a row.\r\n\t * \r\n\t * @param {array} arg_items_array - rows array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_prepend(/*arg_items_array*/)\r\n\t{\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove a row at given position.\r\n\t * \r\n\t * @param {number} arg_index - row index.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_remove_at_index(arg_index)\r\n\t{\r\n\t\tassert( T.isNumber(arg_index), context + ':ui_items_remove_at_index:bad index number' )\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove a row at first position.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_remove_first()\r\n\t{\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove a row at last position.\r\n\t * \r\n\t * @param {integer} arg_count - items count to remove.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_remove_last(/*arg_count*/)\r\n\t{\r\n\t\t// console.log(context + ':ui_items_remove_last:arg_count', arg_count)\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Init view.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tinit()\r\n\t{\r\n\t\tthis.mode = this.get_state_value('mode')\r\n\t\tthis.svc = this.get_state_value('service')\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Update topology graph with physical or logical elements.\r\n\t * \r\n\t * @param {object} arg_values - service response values.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t\r\n\tupdate_topology(arg_values)\r\n\t{\r\n\t\tconst topology_id = this.get_dom_id()\r\n\t\t// console.log(arg_values, 'topo.update_topology for %s', topology_id)\r\n\t\t\r\n\t\tthis.cy.destroy()\r\n\t\tthis.init_cy()\r\n\t\t\r\n\t\tvar cy = this.cy\r\n\t\t// if (this.els && this.els.length > 0)\r\n\t\t// {\r\n\t\t// \tconst els_collection = cy.collection(this.els)\r\n\t\t// \tthis.cy.remove(els_collection)\r\n\t\t// }\r\n\t\tcy.reset() // RESET ZOOM...\r\n\t\t// var h = $('#' + topology_id).css('height')\r\n\t\t$('#' + topology_id).css('margin-top', '100px')\r\n\t\t$('#' + topology_id).css('height', '300px')\r\n\t\t// console.log($('#' + topology_id).css('top'), 'top')\r\n\t\t\r\n\t\tthis.els = []\r\n\t\tif (this.mode == 'physical')\r\n\t\t{\r\n\t\t\tthis.els = this.get_physical_els(arg_values)\r\n\t\t}\r\n\t\telse if (this.mode == 'logical')\r\n\t\t{\r\n\t\t\tthis.els = this.get_logical_els(arg_values)\r\n\t\t}\r\n\t\t\r\n\t\tcy.add(this.els)\r\n\t\tcy.layout( { name:'dagre' } )\r\n\t\tcy.resize()\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get physical topology elements.\r\n\t * \r\n\t * @param {object} arg_values - service response values.\r\n\t * \r\n\t * @returns {array} - cytoscape graph elements array.\r\n\t */\r\n\tget_physical_els(arg_values)\r\n\t{\r\n\t\tconst topology_id = this.get_dom_id()\r\n\t\tvar els = [\r\n\t\t\t{\r\n\t\t\t\tdata: { id:'world', label:'World' }\r\n\t\t\t}\r\n\t\t]\r\n\t\tconst nodes = arg_values.datas.nodes\r\n\t\tconst nodes_names = Object.keys(nodes)\r\n\t\tnodes_names.forEach(\r\n\t\t\tfunction(node_name)\r\n\t\t\t{\r\n\t\t\t\tconst node = nodes[node_name]\r\n\t\t\t\tconst node_id = topology_id + '_node_' + node_name\r\n\t\t\t\tels.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata: { id:node_id, label:node_name }\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata: { source:'world', target:node_id }\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\t\r\n\t\t\t\tconst servers = node.servers\r\n\t\t\t\tconst servers_names = Object.keys(servers)\r\n\t\t\t\tservers_names.forEach(\r\n\t\t\t\t\tfunction(server_name)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// const server = servers[server_name]\r\n\t\t\t\t\t\tconst server_id = topology_id + '_server_' + server_name\r\n\t\t\t\t\t\tels.push(\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tdata: { id:server_id, label:server_name }\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tdata: { source:node_id, target:server_id }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\treturn els\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get logical topology elements.\r\n\t * \r\n\t * @param {object} arg_values - service response values.\r\n\t * \r\n\t * @returns {array} - cytoscape graph elements array.\r\n\t */\r\n\tget_logical_els(arg_values)\r\n\t{\r\n\t\tif (! arg_values || ! arg_values.datas)\r\n\t\t{\r\n\t\t\tconsole.error(context + ':get_logical_els:bad response:arg_values=', arg_values)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst topology_id = this.get_dom_id()\r\n\t\tvar els = [\r\n\t\t\t{\r\n\t\t\t\tdata: { id:'world', label:'World' }\r\n\t\t\t}\r\n\t\t]\r\n\t\tconst apps = arg_values.datas.applications\r\n\t\tconst apps_names = Object.keys(apps)\r\n\t\tapps_names.forEach(\r\n\t\t\tfunction(app_name)\r\n\t\t\t{\r\n\t\t\t\tconst app = apps[app_name]\r\n\t\t\t\tconst app_id = topology_id + '_app_' + app_name\r\n\t\t\t\tels.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata: { id:app_id, label:app_name }\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata: { source:'world', target:app_id }\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\t\r\n\t\t\t\t// ADD PROVIDED SERVICES\r\n\t\t\t\tconst provided_services = app.provided_services\r\n\t\t\t\tconst provided_services_names = Object.keys(provided_services)\r\n\t\t\t\tprovided_services_names.forEach(\r\n\t\t\t\t\tfunction(provided_service_name)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// const svc = provided_services[provided_service_name]\r\n\t\t\t\t\t\tconst svc_id = topology_id + '_provided_svc_' + provided_service_name\r\n\t\t\t\t\t\tels.push(\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tdata: { id:svc_id, label:provided_service_name }\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tdata: { source:app_id, target:svc_id }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\treturn els\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/components/topology.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 616,
    "kind": "variable",
    "name": "context",
    "memberof": "js/components/topology.js",
    "static": true,
    "longname": "js/components/topology.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/components/topology.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 617,
    "kind": "class",
    "name": "Topology",
    "memberof": "js/components/topology.js",
    "static": true,
    "longname": "js/components/topology.js~Topology",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/components/topology.js",
    "importStyle": "Topology",
    "description": "",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "UI Topology component class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/component.js~Component"
    ]
  },
  {
    "__docId__": 618,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/components/topology.js~Topology",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/topology.js~Topology#constructor",
    "access": "public",
    "description": "Creates an instance of Component.",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "context of traces of this instance (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 619,
    "kind": "member",
    "name": "is_topology_component",
    "memberof": "js/components/topology.js~Topology",
    "static": false,
    "longname": "js/components/topology.js~Topology#is_topology_component",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 620,
    "kind": "method",
    "name": "ui_items_get_count",
    "memberof": "js/components/topology.js~Topology",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/topology.js~Topology#ui_items_get_count",
    "access": "public",
    "description": "Get container items count.",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 621,
    "kind": "method",
    "name": "ui_items_clear",
    "memberof": "js/components/topology.js~Topology",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/topology.js~Topology#ui_items_clear",
    "access": "public",
    "description": "Erase container items.",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 622,
    "kind": "method",
    "name": "ui_items_append",
    "memberof": "js/components/topology.js~Topology",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/topology.js~Topology#ui_items_append",
    "access": "public",
    "description": "Append rows to the container.",
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_array",
        "description": "items array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 623,
    "kind": "method",
    "name": "ui_items_prepend",
    "memberof": "js/components/topology.js~Topology",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/topology.js~Topology#ui_items_prepend",
    "access": "public",
    "description": "Prepend a row.",
    "lineNumber": 88,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_array",
        "description": "rows array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 624,
    "kind": "method",
    "name": "ui_items_remove_at_index",
    "memberof": "js/components/topology.js~Topology",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/topology.js~Topology#ui_items_remove_at_index",
    "access": "public",
    "description": "Remove a row at given position.",
    "lineNumber": 101,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_index",
        "description": "row index."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 625,
    "kind": "method",
    "name": "ui_items_remove_first",
    "memberof": "js/components/topology.js~Topology",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/topology.js~Topology#ui_items_remove_first",
    "access": "public",
    "description": "Remove a row at first position.",
    "lineNumber": 114,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 626,
    "kind": "method",
    "name": "ui_items_remove_last",
    "memberof": "js/components/topology.js~Topology",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/topology.js~Topology#ui_items_remove_last",
    "access": "public",
    "description": "Remove a row at last position.",
    "lineNumber": 127,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_count",
        "description": "items count to remove."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 627,
    "kind": "method",
    "name": "init",
    "memberof": "js/components/topology.js~Topology",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/topology.js~Topology#init",
    "access": "public",
    "description": "Init view.",
    "lineNumber": 140,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 628,
    "kind": "member",
    "name": "mode",
    "memberof": "js/components/topology.js~Topology",
    "static": false,
    "longname": "js/components/topology.js~Topology#mode",
    "access": "public",
    "description": null,
    "lineNumber": 142,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 629,
    "kind": "member",
    "name": "svc",
    "memberof": "js/components/topology.js~Topology",
    "static": false,
    "longname": "js/components/topology.js~Topology#svc",
    "access": "public",
    "description": null,
    "lineNumber": 143,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 630,
    "kind": "method",
    "name": "update_topology",
    "memberof": "js/components/topology.js~Topology",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/topology.js~Topology#update_topology",
    "access": "public",
    "description": "Update topology graph with physical or logical elements.",
    "lineNumber": 156,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_values",
        "description": "service response values."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 631,
    "kind": "member",
    "name": "els",
    "memberof": "js/components/topology.js~Topology",
    "static": false,
    "longname": "js/components/topology.js~Topology#els",
    "access": "public",
    "description": null,
    "lineNumber": 176,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 634,
    "kind": "method",
    "name": "get_physical_els",
    "memberof": "js/components/topology.js~Topology",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/topology.js~Topology#get_physical_els",
    "access": "public",
    "description": "Get physical topology elements.",
    "lineNumber": 200,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} - cytoscape graph elements array."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_values",
        "description": "service response values."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "cytoscape graph elements array."
    }
  },
  {
    "__docId__": 635,
    "kind": "method",
    "name": "get_logical_els",
    "memberof": "js/components/topology.js~Topology",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/topology.js~Topology#get_logical_els",
    "access": "public",
    "description": "Get logical topology elements.",
    "lineNumber": 256,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} - cytoscape graph elements array."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_values",
        "description": "service response values."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "cytoscape graph elements array."
    }
  },
  {
    "__docId__": 636,
    "kind": "file",
    "name": "js/components/tree.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../../../node_modules/devapt-core-common/dist/js/utils/types'\r\n\r\n// BROWSER IMPORTS\r\nimport Component from '../base/component'\r\n\r\n\r\nconst context = 'browser/components/tree'\r\n\r\n\r\n\r\n/**\r\n * @file UI Tree component class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class Tree extends Component\r\n{\r\n\t\r\n\t/**\r\n\t * Creates an instance of Component.\r\n\t * \r\n\t * @param {object} arg_runtime - client runtime.\r\n\t * @param {object} arg_state - component state.\r\n\t * @param {string} arg_log_context - context of traces of this instance (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_state, arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(arg_runtime, arg_state, log_context)\r\n\t\t\r\n\t\tthis.is_tree_component = true\r\n\t\t\r\n\t\tthis.init()\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get container items count.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_get_count()\r\n\t{\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Erase container items.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_clear()\r\n\t{\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Append rows to the container.\r\n\t * \r\n\t * @param {array} arg_items_array - items array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_append(/*arg_items_array*/)\r\n\t{\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Prepend a row.\r\n\t * \r\n\t * @param {array} arg_items_array - rows array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_prepend(/*arg_items_array*/)\r\n\t{\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove a row at given position.\r\n\t * \r\n\t * @param {number} arg_index - row index.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_remove_at_index(arg_index)\r\n\t{\r\n\t\tassert( T.isNumber(arg_index), context + ':ui_items_remove_at_index:bad index number' )\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove a row at first position.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_remove_first()\r\n\t{\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove a row at last position.\r\n\t * \r\n\t * @param {integer} arg_count - items count to remove.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tui_items_remove_last(/*arg_count*/)\r\n\t{\r\n\t\t// console.log(context + ':ui_items_remove_last:arg_count', arg_count)\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Init view.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tinit()\r\n\t{\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Update tree.\r\n\t * \r\n\t * @param {object} arg_tree - tree nodes.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tupdate_tree(arg_tree)\r\n\t{\r\n\t\tif (arg_tree.datas)\r\n\t\t{\r\n\t\t\targ_tree = arg_tree.datas\r\n\t\t}\r\n\r\n\t\tconsole.log('tree.update_tree', arg_tree)\r\n\r\n\t\tconst tree_id = this.get_dom_id()\r\n\t\tthis.max_depth = this.get_state_value('max_depth', 20)\r\n\t\tthis.max_depth = T.isNumber(this.max_depth) ? this.max_depth : 20\r\n\r\n\t\tvar collapsed = this.get_state_value('collapsed', false)\r\n\r\n\t\tvar html = ''\r\n\t\t// html = '<table><tbody>'\r\n\t\thtml += this.render_node(arg_tree, 1, this.get_state_value('label') )\r\n\t\t// html += '</tbody></table>'\r\n\t\t// console.log('update_tree', html)\r\n\t\t\r\n\t\tvar tree_jqo = $('#' + tree_id)\r\n\t\ttree_jqo.html(html)\r\n\t\tif (collapsed)\r\n\t\t{\r\n\t\t\t$('div.node_content', tree_jqo).hide()\r\n\t\t\t$('span.node_opened', tree_jqo).hide()\r\n\t\t\t$('span.node_closed', tree_jqo).show()\r\n\t\t} else {\r\n\t\t\t$('div.node_content', tree_jqo).show()\r\n\t\t\t$('span.node_opened', tree_jqo).show()\r\n\t\t\t$('.node_closed', tree_jqo).hide()\r\n\t\t}\r\n\t\t\r\n\t\t$('a.node_a', tree_jqo).click(\r\n\t\t\tfunction(ev)\r\n\t\t\t{\r\n\t\t\t\tvar node = $(ev.currentTarget).parent()\r\n\t\t\t\t\r\n\t\t\t\t$('div.node_content', node).toggle()\r\n\t\t\t\t$('span.node_opened', node).toggle()\r\n\t\t\t\t$('span.node_closed', node).toggle()\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\trender_safe_string(arg_value)\r\n\t{\r\n\t\t// console.log('tree.render_safe_string', arg_value)\r\n\t\t\r\n\t\t// arg_value = arg_value.replace('<script>', 'AscriptB').replace('A/scriptB', '\\A/script\\B')\r\n\t\t// if (arg_value.indexOf('<') > -1)\r\n\t\t// {\r\n\t\t// \t// console.log('Tree:render_safe_string: value=%s', arg_value)\r\n\t\t// \treturn '<code>' + arg_value + '</code>'\r\n\t\t// }\r\n\r\n\t\tvar translations = {\r\n\t\t\t'<script>' :'!scripta!',\r\n\t\t\t'</script>':'!scriptb!',\r\n\t\t\t'<div>' :'!diva!',\r\n\t\t\t'</div>':'!divb!',\r\n\t\t\t'<li>'  :'!lia!',\r\n\t\t\t'</li>' :'!lib!',\r\n\t\t\t'<ul>'  :'!ula!',\r\n\t\t\t'</ul>' :'!ulb!',\r\n\t\t\t'<'     :'!aaa!',\r\n\t\t\t'>'     :'!bbb!'\r\n\t\t}\r\n\t\t// arg_value = arg_value ? arg_value.toString().replace('<div>', '!diva!').replace('</div>', '!divb!') : arg_value\r\n\t\t// return arg_value ? arg_value.toString().replace('<li>', '!lia!').replace('</li>', '!lib!').replace('<ul>', '!ula!').replace('</ul>', '!ulb!').replace('<', '!aaa!').replace('>', '!bbb!') : arg_value\r\n\t\t\r\n\t\tif ( T.isString(arg_value) )\r\n\t\t{\r\n\t\t\tvar tr = ''\r\n\t\t\tObject.keys(translations).forEach(\r\n\t\t\t\tfunction(key)\r\n\t\t\t\t{\r\n\t\t\t\t\ttr = translations[key]\r\n\t\t\t\t\targ_value = arg_value.replace(key, tr)\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\tconsole.error('tree.render_safe_string: value is not a string', arg_value)\r\n\t\t}\r\n\r\n\t\treturn arg_value\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\trender_expandable_node(arg_label, arg_content, arg_content_is_safe)\r\n\t{\r\n\t\targ_content_is_safe = T.isBoolean(arg_content_is_safe) ? arg_content_is_safe : false\r\n\t\t// console.log('tree.render_expandable_node', arg_label, arg_content_is_safe)\r\n\r\n\t\tvar str = ''\r\n\t\tstr += '<div class=\"node\">'\r\n\t\tstr += '<a class=\"node_a\">'\r\n\t\tstr += '<span class=\"node_closed\">\\u25B9</span>'\r\n\t\tstr += '<span class=\"node_opened\">\\u25BF</span>'\r\n\t\tstr += '<b>' + arg_label + '</b>'\r\n\t\tstr += '</a>'\r\n\t\tstr += '<div class=\"node_content\">'\r\n\t\tstr += arg_content_is_safe ? arg_content : this.render_safe_string(arg_content)\r\n\t\tstr += '</div>'\r\n\t\tstr += '</div>'\r\n\r\n\t\treturn str\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\trender_node(arg_value, arg_depth, arg_label)\r\n\t{\r\n\t\t// console.log('tree.render_node', arg_label)\r\n\r\n\t\tvar self = this\r\n\t\tvar str = ''\r\n\r\n\t\targ_depth = arg_depth ? arg_depth : 1\r\n\t\targ_label = arg_label == 0 ? '0' : arg_label\r\n\t\targ_label = arg_label ? arg_label : 'no name'\r\n\t\t\r\n\t\tif (arg_depth > this.max_depth)\r\n\t\t{\r\n\t\t\tconsole.log('MAX DEPTH ' + this.max_depth + ' is reached')\r\n\t\t\treturn '<p>MAX DEPTH ' + this.max_depth + ' is reached</p>'\r\n\t\t}\r\n\t\t\r\n\t\tif (T.isString(arg_value))\r\n\t\t{\r\n\t\t\t// console.log('tree.render_node with string content', arg_label)\r\n\t\t\targ_value = this.render_safe_string(arg_label) + '=' + this.render_safe_string(arg_value)\r\n\t\t\treturn '<span>' + arg_value + '</span>'\r\n\t\t}\r\n\t\t\r\n\t\tif (T.isNumber(arg_value))\r\n\t\t{\r\n\t\t\t// console.log('tree.render_node with number content', arg_label)\r\n\t\t\treturn '<span>' + this.render_safe_string(arg_label) + '=' + arg_value + '</span>'\r\n\t\t}\r\n\t\t\r\n\t\tif (T.isBoolean(arg_value))\r\n\t\t{\r\n\t\t\t// console.log('tree.render_node with boolean content', arg_label)\r\n\t\t\tvar value = arg_value ? 'true' : 'false'\r\n\t\t\treturn '<span>' + this.render_safe_string(arg_label) + '=' + value + '</span>'\r\n\t\t}\r\n\t\t\r\n\t\tif (T.isArray(arg_value))\r\n\t\t{\r\n\t\t\t// console.log('tree.render_node with array content', arg_label)\r\n\r\n\t\t\tif (arg_value.length == 0)\r\n\t\t\t{\r\n\t\t\t\treturn '<span>' + this.render_safe_string(arg_label) + '=' + '[]' + '</span>'\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (arg_value.length == 1)\r\n\t\t\t{\r\n\t\t\t\treturn '<span>' + this.render_safe_string(arg_label) + '=' + '[' + '</span>' + this.render_node(arg_value[0], arg_depth + 1, '0') + ']'\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\targ_value.forEach(\r\n\t\t\t\t\tfunction(value, index) {\r\n\t\t\t\t\t\tstr += self.render_node(value, arg_depth + 1, index)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tcatch(e)\r\n\t\t\t{\r\n\t\t\t\t// NOTHING TO DO\r\n\t\t\t\tconsole.error(e)\r\n\t\t\t}\r\n\t\t\treturn this.render_expandable_node(arg_label, str, true)\r\n\t\t}\r\n\t\t\r\n\t\tif (T.isObject(arg_value))\r\n\t\t{\r\n\t\t\t// console.log('tree.render_node with object content', arg_label)\r\n\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tObject.keys(arg_value).forEach(\r\n\t\t\t\t\tfunction(key)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstr += self.render_node(arg_value[key], arg_depth + 1, key)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tcatch(e)\r\n\t\t\t{\r\n\t\t\t\t// NOTHING TO DO\r\n\t\t\t\tconsole.error(e)\r\n\t\t\t}\r\n\t\t\treturn this.render_expandable_node(arg_label, str, true)\r\n\t\t}\r\n\t\t\r\n\t\tif ( T.isNull(arg_value))\r\n\t\t{\r\n\t\t\t// console.log('tree.render_node with null content', arg_label)\r\n\t\t\treturn ''\r\n\t\t}\r\n\r\n\t\tconsole.error(arg_value, 'value is unknow')\r\n\t\treturn '<p>unknow node of type [' + (typeof arg_value) + ']</p>'\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * On bindings refresh.\r\n\t * \r\n\t * @param {object} arg_operands - operands plain object.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\ton_refresh(arg_operands)\r\n\t{\r\n\t\t// console.log('new state', arg_operands)\r\n\t\tthis.update_tree(arg_operands.datas)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/components/tree.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 637,
    "kind": "variable",
    "name": "context",
    "memberof": "js/components/tree.js",
    "static": true,
    "longname": "js/components/tree.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/components/tree.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 638,
    "kind": "class",
    "name": "Tree",
    "memberof": "js/components/tree.js",
    "static": true,
    "longname": "js/components/tree.js~Tree",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/components/tree.js",
    "importStyle": "Tree",
    "description": "",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "UI Tree component class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/base/component.js~Component"
    ]
  },
  {
    "__docId__": 639,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/components/tree.js~Tree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/tree.js~Tree#constructor",
    "access": "public",
    "description": "Creates an instance of Component.",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "context of traces of this instance (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 640,
    "kind": "member",
    "name": "is_tree_component",
    "memberof": "js/components/tree.js~Tree",
    "static": false,
    "longname": "js/components/tree.js~Tree#is_tree_component",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 641,
    "kind": "method",
    "name": "ui_items_get_count",
    "memberof": "js/components/tree.js~Tree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/tree.js~Tree#ui_items_get_count",
    "access": "public",
    "description": "Get container items count.",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 642,
    "kind": "method",
    "name": "ui_items_clear",
    "memberof": "js/components/tree.js~Tree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/tree.js~Tree#ui_items_clear",
    "access": "public",
    "description": "Erase container items.",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 643,
    "kind": "method",
    "name": "ui_items_append",
    "memberof": "js/components/tree.js~Tree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/tree.js~Tree#ui_items_append",
    "access": "public",
    "description": "Append rows to the container.",
    "lineNumber": 73,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_array",
        "description": "items array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 644,
    "kind": "method",
    "name": "ui_items_prepend",
    "memberof": "js/components/tree.js~Tree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/tree.js~Tree#ui_items_prepend",
    "access": "public",
    "description": "Prepend a row.",
    "lineNumber": 86,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_items_array",
        "description": "rows array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 645,
    "kind": "method",
    "name": "ui_items_remove_at_index",
    "memberof": "js/components/tree.js~Tree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/tree.js~Tree#ui_items_remove_at_index",
    "access": "public",
    "description": "Remove a row at given position.",
    "lineNumber": 99,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_index",
        "description": "row index."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 646,
    "kind": "method",
    "name": "ui_items_remove_first",
    "memberof": "js/components/tree.js~Tree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/tree.js~Tree#ui_items_remove_first",
    "access": "public",
    "description": "Remove a row at first position.",
    "lineNumber": 112,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 647,
    "kind": "method",
    "name": "ui_items_remove_last",
    "memberof": "js/components/tree.js~Tree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/tree.js~Tree#ui_items_remove_last",
    "access": "public",
    "description": "Remove a row at last position.",
    "lineNumber": 125,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_count",
        "description": "items count to remove."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 648,
    "kind": "method",
    "name": "init",
    "memberof": "js/components/tree.js~Tree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/tree.js~Tree#init",
    "access": "public",
    "description": "Init view.",
    "lineNumber": 138,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 649,
    "kind": "method",
    "name": "update_tree",
    "memberof": "js/components/tree.js~Tree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/tree.js~Tree#update_tree",
    "access": "public",
    "description": "Update tree.",
    "lineNumber": 151,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_tree",
        "description": "tree nodes."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 650,
    "kind": "member",
    "name": "max_depth",
    "memberof": "js/components/tree.js~Tree",
    "static": false,
    "longname": "js/components/tree.js~Tree#max_depth",
    "access": "public",
    "description": null,
    "lineNumber": 161,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 652,
    "kind": "method",
    "name": "render_safe_string",
    "memberof": "js/components/tree.js~Tree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/tree.js~Tree#render_safe_string",
    "access": "public",
    "description": "",
    "lineNumber": 202,
    "params": [
      {
        "name": "arg_value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 653,
    "kind": "method",
    "name": "render_expandable_node",
    "memberof": "js/components/tree.js~Tree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/tree.js~Tree#render_expandable_node",
    "access": "public",
    "description": "",
    "lineNumber": 250,
    "params": [
      {
        "name": "arg_label",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_content",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_content_is_safe",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 654,
    "kind": "method",
    "name": "render_node",
    "memberof": "js/components/tree.js~Tree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/tree.js~Tree#render_node",
    "access": "public",
    "description": "",
    "lineNumber": 275,
    "params": [
      {
        "name": "arg_value",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_depth",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_label",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 655,
    "kind": "method",
    "name": "on_refresh",
    "memberof": "js/components/tree.js~Tree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/components/tree.js~Tree#on_refresh",
    "access": "public",
    "description": "On bindings refresh.",
    "lineNumber": 382,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_operands",
        "description": "operands plain object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 656,
    "kind": "file",
    "name": "js/index.js",
    "content": "\r\n// COMMON IMPORTS\r\nimport T                      from '../../node_modules/devapt-core-common/dist/js/utils/types'\r\nimport DefaultRenderingPlugin from '../../node_modules/devapt-core-common/dist/js/default_plugins/rendering_default_plugin'\r\nimport RenderingPlugin        from '../../node_modules/devapt-core-common/dist/js/plugins/rendering_plugin'\r\n\r\n// BROWSER IMPORTS\r\nimport runtime          from './runtime/client_runtime'\r\nimport Component        from './base/component'\r\nimport Container        from './base/container'\r\nimport WorkerCommand    from './commands/worker_command'\r\n\r\n/**\r\n * Main public part of Devapt library on client side\r\n * @name index.js\r\n * \r\n * @license Apache-2.0\r\n * @auhtor Luc BORIES\r\n */\r\n\r\nexport default { T, runtime, Component, Container, RenderingPlugin, DefaultRenderingPlugin }\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 657,
    "kind": "file",
    "name": "js/loggers/console_logger.js",
    "content": "\r\n// DEVAPT COMMON IMPORTS\r\nimport Logger from '../../../node_modules/devapt-core-common/dist/js/loggers/logger'\r\n\r\n\r\n\r\n/**\r\n * @file Console logger class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class ConsoleLogger extends Logger\r\n{\r\n\t/**\r\n\t * Create a Console Logger instance.\r\n\t * \r\n\t * @param {boolean} arg_enabled - trace is enabled ?\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_enabled)\r\n\t{\r\n\t\tsuper(arg_enabled)\r\n\t\t\r\n\t\tthis.is_logger_console = true\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger DEBUG implementation.\r\n\t * \r\n\t * @param {array} arg_opds - log record array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdebug_self(...arg_opds)\r\n\t{\r\n\t\tconsole.debug( Logger.format(arg_opds) )\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger INFO implementation.\r\n\t * \r\n\t * @param {array} arg_opds - log record array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tinfo_self(...arg_opds)\r\n\t{\r\n\t\tconsole.info( Logger.format(arg_opds) )\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger WARN implementation.\r\n\t * \r\n\t * @param {array} arg_opds - log record array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\twarn_self(...arg_opds)\r\n\t{\r\n\t\tconsole.warn( Logger.format(arg_opds) )\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger ERROR implementation.\r\n\t * \r\n\t * @param {array} arg_opds - log record array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\terror_self(...arg_opds)\r\n\t{\r\n\t\tconsole.error( Logger.format(arg_opds) )\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/loggers/console_logger.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 658,
    "kind": "class",
    "name": "ConsoleLogger",
    "memberof": "js/loggers/console_logger.js",
    "static": true,
    "longname": "js/loggers/console_logger.js~ConsoleLogger",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/loggers/console_logger.js",
    "importStyle": "ConsoleLogger",
    "description": "",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Console logger class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "../node_modules/devapt-core-common/dist/js/loggers/logger.js~Logger"
    ]
  },
  {
    "__docId__": 659,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/loggers/console_logger.js~ConsoleLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/console_logger.js~ConsoleLogger#constructor",
    "access": "public",
    "description": "Create a Console Logger instance.",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_enabled",
        "description": "trace is enabled ?"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 660,
    "kind": "member",
    "name": "is_logger_console",
    "memberof": "js/loggers/console_logger.js~ConsoleLogger",
    "static": false,
    "longname": "js/loggers/console_logger.js~ConsoleLogger#is_logger_console",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 661,
    "kind": "method",
    "name": "debug_self",
    "memberof": "js/loggers/console_logger.js~ConsoleLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/console_logger.js~ConsoleLogger#debug_self",
    "access": "public",
    "description": "Logger DEBUG implementation.",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "log record array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 662,
    "kind": "method",
    "name": "info_self",
    "memberof": "js/loggers/console_logger.js~ConsoleLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/console_logger.js~ConsoleLogger#info_self",
    "access": "public",
    "description": "Logger INFO implementation.",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "log record array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 663,
    "kind": "method",
    "name": "warn_self",
    "memberof": "js/loggers/console_logger.js~ConsoleLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/console_logger.js~ConsoleLogger#warn_self",
    "access": "public",
    "description": "Logger WARN implementation.",
    "lineNumber": 65,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "log record array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 664,
    "kind": "method",
    "name": "error_self",
    "memberof": "js/loggers/console_logger.js~ConsoleLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/console_logger.js~ConsoleLogger#error_self",
    "access": "public",
    "description": "Logger ERROR implementation.",
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "log record array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 665,
    "kind": "file",
    "name": "js/loggers/stream_logger.js",
    "content": "// NPM IMPORTS\r\n\r\n// COMMON IMPORTS\r\nimport T      from '../../../node_modules/devapt-core-common/dist/js/utils/types'\r\nimport Logger from '../../../node_modules/devapt-core-common/dist/js/loggers/logger'\r\nimport Stream from '../../../node_modules/devapt-core-common/dist/js/messaging/stream'\r\n\r\n\r\nconst context = 'browser/loggers/stream_logger'\r\n\r\n\r\n\r\n/**\r\n * @file Stream logger class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class StreamLogger extends Logger\r\n{\r\n\t/**\r\n\t * Create a Stream Logger instance.\r\n\t * \r\n\t * @param {Bacon.Bus} arg_stream - stream to send trace.\r\n\t * @param {boolean} arg_enabled - trace is enabled ?\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_stream, arg_enabled)\r\n\t{\r\n\t\tsuper(arg_enabled)\r\n\t\t\r\n\t\tthis.is_stream_console = true\r\n\r\n\t\tthis.stream = arg_stream ? arg_stream : new Stream()\r\n\r\n\t\tconst max_logs_per_msg = 10\r\n\t\tconst delay_per_logs_msg = 100\r\n\r\n\t\tconst limit_cb = (grouped_stream) => {\r\n\t\t\tconst map_cb = (values) => {\r\n\t\t\t\t// console.log(values, 'limit.map.values')\r\n\t\t\t\t\r\n\t\t\t\tlet logs_record = {\r\n\t\t\t\t\tsource:undefined,\r\n\t\t\t\t\tlogs:[]\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvalues.forEach(\r\n\t\t\t\t\t(value) => {\r\n\t\t\t\t\t\tlogs_record.source = value.source,\r\n\t\t\t\t\t\tlogs_record.logs.push(value)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\t\r\n\t\t\t\t// console.log(logs_record, 'limit.map.logs_record')\r\n\t\t\t\treturn logs_record\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn grouped_stream.bufferWithTimeOrCount(delay_per_logs_msg, max_logs_per_msg).map(map_cb)\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tconst key_cb = (value) => {\r\n\t\t\t// console.log(value.level, 'value.level')\r\n\t\t\treturn value.source\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tconst flatmap_cb = (grouped_stream) => {\r\n\t\t\treturn grouped_stream\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tconst transform = (stream)=>{\r\n\t\t\treturn stream.groupBy(key_cb, limit_cb).flatMap(flatmap_cb)\r\n\t\t}\r\n\t\t\r\n\t\tthis.stream.set_transformation(transform)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get logs stream.\r\n\t * \r\n\t * @return {Stream} - logs stream.\r\n\t */\r\n\tget_stream()\r\n\t{\r\n\t\treturn this.stream\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Convert log array to log object.\r\n\t * \r\n\t * @param {array} arg_log_array - log record array (length= )\r\n\t * \r\n\t * @returns {object} - log record object { ts, level, source, context, instance, group, action, text }\r\n\t */\r\n\tconvert_array_to_object(arg_log_array, arg_level, arg_source)\r\n\t{\r\n\t\tif (! T.isArray(arg_log_array) || arg_log_array.length < 6)\r\n\t\t{\r\n\t\t\tconsole.error(context + ':convert_array_to_object:not a valid log array:' + typeof arg_log_array, arg_log_array)\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\t// console.log(context + ':convert_array_to_object:', arg_log_array, arg_log_array[3].length)\r\n\t\tif (arg_log_array[3].length == 0)\r\n\t\t{\r\n\t\t\tconst parts = T.isString(arg_log_array[5]) ? arg_log_array[5].split(':') : []\r\n\t\t\t// console.log(context + ':convert_array_to_object:part 3 = \"\":', arg_log_array[3], arg_log_array[5], parts)\r\n\r\n\t\t\tif (parts.length > 1 )\r\n\t\t\t{\r\n\t\t\t\targ_log_array[3] = parts[1]\r\n\t\t\t\targ_log_array[5] = parts.splice(2).join(':')\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tts:arg_log_array[0],\r\n\t\t\tlevel:arg_level,\r\n\t\t\tsource:arg_source,\r\n\t\t\tcontext:arg_log_array[1],\r\n\t\t\tinstance:arg_log_array[2],\r\n\t\t\tgroup:arg_log_array[3],\r\n\t\t\taction:arg_log_array[4],\r\n\t\t\ttext:arg_log_array[5] + arg_log_array.splice(6).join(',')\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger DEBUG implementation.\r\n\t * \r\n\t * @param {array} arg_opds - log record array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdebug_self(arg_opds)\r\n\t{\r\n\t\tthis.stream.push( this.convert_array_to_object(arg_opds, 'DEBUG', 'BROWSER') )\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger INFO implementation.\r\n\t * \r\n\t * @param {array} arg_opds - log record array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tinfo_self(arg_opds)\r\n\t{\r\n\t\tthis.stream.push( this.convert_array_to_object(arg_opds, 'INFO', 'BROWSER') )\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger WARN implementation.\r\n\t * \r\n\t * @param {array} arg_opds - log record array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\twarn_self(arg_opds)\r\n\t{\r\n\t\tthis.stream.push( this.convert_array_to_object(arg_opds, 'WARN', 'BROWSER') )\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Logger ERROR implementation.\r\n\t * \r\n\t * @param {array} arg_opds - log record array.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\terror_self(arg_opds)\r\n\t{\r\n\t\tthis.stream.push( this.convert_array_to_object(arg_opds, 'ERROR', 'BROWSER') )\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/loggers/stream_logger.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 666,
    "kind": "variable",
    "name": "context",
    "memberof": "js/loggers/stream_logger.js",
    "static": true,
    "longname": "js/loggers/stream_logger.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/loggers/stream_logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 667,
    "kind": "class",
    "name": "StreamLogger",
    "memberof": "js/loggers/stream_logger.js",
    "static": true,
    "longname": "js/loggers/stream_logger.js~StreamLogger",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/loggers/stream_logger.js",
    "importStyle": "StreamLogger",
    "description": "",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Stream logger class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "../node_modules/devapt-core-common/dist/js/loggers/logger.js~Logger"
    ]
  },
  {
    "__docId__": 668,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/loggers/stream_logger.js~StreamLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/stream_logger.js~StreamLogger#constructor",
    "access": "public",
    "description": "Create a Stream Logger instance.",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Bacon.Bus"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_stream",
        "description": "stream to send trace."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_enabled",
        "description": "trace is enabled ?"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 669,
    "kind": "member",
    "name": "is_stream_console",
    "memberof": "js/loggers/stream_logger.js~StreamLogger",
    "static": false,
    "longname": "js/loggers/stream_logger.js~StreamLogger#is_stream_console",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 670,
    "kind": "member",
    "name": "stream",
    "memberof": "js/loggers/stream_logger.js~StreamLogger",
    "static": false,
    "longname": "js/loggers/stream_logger.js~StreamLogger#stream",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 671,
    "kind": "method",
    "name": "get_stream",
    "memberof": "js/loggers/stream_logger.js~StreamLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/stream_logger.js~StreamLogger#get_stream",
    "access": "public",
    "description": "Get logs stream.",
    "lineNumber": 88,
    "return": {
      "nullable": null,
      "types": [
        "Stream"
      ],
      "spread": false,
      "description": "logs stream."
    },
    "params": []
  },
  {
    "__docId__": 672,
    "kind": "method",
    "name": "convert_array_to_object",
    "memberof": "js/loggers/stream_logger.js~StreamLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/stream_logger.js~StreamLogger#convert_array_to_object",
    "access": "public",
    "description": "Convert log array to log object.",
    "lineNumber": 102,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - log record object { ts, level, source, context, instance, group, action, text }"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_array",
        "description": "log record array (length= )"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "log record object { ts, level, source, context, instance, group, action, text }"
    }
  },
  {
    "__docId__": 673,
    "kind": "method",
    "name": "debug_self",
    "memberof": "js/loggers/stream_logger.js~StreamLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/stream_logger.js~StreamLogger#debug_self",
    "access": "public",
    "description": "Logger DEBUG implementation.",
    "lineNumber": 143,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "log record array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 674,
    "kind": "method",
    "name": "info_self",
    "memberof": "js/loggers/stream_logger.js~StreamLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/stream_logger.js~StreamLogger#info_self",
    "access": "public",
    "description": "Logger INFO implementation.",
    "lineNumber": 156,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "log record array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 675,
    "kind": "method",
    "name": "warn_self",
    "memberof": "js/loggers/stream_logger.js~StreamLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/stream_logger.js~StreamLogger#warn_self",
    "access": "public",
    "description": "Logger WARN implementation.",
    "lineNumber": 169,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "log record array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 676,
    "kind": "method",
    "name": "error_self",
    "memberof": "js/loggers/stream_logger.js~StreamLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/loggers/stream_logger.js~StreamLogger#error_self",
    "access": "public",
    "description": "Logger ERROR implementation.",
    "lineNumber": 182,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_opds",
        "description": "log record array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 677,
    "kind": "file",
    "name": "js/runtime/client_runtime.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport uuid from 'uuid'\r\nimport { fromJS } from 'immutable'\r\n\r\n// COMMON IMPORTS\r\nimport Stream                 from '../../../node_modules/devapt-core-common/dist/js/messaging/stream'\r\nimport T                      from '../../../node_modules/devapt-core-common/dist/js/utils/types'\r\nimport Credentials            from '../../../node_modules/devapt-core-common/dist/js/base/credentials'\r\nimport ReduxStore             from '../../../node_modules/devapt-core-common/dist/js/state_store/redux_store'\r\nimport RuntimeBase            from '../../../node_modules/devapt-core-common/dist/js/base/runtime_base'\r\nimport {register_runtime}     from '../../../node_modules/devapt-core-common/dist/js/base/runtime'\r\nimport DefaultRenderingPlugin from '../../../node_modules/devapt-core-common/dist/js/default_plugins/rendering_default_plugin'\r\nimport RenderingPlugin        from '../../../node_modules/devapt-core-common/dist/js/plugins/rendering_plugin'\r\n\r\n// BROWSER IMPORTS\r\nimport ConsoleLogger  from '../loggers/console_logger'\r\nimport StreamLogger   from '../loggers/stream_logger'\r\nimport Service        from './service'\r\nimport UI             from './ui'\r\nimport Router         from './router'\r\nimport DisplayCommand from '../commands/display_command'\r\nimport Component      from '../base/component'\r\n\r\n\r\nlet context = 'browser/runtime/client_runtime'\r\n\r\n\r\n\r\n/**\r\n * @file client runtime class - main library interface.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class ClientRuntime extends RuntimeBase\r\n{\r\n\t/**\r\n\t * Create a client Runtime instance.\r\n\t * @extends RuntimeBase\r\n\t * \r\n\t * \tAPI:\r\n\t * \t\t->constructor()\r\n\t * \t\t\r\n\t * \t\t->get_session_uid():string - get unique session id.\r\n\t * \t\t->get_session_credentials():Credentials - get session credentials instance.\r\n\t * \r\n\t * \t\t->load(arg_settings):nothing - Load runtime settings.\r\n\t * \r\n\t * \t\t->register_service(arg_svc_name, arg_svc_settings):Promise(Service) - Register a remote service.\r\n\t * \t\t->service(arg_name):Service - Get a service by its name.\r\n\t * \r\n\t * \t\t->command(arg_name):object - Get a command by its name.\r\n\t * \r\n\t * \t\t->ping():nothing - Emit a ping request through SocketIO.\r\n\t * \r\n\t * \t\t->get_state_store():object - Get state store, a Redux data store.(INHERITED)\r\n\t * \t\t->get_store_reducers():function - Get reducer pure function: (previous state, action) => new state.\r\n\t * \t\t->handle_store_change():nothing - Handle Redux store changes.\r\n\t * \t\t->create_store_observer(arg_component):unsubscribe function - Create a store change observer.\r\n\t * \r\n\t * \t\t->router():Router - Get runtime router.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(context)\r\n\r\n\t\t// INIT LOGGING FEATURE ON BROWSER\r\n\t\tconst console_logger = new ConsoleLogger(true)\r\n\t\tthis.get_logger_manager().loggers.push(console_logger)\r\n\t\t\r\n\t\tconst stream_logger = new StreamLogger(undefined, true)\r\n\t\tthis.get_logger_manager().loggers.push(stream_logger)\r\n\r\n\t\tstream_logger.get_stream().subscribe(\r\n\t\t\t(arg_log)=>{\r\n\t\t\t\t// console.log(context + ':stream_logger:logs', arg_log)\r\n\t\t\t\tif (this._state_store)\r\n\t\t\t\t{\r\n\t\t\t\t\tconst action = {\r\n\t\t\t\t\t\ttype:'ADD_JSON_LOGS',\r\n\t\t\t\t\t\tlogs:arg_log.logs\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._state_store.dispatch(action)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tthis.logs_stream = stream_logger.get_stream()\r\n\t\t\r\n\t\tthis.is_browser_runtime = true\r\n\t\t\r\n\t\tthis.classes = {}\r\n\t\tthis.classes.T = T\r\n\t\tthis.classes.DefaultRenderingPlugin = DefaultRenderingPlugin\r\n\t\tthis.classes.Component = Component\r\n\t\tthis.classes.RenderingPlugin = RenderingPlugin\r\n\r\n\t\tthis._session_credentials = undefined\r\n\t\tthis._session_uid = uuid.v1()\r\n\r\n\t\tthis._services = {}\r\n\t\tthis._services_promises = {}\r\n\t\tthis._ui = undefined\r\n\t\tthis._router = undefined\r\n\t\tthis._commands = undefined\r\n\t\t\r\n\t\tthis.info('Client Runtime is created')\r\n\r\n\t\t// this.enable_trace()\r\n\t\tthis.disable_trace()\r\n\t\t// this.update_trace_enabled()\r\n\r\n\t\tregister_runtime(this)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get session id.\r\n\t * \r\n\t * @returns {string} - unique session id.\r\n\t */\r\n\tget_session_uid()\r\n\t{\r\n\t\treturn this._session_uid\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get session credentials.\r\n\t * \r\n\t * @returns {Credentials} - session credentials instance.\r\n\t */\r\n\tget_session_credentials()\r\n\t{\r\n\t\treturn this._session_credentials\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get UI.\r\n\t */\r\n\tui()\r\n\t{\r\n\t\treturn this._ui\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get UI rendering helper.\r\n\t */\r\n\tui_rendering()\r\n\t{\r\n\t\treturn this._ui._ui_rendering\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tshoud_log_bindingd_stream()\r\n\t{\r\n\t\treturn false\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get application initial state: from browser cache or from DOM script.\r\n\t * \tState strategy is {\r\n\t * \t\tsource:'browser' or 'session' or 'html',\r\n\t * \t\tsave_period: 5000, milliseconds between two state saves, 0 to disable save\r\n\t * \t\tstate_key: '...' name of the store key which corresponding value contains the key name of the application state.\r\n\t * \t}\r\n\t * \r\n\t * @param {object} arg_app_state_strategy - strategy to manage application state.\r\n\t * \r\n\t * @returns {object}\r\n\t */\r\n\tget_app_initial_state(arg_app_state_strategy)\r\n\t{\r\n\t\tconst browser_supports_storage = (typeof(Storage) !== \"undefined\")\r\n\t\tconst source = ( T.isObject(arg_app_state_strategy) && browser_supports_storage) ? arg_app_state_strategy.source : 'html'\r\n\t\tconst app_state_key = T.isObject(arg_app_state_strategy) && T.isString(arg_app_state_strategy.state_key) ? arg_app_state_strategy.state_key : '__DEVAPT_APP_STATE_KEY__'\r\n\t\t\r\n\t\tlet state = undefined\r\n\t\tconst window_state = window ? window.__INITIAL_STATE__ : {error:'no browser window object'}\r\n\t\tswitch(source) {\r\n\t\t\tcase 'browser':{\r\n\t\t\t\tconst store_key = localStorage.getItem(app_state_key)\r\n\t\t\t\tif (! T.isString(store_key) )\r\n\t\t\t\t{\r\n\t\t\t\t\tstate = window_state\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t\tconst state_str = localStorage.getItem(store_key)\r\n\t\t\t\t// console.log('get_app_initial_state:state_str', typeof state_str)\r\n\t\t\t\tstate = T.isString(state_str) ? JSON.parse(state_str) : window_state\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\tcase 'session':{\r\n\t\t\t\tconst store_key = sessionStorage.getItem(app_state_key)\r\n\t\t\t\tif (! T.isString(store_key) )\r\n\t\t\t\t{\r\n\t\t\t\t\tstate = window_state\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t\tconst state_str = sessionStorage.getItem(store_key)\r\n\t\t\t\t// console.log('get_app_initial_state:state_str', typeof state_str)\r\n\t\t\t\tstate = T.isString(state_str)  ? JSON.parse(state_str) : window_state\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\tcase 'html':{\r\n\t\t\t\tstate = window_state\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn state ? state : {error:'no app state found'}\r\n\t}\r\n\t\r\n\r\n\r\n\t/**\r\n\t * Configure application state save: to browser local or session storage.\r\n\t * \tState strategy is {\r\n\t * \t\tsource:'browser' or 'session' or 'html',\r\n\t * \t\tsave_period: 5000, milliseconds between two state saves, 0 to disable save\r\n\t * \t\tstate_key: '...' name of the store key which corresponding value contains the key name of the application state.\r\n\t * \t}\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tinit_app_state_save()\r\n\t{\r\n\t\tthis.enter_group('init_app_state_save')\r\n\t\t\r\n\t\t// GET AND CHECK PERIOD\r\n\t\tlet period = this.app_state_strategy.save_period\r\n\t\tif (period == 0 || ! T.isNumber(period) )\r\n\t\t{\r\n\t\t\tthis.leave_group('init_app_state_save:disabled with not period > 0')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (period < 3000)\r\n\t\t{\r\n\t\t\tperiod = 3000\r\n\t\t}\r\n\r\n\t\t// CHECK STORAGE BROWSER SUPPORT\r\n\t\tconst browser_supports_storage = (typeof(Storage) !== \"undefined\")\r\n\t\tif (! browser_supports_storage)\r\n\t\t{\r\n\t\t\tthis.error('init_app_state_save:no storage support')\r\n\t\t\tthis.leave_group('init_app_state_save:error')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// CHECK STRATEGY\r\n\t\tif (! T.isObject(this.app_state_strategy) )\r\n\t\t{\r\n\t\t\tthis.error('init_app_state_save:no state save strategy')\r\n\t\t\tthis.leave_group('init_app_state_save:error')\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\t// GET ATTRIBUTES\r\n\t\tconst source = this.app_state_strategy.source\r\n\t\tconst app_state_key = T.isString(this.app_state_strategy.state_key) ? this.app_state_strategy.state_key : '__DEVAPT_APP_STATE_KEY__'\r\n\t\t\r\n\t\tconst state = this._state_store.get_state()\r\n\t\tconst state_app = T.isObject(state) && state.getIn ? state.getIn(['credentials', 'application'], undefined) : undefined\r\n\t\tconst app = T.isString(state_app) ? state_app.toLocaleUpperCase() : 'NO_APP_NAME'\r\n\t\tconst default_store_key = '__DEVAPT_APP_STATE_' + app + '__'\r\n\r\n\t\t// GET SAVE CALLBACK\r\n\t\tlet save_cb = undefined\r\n\t\tswitch(source) {\r\n\t\t\tcase 'browser':{\r\n\t\t\t\tlet store_key = localStorage.getItem(app_state_key)\r\n\t\t\t\tif (! T.isString(store_key) )\r\n\t\t\t\t{\r\n\t\t\t\t\tstore_key = default_store_key\r\n\t\t\t\t\tlocalStorage.setItem(app_state_key, store_key)\r\n\t\t\t\t}\r\n\t\t\t\tsave_cb = ()=>{\r\n\t\t\t\t\tconst state_str = JSON.stringify(this._state_store.get_state().toJS())\r\n\t\t\t\t\tlocalStorage.setItem(store_key, state_str)\r\n\t\t\t\t}\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\tcase 'session':{\r\n\t\t\t\tlet store_key = sessionStorage.getItem(app_state_key)\r\n\t\t\t\tif (! T.isString(store_key) )\r\n\t\t\t\t{\r\n\t\t\t\t\tstore_key = default_store_key\r\n\t\t\t\t\tsessionStorage.setItem(app_state_key, store_key)\r\n\t\t\t\t}\r\n\t\t\t\tsave_cb = ()=>{\r\n\t\t\t\t\tconst state_str = JSON.stringify(this._state_store.get_state().toJS())\r\n\t\t\t\t\tsessionStorage.setItem(store_key, state_str)\r\n\t\t\t\t}\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// REGISTER PERIODICAL SAVES\r\n\t\tif (save_cb)\r\n\t\t{\r\n\t\t\tthis.info('init_app_state_save:register saves with period=%s', period)\r\n\t\t\tsetTimeout(save_cb, period)\r\n\t\t}\r\n\r\n\t\tthis.leave_group('init_app_state_save')\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Load runtime settings.\r\n\t * \r\n\t * @param {object} arg_settings - runtime settings.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tload(arg_settings)\r\n\t{\r\n\t\tthis.separate_level_1()\r\n\t\tthis.enter_group('load')\r\n\r\n\t\t// SET DEFAULT REMOTE LOGGING\r\n\t\t// const svc_logger_settings = ('default' in arg_settings) ? arg_settings['default'] : {}\r\n\t\t// this.loggers.push( new LoggerSvc(true, svc_logger_settings) )\r\n\t\t\r\n\t\t// GET INITIAL STATE\r\n\t\tconst initial_app_state = this.get_app_initial_state(arg_settings.app_state_strategy)\r\n\t\t// this.debug('initialState', initial_app_state)\r\n\t\tthis.app_state_strategy = arg_settings.app_state_strategy\r\n\t\t\r\n\t\t// GET DEFAULT REDUCER\r\n\t\tif ( T.isFunction(arg_settings.reducers) )\r\n\t\t{\r\n\t\t\tthis.default_reducer = arg_settings.reducers\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.default_reducer = (arg_previous_state/*, arg_action*/) => {\r\n\t\t\t\treturn arg_previous_state\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// CREATE STATE STORE\r\n\t\tconst reducer = this.get_store_reducers()\r\n\t\tconst self = this\r\n\t\tthis._state_store = new ReduxStore(reducer, initial_app_state, context, this.get_logger_manager())\r\n\t\tthis._state_store_unsubscribe = this._state_store.subscribe( self.handle_store_change.bind(self) )\r\n\t\tthis._state_store.dispatch( {type:'store_created'} )\r\n\t\t\r\n\t\t// CREATE CREDENTIALS INSTANCE\r\n\t\tconst credentials_settings = this._state_store.get_state().get('credentials', undefined)\r\n\t\tthis.debug('credentials_settings', credentials_settings)\r\n\r\n\t\tconst credentials_update_handler = (arg_credentials_map)=>{\r\n\t\t\tthis._state_store.dispatch( {type:'SET_CREDENTIALS', credentials:arg_credentials_map } )\r\n\t\t}\r\n\t\tconst credentials_datas = credentials_settings ? credentials_settings.toJS() : Credentials.get_empty_credentials()\r\n\t\tthis._session_credentials = new Credentials(credentials_datas, credentials_update_handler)\r\n\r\n\t\t// CREATE UI WRAPPER\r\n\t\tthis._ui = new UI(this, this._state_store)\r\n\r\n\t\t// CREATE NAVIGATION ROUTER\r\n\t\tthis._router = new Router()\r\n\r\n\t\tthis._ui.load()\r\n\r\n\r\n\t\t// ADD COMMANDS ROUTE\r\n\t\tconst add_cmd_cb = ()=>{\r\n\t\t\tthis._commands = this._state_store.get_state().get('commands', {}).toJS()\r\n\t\t\tthis._commands_instances = {}\r\n\t\t\tObject.keys(this._commands).forEach(\r\n\t\t\t\t(cmd_name)=>{\r\n\t\t\t\t\tconst cmd = this._commands[cmd_name]\r\n\r\n\t\t\t\t\tif (cmd.type != 'display')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconsole.warn('load:bad cmd [' + cmd_name + '] with type:' + cmd.type)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcmd.name = cmd_name\r\n\t\t\t\t\tif (! (cmd_name in this._commands_instances) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis._commands_instances[cmd_name] = new DisplayCommand(this, cmd)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst display_command = this._commands_instances[cmd_name]\r\n\t\t\t\t\tif (! display_command.is_valid())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.error('load:no route handler for cmd [' + cmd_name + ']:no valid command settings')\r\n\t\t\t\t\t\tconsole.error('load:no route handler for cmd [' + cmd_name + ']:no valid command settings')\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst route = display_command.get_route()\r\n\t\t\t\t\tthis.debug('load:add route handler for cmd [' + cmd_name + '] with route:' + route)\r\n\t\t\t\t\t// console.debug(context + ':load:add route handler for cmd [' + cmd_name + '] with route:' + route)\r\n\r\n\t\t\t\t\tthis._router.add_handler(route,\r\n\t\t\t\t\t\t()=>{\r\n\t\t\t\t\t\t\t// console.debug(context + ':load:execute handler for cmd [' + cmd_name + '] with route:' + route)\r\n\t\t\t\t\t\t\tthis._ui.pipe_display_command(display_command)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t\t\r\n\t\tadd_cmd_cb()\r\n\r\n\t\t// ENABLE HASH HANDLING\r\n\t\tthis._router.init()\r\n\r\n\r\n\t\tthis.leave_group('load')\r\n\t\tthis.separate_level_1()\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Register a remote service.\r\n\t * \r\n\t * @param {string} arg_svc_name - service name.\r\n\t * @param {object} arg_svc_settings - service settings.\r\n\t * \r\n\t * @returns {Promise} - Promise(Service)\r\n\t */\r\n\tregister_service(arg_svc_name, arg_svc_settings)\r\n\t{\r\n\t\t// this.enable_trace()\r\n\t\tconst self = this\r\n\t\tthis.enter_group('register_service:' + arg_svc_name)\r\n\t\t\r\n\t\tif (arg_svc_name in this._services_promises)\r\n\t\t{\r\n\t\t\tthis.leave_group('register_service:svc promise found for ' + arg_svc_name)\r\n\t\t\treturn this._services_promises[arg_svc_name]\r\n\t\t}\r\n\r\n\t\tthis.debug('register_service:create svc promise:' + arg_svc_name)\r\n\t\tthis._services_promises[arg_svc_name] = new Promise(\r\n\t\t\tfunction(resolve, reject)\r\n\t\t\t{\r\n\t\t\t\tself.register_service_self(resolve, reject, arg_svc_name, arg_svc_settings)\r\n\t\t\t}\r\n\t\t)\r\n\t\t.then(\r\n\t\t\t(service)=>{\r\n\t\t\t\tthis.leave_group('register_service:svc promise created for ' + arg_svc_name)\r\n\t\t\t\treturn service\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\tthis.info('Client Service is created (async):' + arg_svc_name)\r\n\t\t// console.info('Client Service is created (async):' + arg_svc_name)\r\n\t\r\n\t\tthis.leave_group('register_service:async')\r\n\t\treturn this._services_promises[arg_svc_name]\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Register a remote service (end of process).\r\n\t * \r\n\t * @param {string} arg_svc_name - service name.\r\n\t * @param {object} arg_svc_settings - service settings.\r\n\t * @param {Function} arg_resolve_cb - function to call when promise is resolved.\r\n\t * @param {Function} arg_reject_cb - function to call when promise is rejected.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tregister_service_self(arg_resolve_cb, arg_reject_cb, arg_svc_name, arg_svc_settings)\r\n\t{\r\n\t\tconst self = this\r\n\r\n\t\t// this.enter_group('register_service_self')\r\n\t\t\r\n\r\n\t\t// const app_credentials = this._state_store.get_state().get('credentials')\r\n\t\tconst app_credentials = this._session_credentials.get_credentials()\r\n\r\n\t\t// CHECK SERVICE NAME\r\n\t\tif ( ! T.isString(arg_svc_name) )\r\n\t\t{\r\n\t\t\tthis.error('register_service:svc promise rejected:' + arg_svc_name)\r\n\t\t\targ_reject_cb(context + ':register_service:bad service name string [' + arg_svc_name + ']')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// TEST IF SERVICE IS ALREADY REGISTERED\r\n\t\tif (this._services && (arg_svc_name in this._services) )\r\n\t\t{\r\n\t\t\tthis.debug('register_service_self:SERVICE IS ALREADY REGISTERED for ' + arg_svc_name)\r\n\r\n\t\t\tconst svc = this._services[arg_svc_name]\r\n\t\t\t\r\n\t\t\t// console.log(context + ':register_service_self:SERVICE IS ALREADY REGISTERED:svc', svc)\r\n\t\t\tthis.debug('register_service:svc promise resolved:' + arg_svc_name)\r\n\t\t\t\r\n\t\t\targ_resolve_cb(svc)\r\n\t\t\t\r\n\t\t\t// this.leave_group('register_service_self')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// GET SERVICE SETTINGS FROM GIVEN SETTINGS\r\n\t\tif ( T.isObject(arg_svc_settings) )\r\n\t\t{\r\n\t\t\tthis.debug('register_service_self:SERVICE FROM GIVEN SETTINGS for ' + arg_svc_name)\r\n\t\t\t// console.log(context + ':register_service_self:SERVICE FROM GIVEN SETTINGS:arg_svc_settings', arg_svc_settings)\r\n\r\n\t\t\t// GET APPLICATION CREDENTIALS\r\n\t\t\t// TODO CHECK CREDENTIAL FORMAT STRING -> MAP ?\r\n\t\t\targ_svc_settings.credentials = app_credentials\r\n\t\t\targ_svc_settings.session_uid = this.get_session_uid()\r\n\t\t\t\r\n\t\t\t// console.log(context + ':register_service_self:credentials', arg_svc_settings.credentials = app_credentials)\r\n\t\t\t\r\n\t\t\tif ( T.isString(arg_svc_settings.credentials ) )\r\n\t\t\t{\r\n\t\t\t\targ_svc_settings.credentials = JSON.parse(arg_svc_settings.credentials)\r\n\t\t\t}\r\n\t\t\tconst svc = new Service(arg_svc_name, arg_svc_settings)\r\n\t\t\t\r\n\t\t\t// console.log(context + ':register_service_self:SERVICE FROM GIVEN SETTINGS:svc', svc)\r\n\t\t\t\r\n\t\t\tself._services[arg_svc_name] = svc\r\n\t\t\tthis.debug('register_service:svc promise resolved:' + arg_svc_name)\r\n\t\t\targ_resolve_cb(svc)\r\n\r\n\t\t\t// this.leave_group('register_service_self')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// GET SERVICE SETTINGS FROM SERVER SETTINGS: PROCESS RESPONSE\r\n\t\t\r\n\t\tconst svc_path = '/topology'\r\n\t\tconst request_svc_settings = 'devapt-deployed-service-infos'\r\n\t\tconst reply_svc_settings = 'devapt-deployed-service-infos'\r\n\t\tconst svc_socket = window.io(svc_path)\r\n\t\tconst get_settings_stream = Stream.from_emitter_event(svc_socket, reply_svc_settings)\r\n\t\t\r\n\t\t\r\n\t\t// GET SERVICE SETTINGS FROM SERVER SETTINGS: REQUEST SETTINGS\r\n\t\t\r\n\t\t// DEFINE REQUEST PAYLOAD\r\n\t\tconst request = {\r\n\t\t\tsession_uid:this.get_session_uid(),\r\n\t\t\tservice:'topology',\r\n\t\t\toperation:request_svc_settings,\r\n\t\t\toperands: [app_credentials.tenant, arg_svc_name],\r\n\t\t\tcredentials:app_credentials\r\n\t\t}\r\n\t\tthis.debug('register_service_self:emit with operation=' + request_svc_settings + ' and operation=', request.operation, request.credentials)\r\n\t\tsvc_socket.emit(request_svc_settings, request)\r\n\r\n\r\n\t\tthis.debug('register_service_self:SERVICE FROM SERVER SETTINGS for ' + arg_svc_name)\r\n\t\tget_settings_stream.subscribe(\r\n\t\t\t(response) => {\r\n\t\t\t\t// console.log(context + ':register_service_self:SERVICE FROM SERVER SETTINGS:response', response)\r\n\t\t\t\t\r\n\t\t\t\tif (response.has_error)\r\n\t\t\t\t{\r\n\t\t\t\t\targ_reject_cb(response.error)\r\n\t\t\t\t\tself.debug('register_service:svc promise rejected:' + arg_svc_name + ' with error=' + response.error)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\targ_svc_settings = response.results\r\n\t\t\t\tassert( T.isObject(arg_svc_settings), context + ':register_service:bad service settings object')\r\n\t\t\t\tself.debug('register_service_self:SERVICE FROM SERVER SETTINGS:arg_svc_settings', arg_svc_settings)\r\n\r\n\t\t\t\t// GET APPLICATION CREDENTIALS\r\n\t\t\t\t// TODO CHECK CREDENTIAL FORMAT STRING -> MAP ?\r\n\t\t\t\targ_svc_settings.credentials = app_credentials\r\n\t\t\t\targ_svc_settings.session_uid = this.get_session_uid()\r\n\t\t\t\tif ( T.isString(arg_svc_settings.credentials ) )\r\n\t\t\t\t{\r\n\t\t\t\t\targ_svc_settings.credentials = JSON.parse(arg_svc_settings.credentials)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst svc = new Service(arg_svc_name, arg_svc_settings)\r\n\t\t\t\tself.debug('register_service_self:SERVICE FROM SERVER SETTINGS:svc', svc)\r\n\r\n\t\t\t\tself._services[arg_svc_name] = svc\r\n\t\t\t\tdelete self._services_promises[arg_svc_name]\r\n\r\n\t\t\t\tself.debug('register_service:svc promise resolved:' + arg_svc_name)\r\n\t\t\t\targ_resolve_cb(svc)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tget_settings_stream.on_error(\r\n\t\t\t(error) => {\r\n\t\t\t\tself.error('register_service:svc promise rejected:' + arg_svc_name + ' with error:' + error)\r\n\t\t\t\targ_reject_cb(context + ':register_service:request error for  [' + arg_svc_name + '] error=' + error)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\t\r\n\r\n\t\t// this.leave_group('register_service_self')\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get a service by its name.\r\n\t * \r\n\t * @param {string} arg_name - service name.\r\n\t * \r\n\t * @returns {Service}\r\n\t */\r\n\tservice(arg_name)\r\n\t{\r\n\t\t// console.info('getting/creating service', arg_name)\r\n\t\treturn (arg_name in this._services) ? this._services[arg_name] : undefined\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get a command by its name.\r\n\t * \r\n\t * @param {string} arg_name - command name.\r\n\t * \r\n\t * @returns {object}\r\n\t */\r\n\tcommand(arg_name)\r\n\t{\r\n\t\t// console.info('getting/creating service', arg_name)\r\n\t\treturn (arg_name in this._commands) ? this._commands[arg_name] : undefined\r\n\t}\r\n\t\r\n\r\n\t\r\n\t/**\r\n\t * Emit a ping request through SocketIO.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tping()\r\n\t{\r\n\t\tconst socketio = window.io()\r\n\t\tsocketio.emit('ping')\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get store reducers.\r\n\t * \r\n\t * !!! Do not trace with Loggable.* into reducers with an enabled StreamLogger instance\r\n\t *  because it dispatch its received trace to update app state.\r\n\t * \r\n\t * @returns {function} - reducer pure function: (previous state, action) => new state\r\n\t */\r\n\tget_store_reducers()\r\n\t{\r\n\t\treturn (arg_previous_state, arg_action) => {\r\n\t\t\t// console.info('reducer 1:type=' + arg_action.type + ' for ' + arg_action.component)\r\n\t\t\t\r\n\t\t\t// ADD LOG RECORD\r\n\t\t\tif ( T.isString(arg_action.type) && arg_action.type == 'ADD_JSON_LOGS' && T.isArray(arg_action.logs) )\r\n\t\t\t{\r\n\t\t\t\tconst path = ['logs', 'state', 'items']\r\n\t\t\t\tconst logs = arg_previous_state.getIn(path, []).concat(arg_action.logs)\r\n\t\t\t\treturn arg_previous_state.setIn(path, logs)\r\n\t\t\t}\r\n\r\n\t\t\t// SET PAGE CONTENT\r\n\t\t\tif (T.isString(arg_action.type) && arg_action.type ==  'SET_PAGE_CONTENT' && T.isString(arg_action.resource) && arg_action.resource == 'content')\r\n\t\t\t{\r\n\t\t\t\tif ( T.isArray(arg_action.content_body) )\r\n\t\t\t\t{\r\n\t\t\t\t\tconst body_contents_path = ['views', 'content', 'state', 'body_contents']\r\n\t\t\t\t\treturn arg_previous_state.setIn(body_contents_path, fromJS(arg_action.content_body) )\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// ADD JSON RESOURCE SETTINGS\r\n\t\t\tif ( T.isString(arg_action.type) && arg_action.type == 'ADD_JSON_RESOURCE' && T.isString(arg_action.resource) && T.isObject(arg_action.json) )\r\n\t\t\t{\r\n\t\t\t\t// console.log('reducer:ADD_JSON_RESOURCE', arg_action.resource, arg_action.json)\r\n\r\n\t\t\t\tif ( T.isString(arg_action.collection) )\r\n\t\t\t\t{\r\n\t\t\t\t\tif ( T.isArray(arg_action.path) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn arg_previous_state.setIn([arg_action.collection, arg_action.resource].concat(arg_action.path), fromJS(arg_action.json) )\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn arg_previous_state.setIn([arg_action.collection, arg_action.resource], fromJS(arg_action.json) )\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( T.isArray(arg_action.path) )\r\n\t\t\t\t{\r\n\t\t\t\t\treturn arg_previous_state.setIn(arg_action.path, fromJS(arg_action.json) )\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// SET SESSION CREDENTIALS\r\n\t\t\tif ( T.isString(arg_action.type) && arg_action.type == 'SET_CREDENTIALS' && T.isObject(arg_action.credentials) )\r\n\t\t\t{\r\n\t\t\t\t// console.log('reducer:SET_CREDENTIALS', arg_action.credentials)\r\n\t\t\t\treturn arg_previous_state.set('credentials', arg_action.credentials)\r\n\t\t\t}\r\n\r\n\t\t\t// DISPATCH TO COMPONENTS REDUCERS\r\n\t\t\tif ( T.isString(arg_action.component) )\r\n\t\t\t{\r\n\t\t\t\t// console.info(context + ':reducer 2:type=' + arg_action.type + ' for ' + arg_action.component)\r\n\t\t\t\tconst component = this._ui.get(arg_action.component)\r\n\t\t\t\t\r\n\t\t\t\tif ( T.isObject(component) && component.is_component )\r\n\t\t\t\t{\r\n\t\t\t\t\t// console.info(context + ':reducer 3:type=' + arg_action.type + ' for ' + arg_action.component, component)\r\n\t\t\t\t\t\r\n\t\t\t\t\tif ( T.isFunction(component.reduce_action) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// console.info(context + ':reducer 4:type=' + arg_action.type + ' for ' + arg_action.component)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// console.log(context + ':reducer 4:path', component.get_state_path())\r\n\t\t\t\t\t\t// console.log(context + ':reducer 4:arg_previous_state', arg_previous_state.toJS())\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst prev_component_state = arg_previous_state.getIn(component.get_state_path())\r\n\t\t\t\t\t\tif (! prev_component_state)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tconsole.log(context + ':reducer:arg_previous_state', arg_previous_state.toJS())\r\n\t\t\t\t\t\t\tconsole.log(context + ':reducer:component.get_state_path()', component.get_state_path())\r\n\t\t\t\t\t\t\tconsole.error(context + ':reducer:bad prev_component_state', prev_component_state)\r\n\t\t\t\t\t\t\treturn fromJS( { error:'no state' } )\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// console.log(context + ':reducer 4:prev_component_state', prev_component_state.toJS())\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet new_component_state = component.reduce_action(prev_component_state, arg_action)\r\n\t\t\t\t\t\tif (new_component_state && new_component_state != prev_component_state)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tconst prev_state_version = prev_component_state.get('state_version', 0)\r\n\t\t\t\t\t\t\tnew_component_state = new_component_state.set('state_version', prev_state_version + 1)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// console.log(context + ':reducer 4:new_component_state', new_component_state.toJS())\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet state = this._state_store.get_state()\r\n\t\t\t\t\t\tstate = state.setIn(component.get_state_path(), new_component_state)\r\n\t\t\t\t\t\t// console.log(context + ':reducer 4:state', state.toJS())\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn state\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this.default_reducer(arg_previous_state, arg_action)\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Handle Redux store changes.\r\n\t * \r\n\t * !! Do not trace with Loggable.* here.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\thandle_store_change()\r\n\t{\r\n\t\t// let previous_state = this.current_state\r\n\t\t// this.current_state = this._state_store.get_state()\r\n\t\t\r\n\t\t/// TODO\r\n\t\t\r\n\t\t// this.info('handle_store_change:global', this._state_store.get_state())\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a store change observer.\r\n\t * \r\n\t * @param {Component} arg_component - component instance.\r\n\t * \r\n\t * @returns {function} - store unsubscribe function.\r\n\t */\r\n\tcreate_store_observer(arg_component)\r\n\t{\r\n\t\tassert( T.isObject(arg_component) && arg_component.is_component, context + ':create_store_observer:bas component object')\r\n\t\t\r\n\t\tlet current_state = undefined\r\n\t\t\r\n\t\tconst handle_change = () => {\r\n\t\t\tlet next_state = arg_component.get_state()\r\n\t\t\t// console.log(context + ':handle_change:arg_component', arg_component)\r\n\t\t\t// console.log(context + ':handle_change:next_state', next_state)\r\n\r\n\t\t\tif ( next_state && ! next_state.equals(current_state) )\r\n\t\t\t{\r\n\t\t\t\t// console.info(context + ':create_store_observer:state changes for ' + arg_component.get_name())\r\n\t\t\t\t\r\n\t\t\t\targ_component.handle_state_change(current_state, next_state)\r\n\t\t\t\tcurrent_state = next_state\r\n\t\t\t}\r\n\t\t\t// else\r\n\t\t\t// {\r\n\t\t\t// \tconsole.info(context + ':create_store_observer:no state change for ' + arg_component.get_name())\r\n\t\t\t// }\r\n\t\t}\r\n\t\t\r\n\t\tlet unsubscribe = this._state_store.subscribe(handle_change)\r\n\t\t\r\n\t\thandle_change()\r\n\t\t\r\n\t\treturn unsubscribe\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get runtime router.\r\n\t * \r\n\t * @returns {Router}\r\n\t */\r\n\trouter()\r\n\t{\r\n\t\tassert( T.isObject(this._router), context + ':router:bad router object')\r\n\t\treturn this._router\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/runtime/client_runtime.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 678,
    "kind": "variable",
    "name": "context",
    "memberof": "js/runtime/client_runtime.js",
    "static": true,
    "longname": "js/runtime/client_runtime.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/runtime/client_runtime.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 679,
    "kind": "class",
    "name": "ClientRuntime",
    "memberof": "js/runtime/client_runtime.js",
    "static": true,
    "longname": "js/runtime/client_runtime.js~ClientRuntime",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/runtime/client_runtime.js",
    "importStyle": "ClientRuntime",
    "description": "",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "client runtime class - main library interface."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "../node_modules/devapt-core-common/dist/js/base/runtime_base.js~RuntimeBase"
    ]
  },
  {
    "__docId__": 680,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#constructor",
    "access": "public",
    "description": "Create a client Runtime instance.",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "RuntimeBase\n\n\tAPI:\n\t\t->constructor()\n\t\t\n\t\t->get_session_uid():string - get unique session id.\n\t\t->get_session_credentials():Credentials - get session credentials instance.\n\n\t\t->load(arg_settings):nothing - Load runtime settings.\n\n\t\t->register_service(arg_svc_name, arg_svc_settings):Promise(Service) - Register a remote service.\n\t\t->service(arg_name):Service - Get a service by its name.\n\n\t\t->command(arg_name):object - Get a command by its name.\n\n\t\t->ping():nothing - Emit a ping request through SocketIO.\n\n\t\t->get_state_store():object - Get state store, a Redux data store.(INHERITED)\n\t\t->get_store_reducers():function - Get reducer pure function: (previous state, action) => new state.\n\t\t->handle_store_change():nothing - Handle Redux store changes.\n\t\t->create_store_observer(arg_component):unsubscribe function - Create a store change observer.\n\n\t\t->router():Router - Get runtime router."
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 681,
    "kind": "member",
    "name": "logs_stream",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#logs_stream",
    "access": "public",
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 682,
    "kind": "member",
    "name": "is_browser_runtime",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#is_browser_runtime",
    "access": "public",
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 683,
    "kind": "member",
    "name": "classes",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#classes",
    "access": "public",
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 684,
    "kind": "member",
    "name": "_session_credentials",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#_session_credentials",
    "access": "private",
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 685,
    "kind": "member",
    "name": "_session_uid",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#_session_uid",
    "access": "private",
    "description": null,
    "lineNumber": 103,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 686,
    "kind": "member",
    "name": "_services",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#_services",
    "access": "private",
    "description": null,
    "lineNumber": 105,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 687,
    "kind": "member",
    "name": "_services_promises",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#_services_promises",
    "access": "private",
    "description": null,
    "lineNumber": 106,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 688,
    "kind": "member",
    "name": "_ui",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#_ui",
    "access": "private",
    "description": null,
    "lineNumber": 107,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 689,
    "kind": "member",
    "name": "_router",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#_router",
    "access": "private",
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 690,
    "kind": "member",
    "name": "_commands",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#_commands",
    "access": "private",
    "description": null,
    "lineNumber": 109,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 691,
    "kind": "method",
    "name": "get_session_uid",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#get_session_uid",
    "access": "public",
    "description": "Get session id.",
    "lineNumber": 127,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - unique session id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "unique session id."
    },
    "params": []
  },
  {
    "__docId__": 692,
    "kind": "method",
    "name": "get_session_credentials",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#get_session_credentials",
    "access": "public",
    "description": "Get session credentials.",
    "lineNumber": 139,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Credentials} - session credentials instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Credentials"
      ],
      "spread": false,
      "description": "session credentials instance."
    },
    "params": []
  },
  {
    "__docId__": 693,
    "kind": "method",
    "name": "ui",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#ui",
    "access": "public",
    "description": "Get UI.",
    "lineNumber": 149,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 694,
    "kind": "method",
    "name": "ui_rendering",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#ui_rendering",
    "access": "public",
    "description": "Get UI rendering helper.",
    "lineNumber": 159,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 695,
    "kind": "method",
    "name": "shoud_log_bindingd_stream",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#shoud_log_bindingd_stream",
    "access": "public",
    "description": "",
    "lineNumber": 169,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 696,
    "kind": "method",
    "name": "get_app_initial_state",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#get_app_initial_state",
    "access": "public",
    "description": "Get application initial state: from browser cache or from DOM script.\n\tState strategy is {\n\t\tsource:'browser' or 'session' or 'html',\n\t\tsave_period: 5000, milliseconds between two state saves, 0 to disable save\n\t\tstate_key: '...' name of the store key which corresponding value contains the key name of the application state.\n\t}",
    "lineNumber": 188,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_app_state_strategy",
        "description": "strategy to manage application state."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 697,
    "kind": "method",
    "name": "init_app_state_save",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#init_app_state_save",
    "access": "public",
    "description": "Configure application state save: to browser local or session storage.\n\tState strategy is {\n\t\tsource:'browser' or 'session' or 'html',\n\t\tsave_period: 5000, milliseconds between two state saves, 0 to disable save\n\t\tstate_key: '...' name of the store key which corresponding value contains the key name of the application state.\n\t}",
    "lineNumber": 242,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 698,
    "kind": "method",
    "name": "load",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#load",
    "access": "public",
    "description": "Load runtime settings.",
    "lineNumber": 334,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "runtime settings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 699,
    "kind": "member",
    "name": "app_state_strategy",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#app_state_strategy",
    "access": "public",
    "description": null,
    "lineNumber": 346,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 700,
    "kind": "member",
    "name": "default_reducer",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#default_reducer",
    "access": "public",
    "description": null,
    "lineNumber": 351,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 702,
    "kind": "member",
    "name": "_state_store",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#_state_store",
    "access": "private",
    "description": null,
    "lineNumber": 363,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 703,
    "kind": "member",
    "name": "_state_store_unsubscribe",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#_state_store_unsubscribe",
    "access": "private",
    "description": null,
    "lineNumber": 364,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 708,
    "kind": "member",
    "name": "_commands_instances",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#_commands_instances",
    "access": "private",
    "description": null,
    "lineNumber": 389,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 709,
    "kind": "method",
    "name": "register_service",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#register_service",
    "access": "public",
    "description": "Register a remote service.",
    "lineNumber": 448,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise(Service)"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_name",
        "description": "service name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_settings",
        "description": "service settings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise(Service)"
    }
  },
  {
    "__docId__": 710,
    "kind": "method",
    "name": "register_service_self",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#register_service_self",
    "access": "public",
    "description": "Register a remote service (end of process).",
    "lineNumber": 493,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_name",
        "description": "service name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_settings",
        "description": "service settings."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_resolve_cb",
        "description": "function to call when promise is resolved."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_reject_cb",
        "description": "function to call when promise is rejected."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 711,
    "kind": "method",
    "name": "service",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#service",
    "access": "public",
    "description": "Get a service by its name.",
    "lineNumber": 636,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Service}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "service name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Service"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 712,
    "kind": "method",
    "name": "command",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#command",
    "access": "public",
    "description": "Get a command by its name.",
    "lineNumber": 651,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "command name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 713,
    "kind": "method",
    "name": "ping",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#ping",
    "access": "public",
    "description": "Emit a ping request through SocketIO.",
    "lineNumber": 664,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 714,
    "kind": "method",
    "name": "get_store_reducers",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#get_store_reducers",
    "access": "public",
    "description": "Get store reducers.\n\n!!! Do not trace with Loggable.* into reducers with an enabled StreamLogger instance\n because it dispatch its received trace to update app state.",
    "lineNumber": 680,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} - reducer pure function: (previous state, action) => new state"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "reducer pure function: (previous state, action) => new state"
    },
    "params": []
  },
  {
    "__docId__": 715,
    "kind": "method",
    "name": "handle_store_change",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#handle_store_change",
    "access": "public",
    "description": "Handle Redux store changes.\n\n!! Do not trace with Loggable.* here.",
    "lineNumber": 789,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 716,
    "kind": "method",
    "name": "create_store_observer",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#create_store_observer",
    "access": "public",
    "description": "Create a store change observer.",
    "lineNumber": 808,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} - store unsubscribe function."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Component"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_component",
        "description": "component instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "store unsubscribe function."
    }
  },
  {
    "__docId__": 717,
    "kind": "method",
    "name": "router",
    "memberof": "js/runtime/client_runtime.js~ClientRuntime",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/client_runtime.js~ClientRuntime#router",
    "access": "public",
    "description": "Get runtime router.",
    "lineNumber": 846,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Router}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Router"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 718,
    "kind": "file",
    "name": "js/runtime/router.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport Crossroads from 'crossroads'\r\nimport Hasher from 'hasher'\r\n\r\n// COMMON IMPORTS\r\nimport T from '../../../node_modules/devapt-core-common/dist/js/utils/types'\r\n\r\n// BROWSER IMPORTS\r\nimport RouterState from './router_state'\r\n\r\n\r\nconst context = 'browser/runtime/router'\r\n\r\n\r\n\r\n/**\r\n * @file Browser navigation router class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class Router extends RouterState\r\n{\r\n\t/**\r\n\t * Create a Router instance.\r\n\t * @extends RouterState\r\n\t * \r\n\t * A Router instance manages a navigation history and update the page on navigation change.\r\n\t * Navigation history is an array stored into the Redux store.\r\n\t * Actions are:\r\n\t * \t\t* display_content(view name, menubar name): update page content with given view and menubar.\r\n\t * \t\t* go_backward(): update page with history previous content if available.\r\n\t * \t\t* go_forward(): update page with history next content if available.\r\n\t * \t\t* clear_history(): reset history array.\r\n\t * \r\n\t * \tAPI:\r\n\t * \t\t->init(arg_home_view_name, arg_home_menubar_name)\r\n\t * \t\t->add_handler(arg_route, arg_handler)\r\n\t * \t\t->update_hash_self(arg_view_name, arg_menubar_name)\r\n\t * \t\t->display_content_self(arg_view_name, arg_menubar_name)\r\n\t * \r\n\t * @param {string} arg_log_context - context of traces of this instance (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_log_context)\r\n\t{\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tsuper(log_context)\r\n\r\n\t\tthis.is_router = true\r\n\r\n\t\tthis._router_engine = Crossroads\r\n\t\tthis._hasher = Hasher\r\n\r\n\t\t// DEBUG\r\n\t\t// log all routes\r\n\t\t// this._router_engine.routed.add( (request, data)=>{ console.log('route found', request, data) } ) \r\n\t\t\r\n\t\t// log all requests that were bypassed / not matched\r\n\t\tthis._router_engine.bypassed.add( (request)=>{ console.warn('route not found', request) } )\r\n\r\n\t\tassert( T.isObject(this._state_store), context + ':constructor:bad state_store object')\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Init router.\r\n\t * \r\n\t * @param {string} arg_home_view_name - Home view name.\r\n\t * @param {string} arg_home_menubar_name - Home menubar name.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tinit(arg_home_view_name, arg_home_menubar_name)\r\n\t{\r\n\t\t// REGISTER HOME PAGE ROUTE\r\n\t\t// this.add_handler('',\r\n\t\t// \t() => {\r\n\t\t// \t\treturn this.do_action_display_content(arg_home_view_name, arg_home_menubar_name)\r\n\t\t// \t}\r\n\t\t// )\r\n\r\n\t\t\r\n\t\t// REGISTER IGNORE ROUTE\r\n\t\tthis.add_handler('ignore:{path}',\r\n\t\t\t()=>{\r\n\t\t\t\t// NOTHING TODO\r\n\t\t\t}\r\n\t\t)\r\n\t\tthis.add_handler('ignore_{path}',\r\n\t\t\t()=>{\r\n\t\t\t\t// NOTHING TODO\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\t\r\n\t\t// REGISTER A PAGE ROUTE (view, menubar)\r\n\t\tvar route = 'view\\={view}\\,menubar\\={menubar}'\r\n\t\tthis.add_handler(route,\r\n\t\t\t(arg_view, arg_menubar) => {\r\n\t\t\t\treturn this.do_action_display_content(arg_view, arg_menubar)\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\t\r\n\t\t// SETUP HASHER\r\n\t\tconst parseHash = (arg_newHash, arg_oldHash) => {\r\n\t\t\t// console.log('Hasher parse cb for new [%s] and old [%s]', arg_newHash, arg_oldHash)\r\n\r\n\t\t\t// debugger\r\n\r\n\t\t\tthis._router_engine.parse(arg_newHash)\r\n\t\t}\r\n\t\tHasher.prependHash = ''\r\n\t\tHasher.setHash('/')\r\n\t\tHasher.initialized.add(parseHash) //parse initial hash\r\n\t\tHasher.changed.add(parseHash) //parse hash changes\r\n\t\tHasher.init() //start listening for history change\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Add a route handler.\r\n\t * \r\n\t * @param {string|RegExp} arg_route - route.\r\n\t * @param {Function} arg_handler - f(args)\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tadd_handler(arg_route, arg_handler)\r\n\t{\r\n\t\t// console.log('Crossroads add route handler for route:', arg_route)\r\n\r\n\t\tthis._router_engine.addRoute(arg_route,\r\n\t\t\t(...args) => {\r\n\t\t\t\t// var hash = Hasher.getHash()\r\n\t\t\t\t\r\n\t\t\t\t// console.log('Crossroads route cb with hash [%s] and args:', hash, args)\r\n\r\n\t\t\t\treturn arg_handler(args)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Parse an url and route it.\r\n\t * \r\n\t * @param {string} arg_url - url to route.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tparse(arg_url)\r\n\t{\r\n\t\tconst app_url = this._state_store.get_state().get('app_url', undefined)\r\n\t\targ_url = (app_url.length > 0 && app_url[0] == '/' ? '' : '/') + app_url + arg_url\r\n\t\t\r\n\t\tif ( arg_url.endsWith('/') )\r\n\t\t{\r\n\t\t\targ_url = arg_url.substr(0, arg_url.length - 1)\r\n\t\t}\r\n\r\n\t\tthis._router_engine.parse(arg_url)\r\n\t}\r\n\r\n\t\r\n\r\n\t/**\r\n\t * Update page url with given view and menubar (update only the hash).\r\n\t * \r\n\t * @param {string} arg_view_name - view name.\r\n\t * @param {string} arg_menubar_name - menubar name.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\t// update_hash_self(arg_view_name, arg_menubar_name)\r\n\t// {\r\n\t// \tHasher.changed.active = false\r\n\t// \tHasher.setHash('view=' + arg_view_name + ',menubar=' + arg_menubar_name)\r\n\t// \tHasher.changed.active = true\r\n\t// }\r\n\r\n\r\n\r\n\tset_hash_if_empty(arg_hash)\r\n\t{\r\n\t\tif ( Hasher.getHash() == '' )\r\n\t\t{\r\n\t\t\tHasher.changed.active = false\r\n\t\t\tHasher.setHash(arg_hash)\r\n\t\t\tHasher.changed.active = true\r\n\t\t}\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/runtime/router.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 719,
    "kind": "variable",
    "name": "context",
    "memberof": "js/runtime/router.js",
    "static": true,
    "longname": "js/runtime/router.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/runtime/router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 720,
    "kind": "class",
    "name": "Router",
    "memberof": "js/runtime/router.js",
    "static": true,
    "longname": "js/runtime/router.js~Router",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/runtime/router.js",
    "importStyle": "Router",
    "description": "",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Browser navigation router class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/runtime/router_state.js~RouterState"
    ]
  },
  {
    "__docId__": 721,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/runtime/router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/router.js~Router#constructor",
    "access": "public",
    "description": "Create a Router instance.",
    "lineNumber": 48,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "RouterState\n\nA Router instance manages a navigation history and update the page on navigation change.\nNavigation history is an array stored into the Redux store.\nActions are:\n\t\t* display_content(view name, menubar name): update page content with given view and menubar.\n\t\t* go_backward(): update page with history previous content if available.\n\t\t* go_forward(): update page with history next content if available.\n\t\t* clear_history(): reset history array.\n\n\tAPI:\n\t\t->init(arg_home_view_name, arg_home_menubar_name)\n\t\t->add_handler(arg_route, arg_handler)\n\t\t->update_hash_self(arg_view_name, arg_menubar_name)\n\t\t->display_content_self(arg_view_name, arg_menubar_name)"
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "context of traces of this instance (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 722,
    "kind": "member",
    "name": "is_router",
    "memberof": "js/runtime/router.js~Router",
    "static": false,
    "longname": "js/runtime/router.js~Router#is_router",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 723,
    "kind": "member",
    "name": "_router_engine",
    "memberof": "js/runtime/router.js~Router",
    "static": false,
    "longname": "js/runtime/router.js~Router#_router_engine",
    "access": "private",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 724,
    "kind": "member",
    "name": "_hasher",
    "memberof": "js/runtime/router.js~Router",
    "static": false,
    "longname": "js/runtime/router.js~Router#_hasher",
    "access": "private",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 725,
    "kind": "method",
    "name": "init",
    "memberof": "js/runtime/router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/router.js~Router#init",
    "access": "public",
    "description": "Init router.",
    "lineNumber": 78,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_home_view_name",
        "description": "Home view name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_home_menubar_name",
        "description": "Home menubar name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 726,
    "kind": "method",
    "name": "add_handler",
    "memberof": "js/runtime/router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/router.js~Router#add_handler",
    "access": "public",
    "description": "Add a route handler.",
    "lineNumber": 135,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "RegExp"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_route",
        "description": "route."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_handler",
        "description": "f(args)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 727,
    "kind": "method",
    "name": "parse",
    "memberof": "js/runtime/router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/router.js~Router#parse",
    "access": "public",
    "description": "Parse an url and route it.",
    "lineNumber": 159,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_url",
        "description": "url to route."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 728,
    "kind": "method",
    "name": "set_hash_if_empty",
    "memberof": "js/runtime/router.js~Router",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/router.js~Router#set_hash_if_empty",
    "access": "public",
    "description": "Update page url with given view and menubar (update only the hash).",
    "lineNumber": 191,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_view_name",
        "description": "view name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_menubar_name",
        "description": "menubar name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 729,
    "kind": "file",
    "name": "js/runtime/router_state.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\nimport { fromJS } from 'immutable'\r\n\r\n// COMMON IMPORTS\r\nimport T         from '../../../node_modules/devapt-core-common/dist/js/utils/types'\r\nimport Stateable from '../../../node_modules/devapt-core-common/dist/js/base/stateable'\r\n\r\n// BROWSER IMPORTS\r\nimport DisplayCommand from '../commands/display_command'\r\n\r\n\r\nconst context = 'browser/runtime/router_state'\r\n\r\n\r\n\r\n/**\r\n * Initial route state\r\n */\r\nconst initial_state_js = {\r\n\thistory:{\r\n\t\titems:[],\r\n\t\tindex:-1\r\n\t}\r\n}\r\n\r\n\r\n\r\n/**\r\n * @file Browser navigation router class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class RouterState extends Stateable\r\n{\r\n\t/**\r\n\t * Create a RouterState instance.\r\n\t * @extends Stateable\r\n\t * @abstract\r\n\t * \r\n\t * A RouterState instance manages a navigation history state and update the page on navigation change.\r\n\t * \r\n\t * Navigation history is an array stored into the Redux store.\r\n\t * \r\n\t * Actions are:\r\n\t * \t\t* display_content(view name, menubar name): update page content with given view and menubar.\r\n\t * \t\t* go_backward(): update page with history previous content if available.\r\n\t * \t\t* go_forward(): update page with history next content if available.\r\n\t * \t\t* update_history(arg_history_values): replace history array.\r\n\t * \t\t* clear_history(): reset history array.\r\n\t * \r\n\t * Corresponding method to subclass are:\r\n\t * \t\t* display_content_self(view name, menubar name):Promise\r\n\t * \t\t* go_backward_self():Promise\r\n\t * \t\t* go_forward_self():Promise\r\n\t * \r\n\t * @param {string} arg_log_context - context of traces of this instance (optional).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_log_context)\r\n\t{\r\n\t\tconst runtime = window.devapt().runtime()\r\n\t\tconst log_context = arg_log_context ? arg_log_context : context\r\n\t\tconst default_settings = {}\r\n\t\tsuper(default_settings, runtime, initial_state_js, log_context)\r\n\r\n\t\tthis.is_router_state = true\r\n\t\tthis.state_path = ['router']\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Get name.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_name()\r\n\t{\r\n\t\treturn 'router'\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Load and apply a container component configuration.\r\n\t * \r\n\t * @param {Immutable.Map|undefined} arg_state - component state to load (optional).\r\n\t * \r\n\t * @returns {nothing} \r\n\t */\r\n\tload(arg_state)\r\n\t{\r\n\t\tconst state = arg_state ? arg_state : this.get_state()\r\n\t\tsuper.load(state)\r\n\r\n\t\t// console.info(context + ':load:loading ' + this.get_name())\r\n\t\t\r\n\t\tif (! state)\r\n\t\t{\r\n\t\t\tthis.error('load:no available state')\r\n\t\t\treturn\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Handle state changes.\r\n\t * \r\n\t * @param {Immutable.Map} arg_previous_state - previous state map.\r\n\t * @param {Immutable.Map} arg_new_state - new state map.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\thandle_state_change(arg_previous_state, arg_new_state)\r\n\t{\r\n\t\tif (! arg_previous_state)\r\n\t\t{\r\n\t\t\t// console.info(context + ':handle_state_change:update initial items')\r\n\t\t\tthis.do_action_clear_history()\r\n\t\t\treturn\r\n\t\t}\r\n\t\t\r\n\t\tif ( arg_previous_state && arg_new_state && arg_previous_state.has('history') && arg_new_state.has('history') )\r\n\t\t{\r\n\t\t\tif ( arg_previous_state.hasIn(['history', 'items']) && arg_new_state.hasIn(['history', 'items'] ) )\r\n\t\t\t{\r\n\t\t\t\tconst previous_history_items = arg_previous_state.getIn(['history', 'items'])\r\n\t\t\t\tconst new_history_items = arg_new_state.getIn(['history', 'items'])\r\n\t\t\t\tif ( ! previous_history_items.equals(new_history_items) )\r\n\t\t\t\t{\r\n\t\t\t\t\tconst new_items = new_history_items.toArray().toJS()\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (new_items.length == 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.do_action_clear_history()\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.do_action_update_history(new_items)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif ( arg_previous_state.hasIn(['history', 'index']) && arg_new_state.hasIn(['history', 'index'] ) )\r\n\t\t\t{\r\n\t\t\t\tconst previous_history_index = arg_previous_state.getIn(['history', 'index'])\r\n\t\t\t\tconst new_history_index = arg_new_state.getIn(['history', 'index'])\r\n\t\t\t\t// TODO CHECK IMMUTABLE RETURNS A NUMBER\r\n\t\t\t\tif ( previous_history_index != new_history_index )\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.do_action_move_history(new_history_index)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Goto the page content with given view (update only the hash).\r\n\t * \t\r\n\t * @param {string} arg_view_name - view name.\r\n\t * @param {string} arg_menubar_name - menubar name.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdo_action_display_content(arg_view_name, arg_menubar_name)\r\n\t{\r\n\t\tthis.enter_group('do_action_display_content')\r\n\t\t\r\n\t\tthis.debug('arg_view_name:', arg_view_name)\r\n\t\tthis.debug('arg_menubar_name:', arg_menubar_name)\r\n\t\t\r\n\t\tif ( T.isString(arg_view_name) || T.isString(arg_menubar_name) )\r\n\t\t{\r\n\t\t\tthis.dispatch_action('display_content', { view:arg_view_name, menubar:arg_menubar_name } )\r\n\t\t}\r\n\t\t\r\n\t\tthis.leave_group('do_action_display_content')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Display history previous content if available.\r\n\t *\r\n\t * @returns {nothing}\r\n\t */\r\n\tdo_action_go_backward()\r\n\t{\r\n\t\tthis.enter_group('do_action_go_backward')\r\n\t\t\r\n\t\tthis.dispatch_action('go_backward', {} )\r\n\t\t\r\n\t\tthis.leave_group('do_action_go_backward')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Display history next content if available.\r\n\t *\r\n\t * @returns {nothing}\r\n\t */\r\n\tdo_action_go_forward()\r\n\t{\r\n\t\tthis.enter_group('do_action_go_forward')\r\n\t\t\r\n\t\tthis.dispatch_action('go_forward', {} )\r\n\t\t\r\n\t\tthis.leave_group('do_action_go_forward')\r\n\t}\r\n\t\r\n\r\n\r\n\t/**\r\n\t * Clear history.\r\n\t *\r\n\t * @returns {nothing}\r\n\t */\r\n\tdo_action_clear_history()\r\n\t{\r\n\t\tthis.enter_group('do_action_go_forward')\r\n\t\t\r\n\t\tthis.dispatch_action('clear_history', {} )\r\n\t\t\r\n\t\tthis.leave_group('do_action_go_forward')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Update history.\r\n\t *\r\n\t * @param {array} arg_new_items - history array items.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdo_action_update_history(arg_new_items)\r\n\t{\r\n\t\tthis.enter_group('do_action_go_forward')\r\n\t\t\r\n\t\tthis.debug('arg_new_items', arg_new_items)\r\n\r\n\t\tthis.dispatch_action('update_history', { values: arg_new_items } )\r\n\t\t\r\n\t\tthis.leave_group('do_action_go_forward')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Move history current position.\r\n\t *\r\n\t * @param{Number} arg_new_index - history position index.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdo_action_move_history(arg_new_index)\r\n\t{\r\n\t\tthis.enter_group('do_action_move_history')\r\n\t\t\r\n\t\tthis.debug('arg_new_index', arg_new_index)\r\n\r\n\t\tthis.dispatch_action('update_history', { index: arg_new_index } )\r\n\t\t\r\n\t\tthis.leave_group('do_action_move_history')\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Store actions reducer pure function.\r\n\t * \r\n\t * @param {object} arg_previous_state - previous state.\r\n\t * @param {object} arg_action - store action: { type:'', component:'', ...}\r\n\t * \r\n\t * @returns {object} - new state\r\n\t */\r\n\treduce_action(arg_previous_state, arg_action)\r\n\t{\r\n\t\tconst initial_state_js = {\r\n\r\n\t\t}\r\n\r\n\t\tif (! arg_previous_state)\r\n\t\t{\r\n\t\t\targ_previous_state = fromJS(initial_state_js)\r\n\t\t}\r\n\r\n\t\t// console.log(context + ':reduce_action:prev state', arg_previous_state.toJS())\r\n\t\t\r\n\t\tswitch(arg_action.type)\r\n\t\t{\r\n\t\t\tcase 'display_content': {\r\n\t\t\t\tif ( ! T.isString(arg_action.view) || ! T.isString(arg_action.menubar) )\r\n\t\t\t\t{\r\n\t\t\t\t\treturn arg_previous_state\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// UPDATE PAGE URL\r\n\t\t\t\tthis.update_hash(arg_action.view, arg_action.menubar)\r\n\t\t\t\t\r\n\t\t\t\t// UPDATE ROUTER STORED STATE\r\n\t\t\t\tconst history = arg_previous_state.get('history')\r\n\t\t\t\tlet next_state = history.get('items').push( { view:arg_action.view_name, menubar:arg_action.menubar_name } )\r\n\t\t\t\tnext_state = history.set('index', history.get('index') )\r\n\t\t\t\t\r\n\t\t\t\t// UPDATE PAGE CONTENT\r\n\t\t\t\tthis.display_content(arg_action.view, arg_action.menubar)\r\n\t\t\t\t\r\n\t\t\t\treturn next_state\r\n\t\t\t}\r\n\r\n\t\t\tcase 'go_backward': {\r\n\t\t\t\tconst history = arg_previous_state.get('history')\r\n\t\t\t\tconst previous_index = history.get('index')\r\n\t\t\t\tif (previous_index > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tconst new_index = previous_index - 1\r\n\t\t\t\t\tconst item = history.get('items').get(new_index, undefined)\r\n\t\t\t\t\tif (item)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.display_content(item.view, item.menubar)\r\n\r\n\t\t\t\t\t\tconst next_state = history.set('index', new_index)\r\n\t\t\t\t\t\treturn next_state\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn arg_previous_state\r\n\t\t\t}\r\n\r\n\t\t\tcase 'go_forward': {\r\n\t\t\t\tconst history = arg_previous_state.get('history')\r\n\t\t\t\tconst previous_index = history.get('index')\r\n\t\t\t\tif (previous_index + 1 < history.get('items').count() )\r\n\t\t\t\t{\r\n\t\t\t\t\tconst new_index = previous_index + 1\r\n\t\t\t\t\tconst item = history.get('items').get(new_index, undefined)\r\n\t\t\t\t\tif (item)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.display_content(item.view, item.menubar)\r\n\r\n\t\t\t\t\t\tconst next_state = history.set('index', new_index)\r\n\t\t\t\t\t\treturn next_state\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn arg_previous_state\r\n\t\t\t}\r\n\r\n\t\t\tcase 'clear_history': {\r\n\t\t\t\tconst next_state = arg_previous_state.set('history', fromJS([]) )\r\n\t\t\t\treturn next_state\r\n\t\t\t}\r\n\r\n\t\t\tcase 'update_history': {\r\n\t\t\t\tlet items = arg_previous_state.get('history').concat(arg_action.values)\r\n\t\t\t\tconst next_state = arg_previous_state.set('history', items)\r\n\t\t\t\treturn next_state\r\n\t\t\t}\r\n\r\n\t\t\tcase 'move_history': {\r\n\t\t\t\tconst history = arg_previous_state.get('history')\r\n\t\t\t\tconst new_index = arg_action.index\r\n\t\t\t\tif (new_index > 0 && new_index < history.get('items').count() )\r\n\t\t\t\t{\r\n\t\t\t\t\tconst item = history.get('items').get(new_index, undefined)\r\n\t\t\t\t\tif (item)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.display_content(item.view, item.menubar)\r\n\r\n\t\t\t\t\t\tconst next_state = history.set('index', new_index)\r\n\t\t\t\t\t\treturn next_state\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t\r\n\t\treturn arg_previous_state\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Display the page content with given view and menubar.\r\n\t * \r\n\t * @param {string} arg_view_name - view name\r\n\t * @param {string} arg_menubar_name - menubar name\r\n\t * \r\n\t * @returns {Promise} - Resolved result is a boolean: success or failure\r\n\t */\r\n\tdisplay_content(arg_view_name, arg_menubar_name, arg_breadcrumbs=undefined)\r\n\t{\r\n\t\tthis.enter_group('display_content')\r\n\t\t\r\n\t\tthis.debug('arg_view_name=' + arg_view_name)\r\n\t\tthis.debug('arg_menubar_name=' + arg_menubar_name)\r\n\t\tthis.debug('arg_breadcrumbs=' + arg_breadcrumbs)\r\n\t\t\r\n\r\n\t\tlet promise = null\r\n\t\ttry\r\n\t\t{\r\n\t\t\tconst cmd_settings = {\r\n\t\t\t\tname:'router.display_content',\r\n\t\t\t\ttype:'display',\r\n\t\t\t\tview:arg_view_name,\r\n\t\t\t\tmenubar:arg_menubar_name,\r\n\t\t\t\tbreadcrumbs:arg_breadcrumbs\r\n\t\t\t}\r\n\t\t\tconst cmd = new DisplayCommand(this._runtime, cmd_settings)\r\n\r\n\t\t\tthis.get_runtime().ui().pipe_display_command(cmd)\r\n\t\t}\r\n\t\tcatch(e)\r\n\t\t{\r\n\t\t\tconsole.error(e, context)\r\n\t\t\tpromise = Promise.resolve(false)\r\n\t\t}\r\n\t\t\r\n\r\n\t\tthis.leave_group('display_content')\r\n\t\treturn promise\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Update page url with given view and menubar (update only the hash).\r\n\t * \r\n\t * @param {string} arg_view_name - view name.\r\n\t * @param {string} arg_menubar_name - menubar name.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tupdate_hash(arg_view_name, arg_menubar_name)\r\n\t{\r\n\t\tthis.enter_group('update_hash')\r\n\t\t\r\n\t\tthis.debug('arg_view_name', arg_view_name)\r\n\t\tthis.debug('arg_menubar_name', arg_menubar_name)\r\n\t\t\r\n\t\ttry\r\n\t\t{\r\n\t\t\tif ( T.isFunction(this.update_hash_self) )\r\n\t\t\t{\r\n\t\t\t\tthis.update_hash_self(arg_view_name, arg_menubar_name)\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(e)\r\n\t\t{\r\n\t\t\tconsole.error(e, context)\r\n\t\t\tthis.error(e)\r\n\t\t}\r\n\t\t\r\n\t\tthis.leave_group('update_hash')\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/runtime/router_state.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 730,
    "kind": "variable",
    "name": "context",
    "memberof": "js/runtime/router_state.js",
    "static": true,
    "longname": "js/runtime/router_state.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/runtime/router_state.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 731,
    "kind": "variable",
    "name": "initial_state_js",
    "memberof": "js/runtime/router_state.js",
    "static": true,
    "longname": "js/runtime/router_state.js~initial_state_js",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/runtime/router_state.js",
    "importStyle": null,
    "description": "Initial route state",
    "lineNumber": 20,
    "type": {
      "types": [
        "{\"history\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 732,
    "kind": "class",
    "name": "RouterState",
    "memberof": "js/runtime/router_state.js",
    "static": true,
    "longname": "js/runtime/router_state.js~RouterState",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/runtime/router_state.js",
    "importStyle": "RouterState",
    "description": "",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Browser navigation router class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "../node_modules/devapt-core-common/dist/js/base/stateable.js~Stateable"
    ]
  },
  {
    "__docId__": 733,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/runtime/router_state.js~RouterState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/router_state.js~RouterState#constructor",
    "access": "public",
    "description": "Create a RouterState instance.",
    "lineNumber": 63,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "Stateable"
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_log_context",
        "description": "context of traces of this instance (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true
  },
  {
    "__docId__": 734,
    "kind": "member",
    "name": "is_router_state",
    "memberof": "js/runtime/router_state.js~RouterState",
    "static": false,
    "longname": "js/runtime/router_state.js~RouterState#is_router_state",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 735,
    "kind": "member",
    "name": "state_path",
    "memberof": "js/runtime/router_state.js~RouterState",
    "static": false,
    "longname": "js/runtime/router_state.js~RouterState#state_path",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 736,
    "kind": "method",
    "name": "get_name",
    "memberof": "js/runtime/router_state.js~RouterState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/router_state.js~RouterState#get_name",
    "access": "public",
    "description": "Get name.",
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 737,
    "kind": "method",
    "name": "load",
    "memberof": "js/runtime/router_state.js~RouterState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/router_state.js~RouterState#load",
    "access": "public",
    "description": "Load and apply a container component configuration.",
    "lineNumber": 94,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing} "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Immutable.Map",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "component state to load (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 738,
    "kind": "method",
    "name": "handle_state_change",
    "memberof": "js/runtime/router_state.js~RouterState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/router_state.js~RouterState#handle_state_change",
    "access": "public",
    "description": "Handle state changes.",
    "lineNumber": 118,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Immutable.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_previous_state",
        "description": "previous state map."
      },
      {
        "nullable": null,
        "types": [
          "Immutable.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_new_state",
        "description": "new state map."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 739,
    "kind": "method",
    "name": "do_action_display_content",
    "memberof": "js/runtime/router_state.js~RouterState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/router_state.js~RouterState#do_action_display_content",
    "access": "public",
    "description": "Goto the page content with given view (update only the hash).\n\t",
    "lineNumber": 170,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_view_name",
        "description": "view name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_menubar_name",
        "description": "menubar name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 740,
    "kind": "method",
    "name": "do_action_go_backward",
    "memberof": "js/runtime/router_state.js~RouterState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/router_state.js~RouterState#do_action_go_backward",
    "access": "public",
    "description": "Display history previous content if available.",
    "lineNumber": 192,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 741,
    "kind": "method",
    "name": "do_action_go_forward",
    "memberof": "js/runtime/router_state.js~RouterState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/router_state.js~RouterState#do_action_go_forward",
    "access": "public",
    "description": "Display history next content if available.",
    "lineNumber": 208,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 742,
    "kind": "method",
    "name": "do_action_clear_history",
    "memberof": "js/runtime/router_state.js~RouterState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/router_state.js~RouterState#do_action_clear_history",
    "access": "public",
    "description": "Clear history.",
    "lineNumber": 224,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 743,
    "kind": "method",
    "name": "do_action_update_history",
    "memberof": "js/runtime/router_state.js~RouterState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/router_state.js~RouterState#do_action_update_history",
    "access": "public",
    "description": "Update history.",
    "lineNumber": 242,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_new_items",
        "description": "history array items."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 744,
    "kind": "method",
    "name": "do_action_move_history",
    "memberof": "js/runtime/router_state.js~RouterState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/router_state.js~RouterState#do_action_move_history",
    "access": "public",
    "description": "Move history current position.\n\n@param{Number} arg_new_index - history position index.",
    "lineNumber": 262,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "arg_new_index",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 745,
    "kind": "method",
    "name": "reduce_action",
    "memberof": "js/runtime/router_state.js~RouterState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/router_state.js~RouterState#reduce_action",
    "access": "public",
    "description": "Store actions reducer pure function.",
    "lineNumber": 283,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - new state"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_previous_state",
        "description": "previous state."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_action",
        "description": "store action: { type:'', component:'', ...}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "new state"
    }
  },
  {
    "__docId__": 746,
    "kind": "method",
    "name": "display_content",
    "memberof": "js/runtime/router_state.js~RouterState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/router_state.js~RouterState#display_content",
    "access": "public",
    "description": "Display the page content with given view and menubar.",
    "lineNumber": 398,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Resolved result is a boolean: success or failure"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_view_name",
        "description": "view name"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_menubar_name",
        "description": "menubar name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Resolved result is a boolean: success or failure"
    }
  },
  {
    "__docId__": 747,
    "kind": "method",
    "name": "update_hash",
    "memberof": "js/runtime/router_state.js~RouterState",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/router_state.js~RouterState#update_hash",
    "access": "public",
    "description": "Update page url with given view and menubar (update only the hash).",
    "lineNumber": 442,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_view_name",
        "description": "view name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_menubar_name",
        "description": "menubar name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 748,
    "kind": "file",
    "name": "js/runtime/service.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T             from '../../../node_modules/devapt-core-common/dist/js/utils/types'\r\nimport { transform } from '../../../node_modules/devapt-core-common/dist/js/utils/transform'\r\nimport Stream        from '../../../node_modules/devapt-core-common/dist/js/messaging/stream'\r\n\r\n// BROWSER IMPORT\r\nimport ServiceOperation from './service_operation'\r\nimport DEFAULT_OPS      from './service_default_ops'\r\n\r\n\r\nconst context = 'browser/runtime/service'\r\n\r\n\r\n\r\n\r\n/**\r\n * @file client Service class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class Service\r\n{\r\n\t/**\r\n\t * Create a service wrapper instance.\r\n\t * \r\n\t * @param {string} arg_svc_name - service name.\r\n\t * @param {object} arg_svc_settings - service settiings.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_svc_name, arg_svc_settings)\r\n\t{\r\n\t\tthis.$name = arg_svc_name\r\n\t\tthis.is_service = true\r\n\t\tthis.execute_on_browser = false\r\n\t\t\r\n\t\t// MAP OF POLLING TIMERS: name => timer id\r\n\t\tthis.timers = {}\r\n\t\t\r\n\t\tthis.load(arg_svc_settings)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get service name.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_name()\r\n\t{\r\n\t\treturn this.$name\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Load service settings.\r\n\t * \r\n\t * @param {object} arg_settings - runtime settings.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tload(arg_settings)\r\n\t{\r\n\t\tconst self = this\r\n\t\t// console.log(context + ':load: name=' + this.$name + ' settings=', arg_settings)\r\n\t\t\r\n\t\t// SERVICE EXECUTION IS BROWSER OR SERVER (default)\r\n\t\tif ('execution' in arg_settings)\r\n\t\t{\r\n\t\t\tif (arg_settings.execution == 'browser')\r\n\t\t\t{\r\n\t\t\t\tthis.execute_on_browser = true\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// GET SERVICES OPERATIONS\r\n\t\tlet ops = DEFAULT_OPS\r\n\t\tif ('operations' in arg_settings)\r\n\t\t{\r\n\t\t\tops = arg_settings['operations']\r\n\t\t}\r\n\t\t// console.log(context + ':load: name=' + this.$name + ' ops=', ops)\r\n\t\t\r\n\t\t// GET POLLERS AND TIMELINE SETTINGS\r\n\t\tconst pollers_settings = ('pollers' in arg_settings) ? arg_settings.pollers : undefined\r\n\t\tconst timeline_settings = ('timeline' in arg_settings) ? arg_settings.timeline : undefined\r\n\t\t// console.log(context + ':load:settings.pollers=', pollers_settings)\r\n\r\n\t\t// CONFIGURE OPERATIONS\r\n\t\tthis.$ops = ops\r\n\t\tconst svc_path = '/' + this.$name\r\n\t\tconst svc_socket = window.io(svc_path)\r\n\t\tself.socket = svc_socket\r\n\t\t\r\n\t\tthis.$ops.forEach(\r\n\t\t\t(operation) => {\r\n\t\t\t\tconst op_name = operation\r\n\t\t\t\t// console.log(context + ':load:svc=%s:op=%s', this.get_name(), op_name)\r\n\t\t\t\t\r\n\t\t\t\t// OPERATION POLLER: REPEAT EVERY xxx MILLISECONDS FOR GLOBAL SETTINGS\r\n\t\t\t\tif (! this.execute_on_browser && pollers_settings && (op_name in pollers_settings))\r\n\t\t\t\t{\r\n\t\t\t\t\tconst pollers_op_settings = pollers_settings[op_name]\r\n\t\t\t\t\t// console.log('service has poller for operation:' + op_name, pollers_op_settings)\r\n\r\n\t\t\t\t\tthis.create_poller(pollers_op_settings, op_name, arg_settings.credentials, svc_socket, [])\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// OPERATION EXECUTION\r\n\t\t\t\tconst svc_operation = new ServiceOperation(op_name, {service:this})\r\n\t\t\t\tself[op_name] = (arg_operands) => {\r\n\t\t\t\t\t// console.log(context + ':op:%s:%s:cfg=', this.get_name(), op_name, arg_operands)\r\n\r\n\t\t\t\t\tif (this.execute_on_browser)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn svc_operation.execute_on_browser(arg_operands, arg_settings.credentials)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn svc_operation.execute_on_server(svc_socket, svc_path, arg_operands, arg_settings.credentials, arg_settings.session_uid)\r\n\t\t\t\t}\r\n\t\t\t\tself[op_name].operation = svc_operation\r\n\r\n\t\t\t\t// OPERATION TIMELINE: HAS HISTORY?\r\n\t\t\t\tself[op_name].timelines = {}\r\n\t\t\t\tif (! this.execute_on_browser && timeline_settings && (op_name in timeline_settings))\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.create_timeline(op_name, svc_socket, timeline_settings)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Create a timer.\r\n\t * \r\n\t * @param {string}\targ_timer_name - timer unique name.\r\n\t * @param {function} arg_timer_cb - timer callback function.\r\n\t * @param {integer} arg_delay - timer interval integer in milliseconds.\r\n\t * @param {boolean} arg_force_create - if true delete existing timer and recreate it (default=false).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tcreate_timer(arg_timer_name, arg_timer_cb, arg_delay, arg_force_create = false)\r\n\t{\r\n\t\tassert( T.isString(arg_timer_name), context + ':create_timer:bad timer name string')\r\n\t\tassert( T.isFunction(arg_timer_cb), context + ':create_timer:bad timer callback function')\r\n\t\tassert( T.isNumber(arg_delay), context + ':create_timer:bad timer delay integer')\r\n\t\tassert( T.isBoolean(arg_force_create), context + ':create_timer:bad force create boolean')\r\n\t\t\r\n\t\t// console.log('create_timer', arg_timer_name, this.timers)\r\n\t\t\r\n\t\tif (arg_timer_name in this.timers)\r\n\t\t{\r\n\t\t\t// console.log(context + ':create_timer:timer exists name=' + arg_timer_name)\r\n\t\t\tif (! arg_force_create)\r\n\t\t\t{\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\t// DELETE EXISTING TIMER\r\n\t\t\t// console.log(context + ':create_timer:delete existing timer name=' + arg_timer_name)\r\n\t\t\tthis.delete_timer( this.timers[arg_timer_name] )\r\n\t\t\tdelete this.timers[arg_timer_name]\r\n\t\t}\r\n\t\t\r\n\t\t// CREATE TIMER\r\n\t\t// console.log(context + ':create_timer:create timer name=' + arg_timer_name)\r\n\t\tthis.timers[arg_timer_name] = setInterval(\r\n\t\t\targ_timer_cb,\r\n\t\t\targ_delay\r\n\t\t)\r\n\t}\r\n\t\r\n\t\r\n\r\n\t/**\r\n\t * Create a poller for the given socket operation.\r\n\t * \r\n\t * @param {object} arg_poller_settings - poller settings { name:'...', interval_seconds|interval_milliseconds:number }.\r\n\t * @param {object} arg_op_name - service operation name.\r\n\t * @param {object} arg_credentials - session credentials.\r\n\t * @param {object} arg_socket - service socket.\r\n\t * @param {array} arg_op_opds - operation operands (optional)(default=[]).\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tcreate_poller(arg_poller_settings, arg_op_name, arg_credentials, arg_socket, arg_op_opds=[])\r\n\t{\r\n\t\tconst self = this\r\n\r\n\t\tif ( T.isObject(arg_poller_settings) )\r\n\t\t{\r\n\t\t\tconst interval_ms = T.isNumber(arg_poller_settings.interval_seconds) ? arg_poller_settings.interval_seconds * 1000 : arg_poller_settings.interval_milliseconds\r\n\t\t\tif ( T.isNumber(interval_ms) && T.isString(arg_poller_settings.name) )\r\n\t\t\t{\r\n\t\t\t\tconsole.log('create poller for operation:' + arg_op_name, arg_poller_settings.name, interval_ms)\r\n\t\t\t\t\r\n\t\t\t\tconst request = {\r\n\t\t\t\t\tsession_uid:arg_session_uid,\r\n\t\t\t\t\tservice:self.get_name(),\r\n\t\t\t\t\toperation:arg_op_name,\r\n\t\t\t\t\toperands:arg_op_opds,\r\n\t\t\t\t\tcredentials:arg_credentials\r\n\t\t\t\t}\r\n\r\n\t\t\t\tself.create_timer(\r\n\t\t\t\t\targ_poller_settings.name,\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\t// console.log('GLOBAL SETTINGS:create_timer svc_socket.emit', svc_path, op_name)\r\n\t\t\t\t\t\targ_socket.emit(arg_op_name, request)\r\n\t\t\t\t\t},\r\n\t\t\t\t\tinterval_ms,\r\n\t\t\t\t\tfalse\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\r\n\t/**\r\n\t * Delete a timer.\r\n\t * \r\n\t * @param {any}\targ_timer_id.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tdelete_timer(arg_timer_id)\r\n\t{\r\n\t\tclearInterval(arg_timer_id)\r\n\t}\r\n\r\n\r\n\tcreate_timeline(op_name, svc_socket, timeline_settings)\r\n\t{\r\n\t\tconsole.log('service has timeline for operation:' + op_name, timeline_settings)\r\n\r\n\t\tlet timeline_op_settings_array = timeline_settings[op_name]\r\n\t\tif( T.isObject(timeline_op_settings_array) )\r\n\t\t{\r\n\t\t\ttimeline_op_settings_array = [timeline_op_settings_array]\r\n\t\t}\r\n\t\t\r\n\t\tlet stream = Stream.from_emitter_event(svc_socket, op_name)\r\n\r\n\t\ttimeline_op_settings_array.forEach(\r\n\t\t\t(timeline_op_settings) => {\r\n\t\t\t\tif ( T.isObject(timeline_op_settings) && timeline_op_settings.transform && T.isNumber(timeline_op_settings.max) && T.isString(timeline_op_settings.name) && T.isNumber(timeline_op_settings.interval_seconds))\r\n\t\t\t\t{\r\n\t\t\t\t\tself[op_name].timelines[timeline_op_settings.name] = {\r\n\t\t\t\t\t\tvalues:[],\r\n\t\t\t\t\t\tprevious_ts:undefined,\r\n\t\t\t\t\t\tstream:new Stream.Bus()\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstream.subscribe(\r\n\t\t\t\t\t\t(value) => {\r\n\t\t\t\t\t\t\tvalue = value.datas ? value.datas : value\r\n\r\n\t\t\t\t\t\t\tif ( T.isString( timeline_op_settings.transform ) || T.isNumber( timeline_op_settings.transform ) )\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tconst field_name = timeline_op_settings.transform\r\n\t\t\t\t\t\t\t\ttimeline_op_settings.transform = {\r\n\t\t\t\t\t\t\t\t\t\"result_type\":\"single\",\r\n\t\t\t\t\t\t\t\t\t\"fields\":[\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\"name\":field_name,\r\n\t\t\t\t\t\t\t\t\t\t\t\"path\":field_name\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst extracted_value = transform(timeline_op_settings.transform)(value)\r\n\t\t\t\t\t\t\t// console.log(context + ':load:timeline extracted_value=', extracted_value)\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tconst timeline = self[op_name].timelines[timeline_op_settings.name]\r\n\t\t\t\t\t\t\tconst ts = Date.now()\r\n\t\t\t\t\t\t\tconst prev_ts = timeline.previous_ts\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (!prev_ts)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttimeline.previous_ts = ts\r\n\t\t\t\t\t\t\t\ttimeline.values = [{ts:ts, value:extracted_value}]\r\n\t\t\t\t\t\t\t\ttimeline.stream.push(timeline.values)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if ( (ts - prev_ts) > (timeline_op_settings.interval_seconds * 1000) )\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttimeline.values.push({ts:ts, value:extracted_value})\r\n\t\t\t\t\t\t\t\ttimeline.previous_ts = ts\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (timeline.values.length > timeline_op_settings.max)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tconst too_many = timeline.values.length - timeline_op_settings.max\r\n\t\t\t\t\t\t\t\t\ttimeline.values = timeline.values.slice(too_many)\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\ttimeline.stream.push(timeline.values)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/runtime/service.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 749,
    "kind": "variable",
    "name": "context",
    "memberof": "js/runtime/service.js",
    "static": true,
    "longname": "js/runtime/service.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/runtime/service.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 750,
    "kind": "class",
    "name": "Service",
    "memberof": "js/runtime/service.js",
    "static": true,
    "longname": "js/runtime/service.js~Service",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/runtime/service.js",
    "importStyle": "Service",
    "description": "",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "client Service class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 751,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/runtime/service.js~Service",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/service.js~Service#constructor",
    "access": "public",
    "description": "Create a service wrapper instance.",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_name",
        "description": "service name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_settings",
        "description": "service settiings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 752,
    "kind": "member",
    "name": "$name",
    "memberof": "js/runtime/service.js~Service",
    "static": false,
    "longname": "js/runtime/service.js~Service#$name",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 753,
    "kind": "member",
    "name": "is_service",
    "memberof": "js/runtime/service.js~Service",
    "static": false,
    "longname": "js/runtime/service.js~Service#is_service",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 754,
    "kind": "member",
    "name": "execute_on_browser",
    "memberof": "js/runtime/service.js~Service",
    "static": false,
    "longname": "js/runtime/service.js~Service#execute_on_browser",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 755,
    "kind": "member",
    "name": "timers",
    "memberof": "js/runtime/service.js~Service",
    "static": false,
    "longname": "js/runtime/service.js~Service#timers",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 756,
    "kind": "method",
    "name": "get_name",
    "memberof": "js/runtime/service.js~Service",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/service.js~Service#get_name",
    "access": "public",
    "description": "Get service name.",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 757,
    "kind": "method",
    "name": "load",
    "memberof": "js/runtime/service.js~Service",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/service.js~Service#load",
    "access": "public",
    "description": "Load service settings.",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "runtime settings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 759,
    "kind": "member",
    "name": "$ops",
    "memberof": "js/runtime/service.js~Service",
    "static": false,
    "longname": "js/runtime/service.js~Service#$ops",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 760,
    "kind": "method",
    "name": "create_timer",
    "memberof": "js/runtime/service.js~Service",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/service.js~Service#create_timer",
    "access": "public",
    "description": "Create a timer.",
    "lineNumber": 150,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_timer_name",
        "description": "timer unique name."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_timer_cb",
        "description": "timer callback function."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_delay",
        "description": "timer interval integer in milliseconds."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_force_create",
        "description": "if true delete existing timer and recreate it (default=false)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 761,
    "kind": "method",
    "name": "create_poller",
    "memberof": "js/runtime/service.js~Service",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/service.js~Service#create_poller",
    "access": "public",
    "description": "Create a poller for the given socket operation.",
    "lineNumber": 194,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_poller_settings",
        "description": "poller settings { name:'...', interval_seconds|interval_milliseconds:number }."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_op_name",
        "description": "service operation name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "session credentials."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_socket",
        "description": "service socket."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_op_opds",
        "description": "operation operands (optional)(default=[])."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 762,
    "kind": "method",
    "name": "delete_timer",
    "memberof": "js/runtime/service.js~Service",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/service.js~Service#delete_timer",
    "access": "public",
    "description": "Delete a timer.",
    "lineNumber": 235,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_timer_id.",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 763,
    "kind": "method",
    "name": "create_timeline",
    "memberof": "js/runtime/service.js~Service",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/service.js~Service#create_timeline",
    "access": "public",
    "description": null,
    "lineNumber": 241,
    "undocument": true,
    "params": [
      {
        "name": "op_name",
        "types": [
          "*"
        ]
      },
      {
        "name": "svc_socket",
        "types": [
          "*"
        ]
      },
      {
        "name": "timeline_settings",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 764,
    "kind": "file",
    "name": "js/runtime/service_default_ops.js",
    "content": "export default [\r\n\t{\r\n\t\tname:'ping',\r\n\t\toperands:[]\r\n\t},\r\n\t{\r\n\t\tname:'get',\r\n\t\toperands:[]\r\n\t},\r\n\t{\r\n\t\tname:'render',\r\n\t\toperands:[]\r\n\t},\r\n\t{\r\n\t\tname:'post',\r\n\t\toperands:[]\r\n\t},\r\n\t{\r\n\t\tname:'subscribe',\r\n\t\toperands:[]\r\n\t},\r\n\r\n\t// REMOTE LOGGERS\r\n\t{\r\n\t\tname:'debug',\r\n\t\toperands:[]\r\n\t},\r\n\t{\r\n\t\tname:'info',\r\n\t\toperands:[]\r\n\t},\r\n\t{\r\n\t\tname:'warn',\r\n\t\toperands:[]\r\n\t},\r\n\t{\r\n\t\tname:'error',\r\n\t\toperands:[]\r\n\t},\r\n\r\n\t// CRUD\r\n\t{\r\n\t\tname:'read',\r\n\t\toperands:[]\r\n\t},\r\n\t{\r\n\t\tname:'update',\r\n\t\toperands:[]\r\n\t},\r\n\t{\r\n\t\tname:'delete',\r\n\t\toperands:[]\r\n\t},\r\n\t{\r\n\t\tname:'create',\r\n\t\toperands:[]\r\n\t},\r\n\t{\r\n\t\tname:'patch',\r\n\t\toperands:[]\r\n\t},\r\n\t{\r\n\t\tname:'list',\r\n\t\toperands:[]\r\n\t}\r\n]",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/runtime/service_default_ops.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 765,
    "kind": "file",
    "name": "js/runtime/service_operation.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T             from '../../../node_modules/devapt-core-common/dist/js/utils/types'\r\nimport Stream        from '../../../node_modules/devapt-core-common/dist/js/messaging/stream'\r\n\r\n\r\nlet context = 'browser/runtime/service_operation'\r\n\r\n\r\n\r\n/**\r\n * @file client ServiceOperation class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class ServiceOperation\r\n{\r\n\t/**\r\n\t * Create a client Runtime instance.\r\n\t * \r\n\t * @param {string} arg_svc_name - service name.\r\n\t * @param {object} arg_svc_settings - service settiings.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_op_name, arg_op_settings)\r\n\t{\r\n\t\tthis._name = arg_op_name\r\n\t\tthis._settings = arg_op_settings\r\n\t\tthis.is_service_operation = true\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get service name.\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tget_name()\r\n\t{\r\n\t\treturn this._name\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Execute operation on browser.\r\n\t * \r\n\t * @param {any}    arg_operands    - operation operands.\r\n\t * @param {object} arg_credentials - session credentials.\r\n\t * \r\n\t * @returns {Stream} - service results stream.\r\n\t */\r\n\texecute_on_browser()\r\n\t{\r\n\t\t// TODO\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Execute operation on remote server.\r\n\t * \r\n\t * @param {object} arg_svc_socket  - remote service socket.\r\n\t * @param {string} arg_svc_path    - remote service socket.\r\n\t * @param {any}    arg_operands    - operation operands.\r\n\t * @param {object} arg_credentials - session credentials.\r\n\t * @param {string} arg_session_uid - session unique id.\r\n\t * \r\n\t * @returns {Stream} - service results stream.\r\n\t */\r\n\texecute_on_server(arg_svc_socket, arg_svc_path, arg_operands, arg_credentials, arg_session_uid)\r\n\t{\r\n\t\tconst op_name = this.get_name()\r\n\t\t// console.log(context + ':execute_remote:op=%s:path=%s:operands=%o', op_name, arg_svc_path, arg_operands)\r\n\r\n\t\t// DEFINE REQUEST PAYLOAD\r\n\t\tconst request = {\r\n\t\t\tsession_uid:arg_session_uid,\r\n\t\t\tservice:this._settings.service.get_name(),\r\n\t\t\toperation:op_name,\r\n\t\t\toperands: T.isArray(arg_operands) ? arg_operands : (arg_operands ? [arg_operands] : []),\r\n\t\t\tcredentials:arg_credentials\r\n\t\t}\r\n\t\t\r\n\t\t// REPEAT EVERY xxx MILLISECONDS FOR LOCAL SETTINGS\r\n\t\tif ( T.isObject(arg_operands) && T.isObject(arg_operands.poller) )\r\n\t\t{\r\n\t\t\tconst poller_settings = arg_operands.poller\r\n\t\t\tthis.create_poller(poller_settings, op_name, arg_credentials, arg_svc_socket, [arg_operands])\r\n\t\t}\r\n\t\t\r\n\t\tlet stream = Stream.from_emitter_event(arg_svc_socket, op_name)\r\n\r\n\t\t// DEBOUNCE STREAM\r\n\t\tif ( T.isObject(arg_operands) && T.isNumber(arg_operands.debounce_milliseconds) )\r\n\t\t{\r\n\t\t\tstream = stream.debounce_immediate(arg_operands.debounce_milliseconds)\r\n\t\t}\r\n\r\n\t\tstream.on_error(\r\n\t\t\t(error) => {\r\n\t\t\t\tconsole.error(context + 'svc=' + arg_svc_path + ':op_name=' + op_name + ':error=', error)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\t// SEND REQUEST\r\n\t\tconsole.log(context + ':execute_remote:request=', request)\r\n\t\targ_svc_socket.emit(op_name, request)\r\n\r\n\t\t\r\n\t\t// RETURN RESPONSE STREAM\r\n\t\treturn stream\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/runtime/service_operation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 766,
    "kind": "variable",
    "name": "context",
    "memberof": "js/runtime/service_operation.js",
    "static": true,
    "longname": "js/runtime/service_operation.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/runtime/service_operation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 767,
    "kind": "class",
    "name": "ServiceOperation",
    "memberof": "js/runtime/service_operation.js",
    "static": true,
    "longname": "js/runtime/service_operation.js~ServiceOperation",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/runtime/service_operation.js",
    "importStyle": "ServiceOperation",
    "description": "",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "client ServiceOperation class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 768,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/runtime/service_operation.js~ServiceOperation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/service_operation.js~ServiceOperation#constructor",
    "access": "public",
    "description": "Create a client Runtime instance.",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_name",
        "description": "service name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_settings",
        "description": "service settiings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 769,
    "kind": "member",
    "name": "_name",
    "memberof": "js/runtime/service_operation.js~ServiceOperation",
    "static": false,
    "longname": "js/runtime/service_operation.js~ServiceOperation#_name",
    "access": "private",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 770,
    "kind": "member",
    "name": "_settings",
    "memberof": "js/runtime/service_operation.js~ServiceOperation",
    "static": false,
    "longname": "js/runtime/service_operation.js~ServiceOperation#_settings",
    "access": "private",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 771,
    "kind": "member",
    "name": "is_service_operation",
    "memberof": "js/runtime/service_operation.js~ServiceOperation",
    "static": false,
    "longname": "js/runtime/service_operation.js~ServiceOperation#is_service_operation",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 772,
    "kind": "method",
    "name": "get_name",
    "memberof": "js/runtime/service_operation.js~ServiceOperation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/service_operation.js~ServiceOperation#get_name",
    "access": "public",
    "description": "Get service name.",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 773,
    "kind": "method",
    "name": "execute_on_browser",
    "memberof": "js/runtime/service_operation.js~ServiceOperation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/service_operation.js~ServiceOperation#execute_on_browser",
    "access": "public",
    "description": "Execute operation on browser.",
    "lineNumber": 57,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Stream} - service results stream."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_operands",
        "description": "operation operands."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "session credentials."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Stream"
      ],
      "spread": false,
      "description": "service results stream."
    }
  },
  {
    "__docId__": 774,
    "kind": "method",
    "name": "execute_on_server",
    "memberof": "js/runtime/service_operation.js~ServiceOperation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/service_operation.js~ServiceOperation#execute_on_server",
    "access": "public",
    "description": "Execute operation on remote server.",
    "lineNumber": 74,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Stream} - service results stream."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_socket",
        "description": "remote service socket."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_path",
        "description": "remote service socket."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_operands",
        "description": "operation operands."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "session credentials."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_session_uid",
        "description": "session unique id."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Stream"
      ],
      "spread": false,
      "description": "service results stream."
    }
  },
  {
    "__docId__": 775,
    "kind": "file",
    "name": "js/runtime/ui.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\nimport _ from 'lodash'\r\nimport { fromJS } from 'immutable'\r\n\r\n// COMMON IMPORTS\r\nimport T                      from '../../../node_modules/devapt-core-common/dist/js/utils/types'\r\nimport Loggable               from '../../../node_modules/devapt-core-common/dist/js/base/loggable'\r\nimport DefaultRenderingPlugin from '../../../node_modules/devapt-core-common/dist/js/default_plugins/rendering_default_plugin'\r\nimport RenderingBuilder       from '../../../node_modules/devapt-core-common/dist/js/rendering/rendering_builder'\r\nimport RenderingPlugin        from '../../../node_modules/devapt-core-common/dist/js/plugins/rendering_plugin'\r\nimport Stream                 from '../../../node_modules/devapt-core-common/dist/js/messaging/stream'\r\n\r\n// BROWSER IMPORTS\r\nimport UIFactory      from './ui_factory'\r\nimport UIRendering    from './ui_rendering'\r\nimport Page           from '../components/page'\r\nimport LayoutSimple   from '../base/layout_simple'\r\nimport DisplayCommand from '../commands/display_command'\r\n\r\n\r\nconst context = 'browser/runtime/ui'\r\n\r\n\r\n\r\n/**\r\n * @file UI interaction class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class UI extends Loggable\r\n{\r\n\t/**\r\n\t * Create a UI instance.\r\n\t * \r\n\t * \tAPI:\r\n\t * \t\t->constructor(arg_runtime, arg_store)\r\n\t * \r\n\t * \t\t->is_loaded():boolean - Test if UI is loaded and is ready to process display commands.\r\n\t * \t\t\r\n\t * \t\t->create_display_command(arg_cmd_settings):DisplayCommand - Create a DisplayCommand instance.\r\n\t * \t\t->pipe_display_command(arg_display_command):nothing - Append a display command to the UI commands pipe.\r\n\t * \r\n\t * \t\t->get_current_layout():Layout - Get current application layout.\r\n\t * \t\t->get_resource_description_resolver():function - Get a resolver function to find UI component description.\r\n\t * \t\t->get_rendering_function_resolver():function - Get a resolver function to find UI rendering function.\r\n\t * \t\t->get_rendering_class_resolver():Class - Get a resolver function to find UI component class.\r\n\t * \t\t\r\n\t * \t\t->load():nothing - Load plugins.\r\n\t * \r\n\t * \t\t->get(arg_name):Component - Get a UI component by its name.\r\n\t * \t\t->create(arg_name):Promise - Create a UI component.\r\n\t * \t\t->create_local(arg_name, arg_component_desc):Component - Create a UI component.\r\n\t * \t\t\r\n\t * \t\t->register_rendering_plugin(arg_plugin_class):nothing - Register a browser rendering plugin.\r\n\t * \t\t->request_middleware(arg_middleware, arg_svc_route):Promise - Request server about middleware rendering.\r\n\t * \r\n\t * @param {object} arg_runtime - client runtime.\r\n\t * @param {object} arg_store - UI components state store.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_store)\r\n\t{\r\n\t\tsuper(context, arg_runtime.get_logger_manager())\r\n\r\n\t\tthis.is_ui = true\r\n\r\n\t\tthis._runtime = arg_runtime\r\n\t\tthis.store = arg_store\r\n\r\n\t\tthis.classes = {}\r\n\t\tthis.classes.RenderingPlugin = RenderingPlugin\r\n\t\tthis.classes.DefaultRenderingPlugin = DefaultRenderingPlugin\r\n\t\t\r\n\t\tthis._ui_factory = new UIFactory(arg_runtime, arg_store)\r\n\t\tthis._ui_rendering = new UIRendering(arg_runtime, this)\r\n\t\tthis._ui_builder = new RenderingBuilder(arg_runtime, this._ui_rendering._assets_urls_templates, undefined)\r\n\t\t// this._ui_layout = undefined\r\n\t\tthis._ui_layout = new LayoutSimple(this._runtime, {name:'main layout', type:'simple'})\r\n\t\tthis._ui_layout._ui = this\r\n\r\n\t\tthis._rendering_plugins = []\r\n\t\tthis._rendering_plugins_counter = 0\r\n\t\tthis._rendering_plugins_map = {}\r\n\t\tthis._ordered_used_plugins_name = []\r\n\r\n\t\tthis.page = {\r\n\t\t\tmenubar:undefined,\r\n\t\t\theader:undefined,\r\n\t\t\tbreadcrumbs:undefined,\r\n\t\t\tcontent:undefined,\r\n\t\t\tfooter:undefined\r\n\t\t}\r\n\r\n\t\tthis.body_page = new Page()\r\n\r\n\t\tthis._display_command_waiting = []\r\n\t\tthis._display_command_timer = undefined\r\n\t\tthis._display_commands_pipe = new Stream()\r\n\t\tthis._display_commands_pipe.subscribe(\r\n\t\t\t(cmd)=>{\r\n\t\t\t\tconsole.log(context + ':pipe_display_command.subscribe:do', cmd.get_name(), cmd)\r\n\t\t\t\tcmd.do()\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\t// this.enable_trace()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Test if UI is loaded and is ready to process display commands.\r\n\t * \r\n\t * @returns {boolean} - true:UI is ready to process display commands,false:UI isn't ready.\r\n\t */\r\n\tis_loaded()\r\n\t{\r\n\t\treturn this._rendering_plugins_counter > 0 && this._rendering_plugins_counter == this._rendering_plugins.length\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Create a DisplayCommand instance.\r\n\t * \r\n\t * @param {object} arg_cmd_settings - command settings.\r\n\t * \r\n\t * @returns {DisplayCommand}\r\n\t */\r\n\tcreate_display_command(arg_cmd_settings)\r\n\t{\r\n\t\treturn new DisplayCommand(this._runtime, arg_cmd_settings)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Append a display command to the UI commands pipe.\r\n\t * If UI isn't ready to process display command, delay append.\r\n\t * Commands are pushed into a stream.\r\n\t * \r\n\t * @param {DisplayCommand} arg_display_command - display command to pipe.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tpipe_display_command(arg_display_command)\r\n\t{\r\n\t\tif ( ! (T.isObject(arg_display_command) && arg_display_command.is_display_command) )\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':pipe_display_command:bad display command', arg_display_command)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif ( ! this.is_loaded() )\r\n\t\t{\r\n\t\t\tconsole.log(context + ':pipe_display_command:UI is not loaded')\r\n\r\n\t\t\tthis._display_command_waiting.push(arg_display_command)\r\n\r\n\t\t\tif (! this._display_command_timer)\r\n\t\t\t{\r\n\t\t\t\tconsole.log(context + ':pipe_display_command:create a timer')\r\n\r\n\t\t\t\tconst max_loops = 100\r\n\t\t\t\tlet loop_counter = 0\r\n\t\t\t\tconst finished_cb = ()=>{\r\n\t\t\t\t\t++loop_counter\r\n\t\t\t\t\tif (loop_counter > max_loops)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconsole.log(context + ':pipe_display_command:UI is not loaded, delay of 50ms, max loops is reached=', max_loops)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (! this.is_loaded())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconsole.log(context + ':pipe_display_command:UI is not loaded, delay of 50ms')\r\n\r\n\t\t\t\t\t\tthis._display_command_timer = setTimeout(finished_cb, 50)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconsole.log(context + ':pipe_display_command:UI is loaded')\r\n\t\t\t\t\tthis._display_command_timer = undefined\r\n\t\t\t\t\tlet cmd = this._display_command_waiting.shift()\r\n\t\t\t\t\twhile(cmd)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconsole.log(context + ':pipe_display_command:shift cmd=', cmd.get_name(), cmd)\r\n\t\t\t\t\t\tthis._display_commands_pipe.push(cmd)\r\n\t\t\t\t\t\tcmd = this._display_command_waiting.shift()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._display_command_timer = setTimeout(finished_cb, 50)\r\n\t\t\t}\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconsole.log(context + ':pipe_display_command:UI is already loaded', arg_display_command.get_name(), arg_display_command)\r\n\t\tthis._display_commands_pipe.push(arg_display_command)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get current application layout.\r\n\t * \r\n\t * @returns {Layout}\r\n\t */\r\n\tget_current_layout()\r\n\t{\r\n\t\treturn this._ui_layout\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Get a resolver function to find UI component description.\r\n\t * \r\n\t * @returns {function} - (string)=>Immutable.Map|undefined.\r\n\t */\r\n\tget_resource_description_resolver()\r\n\t{\r\n\t\treturn (arg_name, arg_collection=undefined)=>{\r\n\t\t\tif ( T.isString(arg_collection) )\r\n\t\t\t{\r\n\t\t\t\tconst result = this._ui_factory.find_component_desc(this.store.get_state(), arg_name, [arg_collection])\r\n\t\t\t\t// console.log('get_resource_description_resolver:name=%s,collection=%s', arg_name, arg_collection, result)\r\n\t\t\t\treturn result.toJS()\r\n\t\t\t}\r\n\r\n\t\t\tconst collections = ['views', 'menubars']\r\n\t\t\tlet index = 0\r\n\t\t\twhile(collections.length > index)\r\n\t\t\t{\r\n\t\t\t\tconst result = this._ui_factory.find_component_desc(this.store.get_state(), arg_name, [collections[index]])\r\n\t\t\t\tif (result)\r\n\t\t\t\t{\r\n\t\t\t\t\t// console.log('get_resource_description_resolver:name=%s,collection=%s', arg_name, collections[index], result)\r\n\t\t\t\t\treturn result.toJS()\r\n\t\t\t\t}\r\n\t\t\t\tindex++\r\n\t\t\t}\r\n\t\t\treturn undefined\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Get a resolver function to find UI rendering function.\r\n\t * \r\n\t * @returns {function} - (string)=>function.\r\n\t */\r\n\tget_rendering_function_resolver()\r\n\t{\r\n\t\treturn (arg_type)=>{\r\n\t\t\t// console.log(context + ':get_rendering_function_resolver():type=' + arg_type, this._ordered_used_plugins_name, this._rendering_plugins_map)\r\n\r\n\t\t\tlet not_found = true\r\n\t\t\tlet index = 0\r\n\t\t\tlet plugin = undefined\r\n\t\t\tlet f = undefined\r\n\t\t\twhile(this._ordered_used_plugins_name.length > index && not_found)\r\n\t\t\t{\r\n\t\t\t\tconst plugin_name = this._ordered_used_plugins_name[index]\r\n\t\t\t\tif (plugin_name in this._rendering_plugins_map)\r\n\t\t\t\t{\r\n\t\t\t\t\tplugin = this._rendering_plugins_map[plugin_name]\r\n\t\t\t\t\t\r\n\t\t\t\t\tf = plugin.find_rendering_function(arg_type)\r\n\t\t\t\t\tif ( T.isFunction(f) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnot_found = false\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// console.log(context + ':get_rendering_function_resolver():type=' + arg_type + ' iterate on plugin=%s, found=%b, function=', plugin.get_name(), not_found, f)\r\n\t\t\t\t}\r\n\t\t\t\tindex++\r\n\t\t\t}\r\n\r\n\t\t\tif (! f)\r\n\t\t\t{\r\n\t\t\t\tconsole.warn(context + ':get_rendering_function_resolver:resolver:type not found for [%s] in plugins [%s]', arg_type, this._ordered_used_plugins_name.toString())\r\n\t\t\t}\r\n\r\n\t\t\treturn f\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Get a resolver function to find UI component class.\r\n\t * \r\n\t * @returns {Class} - (string)=>Class.\r\n\t */\r\n\tget_rendering_class_resolver()\r\n\t{\r\n\t\treturn (arg_type)=>{\r\n\t\t\t// console.log(context + ':get_rendering_class_resolver():type=' + arg_type, this._ordered_used_plugins_name, this._rendering_plugins_map)\r\n\t\t\t\r\n\t\t\tlet not_found = true\r\n\t\t\tlet index = 0\r\n\t\t\tlet plugin = undefined\r\n\t\t\tlet c = undefined\r\n\t\t\twhile(this._ordered_used_plugins_name.length > index && not_found)\r\n\t\t\t{\r\n\t\t\t\tconst plugin_name = this._ordered_used_plugins_name[index]\r\n\t\t\t\tif (plugin_name in this._rendering_plugins_map)\r\n\t\t\t\t{\r\n\t\t\t\t\tplugin = this._rendering_plugins_map[plugin_name]\r\n\r\n\t\t\t\t\tc = plugin.get_feature_class(arg_type)\r\n\t\t\t\t\tif ( T.isFunction(c) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnot_found = false\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// console.log(context + ':get_rendering_class_resolver():type=' + arg_type + ' iterate on plugin=%s, found=%b, class=', plugin.get_name(), not_found, c)\r\n\t\t\t\t}\r\n\t\t\t\tindex++\r\n\t\t\t}\r\n\t\t\treturn c\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Load plugins.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tload()\r\n\t{\r\n\t\t// this._ui_layout = new LayoutSimple(this._runtime, {name:'main layout', type:'simple'})\r\n\r\n\t\t// LOAD PLUGINS CLASSES\r\n\t\t// console.log('LOAD PLUGINS CLASSES:name=DefaultRenderingPlugin')\r\n\t\tthis.register_rendering_plugin(DefaultRenderingPlugin)\r\n\t\tthis._rendering_plugins_counter += 1\r\n\r\n\t\tconst plugins_urls = this.store.get_state().get('plugins_urls', fromJS({})).toJS()\r\n\t\tconst ordered_plugins = this.store.get_state().get('used_plugins', fromJS([])).toJS()\r\n\t\tthis._ordered_used_plugins_name = ordered_plugins\r\n\r\n\t\t_.forEach(ordered_plugins,\r\n\t\t\t(plugin_name)=>{\r\n\t\t\t\tif (plugin_name in plugins_urls)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis._rendering_plugins_counter += 1\r\n\r\n\t\t\t\t\tconst url = plugins_urls[plugin_name]\r\n\t\t\t\t\tconst url_src = this._ui_rendering.get_asset_url('plugins/' + url, 'script', this._runtime.get_session_credentials())\r\n\t\t\t\t\t\r\n\t\t\t\t\t// console.log('LOAD PLUGINS CLASSES:name=%s,url=%s', plugin_name, url_src)\r\n\r\n\t\t\t\t\tthis._ui_rendering.create_dom_url_element(document.body, 'script', 'js-' + plugin_name, url_src, 'text/javascript')\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get a UI component by its name.\r\n\t * \r\n\t * @param {string} arg_name - component name.\r\n\t * \r\n\t * @returns {Component}\r\n\t */\r\n\tget(arg_name)\r\n\t{\r\n\t\treturn this._ui_factory.get(arg_name)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Test a UI component by its name.\r\n\t * \r\n\t * @param {string} arg_name - component name.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\thas(arg_name)\r\n\t{\r\n\t\treturn this._ui_factory.has(arg_name)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a UI component.\r\n\t * \r\n\t * @param {string} arg_name - component name.\r\n\t * \r\n\t * @returns {Promise} - Promise of a Component instance.\r\n\t */\r\n\tcreate(arg_name)\r\n\t{\r\n\t\tconst component_promise = this._ui_factory.create(arg_name)\r\n\t\treturn component_promise\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a UI component.\r\n\t * \r\n\t * @param {string} arg_name - component name.\r\n\t * @param {object} arg_component_desc - component description.\r\n\t * \r\n\t * @returns {Component} - Component instance.\r\n\t */\r\n\tcreate_local(arg_name, arg_component_desc)\r\n\t{\r\n\t\tconst component = this._ui_factory.create_local(arg_name, arg_component_desc)\r\n\t\treturn component\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Register a browser rendering plugin.\r\n\t * \r\n\t * @param{RenderingPlugin} arg_plugin - rendering plugin.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tregister_rendering_plugin(arg_plugin_class)\r\n\t{\r\n\t\tif ( ! arg_plugin_class)\r\n\t\t{\r\n\t\t\tconsole.warn(context + ':register_rendering_browser:bad plugin class', arg_plugin_class)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst manager= {\r\n\t\t\tis_plugins_manager:true\r\n\t\t}\r\n\t\tconst plugin = new arg_plugin_class(this._runtime, manager)\r\n\t\tplugin.find_rendering_function = (type)=>{\r\n\t\t\tconst f =  arg_plugin_class.find_rendering_function(type)\r\n\t\t\treturn f\r\n\t\t}\r\n\r\n\t\tconsole.log(context + ':register_rendering_browser:plugin=' + plugin.get_name())\r\n\t\t\r\n\t\tthis._rendering_plugins.push(plugin)\r\n\t\tthis._rendering_plugins_map[plugin.get_name()] = plugin\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Request server about middleware rendering.\r\n\t * \r\n\t * @param {string} arg_middleware - middleware name.\r\n\t * @param {string} arg_svc_route  - requested route.\r\n\t * \r\n\t * @returns {Promise} - Promise of a RenderingResult instance.\r\n\t */\r\n\trequest_middleware(arg_middleware, arg_svc_route)\r\n\t{\r\n\t\tthis.enter_group('request_middleware:middleware=' + arg_middleware + ' route=' + arg_svc_route)\r\n\r\n\t\tconst promise = this._runtime.register_service(arg_middleware)\r\n\t\t.then(\r\n\t\t\t(service)=>{\r\n\t\t\t\t// console.log(context + ':render_with_middleware:get rendering for ' + arg_cmd.url)\r\n\t\t\t\treturn service.get( { route:arg_svc_route } )\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t(reason)=>{\r\n\t\t\t\tconsole.error(context + ':render_with_middleware:error 0', reason)\r\n\t\t\t}\r\n\t\t)\r\n\t\t.then(\r\n\t\t\t(stream)=>{\r\n\t\t\t\t// console.log(context + ':render_with_middleware:get listen stream for ' + arg_cmd.url)\r\n\t\t\t\treturn new Promise(\r\n\t\t\t\t\tfunction(resolve, reject)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstream.subscribe(\r\n\t\t\t\t\t\t\t(response)=>{\r\n\t\t\t\t\t\t\t\tresolve(response.datas)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\tstream.on_error(\r\n\t\t\t\t\t\t\t(reason)=>{\r\n\t\t\t\t\t\t\t\treject(reason)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t},\r\n\r\n\t\t\t(reason)=>{\r\n\t\t\t\tconsole.error(context + ':render_with_middleware:error 1 for ' + arg_svc_route, reason)\r\n\t\t\t}\r\n\t\t)\r\n\t\t.catch(\r\n\t\t\t(reason)=>{\r\n\t\t\t\tconsole.error(context + ':render_with_middleware:error for ' + arg_svc_route, reason)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tthis.leave_group('request_middleware:async')\r\n\t\treturn promise\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/runtime/ui.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 776,
    "kind": "variable",
    "name": "context",
    "memberof": "js/runtime/ui.js",
    "static": true,
    "longname": "js/runtime/ui.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/runtime/ui.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 777,
    "kind": "class",
    "name": "UI",
    "memberof": "js/runtime/ui.js",
    "static": true,
    "longname": "js/runtime/ui.js~UI",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/runtime/ui.js",
    "importStyle": "UI",
    "description": "",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "UI interaction class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "../node_modules/devapt-core-common/dist/js/base/loggable.js~Loggable"
    ]
  },
  {
    "__docId__": 778,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/runtime/ui.js~UI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui.js~UI#constructor",
    "access": "public",
    "description": "Create a UI instance.\n\n\tAPI:\n\t\t->constructor(arg_runtime, arg_store)\n\n\t\t->is_loaded():boolean - Test if UI is loaded and is ready to process display commands.\n\t\t\n\t\t->create_display_command(arg_cmd_settings):DisplayCommand - Create a DisplayCommand instance.\n\t\t->pipe_display_command(arg_display_command):nothing - Append a display command to the UI commands pipe.\n\n\t\t->get_current_layout():Layout - Get current application layout.\n\t\t->get_resource_description_resolver():function - Get a resolver function to find UI component description.\n\t\t->get_rendering_function_resolver():function - Get a resolver function to find UI rendering function.\n\t\t->get_rendering_class_resolver():Class - Get a resolver function to find UI component class.\n\t\t\n\t\t->load():nothing - Load plugins.\n\n\t\t->get(arg_name):Component - Get a UI component by its name.\n\t\t->create(arg_name):Promise - Create a UI component.\n\t\t->create_local(arg_name, arg_component_desc):Component - Create a UI component.\n\t\t\n\t\t->register_rendering_plugin(arg_plugin_class):nothing - Register a browser rendering plugin.\n\t\t->request_middleware(arg_middleware, arg_svc_route):Promise - Request server about middleware rendering.",
    "lineNumber": 63,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_store",
        "description": "UI components state store."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 779,
    "kind": "member",
    "name": "is_ui",
    "memberof": "js/runtime/ui.js~UI",
    "static": false,
    "longname": "js/runtime/ui.js~UI#is_ui",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 780,
    "kind": "member",
    "name": "_runtime",
    "memberof": "js/runtime/ui.js~UI",
    "static": false,
    "longname": "js/runtime/ui.js~UI#_runtime",
    "access": "private",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 781,
    "kind": "member",
    "name": "store",
    "memberof": "js/runtime/ui.js~UI",
    "static": false,
    "longname": "js/runtime/ui.js~UI#store",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 782,
    "kind": "member",
    "name": "classes",
    "memberof": "js/runtime/ui.js~UI",
    "static": false,
    "longname": "js/runtime/ui.js~UI#classes",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 783,
    "kind": "member",
    "name": "_ui_factory",
    "memberof": "js/runtime/ui.js~UI",
    "static": false,
    "longname": "js/runtime/ui.js~UI#_ui_factory",
    "access": "private",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 784,
    "kind": "member",
    "name": "_ui_rendering",
    "memberof": "js/runtime/ui.js~UI",
    "static": false,
    "longname": "js/runtime/ui.js~UI#_ui_rendering",
    "access": "private",
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 785,
    "kind": "member",
    "name": "_ui_builder",
    "memberof": "js/runtime/ui.js~UI",
    "static": false,
    "longname": "js/runtime/ui.js~UI#_ui_builder",
    "access": "private",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 786,
    "kind": "member",
    "name": "_ui_layout",
    "memberof": "js/runtime/ui.js~UI",
    "static": false,
    "longname": "js/runtime/ui.js~UI#_ui_layout",
    "access": "private",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 787,
    "kind": "member",
    "name": "_rendering_plugins",
    "memberof": "js/runtime/ui.js~UI",
    "static": false,
    "longname": "js/runtime/ui.js~UI#_rendering_plugins",
    "access": "private",
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 788,
    "kind": "member",
    "name": "_rendering_plugins_counter",
    "memberof": "js/runtime/ui.js~UI",
    "static": false,
    "longname": "js/runtime/ui.js~UI#_rendering_plugins_counter",
    "access": "private",
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 789,
    "kind": "member",
    "name": "_rendering_plugins_map",
    "memberof": "js/runtime/ui.js~UI",
    "static": false,
    "longname": "js/runtime/ui.js~UI#_rendering_plugins_map",
    "access": "private",
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 790,
    "kind": "member",
    "name": "_ordered_used_plugins_name",
    "memberof": "js/runtime/ui.js~UI",
    "static": false,
    "longname": "js/runtime/ui.js~UI#_ordered_used_plugins_name",
    "access": "private",
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 791,
    "kind": "member",
    "name": "page",
    "memberof": "js/runtime/ui.js~UI",
    "static": false,
    "longname": "js/runtime/ui.js~UI#page",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "type": {
      "types": [
        "{\"menubar\": *, \"header\": *, \"breadcrumbs\": *, \"content\": *, \"footer\": *}"
      ]
    }
  },
  {
    "__docId__": 792,
    "kind": "member",
    "name": "body_page",
    "memberof": "js/runtime/ui.js~UI",
    "static": false,
    "longname": "js/runtime/ui.js~UI#body_page",
    "access": "public",
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 793,
    "kind": "member",
    "name": "_display_command_waiting",
    "memberof": "js/runtime/ui.js~UI",
    "static": false,
    "longname": "js/runtime/ui.js~UI#_display_command_waiting",
    "access": "private",
    "description": null,
    "lineNumber": 98,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 794,
    "kind": "member",
    "name": "_display_command_timer",
    "memberof": "js/runtime/ui.js~UI",
    "static": false,
    "longname": "js/runtime/ui.js~UI#_display_command_timer",
    "access": "private",
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 795,
    "kind": "member",
    "name": "_display_commands_pipe",
    "memberof": "js/runtime/ui.js~UI",
    "static": false,
    "longname": "js/runtime/ui.js~UI#_display_commands_pipe",
    "access": "private",
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 796,
    "kind": "method",
    "name": "is_loaded",
    "memberof": "js/runtime/ui.js~UI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui.js~UI#is_loaded",
    "access": "public",
    "description": "Test if UI is loaded and is ready to process display commands.",
    "lineNumber": 118,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - true:UI is ready to process display commands,false:UI isn't ready."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true:UI is ready to process display commands,false:UI isn't ready."
    },
    "params": []
  },
  {
    "__docId__": 797,
    "kind": "method",
    "name": "create_display_command",
    "memberof": "js/runtime/ui.js~UI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui.js~UI#create_display_command",
    "access": "public",
    "description": "Create a DisplayCommand instance.",
    "lineNumber": 131,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DisplayCommand}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_cmd_settings",
        "description": "command settings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DisplayCommand"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 798,
    "kind": "method",
    "name": "pipe_display_command",
    "memberof": "js/runtime/ui.js~UI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui.js~UI#pipe_display_command",
    "access": "public",
    "description": "Append a display command to the UI commands pipe.\nIf UI isn't ready to process display command, delay append.\nCommands are pushed into a stream.",
    "lineNumber": 147,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DisplayCommand"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_display_command",
        "description": "display command to pipe."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 802,
    "kind": "method",
    "name": "get_current_layout",
    "memberof": "js/runtime/ui.js~UI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui.js~UI#get_current_layout",
    "access": "public",
    "description": "Get current application layout.",
    "lineNumber": 210,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Layout}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Layout"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 803,
    "kind": "method",
    "name": "get_resource_description_resolver",
    "memberof": "js/runtime/ui.js~UI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui.js~UI#get_resource_description_resolver",
    "access": "public",
    "description": "Get a resolver function to find UI component description.",
    "lineNumber": 222,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} - (string)=>Immutable.Map|undefined."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "(string)=>Immutable.Map|undefined."
    },
    "params": []
  },
  {
    "__docId__": 804,
    "kind": "method",
    "name": "get_rendering_function_resolver",
    "memberof": "js/runtime/ui.js~UI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui.js~UI#get_rendering_function_resolver",
    "access": "public",
    "description": "Get a resolver function to find UI rendering function.",
    "lineNumber": 255,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} - (string)=>function."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "(string)=>function."
    },
    "params": []
  },
  {
    "__docId__": 805,
    "kind": "method",
    "name": "get_rendering_class_resolver",
    "memberof": "js/runtime/ui.js~UI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui.js~UI#get_rendering_class_resolver",
    "access": "public",
    "description": "Get a resolver function to find UI component class.",
    "lineNumber": 298,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Class} - (string)=>Class."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Class"
      ],
      "spread": false,
      "description": "(string)=>Class."
    },
    "params": []
  },
  {
    "__docId__": 806,
    "kind": "method",
    "name": "load",
    "memberof": "js/runtime/ui.js~UI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui.js~UI#load",
    "access": "public",
    "description": "Load plugins.",
    "lineNumber": 334,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 810,
    "kind": "method",
    "name": "get",
    "memberof": "js/runtime/ui.js~UI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui.js~UI#get",
    "access": "public",
    "description": "Get a UI component by its name.",
    "lineNumber": 373,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Component}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "component name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Component"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 811,
    "kind": "method",
    "name": "has",
    "memberof": "js/runtime/ui.js~UI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui.js~UI#has",
    "access": "public",
    "description": "Test a UI component by its name.",
    "lineNumber": 387,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "component name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 812,
    "kind": "method",
    "name": "create",
    "memberof": "js/runtime/ui.js~UI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui.js~UI#create",
    "access": "public",
    "description": "Create a UI component.",
    "lineNumber": 401,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of a Component instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "component name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of a Component instance."
    }
  },
  {
    "__docId__": 813,
    "kind": "method",
    "name": "create_local",
    "memberof": "js/runtime/ui.js~UI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui.js~UI#create_local",
    "access": "public",
    "description": "Create a UI component.",
    "lineNumber": 417,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Component} - Component instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "component name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_component_desc",
        "description": "component description."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Component"
      ],
      "spread": false,
      "description": "Component instance."
    }
  },
  {
    "__docId__": 814,
    "kind": "method",
    "name": "register_rendering_plugin",
    "memberof": "js/runtime/ui.js~UI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui.js~UI#register_rendering_plugin",
    "access": "public",
    "description": "Register a browser rendering plugin.\n\n@param{RenderingPlugin} arg_plugin - rendering plugin.",
    "lineNumber": 432,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "arg_plugin_class",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 815,
    "kind": "method",
    "name": "request_middleware",
    "memberof": "js/runtime/ui.js~UI",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui.js~UI#request_middleware",
    "access": "public",
    "description": "Request server about middleware rendering.",
    "lineNumber": 465,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise of a RenderingResult instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_middleware",
        "description": "middleware name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_route",
        "description": "requested route."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise of a RenderingResult instance."
    }
  },
  {
    "__docId__": 816,
    "kind": "file",
    "name": "js/runtime/ui_factory.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n// import _ from 'lodash'\r\nimport { fromJS } from 'immutable'\r\n\r\n// COMMON IMPORTS\r\nimport T        from '../../../node_modules/devapt-core-common/dist/js/utils/types'\r\nimport Loggable from '../../../node_modules/devapt-core-common/dist/js/base/loggable'\r\n\r\n// BROWSER IMPORTS\r\nimport Component       from '../base/component'\r\nimport Container       from '../base/container'\r\nimport Table           from '../components/table'\r\nimport LogsTable       from '../components/logs_table'\r\nimport AttributesTable from '../components/attributes_table'\r\nimport Dock            from '../components/dock'\r\nimport DockItem        from '../components/dock_item'\r\nimport Tabs            from '../components/tabs'\r\nimport Tree            from '../components/tree'\r\nimport TableTree       from '../components/table_tree'\r\nimport Topology        from '../components/topology'\r\nimport RecordsTable    from '../components/records_table'\r\nimport InputField      from '../components/input-field'\r\n\r\n\r\n\r\nconst context = 'browser/runtime/ui_factory'\r\nconst DEBUG_TRACE_FIND_STATE=false\r\n\r\n\r\n\r\n/**\r\n * @file UI factory class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class UIFactory extends Loggable\r\n{\r\n\t/**\r\n\t * Create a UI factory instance.\r\n\t * \r\n\t * \tAPI:\r\n\t * \t\t->constructor(arg_runtime, arg_store)\r\n\t * \t\t->get(arg_name):Component - Get a UI component by its name.\r\n\t * \t\t->create(arg_name):Component - Create a UI component.\r\n\t * \t\t->find_component_desc(arg_state, arg_name, arg_state_path = []):Immutable.Map|undefined - Find a UI component state.\r\n\t * \r\n\t * @param {object} arg_runtime - client runtime.\r\n\t * @param {object} arg_store - UI components state store.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_store)\r\n\t{\r\n\t\tsuper(context, arg_runtime.get_logger_manager())\r\n\r\n\t\tthis.is_ui_factory = true\r\n\r\n\t\tthis._runtime = arg_runtime\r\n\t\tthis._store = arg_store\r\n\t\tthis._cache = {}\r\n\t\tthis._state_by_path = {}\r\n\t\t\r\n\t\t// this.update_trace_enabled()\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Get a UI component by its name.\r\n\t * \r\n\t * @param {string} arg_name - component name.\r\n\t * \r\n\t * @returns {Component}\r\n\t */\r\n\tget(arg_name)\r\n\t{\r\n\t\tif (arg_name in this._cache)\r\n\t\t{\r\n\t\t\treturn this._cache[arg_name]\r\n\t\t}\r\n\t\t\r\n\t\treturn this.create_local(arg_name)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Test a UI component by its name.\r\n\t * \r\n\t * @param {string} arg_name - component name.\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\thas(arg_name)\r\n\t{\r\n\t\treturn (arg_name in this._cache)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a UI component with local cache and state.\r\n\t * \r\n\t * @param {string} arg_component_name - component name.\r\n\t * @param {object} arg_component_desc - component description (optional, default:undefined).\r\n\t * \r\n\t * @returns {Component} - Component instance\r\n\t */\r\n\tcreate_local(arg_component_name, arg_component_desc=undefined)\r\n\t{\r\n\t\tthis.enter_group('create_local:component name=' + arg_component_name)\r\n\r\n\t\tlet state_path = undefined\r\n\t\tlet component_desc = arg_component_desc ? ( arg_component_desc.toJS ? arg_component_desc : fromJS(arg_component_desc) ) : undefined\r\n\r\n\t\t// SEARCH DESCRIPTION INTO CACHE\r\n\t\tif (! component_desc)\r\n\t\t{\r\n\t\t\t// GET APPLICATION STATE AND INIT APPLICATION STATE PATH\r\n\t\t\tconst current_app_state = this._store.get_state()\r\n\t\t\tstate_path = ['views']\r\n\t\t\tthis.debug('create_local:search in views for ' + arg_component_name)\r\n\t\t\t\r\n\t\t\tcomponent_desc = this.find_component_desc(current_app_state, arg_component_name, state_path)\r\n\t\t\tif (! component_desc)\r\n\t\t\t{\r\n\t\t\t\tthis.debug('create_local:search in menubars for ' + arg_component_name)\r\n\t\t\t\tstate_path = ['menubars']\r\n\t\t\t\tcomponent_desc = this.find_component_desc(current_app_state, arg_component_name, state_path)\r\n\r\n\t\t\t\tif (! component_desc)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.debug('create_local:state not found in views/menubars for ' + arg_component_name)\r\n\t\t\t\t\tthis.debug('create_local:state_path', state_path)\r\n\r\n\t\t\t\t\tthis.leave_group('create_local:component description not found name=' + arg_component_name)\r\n\t\t\t\t\treturn undefined\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst component = this.create_instance(arg_component_name, component_desc, state_path)\r\n\r\n\t\tthis.leave_group('create_local:component created for name=' + arg_component_name)\r\n\t\treturn component\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a UI component.\r\n\t * \r\n\t * @param {string} arg_component_name - component name.\r\n\t * @param {object} arg_component_desc - component description.\r\n\t * @param {array}  arg_state_path     - component state path.\r\n\t * \r\n\t * @returns {Component|undefined} - Component instance\r\n\t */\r\n\tcreate_instance(arg_component_name, arg_component_desc, arg_state_path)\r\n\t{\r\n\t\tthis.enter_group('create_instance:component name=' + arg_component_name)\r\n\r\n\t\tconst mix = this.create_instance_mix(arg_component_name, arg_component_desc, arg_state_path)\r\n\r\n\t\tthis.leave_group('create_instance:component created for name=' + arg_component_name)\r\n\t\treturn mix.component\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a UI component.\r\n\t * \r\n\t * @param {string} arg_component_name - component name.\r\n\t * @param {object} arg_component_desc - component description.\r\n\t * @param {array}  arg_state_path     - component state path.\r\n\t * \r\n\t * @returns {Promise} - Component instance\r\n\t */\r\n\tcreate_instance_promise(arg_component_name, arg_component_desc, arg_state_path)\r\n\t{\r\n\t\tthis.enter_group('create_instance_promise:component name=' + arg_component_name)\r\n\r\n\t\tconst mix = this.create_instance_mix(arg_component_name, arg_component_desc, arg_state_path)\r\n\r\n\t\tthis.leave_group('create_instance_promise:component created for name=' + arg_component_name)\r\n\t\treturn mix.promise\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Create a UI component.\r\n\t * \r\n\t * @param {string} arg_component_name - component name.\r\n\t * @param {object} arg_component_desc - component description.\r\n\t * @param {array}  arg_state_path     - component state path.\r\n\t * \r\n\t * @returns {object} - { component:Component, promise:Promise}\r\n\t */\r\n\tcreate_instance_mix(arg_component_name, arg_component_desc, arg_state_path)\r\n\t{\r\n\t\tthis.enter_group('create_instance_mix:component name=' + arg_component_name)\r\n\r\n\t\t// REGISTER COMPONENT APPLICATION STATE PATH\r\n\t\tconst state_path = arg_state_path ? arg_state_path : ( arg_component_desc.get('type') == 'menubar' ? ['menubars', arg_component_name] : ['views', arg_component_name] )\r\n\t\tthis._state_by_path[arg_component_name] = state_path\r\n\t\tthis._state_by_path[arg_component_name].push('state')\r\n\r\n\t\t// GET COMPONENT TYPE\r\n\t\tconst type = arg_component_desc.has('browser_type') ? arg_component_desc.get('browser_type') : arg_component_desc.get('type')\r\n\t\tassert( T.isString(type), context + ':create:bad component desctription type string for ' + arg_component_name)\r\n\t\t\r\n\t\t// GET COMPONENT STATE\r\n\t\tlet comp_state = arg_component_desc.get('state')\r\n\t\tcomp_state = comp_state.set('name', arg_component_name)\r\n\t\tcomp_state = comp_state.set('type', type)\r\n\t\tcomp_state = comp_state.set('state_path', fromJS(state_path) )\r\n\t\t// console.log('ui:create:path,state:', state_path, comp_state)\r\n\t\t\r\n\t\t// CREATE COMPONENT INSTANCE\r\n\t\tlet component_class = this._runtime.ui().get_rendering_class_resolver()(type)\r\n\t\tif (!component_class)\r\n\t\t{\r\n\t\t\tcomponent_class = this.get_component_class(type)\r\n\t\t}\r\n\t\tif ( ! component_class)\r\n\t\t{\r\n\t\t\tconst msg = 'create:error:bad found component class for ' + arg_component_name + ' type=' + type\r\n\t\t\tthis.error(msg)\r\n\t\t\tthis.leave_group(msg)\r\n\t\t\treturn { component:undefined, promise:Promise.reject(context + msg) }\r\n\t\t}\r\n\r\n\t\t// CREATE COMPONENT\r\n\t\tconst component = new component_class(this._runtime, comp_state)\r\n\t\tthis._cache[arg_component_name] = component\r\n\r\n\t\t// LOAD COMPONENT AND INIT BINDINGS\r\n\t\tlet promise = component.render()\r\n\t\t.then(\r\n\t\t\t()=>{\r\n\t\t\t\treturn component.load()\r\n\t\t\t},\r\n\t\t\t(reason)=>{\r\n\t\t\t\tthis.error(reason)\r\n\t\t\t}\r\n\t\t)\r\n\t\t.then(\r\n\t\t\t()=>{\r\n\t\t\t\tcomponent.init_bindings()\r\n\t\t\t},\r\n\r\n\t\t\t(reason)=>{\r\n\t\t\t\tthis.error(reason)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tthis.leave_group('create_instance_mix:component created for name=' + arg_component_name)\r\n\t\treturn { component:component, promise:promise }\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a UI component.\r\n\t * \r\n\t * @param {string} arg_component_name - component name.\r\n\t * \r\n\t * @returns {Promise} - promise of Component instance\r\n\t */\r\n\tcreate(arg_component_name, arg_component_desc=undefined)\r\n\t{\r\n\t\tthis.enter_group('create:component name=' + arg_component_name)\r\n\r\n\t\t// SEARCH DESCRIPTION INTO CACHE\r\n\t\tconst component = this.create_local(arg_component_name, arg_component_desc)\r\n\t\tif (component)\r\n\t\t{\r\n\t\t\tthis.leave_group('create:async:found:component name=' + arg_component_name)\r\n\t\t\treturn Promise.resolve(component)\r\n\t\t}\r\n\r\n\r\n\t\tlet component_desc_promise = arg_component_desc ? Promise.resolve(arg_component_desc) : undefined\r\n\r\n\t\t// REQUEST DESCRIPTION FROM SERVER\r\n\t\tif (! component_desc_promise)\r\n\t\t{\r\n\t\t\tcomponent_desc_promise = this.request_component_desc(arg_component_name)\r\n\t\t}\r\n\r\n\t\t// DESCRIPTION PROMISE NOT FOUND\r\n\t\tif (! component_desc_promise)\r\n\t\t{\r\n\t\t\tthis.leave_group('create:error:bad promise for component name=' + arg_component_name)\r\n\t\t\treturn Promise.reject(context + ':create:bad promise')\r\n\t\t}\r\n\r\n\t\tconst component_promise = component_desc_promise.then(\r\n\t\t\t(component_desc)=>{\r\n\t\t\t\tthis.debug('create:found:component description for ' + arg_component_name)\r\n\r\n\t\t\t\t// CHECK COMPONENT DESCRIPTION\r\n\t\t\t\tif ( ! (T.isObject(component_desc) && component_desc.has && component_desc.get) )\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.error('create:found:bad Immutable component description for ' + arg_component_name)\r\n\t\t\t\t\tthis.leave_group('create:error bad description for ' + arg_component_name)\r\n\t\t\t\t\treturn Promise.reject(context + 'create:found:bad Immutable component description for ' + arg_component_name)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst promise = this.create_instance_promise(arg_component_name, component_desc)\r\n\t\t\t\treturn promise\r\n\t\t\t},\r\n\r\n\t\t\t(reason)=>{\r\n\t\t\t\tthis.error('create:error:promise exception for ' + arg_component_name + ' reason=' + reason)\r\n\t\t\t\tthis.leave_group('create:error promise exception for ' + arg_component_name + ' reason=' + reason)\r\n\t\t\t\treturn Promise.reject(context + 'create:error promise exception for ' + arg_component_name + ' reason=' + reason)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tthis.leave_group('create:async:component name=' + arg_component_name)\r\n\t\treturn component_promise\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a UI component.\r\n\t * \r\n\t * @param {string} arg_name - component name.\r\n\t * \r\n\t * @returns {Component}\r\n\t */\r\n\tget_component_class(arg_type)\r\n\t{\r\n\t\tswitch(arg_type.toLocaleLowerCase())\r\n\t\t{\r\n\t\t\tcase 'component':\t\treturn Component\r\n\r\n\t\t\tcase 'container':\t\treturn Container\r\n\t\t\tcase 'dock':\t\t\treturn Dock\r\n\t\t\tcase 'dockitem':\r\n\t\t\tcase 'dock_item':\r\n\t\t\tcase 'dock-item':\t\treturn DockItem\r\n\r\n\t\t\tcase 'input-field':\r\n\t\t\tcase 'inputfield':\t\treturn InputField\r\n\t\t\t\r\n\t\t\tcase 'logstable':       return LogsTable\r\n\t\t\tcase 'attributestable': return AttributesTable\r\n\t\t\tcase 'table':           return Table\r\n\t\t\tcase 'tabs':            return Tabs\r\n\t\t\t\r\n\t\t\tcase 'tabletree':    \treturn TableTree\r\n\t\t\tcase 'topology':     \treturn Topology\r\n\t\t\tcase 'recordstable':\t return RecordsTable\r\n\t\t\tcase 'tree':         \treturn Tree\r\n\r\n\t\t\tcase 'button':\r\n\t\t\tcase 'script':\r\n\t\t\tcase 'menubar':\r\n\t\t\tcase 'hbox':\r\n\t\t\tcase 'vbox':\r\n\t\t\tcase 'list':\r\n\t\t\tcase 'page':\r\n\t\t\tdefault:             return Component\r\n\t\t}\r\n\t\t\r\n\t\t// return undefined\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Find UI component description.\r\n\t * \r\n\t * @param {Immutable.Map} arg_state - registry global state object.\r\n\t * @param {string} arg_name - component name.\r\n\t * @param {array} arg_state_path - state path (optional, default=[])\r\n\t * \r\n\t * @returns {Immutable.Map|undefined} - component state object.\r\n\t */\r\n\tfind_component_desc(arg_state, arg_name, arg_state_path = [])\r\n\t{\r\n\t\tconst js_state = arg_state && arg_state.toJS ? arg_state.toJS() : arg_state\r\n\t\tDEBUG_TRACE_FIND_STATE && this.debug('ui.find_component_desc for ' + arg_name, arg_state_path, js_state)\r\n\t\t\r\n\t\tif (! arg_state)\r\n\t\t{\r\n\t\t\tconsole.error('state is undefined for ' + arg_name)\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\tif (! T.isFunction(arg_state.get) )\r\n\t\t{\r\n\t\t\t// GLOBAL STATE IS NOT AN IMMUTABLE.MAP\r\n\t\t\tconsole.error(context + ':find_component_desc:state is not an Immutable for ' + arg_name, arg_state)\r\n\t\t\tthis.error(context + ':find_component_desc:state is not an Immutable for ' + arg_name, arg_state)\r\n\t\t\treturn undefined\r\n\t\t}\r\n\t\t\r\n\t\t// FOUND ON ROOT\r\n\t\tif ( arg_state.has('name') )\r\n\t\t{\r\n\t\t\tconst name = arg_state.get('name').toString()\r\n\t\t\t// arg_state_path.push(name)\r\n\t\t\tif ( name == arg_name )\r\n\t\t\t{\r\n\t\t\t\tDEBUG_TRACE_FIND_STATE && this.debug('ui.find_component_desc FOUND 1 for ' + arg_name, [])\r\n\t\t\t\treturn arg_state\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// LOOKUP ON VIEWS CHILDREN\r\n\t\tlet children_key = 'children'\r\n\t\tif (arg_state_path.length == 1 && arg_state_path[0] == 'views')\r\n\t\t{\r\n\t\t\tchildren_key = 'views'\r\n\t\t\targ_state_path.pop()\r\n\t\t}\r\n\t\tif (arg_state_path.length == 1 && arg_state_path[0] == 'menubars')\r\n\t\t{\r\n\t\t\tchildren_key = 'menubars'\r\n\t\t\targ_state_path.pop()\r\n\t\t}\r\n\t\tif (arg_state_path.length == 1 && arg_state_path[0] == 'menus')\r\n\t\t{\r\n\t\t\tchildren_key = 'menus'\r\n\t\t\targ_state_path.pop()\r\n\t\t}\r\n\t\tif (arg_state_path.length == 1 && arg_state_path[0] == 'models')\r\n\t\t{\r\n\t\t\tchildren_key = 'models'\r\n\t\t\targ_state_path.pop()\r\n\t\t}\r\n\t\tif ( arg_state.has(children_key) )\r\n\t\t{\r\n\t\t\targ_state_path.push(children_key)\r\n\t\t\t\r\n\t\t\tif ( arg_state.hasIn( [children_key, arg_name] ) )\r\n\t\t\t{\r\n\t\t\t\targ_state_path.push(arg_name)\r\n\t\t\t\tDEBUG_TRACE_FIND_STATE && this.debug('ui.find_component_desc FOUND 2 for ' + arg_name, arg_state_path)\r\n\t\t\t\treturn arg_state.getIn( [children_key, arg_name] )\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet result = undefined\r\n\t\t\targ_state.get(children_key).forEach(\r\n\t\t\t\t(child_state, key) => {\r\n\t\t\t\t\tif (! result)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tDEBUG_TRACE_FIND_STATE && this.debug('ui.find_component_desc loop on child ' + key + ' for ' + arg_name, arg_state_path)\r\n\t\t\t\t\t\tresult = this.find_component_desc(child_state, arg_name, arg_state_path)\r\n\t\t\t\t\t\tif (result)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tDEBUG_TRACE_FIND_STATE && this.debug('ui.find_component_desc FOUND 3 for ' + arg_name, arg_state_path)\r\n\t\t\t\t\t\t\treturn result\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tif (result)\r\n\t\t\t{\r\n\t\t\t\tDEBUG_TRACE_FIND_STATE && this.debug('ui.find_component_desc FOUND 4 for ' + arg_name, arg_state_path, result && result.toJS ? result.toJS() : result)\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\targ_state_path.pop() // CHILDREN\r\n\t\t}\r\n\t\t\r\n\t\tif ( arg_state.has('name') )\r\n\t\t{\r\n\t\t\targ_state_path.pop() // NAME\r\n\t\t}\r\n\r\n\t\t// console.error('state not found for ' + arg_name)\r\n\t\treturn undefined\r\n\t}\r\n\r\n\r\n\trequest_component_desc(arg_component_name)\r\n\t{\r\n\t\tthis.enter_group('request_component_desc')\r\n\r\n\t\tthis.leave_group('request_component_desc:async')\r\n\t\t\r\n\t\t// TODO SET RESOURCES SVC NAME IN SETTINGS OR FIND IT BY ITS TYPE\r\n\t\treturn this._runtime.register_service('resources_svc')\r\n\t\t.then(\r\n\t\t\t(service)=>{\r\n\t\t\t\t// console.log(context + ':request_component_desc:get service for ' + arg_view_name)\r\n\t\t\t\treturn service.get( {collection:'*', 'resource':arg_component_name} )\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t(reason)=>{\r\n\t\t\t\tconsole.error(context + ':request_component_desc:error 1 for ' + arg_component_name, reason)\r\n\t\t\t}\r\n\t\t)\r\n\t\t.then(\r\n\t\t\t(stream)=>{\r\n\t\t\t\t// console.log(context + ':request_component_desc:get listen stream for ' + arg_view_name)\r\n\t\t\t\treturn new Promise(\r\n\t\t\t\t\tfunction(resolve, reject)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstream.subscribe(\r\n\t\t\t\t\t\t\t(response)=>{\r\n\t\t\t\t\t\t\t\tresolve(response)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\tstream.on_error(\r\n\t\t\t\t\t\t\t(reason)=>{\r\n\t\t\t\t\t\t\t\treject(reason)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t(reason)=>{\r\n\t\t\t\tconsole.error(context + ':request_component_desc:error 2 for ' + arg_component_name, reason)\r\n\t\t\t}\r\n\t\t)\r\n\t\t.then(\r\n\t\t\t(response)=>{\r\n\t\t\t\t// console.log(context + ':request_component_desc:get response for ' + arg_view_name, response)\r\n\r\n\t\t\t\tif (response.result == 'done')\r\n\t\t\t\t{\r\n\t\t\t\t\t// console.log(context + ':request_component_desc:dispatch ADD_JSON_RESOURCE action for ' + arg_view_name)\r\n\t\t\t\t\tconst action = { type:'ADD_JSON_RESOURCE', resource:arg_component_name, collection:'views', json:response.datas }\r\n\t\t\t\t\tthis._store.dispatch(action)\r\n\t\t\t\t\treturn response.datas\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn undefined\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t(reason)=>{\r\n\t\t\t\tconsole.error(context + ':request_component_desc:error 3 for ' + arg_component_name, reason)\r\n\t\t\t}\r\n\t\t)\r\n\t\t.catch(\r\n\t\t\t(reason)=>{\r\n\t\t\t\tconsole.error(context + ':request_component_desc:an error occured [' + reason + ']')\r\n\t\t\t\treturn undefined\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/runtime/ui_factory.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 817,
    "kind": "variable",
    "name": "context",
    "memberof": "js/runtime/ui_factory.js",
    "static": true,
    "longname": "js/runtime/ui_factory.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/runtime/ui_factory.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 818,
    "kind": "variable",
    "name": "DEBUG_TRACE_FIND_STATE",
    "memberof": "js/runtime/ui_factory.js",
    "static": true,
    "longname": "js/runtime/ui_factory.js~DEBUG_TRACE_FIND_STATE",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/runtime/ui_factory.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 819,
    "kind": "class",
    "name": "UIFactory",
    "memberof": "js/runtime/ui_factory.js",
    "static": true,
    "longname": "js/runtime/ui_factory.js~UIFactory",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/runtime/ui_factory.js",
    "importStyle": "UIFactory",
    "description": "",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "UI factory class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "../node_modules/devapt-core-common/dist/js/base/loggable.js~Loggable"
    ]
  },
  {
    "__docId__": 820,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/runtime/ui_factory.js~UIFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui_factory.js~UIFactory#constructor",
    "access": "public",
    "description": "Create a UI factory instance.\n\n\tAPI:\n\t\t->constructor(arg_runtime, arg_store)\n\t\t->get(arg_name):Component - Get a UI component by its name.\n\t\t->create(arg_name):Component - Create a UI component.\n\t\t->find_component_desc(arg_state, arg_name, arg_state_path = []):Immutable.Map|undefined - Find a UI component state.",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_store",
        "description": "UI components state store."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 821,
    "kind": "member",
    "name": "is_ui_factory",
    "memberof": "js/runtime/ui_factory.js~UIFactory",
    "static": false,
    "longname": "js/runtime/ui_factory.js~UIFactory#is_ui_factory",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 822,
    "kind": "member",
    "name": "_runtime",
    "memberof": "js/runtime/ui_factory.js~UIFactory",
    "static": false,
    "longname": "js/runtime/ui_factory.js~UIFactory#_runtime",
    "access": "private",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 823,
    "kind": "member",
    "name": "_store",
    "memberof": "js/runtime/ui_factory.js~UIFactory",
    "static": false,
    "longname": "js/runtime/ui_factory.js~UIFactory#_store",
    "access": "private",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 824,
    "kind": "member",
    "name": "_cache",
    "memberof": "js/runtime/ui_factory.js~UIFactory",
    "static": false,
    "longname": "js/runtime/ui_factory.js~UIFactory#_cache",
    "access": "private",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 825,
    "kind": "member",
    "name": "_state_by_path",
    "memberof": "js/runtime/ui_factory.js~UIFactory",
    "static": false,
    "longname": "js/runtime/ui_factory.js~UIFactory#_state_by_path",
    "access": "private",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 826,
    "kind": "method",
    "name": "get",
    "memberof": "js/runtime/ui_factory.js~UIFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui_factory.js~UIFactory#get",
    "access": "public",
    "description": "Get a UI component by its name.",
    "lineNumber": 76,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Component}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "component name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Component"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 827,
    "kind": "method",
    "name": "has",
    "memberof": "js/runtime/ui_factory.js~UIFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui_factory.js~UIFactory#has",
    "access": "public",
    "description": "Test a UI component by its name.",
    "lineNumber": 95,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "component name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 828,
    "kind": "method",
    "name": "create_local",
    "memberof": "js/runtime/ui_factory.js~UIFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui_factory.js~UIFactory#create_local",
    "access": "public",
    "description": "Create a UI component with local cache and state.",
    "lineNumber": 110,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Component} - Component instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_component_name",
        "description": "component name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_component_desc",
        "description": "component description (optional, default:undefined)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Component"
      ],
      "spread": false,
      "description": "Component instance"
    }
  },
  {
    "__docId__": 829,
    "kind": "method",
    "name": "create_instance",
    "memberof": "js/runtime/ui_factory.js~UIFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui_factory.js~UIFactory#create_instance",
    "access": "public",
    "description": "Create a UI component.",
    "lineNumber": 160,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Component|undefined} - Component instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_component_name",
        "description": "component name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_component_desc",
        "description": "component description."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state_path",
        "description": "component state path."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Component",
        "undefined"
      ],
      "spread": false,
      "description": "Component instance"
    }
  },
  {
    "__docId__": 830,
    "kind": "method",
    "name": "create_instance_promise",
    "memberof": "js/runtime/ui_factory.js~UIFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui_factory.js~UIFactory#create_instance_promise",
    "access": "public",
    "description": "Create a UI component.",
    "lineNumber": 181,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Component instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_component_name",
        "description": "component name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_component_desc",
        "description": "component description."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state_path",
        "description": "component state path."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Component instance"
    }
  },
  {
    "__docId__": 831,
    "kind": "method",
    "name": "create_instance_mix",
    "memberof": "js/runtime/ui_factory.js~UIFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui_factory.js~UIFactory#create_instance_mix",
    "access": "public",
    "description": "Create a UI component.",
    "lineNumber": 202,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - { component:Component, promise:Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_component_name",
        "description": "component name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_component_desc",
        "description": "component description."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state_path",
        "description": "component state path."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "{ component:Component, promise:Promise}"
    }
  },
  {
    "__docId__": 832,
    "kind": "method",
    "name": "create",
    "memberof": "js/runtime/ui_factory.js~UIFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui_factory.js~UIFactory#create",
    "access": "public",
    "description": "Create a UI component.",
    "lineNumber": 273,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of Component instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_component_name",
        "description": "component name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of Component instance"
    }
  },
  {
    "__docId__": 833,
    "kind": "method",
    "name": "get_component_class",
    "memberof": "js/runtime/ui_factory.js~UIFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui_factory.js~UIFactory#get_component_class",
    "access": "public",
    "description": "Create a UI component.",
    "lineNumber": 337,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Component}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "component name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Component"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 834,
    "kind": "method",
    "name": "find_component_desc",
    "memberof": "js/runtime/ui_factory.js~UIFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui_factory.js~UIFactory#find_component_desc",
    "access": "public",
    "description": "Find UI component description.",
    "lineNumber": 386,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Immutable.Map|undefined} - component state object."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Immutable.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "registry global state object."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "component name."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state_path",
        "description": "state path (optional, default=[])"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Immutable.Map",
        "undefined"
      ],
      "spread": false,
      "description": "component state object."
    }
  },
  {
    "__docId__": 835,
    "kind": "method",
    "name": "request_component_desc",
    "memberof": "js/runtime/ui_factory.js~UIFactory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui_factory.js~UIFactory#request_component_desc",
    "access": "public",
    "description": null,
    "lineNumber": 484,
    "undocument": true,
    "params": [
      {
        "name": "arg_component_name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 836,
    "kind": "file",
    "name": "js/runtime/ui_rendering.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\n// import _ from 'lodash'\r\n// import vdom_as_json from 'vdom-as-json'\r\n// const vdom_from_json = vdom_as_json.fromJson\r\n// import VNode from 'virtual-dom/vnode/vnode'\r\n\r\n// COMMON IMPORTS\r\nimport T             from '../../../node_modules/devapt-core-common/dist/js/utils/types'\r\nimport html_entities from '../../../node_modules/devapt-core-common/dist/js/utils/html_entities'\r\nimport Loggable      from '../../../node_modules/devapt-core-common/dist/js/base/loggable'\r\n\r\n// BROWSER IMPORTS\r\n\r\n\r\nconst context = 'browser/runtime/ui_rendering'\r\n\r\n\r\n\r\n/**\r\n * @file UI rendering class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class UIRendering extends Loggable\r\n{\r\n\t/**\r\n\t * Create a UI rendering instance.\r\n\t * \r\n\t * \tAPI:\r\n\t * \t\t->constructor(arg_runtime, arg_ui)\r\n\t * \r\n\t * \t\t->process_assets_urls_templates(arg_assets_urls_templates)\r\n\t * \t\t->process_rendering_result_headers(arg_rendering_result_headers=[], arg_credentials)\r\n\t * \r\n\t * \t\t->get_asset_url(arg_url, arg_type, arg_credentials=undefined)\r\n\t * \r\n\t * \t\t->create_dom_url_element(arg_dom_element, arg_tag, arg_id, arg_url, arg_type)\r\n\t * \r\n\t * \t\t->process_rendering_result_scripts_urls(arg_dom_element, arg_rendering_result_scripts_urls=[], arg_credentials)\r\n\t * \t\t->process_rendering_result_scripts_tags(arg_dom_element, arg_rendering_result_scripts_tags=[], arg_credentials)\r\n\t * \t\t->process_rendering_result_styles_urls(arg_dom_element, arg_rendering_result_styles_urls=[], arg_credentials)\r\n\t * \t\t->process_rendering_result_styles_tags(arg_dom_element, arg_rendering_result_styles_tags=[], arg_credentials)\r\n\t * \r\n\t * @param {object} arg_runtime - client runtime.\r\n\t * @param {object} arg_store - UI components state store.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_runtime, arg_ui)\r\n\t{\r\n\t\tsuper(context, arg_runtime.get_logger_manager())\r\n\r\n\t\tthis.is_ui_rendering = true\r\n\r\n\t\tthis._runtime = arg_runtime\r\n\t\tthis._ui = arg_ui\r\n\r\n\t\tthis._content_id = 'content'\r\n\t\tthis._content_element = undefined\r\n\t\t\r\n\t\tlet assets_urls_templates = this._ui.store.get_state().get('assets_urls_templates', undefined)\r\n\t\tassets_urls_templates = assets_urls_templates ? assets_urls_templates.toJS() : undefined\r\n\t\t\r\n\t\tthis.process_assets_urls_templates(assets_urls_templates)\r\n\r\n\t\t// this.enable_trace()\r\n\t\t// this.update_trace_enabled()\r\n\t}\r\n\t\r\n\t// TODO API DOC FOR process_assets_urls_templates(arg_assets_urls_templates)\r\n\tprocess_assets_urls_templates(arg_assets_urls_templates)\r\n\t{\r\n\t\tif (arg_assets_urls_templates)\r\n\t\t{\r\n\t\t\tthis._assets_urls_templates = {\r\n\t\t\t\tscript: html_entities.decode( arg_assets_urls_templates.script ),\r\n\t\t\t\tstyle:  html_entities.decode( arg_assets_urls_templates.style ),\r\n\t\t\t\timage:  html_entities.decode( arg_assets_urls_templates.image ),\r\n\t\t\t\thtml:   html_entities.decode( arg_assets_urls_templates.html )\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// TODO API DOC FOR process_rendering_result_headers(arg_rendering_result_headers=[]/*, arg_credentials*/)\r\n\tprocess_rendering_result_headers(arg_rendering_result_headers=[]/*, arg_credentials*/)\r\n\t{\r\n\t\tthis.debug('process_rendering_result_headers:rendering headers', arg_rendering_result_headers)\r\n\t\t\r\n\t\t// TODO\r\n\r\n\t\t// arg_rendering_result_headers.forEach(\r\n\t\t// \t(header)=>{\r\n\t\t// \t\tconst has_header = false // TODO\r\n\t\t// \t\t// const e = document.createElement(header)\r\n\t\t// \t\t// document.head.appendChild(e)// TODO\r\n\t\t// \t}\r\n\t\t// )\r\n\t}\r\n\r\n\t// TODO API DOC FOR get_asset_url(arg_url, arg_type, arg_credentials=undefined)\r\n\tget_asset_url(arg_url, arg_type, arg_credentials=undefined)\r\n\t{\r\n\t\tconst template = this._assets_urls_templates[arg_type]\r\n\t\tconst url = T.isString(template) ? template.replace('{{url}}', arg_url) : arg_url\r\n\t\tconst credentials_tag = '{{credentials_url}}'\r\n\r\n\t\tthis.debug('get_asset_url:url', arg_url)\r\n\t\tthis.debug('get_asset_url:type', arg_type)\r\n\t\tthis.debug('get_asset_url:template', template)\r\n\t\tthis.debug('get_asset_url:url', url)\r\n\t\t\r\n\t\tif ( url.indexOf('&token') > -1 && url.indexOf(credentials_tag) == -1 )\r\n\t\t{\r\n\t\t\treturn url\r\n\t\t}\r\n\r\n\t\tif (! arg_credentials)\r\n\t\t{\r\n\t\t\tthis.debug('get_asset_url:no credentials')\r\n\t\t\t// console.log('get_asset_url:arg_url=%s', arg_url)\r\n\t\t\t// console.log('get_asset_url:template=%s', template)\r\n\t\t\t// console.log('get_asset_url:url=%s', url)\r\n\t\t\treturn url\r\n\t\t}\r\n\r\n\r\n\t\tif (url.indexOf(credentials_tag) >= 0)\r\n\t\t{\r\n\t\t\tconst url2 = url.replace(credentials_tag, arg_credentials.get_url_part())\r\n\t\t\tthis.debug('get_asset_url:url2', url2)\r\n\t\t\treturn url2\r\n\t\t}\r\n\r\n\t\tconst url3 = url + '?' + arg_credentials.get_url_part()\r\n\t\tthis.debug('get_asset_url:url3', url3)\r\n\t\treturn url3\r\n\t}\r\n\r\n\t// TODO API DOC FOR create_dom_url_element(arg_dom_element, arg_tag, arg_id, arg_url, arg_type)\r\n\tcreate_dom_url_element(arg_dom_element, arg_tag, arg_id, arg_url, arg_type)\r\n\t{\r\n\t\t// SEARCH DEVAPT BOOTSTRAP SCRIPT TAG\r\n\t\tconst devapt_bootstrap_element = document.getElementById('js-devapt-bootstrap')\r\n\t\tconst has_bootstrap_element = devapt_bootstrap_element ? arg_dom_element == devapt_bootstrap_element.parentNode : false\r\n\r\n\t\tlet e = document.getElementById(arg_id)\r\n\t\tif (e)\r\n\t\t{\r\n\t\t\tif (e.getAttribute('src') == arg_url)\r\n\t\t\t{\r\n\t\t\t\twindow.devapt().monitor_asset_loading(arg_tag, arg_id, arg_url, e)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\te.parentNode.removeChild(e)\r\n\t\t}\r\n\t\t\r\n\t\te = document.createElement(arg_tag)\r\n\t\te.setAttribute('id', arg_id)\r\n\t\te.setAttribute('src', arg_url)\r\n\t\te.setAttribute('type', arg_type)\r\n\t\t// e.setAttribute('async', 'false')\r\n\r\n\t\twindow.devapt().monitor_asset_loading(arg_tag, arg_id, arg_url, e)\r\n\r\n\t\tif (has_bootstrap_element)\r\n\t\t{\r\n\t\t\targ_dom_element.insertBefore(e, devapt_bootstrap_element)\r\n\r\n\t\t\treturn\r\n\t\t}\r\n\t\targ_dom_element.appendChild(e)\r\n\t}\r\n\r\n\t// TODO API DOC FOR process_rendering_result_scripts_urls(arg_dom_element, arg_rendering_result_scripts_urls=[], arg_credentials)\r\n\tprocess_rendering_result_scripts_urls(arg_dom_element, arg_rendering_result_scripts_urls=[], arg_credentials)\r\n\t{\r\n\t\tthis.debug('process_rendering_result_scripts_urls:rendering body_scripts_urls', arg_rendering_result_scripts_urls)\r\n\t\t\r\n\t\t// SEARCH DEVAPT BOOTSTRAP SCRIPT TAG\r\n\t\t// const devapt_bootstrap_element = document.getElementById('js-devapt-bootstrap')\r\n\t\t// const has_bootstrap_element = devapt_bootstrap_element ? arg_dom_element == devapt_bootstrap_element.parentNode : false\r\n\r\n\t\targ_rendering_result_scripts_urls.forEach(\r\n\t\t\t(url)=>{\r\n\t\t\t\tthis.debug('process_rendering_result_scripts_urls:loop on url', url.id, url.src)\r\n\r\n\t\t\t\tconst url_src = this.get_asset_url(url.src, 'script', arg_credentials ? arg_credentials : this._runtime.get_session_credentials())\r\n\r\n\t\t\t\tthis.create_dom_url_element(arg_dom_element, 'script', url.id, url_src, 'text/javascript')\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\t// TODO API DOC FOR process_rendering_result_scripts_tags(arg_dom_element, arg_rendering_result_scripts_tags=[]/*, arg_credentials*/)\r\n\tprocess_rendering_result_scripts_tags(arg_dom_element, arg_rendering_result_scripts_tags=[]/*, arg_credentials*/)\r\n\t{\r\n\t\tthis.debug('process_rendering_result_scripts_tags:rendering body_scripts_tags', arg_rendering_result_scripts_tags)\r\n\t\t\r\n\t\targ_rendering_result_scripts_tags.forEach(\r\n\t\t\t(tag)=>{\r\n\t\t\t\tthis.debug('process_rendering_result_scripts_tags:loop on tag')\r\n\r\n\t\t\t\tlet e = document.getElementById(tag.id)\r\n\t\t\t\tif (e)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (e.text == tag.content)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\te.parentNode.removeChild(e)\r\n\t\t\t\t}\r\n\r\n\t\t\t\te = document.createElement('script')\r\n\t\t\t\te.text = tag.content\r\n\t\t\t\te.setAttribute('id', tag.id)\r\n\t\t\t\te.setAttribute('type', 'text/javascript')\r\n\t\t\t\targ_dom_element.appendChild(e)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\t// TODO API DOC FOR process_rendering_result_styles_urls(arg_dom_element, arg_rendering_result_styles_urls=[], arg_credentials)\r\n\tprocess_rendering_result_styles_urls(arg_dom_element, arg_rendering_result_styles_urls=[], arg_credentials)\r\n\t{\r\n\t\tthis.debug('process_rendering_result_styles_urls:rendering body_styles_urls', arg_rendering_result_styles_urls)\r\n\t\t\r\n\t\targ_rendering_result_styles_urls.forEach(\r\n\t\t\t(url)=>{\r\n\t\t\t\tthis.debug('process_rendering_result_styles_urls:loop on url', url.id, url.href)\r\n\r\n\t\t\t\tconst url_href = this.get_asset_url(url.href, 'style', arg_credentials ? arg_credentials : this._runtime.get_session_credentials())\r\n\t\t\t\t\r\n\t\t\t\tlet e = document.getElementById(url.id)\r\n\t\t\t\tif (e)\r\n\t\t\t\t{\r\n\t\t\t\t\t// console.log('e exists', e)\r\n\t\t\t\t\tif (e.getAttribute('href') == url_href)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twindow.devapt().monitor_asset_loading('link', url.id, url_href, e)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// console.log('existing e is different', e, url_href)\r\n\t\t\t\t\te.parentNode.removeChild(e)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\te = document.createElement('link')\r\n\t\t\t\te.setAttribute('id', url.id)\r\n\t\t\t\te.setAttribute('href', url_href)\r\n\t\t\t\te.setAttribute('media', url.media ? url.media : 'all')\r\n\t\t\t\te.setAttribute('rel', 'stylesheet')\r\n\t\t\t\targ_dom_element.appendChild(e)\r\n\r\n\t\t\t\twindow.devapt().monitor_asset_loading('link', url.id, url_href, e)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\t// TODO API DOC FOR process_rendering_result_styles_tags(arg_dom_element, arg_rendering_result_styles_tags=[]/*, arg_credentials*/)\r\n\tprocess_rendering_result_styles_tags(arg_dom_element, arg_rendering_result_styles_tags=[]/*, arg_credentials*/)\r\n\t{\r\n\t\tthis.debug('process_rendering_result_styles_tags:rendering body_styles_tags', arg_rendering_result_styles_tags)\r\n\t\t\r\n\t\targ_rendering_result_styles_tags.forEach(\r\n\t\t\t(tag)=>{\r\n\t\t\t\tthis.debug('process_rendering_result_styles_tags:loop on tag')\r\n\r\n\t\t\t\tlet e = document.getElementById(tag.id)\r\n\t\t\t\tif (e)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (e.text == tag.content)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\te.parentNode.removeChild(e)\r\n\t\t\t\t}\r\n\r\n\t\t\t\te = document.createElement('style')\r\n\t\t\t\te.setAttribute('id', tag.id)\r\n\t\t\t\te.setAttribute('type', 'text/css')\r\n\t\t\t\te.setAttribute('media', tag.media)\r\n\t\t\t\te.textContent = tag.content\r\n\r\n\t\t\t\targ_dom_element.appendChild(e)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/lbories/Documents/PERSONNEL/MYPROJECTS/GitHub/devapt-core-browser/src/js/runtime/ui_rendering.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 837,
    "kind": "variable",
    "name": "context",
    "memberof": "js/runtime/ui_rendering.js",
    "static": true,
    "longname": "js/runtime/ui_rendering.js~context",
    "access": "public",
    "export": false,
    "importPath": "devapt-core-browser/js/runtime/ui_rendering.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 838,
    "kind": "class",
    "name": "UIRendering",
    "memberof": "js/runtime/ui_rendering.js",
    "static": true,
    "longname": "js/runtime/ui_rendering.js~UIRendering",
    "access": "public",
    "export": true,
    "importPath": "devapt-core-browser/js/runtime/ui_rendering.js",
    "importStyle": "UIRendering",
    "description": "",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "UI rendering class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "../node_modules/devapt-core-common/dist/js/base/loggable.js~Loggable"
    ]
  },
  {
    "__docId__": 839,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/runtime/ui_rendering.js~UIRendering",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui_rendering.js~UIRendering#constructor",
    "access": "public",
    "description": "Create a UI rendering instance.\n\n\tAPI:\n\t\t->constructor(arg_runtime, arg_ui)\n\n\t\t->process_assets_urls_templates(arg_assets_urls_templates)\n\t\t->process_rendering_result_headers(arg_rendering_result_headers=[], arg_credentials)\n\n\t\t->get_asset_url(arg_url, arg_type, arg_credentials=undefined)\n\n\t\t->create_dom_url_element(arg_dom_element, arg_tag, arg_id, arg_url, arg_type)\n\n\t\t->process_rendering_result_scripts_urls(arg_dom_element, arg_rendering_result_scripts_urls=[], arg_credentials)\n\t\t->process_rendering_result_scripts_tags(arg_dom_element, arg_rendering_result_scripts_tags=[], arg_credentials)\n\t\t->process_rendering_result_styles_urls(arg_dom_element, arg_rendering_result_styles_urls=[], arg_credentials)\n\t\t->process_rendering_result_styles_tags(arg_dom_element, arg_rendering_result_styles_tags=[], arg_credentials)",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_runtime",
        "description": "client runtime."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_store",
        "description": "UI components state store."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 840,
    "kind": "member",
    "name": "is_ui_rendering",
    "memberof": "js/runtime/ui_rendering.js~UIRendering",
    "static": false,
    "longname": "js/runtime/ui_rendering.js~UIRendering#is_ui_rendering",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 841,
    "kind": "member",
    "name": "_runtime",
    "memberof": "js/runtime/ui_rendering.js~UIRendering",
    "static": false,
    "longname": "js/runtime/ui_rendering.js~UIRendering#_runtime",
    "access": "private",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 842,
    "kind": "member",
    "name": "_ui",
    "memberof": "js/runtime/ui_rendering.js~UIRendering",
    "static": false,
    "longname": "js/runtime/ui_rendering.js~UIRendering#_ui",
    "access": "private",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 843,
    "kind": "member",
    "name": "_content_id",
    "memberof": "js/runtime/ui_rendering.js~UIRendering",
    "static": false,
    "longname": "js/runtime/ui_rendering.js~UIRendering#_content_id",
    "access": "private",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 844,
    "kind": "member",
    "name": "_content_element",
    "memberof": "js/runtime/ui_rendering.js~UIRendering",
    "static": false,
    "longname": "js/runtime/ui_rendering.js~UIRendering#_content_element",
    "access": "private",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 845,
    "kind": "method",
    "name": "process_assets_urls_templates",
    "memberof": "js/runtime/ui_rendering.js~UIRendering",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui_rendering.js~UIRendering#process_assets_urls_templates",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "params": [
      {
        "name": "arg_assets_urls_templates",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 846,
    "kind": "member",
    "name": "_assets_urls_templates",
    "memberof": "js/runtime/ui_rendering.js~UIRendering",
    "static": false,
    "longname": "js/runtime/ui_rendering.js~UIRendering#_assets_urls_templates",
    "access": "private",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "type": {
      "types": [
        "{\"script\": *, \"style\": *, \"image\": *, \"html\": *}"
      ]
    }
  },
  {
    "__docId__": 847,
    "kind": "method",
    "name": "process_rendering_result_headers",
    "memberof": "js/runtime/ui_rendering.js~UIRendering",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui_rendering.js~UIRendering#process_rendering_result_headers",
    "access": "public",
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "params": [
      {
        "name": "arg_rendering_result_headers",
        "optional": true,
        "types": [
          "*[]"
        ],
        "defaultRaw": [],
        "defaultValue": "[]"
      }
    ],
    "return": null
  },
  {
    "__docId__": 848,
    "kind": "method",
    "name": "get_asset_url",
    "memberof": "js/runtime/ui_rendering.js~UIRendering",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui_rendering.js~UIRendering#get_asset_url",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "params": [
      {
        "name": "arg_url",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_type",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_credentials",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "undefined",
        "defaultValue": "undefined"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 849,
    "kind": "method",
    "name": "create_dom_url_element",
    "memberof": "js/runtime/ui_rendering.js~UIRendering",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui_rendering.js~UIRendering#create_dom_url_element",
    "access": "public",
    "description": null,
    "lineNumber": 141,
    "undocument": true,
    "params": [
      {
        "name": "arg_dom_element",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_tag",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_id",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_url",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_type",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 850,
    "kind": "method",
    "name": "process_rendering_result_scripts_urls",
    "memberof": "js/runtime/ui_rendering.js~UIRendering",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui_rendering.js~UIRendering#process_rendering_result_scripts_urls",
    "access": "public",
    "description": null,
    "lineNumber": 176,
    "undocument": true,
    "params": [
      {
        "name": "arg_dom_element",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_rendering_result_scripts_urls",
        "optional": true,
        "types": [
          "*[]"
        ],
        "defaultRaw": [],
        "defaultValue": "[]"
      },
      {
        "name": "arg_credentials",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 851,
    "kind": "method",
    "name": "process_rendering_result_scripts_tags",
    "memberof": "js/runtime/ui_rendering.js~UIRendering",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui_rendering.js~UIRendering#process_rendering_result_scripts_tags",
    "access": "public",
    "description": null,
    "lineNumber": 196,
    "undocument": true,
    "params": [
      {
        "name": "arg_dom_element",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_rendering_result_scripts_tags",
        "optional": true,
        "types": [
          "*[]"
        ],
        "defaultRaw": [],
        "defaultValue": "[]"
      }
    ],
    "return": null
  },
  {
    "__docId__": 852,
    "kind": "method",
    "name": "process_rendering_result_styles_urls",
    "memberof": "js/runtime/ui_rendering.js~UIRendering",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui_rendering.js~UIRendering#process_rendering_result_styles_urls",
    "access": "public",
    "description": null,
    "lineNumber": 224,
    "undocument": true,
    "params": [
      {
        "name": "arg_dom_element",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_rendering_result_styles_urls",
        "optional": true,
        "types": [
          "*[]"
        ],
        "defaultRaw": [],
        "defaultValue": "[]"
      },
      {
        "name": "arg_credentials",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 853,
    "kind": "method",
    "name": "process_rendering_result_styles_tags",
    "memberof": "js/runtime/ui_rendering.js~UIRendering",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/runtime/ui_rendering.js~UIRendering#process_rendering_result_styles_tags",
    "access": "public",
    "description": null,
    "lineNumber": 260,
    "undocument": true,
    "params": [
      {
        "name": "arg_dom_element",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_rendering_result_styles_tags",
        "optional": true,
        "types": [
          "*[]"
        ],
        "defaultRaw": [],
        "defaultValue": "[]"
      }
    ],
    "return": null
  },
  {
    "kind": "index",
    "content": "# Devapt core documentation builder\r\n\r\n## Build\r\n\r\n```\r\ncd devapt-core-doc\r\nnpm install --production\r\nnpm run build_common\r\nnpm run build_server\r\nnpm run build_services\r\nnpm run build_browser\r\n```\r\n\r\n\r\n## Source files\r\n * docs\r\n   * manual\r\n     * features\r\n     * tutorials\r\n\r\n\r\n\r\n## Old build with jsdoc dependencies\r\n```\r\n{\r\n    \"del\": \">=2.2.0\",\r\n    \"gulp\": \"github:gulpjs/gulp#4.0\",\r\n    \"gulp-load-plugins\": \">=1.2.0\",\r\n    \"parallelshell\": \"^2.0.0\"\r\n}\r\n```",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\r\n  \"name\": \"devapt-core-browser\",\r\n  \"version\": \"2.0.4\",\r\n  \"description\": \"Developpers Application Toolkit - browser features: client runtime, ui rendering and management, client routing and logging\",\r\n  \"author\": {\r\n    \"name\": \"Luc BORIES\",\r\n    \"email\": \"luc.bories@gmail.com\",\r\n    \"url\": \"https://github.com/lucbories\"\r\n  },\r\n  \"contributors\": [],\r\n  \"license\": \"Apache-2.0\",\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"git+https://github.com/lucbories/devapt-core-browser.git\"\r\n  },\r\n  \"bugs\": {\r\n    \"url\": \"git+https://github.com/lucbories/devapt-core-browser/issues\"\r\n  },\r\n  \"homepage\": \"https://github.com/lucbories/devapt-core-browser#readme.md\",\r\n  \"main\": \"dist/index.js\",\r\n  \"engines\": {\r\n    \"node\": \">=4.4.4\"\r\n  },\r\n  \"directories\": {\r\n    \"dist\": \"./dist\"\r\n  },\r\n  \"scripts\": {\r\n    \"build\": \"gulp\",\r\n    \"test\": \"mocha --recursive --reporter spec --compilers js:babel-register src/test\",\r\n    \"postversion\": \"unix2dos package.json\",\r\n    \"commit\": \"unix2dos package.json && git status && pause && git commit -am \",\r\n    \"patch\": \"npm version patch && unix2dos package.json && git status && pause && git commit -am \",\r\n    \"minor\": \"npm version minor && unix2dos package.json && git status && pause && git commit -am \",\r\n    \"major\": \"npm version major && unix2dos package.json && git status && pause && git commit -am \",\r\n    \"push-dev\": \"git push devapt develop\",\r\n    \"merge\": \"git checkout master && git merge develop && git push devapt master && git checkout develop\",\r\n    \"release\": \"git push devapt develop && git checkout master && git merge develop && git push devapt master && git checkout develop\"\r\n  },\r\n  \"browser\": [\r\n    \"sequelize\",\r\n    \"restify\"\r\n  ],\r\n  \"keywords\": [\r\n    \"server\",\r\n    \"api\",\r\n    \"rest\",\r\n    \"devapt\",\r\n    \"toolkit\",\r\n    \"redux\",\r\n    \"reactive\",\r\n    \"declarative\",\r\n    \"distributed\",\r\n    \"responsive\"\r\n  ],\r\n  \"dependencies\": {\r\n    \"crossroads\": \">=0.12.2\",\r\n    \"devapt-core-common\": \">=2.0.0\",\r\n    \"dom-delegate\": \"^2.0.3\",\r\n    \"global\": \">=4.3.1\",\r\n    \"hasher\": \">=1.2.0\",\r\n    \"html-to-vdom\": \">=0.7.0\",\r\n    \"immutable\": \">=3.7.5\",\r\n    \"lodash\": \">=4.16.4\",\r\n    \"socket.io\": \">=1.3.7\",\r\n    \"uuid\": \">=3.0.0\",\r\n    \"vdom-as-json\": \">=1.0.9\",\r\n    \"vdom-parser\": \">=1.3.4\",\r\n    \"vdom-virtualize\": \">=2.0.0\",\r\n    \"virtual-dom\": \">=2.1.1\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"babel\": \">=6.5.2\",\r\n    \"babel-cli\": \">=6.6.4\",\r\n    \"babel-loader\": \">=6.2.4\",\r\n    \"babel-plugin-transform-es2015-modules-commonjs\": \"^6.18.0\",\r\n    \"babel-plugin-transform-runtime\": \">=6.6.0\",\r\n    \"babel-polyfill\": \">=6.7.4\",\r\n    \"babel-preset-es2015\": \">=6.6.0\",\r\n    \"babel-preset-stage-0\": \">=6.5.0\",\r\n    \"babel-register\": \">=6.14.0\",\r\n    \"babelify\": \">=7.2.0\",\r\n    \"browserify\": \">=13.1.1\",\r\n    \"chai\": \">=3.3.0\",\r\n    \"chai-as-promised\": \">=5.3.0\",\r\n    \"chai-immutable\": \">=1.3.0\",\r\n    \"del\": \">=2.2.0\",\r\n    \"gulp\": \"github:gulpjs/gulp#4.0\",\r\n    \"gulp-babel\": \">=6.1.1\",\r\n    \"gulp-cached\": \">=1.1.0\",\r\n    \"gulp-changed\": \">=1.3.0\",\r\n    \"gulp-concat\": \">=2.6.0\",\r\n    \"gulp-livereload\": \">=3.8.1\",\r\n    \"gulp-load-plugins\": \">=1.2.0\",\r\n    \"gulp-remember\": \">=0.3.0\",\r\n    \"gulp-rename\": \">=1.2.2\",\r\n    \"gulp-sourcemaps\": \">=1.6.0\",\r\n    \"gulp-util\": \"^3.0.7\",\r\n    \"mocha\": \">=2.4.5\",\r\n    \"requirejs\": \">=2.1.20\",\r\n    \"uglifyify\": \"^3.0.4\",\r\n    \"vinyl-buffer\": \">=1.0.0\",\r\n    \"vinyl-source-stream\": \">=1.1.0\",\r\n    \"watchify\": \"^3.7.0\"\r\n  }\r\n}\r\n",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\node_modules\\devapt-core-browser\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "globalIndex": true,
    "content": "# Welcome on Devapt project documentation (v2 or more)\r\n\r\nWith Devapt you can easily develop powerfull application.\r\n\r\nDevapt libraries are usefull to quickly develop applications with more JSON configuration and less code.\r\n\r\n\r\n## What is Devapt ?\r\n\r\nThe Developpers Application Toolkit (Devapt) is a usefull package for developers:\r\ncreate quickly and securely a complex distributed set of applications or a simple alone application into one or more nodejs.\r\n\r\nThis project is based on Javascript (ECMAscript 6 transpiled in ES5) and nodejs.\r\nDevapt contains a server runtime and a set of client features.\r\nDevapt help you to write less code and to use easily more features.\r\n\r\nThe principle is simple: you write some configuration files for distributed nodes, models, views and menus and the you start the application.\r\nThe framework will automatically generates the server and manages common features (logges, traces, metrics, restful, security...).\r\nSimply launch index.html and your application is up a rich user interface and many features.\r\n\r\nBuilt-in features cover many important subjects as: authentication, restfull, http server, distributed services, logs, metrics...\r\nMain characteristics of DEVAPT architecture is dynamic behaviors, reactive programming, object oriented ES6 javascript, gulp build chain\r\nAll of this on NodeJS.\r\n\r\n\r\n## Where to find Devapt ?\r\n\r\nDevapt is a set of core libraries to help producing applications:\r\n* [devapt-core-common project](https://github.com/lucbories/devapt-core-common)\r\n* [devapt-core-server project](https://github.com/lucbories/devapt-core-server)\r\n* [devapt-core-services project](https://github.com/lucbories/devapt-core-services)\r\n* [devapt-core-browser project](https://github.com/lucbories/devapt-core-browser)\r\n\r\nProjects API:\r\n* [devapt-core-common documentation](https://lucbories.github.io/api_common/index.html)\r\n* [devapt-core-server documentation](https://lucbories.github.io/api_server/index.html)\r\n* [devapt-core-services documentation](https://lucbories.github.io/api_services/index.html)\r\n* [devapt-core-browser documentation](https://lucbories.github.io/api_browser/index.html)\r\n\r\n\r\nOthers libraries provides usefull features.\r\n\r\n[GitHub project](https://github.com/lucbories/devapt-core-common)\r\n\r\n[NPM package](https://www.npmjs.com/package/devapt-core-common)\r\n\r\n[API](https://lucbories.github.io)\r\n\r\n[MANUAL](https://lucbories.github.io)\r\n\r\n\r\n## What does Devapt offer for developpers ?\r\n\r\nDevapt library offers a \"runtime\" instance which delivers this features:\r\n\r\n * browser or server rendering (Render instance)\r\n * rendering base class for custom widgets or views (Component class)\r\n * Redux store on client side\r\n * distributed servers\r\n * master configuration settings (distributed on each nodes)\r\n * loggers engines and traces configuration (for instances, classes, modules)\r\n * datas abstraction\r\n * reactive programming (thanks BaconJS)\r\n * documentation (wotrk in progress)\r\n\r\n\r\n## How does Devapt work ?\r\n\r\nWith Devapt you define:\r\n\r\n * A topology, simple (one application, one server, one service) or complex (many services distributed for many applications on many distributed servers).\r\n * Some resources (models, views, menubars, menus)\r\n * Security rules\r\n\r\nA topology contains:\r\n\r\n * nodes: A node is a nodejs process with an unique name. You can have many nodes on the same machine.\r\nEach node communicates with other node through messaging buses (messages, metrics, logs).\r\n\r\n<img src=\"./manual/asset/Buses.png\" width=\"80%\" alt=\"Messaging picture\" />\r\n\r\n\r\nA node can have one or many servers.\r\n\r\n * servers: A server provides one or more services and listen client connections through a couple (host, port).\r\n\r\nA server has a unique name and can be one of types: restify, express, socket.io (coming soon)...\r\n\r\n * services: A service offers one feature to clients. A service can be one of: static assets providers, generic middleware provider, RESTfull provider, resources provider...\r\n * applications: An application contains some services and is provided through nodes and servers.\r\n\r\nAn application can have one service on one server on one node.\r\nOr many services on many servers on many nodes.\r\n\r\nAn application contains:\r\n\r\n * modules: functional features for applications (a set of preconfigured UI for example).\r\n * plugins: technical fearures for applications (a rendering provider for example).\r\n * security: defines authentication and authorization rules.\r\n\r\n<img src=\"./manual/asset/Host.png\" width=\"80%\" alt=\"Distributed picture\" />\r\n\r\n\r\nThe rendering engines are plugins and rendering classes are stateless: state is stored in a Redux store.\r\nSee [Getting Started with Redux](https://egghead.io/series/getting-started-with-redux) for flow concepts.\r\n\r\n\r\n\r\n## Devapt is a smart glue between many powerfull projects\r\nThanks for all projects leaders and contributers.\r\n\r\nThe given list is an extract of all used or inspired projects.\r\n\r\n\r\nMain dependancies:\r\n\r\n[NodeJS: https://nodejs.org](https://nodejs.org)\r\n\r\n\r\nServers and datas access:\r\n\r\n * [Express: http://expressjs.com/](http://expressjs.com/)\r\n * [Restify: http://restify.com/](http://restify.com/)\r\n * [Epilogue: https://github.com/dchester/epilogue](https://github.com/dchester/epilogue)\r\n * [Sequelize: http://sequelizejs.com](http://sequelizejs.com)\r\n * [Socket.io: http://socket.io/](http://socket.io/)\r\n\r\n\r\nSecurity:\r\n\r\n * [Passport: http://passportjs.org](http://passportjs.org)\r\n * [Node ACL: https://github.com/OptimalBits/node_acl](https://github.com/OptimalBits/node_acl)\r\n\r\n\r\nFoundations:\r\n\r\n * [BaconJS: https://baconjs.github.io/](https://baconjs.github.io/)\r\n * [SimpleBus: https://github.com/ajlopez/SimpleBus](https://github.com/ajlopez/SimpleBus)\r\n * [jQuery: https://jquery.com](https://jquery.com)\r\n * [Immutable: https://facebook.gith)ub.io/immutable-js/docs/#/](https://facebook.github.io/immutable-js/docs/#/)\r\n * [Redux: http://redux.js.org/docs/introduction/Motivation.html](http://redux.js.org/docs/introduction/Motivation.html)\r\n * [Moment: http://momentjs.com/](http://momentjs.com/)\r\n * [Vantage: https://github.com/dthree/vantage](https://github.com/dthree/vantage)\r\n * [Bunyan: https://github.com/trentm/node-bunyan](https://github.com/trentm/node-bunyan)\r\n * [Winston: https://github.com/winstonjs/winston](https://github.com/winstonjs/winston)\r\n * [Circuit breaker: https://www.npmjs.com/package/circuit-breaker](https://www.npmjs.com/package/circuit-breaker) [or https://github.com/yammer/circuit-breaker-js](https://github.com/yammer/circuit-breaker-js)\r\n * [LowDb: https://github.com/typicode/lowdb](https://github.com/typicode/lowdb)\r\n\r\n\r\nRendering:\r\n\r\n * [Foundation by ZURB: http://foundation.zurb.com/sites.html](http://foundation.zurb.com/sites.html)\r\n * [Mustache: https://github.com/janl/mustache.js](https://github.com/janl/mustache.js)\r\n * [React (coming soon): http://facebook.github.io/react/docs/tutorial.html](http://facebook.github.io/react/docs/tutorial.html)\r\n\r\n\r\n\r\nDev and build dependancies: (coming soon.)\r\n\r\n * [Babel: https://babeljs.io](https://babeljs.io)\r\n * [Chai: http://chaijs.com/](http://chaijs.com/)\r\n * [Gulp: http://gulpjs.com/](http://gulpjs.com/)\r\n * [Mocha: https://mochajs.org/](https://mochajs.org/)\r\n * [JSDoc: http://usejsdoc.org/](http://usejsdoc.org/)\r\n\r\n\r\n\r\n\r\n## Version\r\n\r\nCurrent active version is 2.x.x\r\n\r\nVersionning use standard method: M.m.p with M is a major change, m a minor change, p a patch.\r\n\r\n\r\n\r\n## License\r\n\r\nCopyright Luc BORIES 2015-2016\r\n\r\nApache Version 2 license.\r\n\r\nSee [LICENSE on GitHub](https://github.com/lucbories/devapt-core-common/blob/master/LICENSE)\r\n\r\n\r\n\r\nPlease enjoy using devapt projects and let me know if they are usefull for you.\r\n\r\n[Next](https://lucbories.github.io)",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\index.md",
    "name": "./docs/manual/index.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualAsset",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\assets",
    "name": "./docs/assets",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\overview.md",
    "name": "./docs/manual/overview.md",
    "content": "\r\n# Overview\r\n\r\nWith DEVAPT you can easily develop powerfull application.\r\nBuilt-in features cover many important subjects as: authentication, restfull, http server, distributed services, logs, metrics...\r\nMain characteristics of DEVAPT architecture is dynamic behaviors, reactive programming, object oriented ES6 javascript, gulp build chain\r\nAll of this on NodeJS.\r\n\r\n\r\n\r\n\r\n## Projects structure\r\nAll devapt-* github repositories have the same structure: a master branch with the last tagged tree, a develop branch with latest comited updates and tags.\r\n\r\nAll devapt-* projects have a common folders tree:\r\nproject root\\\r\n * bower_components (only for browser features)\r\n * build: building scripts\r\n * dist: build codes and resources\r\n  * dist/js: build javascript codes\r\n  * dist/resources: build resources configuration\r\n * node_modules: nodes packages\r\n * public: shared assets for browsers\r\n  * public/app_name/css: CSS assets\r\n  * public/app_name/html: HTML assets\r\n  * public/app_name/img: images assets\r\n  * public/app_name/js: javascript assets\r\n * public/favico.png: browser project icon\r\n * src: project sources\r\n  * src/js: javascript sources\r\n  * src/resources: resources configuration sources\r\n * tmp: temporary application files (logs)\r\n * bower.json: browser packages configuration\r\n * gulpfile.js: main build script\r\n * LICENSE: project license\r\n * package.json: nodes packages configuration\r\n * README.md: project description\r\n\r\nSome differences appears between library and application folder.\r\n\r\nVersionning use standard method: M.m.p with M is a major change, m a minor change, p a patch.\r\n\r\n\r\n\r\n## Development\r\n\r\n```\r\ngit clone git://github.com/lucbories/devapt-core-common.git\r\ncd devapt-core-common\r\nnpm install\r\nnpm test\r\n```\r\nSame commands for devapt-core-browser, devapt-core-server, devapt-core-services\r\n\r\n\r\n\r\n## Contribution\r\n\r\nFeel free to contribute, you're welcome.\r\n\r\nCheck issues and solve it:\r\n* [common file issues](https://github.com/lucbories/devapt-core-common/issues)\r\n* [server file issues](https://github.com/lucbories/devapt-core-server/issues)\r\n* [services file issues](https://github.com/lucbories/devapt-core-services/issues)\r\n* [browser file issues](https://github.com/lucbories/devapt-core-browser/issues)\r\n\r\nSubmit your work:\r\n* [common pull requests](https://github.com/lucbories/devapt-core-common/pulls)\r\n* [server pull requests](https://github.com/lucbories/devapt-core-server/pulls)\r\n* [services pull requests](https://github.com/lucbories/devapt-core-services/pulls)\r\n* [browser pull requests](https://github.com/lucbories/devapt-core-browser/pulls)\r\n\r\nIf you submit a pull request, please be sure to add or update corresponding\r\ntest cases, and ensure that `npm test` continues to pass.\r\n\r\n\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\installation.md",
    "name": "./docs/manual/installation.md",
    "content": "\r\n# Installation\r\n\r\n\r\nVia npm on Node:\r\n```\r\ncd my_project/\r\nnpm init\r\nnpm install devapt-core-common --save\r\nnpm install devapt-core-browser --save\r\nnpm install devapt-core-serices --save\r\nnpm install devapt-core-server --save\r\n```\r\n\r\n\r\nTo install and launch TestBus applicaton :\r\n```\r\ncd apps/\r\ngit clone git://github.com/lucbories/devapt-app-testbus.git\r\ncd devapt-app-testbus\r\n\r\nnpm install --save-prod\r\nor yarn install -- production\r\n\r\nnpm run nodeA\r\nor yarn run nodeA\r\n\r\nor\r\nnpm run nodeA\r\nnpm run nodeB\r\n\r\nor\r\nnpm run nodeA\r\nnpm run nodeB\r\nnpm run nodeC\r\n```\r\nopen a browser on http://my_domain:8080/assets/html/index.html\r\n\r\n\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\usage.md",
    "name": "./docs/manual/usage.md",
    "content": "# Usage\r\n\r\nTo install a devapt application, follow:\r\n```\r\ncd apps/\r\ngit clone git://github.com/lucbories/devapt-app-testbus.git\r\ncd devapt-app-testbus\r\n\r\nnpm install --save-prod\r\n```\r\n\r\nTo create an empty application from scratch (not recommended for devapt newbies):\r\n\r\n```\r\ncd my_app\r\nnpm init\r\nnpm install devapt-core-common --save\r\nnpm install devapt-core-browser --save\r\nnpm install devapt-core-services --save\r\nnpm install devapt-core-server --save\r\n```\r\n\r\nCreate folders tree:\r\n```\r\n-build\r\n-dist\r\n-public\r\n-public/assets\r\n-public/assets/css\r\n-public/assets/html\r\n-public/assets/img\r\n-public/assets/js\r\n-src/js\r\n-src/resources\r\n-tmp\r\n```\r\n\r\n\r\n\r\nCreate your first Devapt based HTML page in public/assets/html/mypage.html:\r\n```html\r\n<html>\r\n\r\n<head>\r\n\t<meta charSet=\"utf8\"/>\r\n\t<title>Devapt TestBus Home</title>\r\n\t\r\n\t<link rel=\"icon\" type=\"image/png\" href=\"/assets/img/favico.png\"/>\r\n\r\n\t<link type='text/css'  rel=\"stylesheet\" href=\"/assets/css/normalize.css\" media=\"all\" />\r\n\r\n\t<style type='text/css'>\r\n\t\t... your styles\r\n\t</style>\r\n</head>\r\n\r\n\r\n<body>\r\n\r\n<header>\r\n\t<center>\r\n\t\t<h1>MY FIRST APP</h1>\r\n\t\t<h8><a href=\"/assets/html/mypage.html\">Home</a></h8>\r\n\t</center>\r\n</header>\r\n\r\n<hr>\r\n\r\n<script>window.__INITIAL_STATE__ = {\r\n\t\"credentials\":{\r\n\t\t\"tenant\":\"tenantA\",\r\n\t\t\"env\":\"dev\",\r\n\t\t\"application\":\"testbus\",\r\n\r\n\t\t\"token\":\"\",\r\n\t\t\"user_name\":\"\",\r\n\t\t\"user_pass_digest\":\"\",\r\n\t\t\r\n\t\t\"ts_login\":0,\r\n\t\t\"ts_expiration\":0,\r\n\r\n\t\t\"errors_count\":0,\r\n\t\t\"renew_count\":0,\r\n\r\n\t\t\"hash\":undefined\r\n\t},\r\n\t\"commands\":{}\r\n}\r\n</script>\r\n\r\n<div id=\"content\">\r\n... your HTML code\r\n</div>\r\n\r\n<script type=\"text/javascript\" src=\"/socket.io/socket.io.js\"></script>\r\n<script type=\"text/javascript\" src=\"/assets/js/vendor/browser.min.js\"></script>\r\n<script type=\"text/javascript\" src=\"/assets/js/devapt-core-browser.js\"></script>\r\n<script type=\"text/javascript\" src=\"/assets/js/devapt-bootstrap.js\"></script>\r\n<script type=\"text/javascript\" src=\"/assets/js/app.js\"></script>\r\n\r\n</body>\r\n\r\n</html>\r\n```\r\n\r\n\r\nNow you can write your Javascript code in public/assets/js/app.js:\r\n```js\r\nwindow.devapt().on_runtime_created(\r\n\tfunction()\r\n\t{\r\n\t\tconsole.log('runtime ready for application script')\r\n\r\n\t\twrite your code here: devapt init is finished and you can use Devapt function:\r\n\t\t\r\n\t\twindow.devapt(): Devapt bootstrap root with some helpers\r\n\t\twindow.devapt().runtime():main Devapt client runtime\r\n\t\twindow.devapt().ui(): main Devapt user interface manager\r\n\r\n\t\tExample: get client session unique id\r\n\t\tvar session_uid = window.devapt().runtime().get_session_uid()\r\n\r\n\t\tExample: ping master node\r\n\t\tvar target_name = 'master' (target is a node or a node part, node is server host or remote host or remote browser session)\r\n\t\tvar ping_svc_cfg = undefined (reserved for later)\r\n\t\tvar ping_svc_promise = window.devapt().get_service('pingpong', ping_svc_cfg)\r\n\t\tvar on_response_callback = function() {\r\n\t\t\tconsole.log('pong received')\r\n\t\t}\r\n\t\twindow.devapt().request_service(ping_svc_promise, 'devapt-ping', target_name, on_response_callback)\r\n\t}\r\n)\r\n```\r\n\r\nDevapt use configuration files to discover and build a runtime of dynamic resources.\r\n\r\nFirst we declare our unique node called \"nodeA\", this node is the topology master and the application provider:\r\nFile: dist/resources/nodes/nodeA.json\r\n```js\r\n{\r\n\t\"is_master\":true,\r\n\t\"name\":\"NodeA\",\r\n\t\r\n\t\"master\":{\r\n\t\t\"name\":\"NodeA\",\r\n\t\t\r\n\t\t\"msg_bus\":{\r\n\t\t\t\"package\":\"socketio\",\r\n\t\t\t\"protocole\":\"ws\",\r\n\t\t\t\"type\":\"Server\",\r\n\t\t\t\"host\":\"localhost\",\r\n\t\t\t\"port\":5000\r\n\t\t},\r\n\t\t\"logs_bus\":{\r\n\t\t\t\"package\":\"socketio\",\r\n\t\t\t\"protocole\":\"ws\",\r\n\t\t\t\"type\":\"Server\",\r\n\t\t\t\"host\":\"localhost\",\r\n\t\t\t\"port\":5001\r\n\t\t},\r\n\t\t\"metrics_bus\":{\r\n\t\t\t\"package\":\"socketio\",\r\n\t\t\t\"protocole\":\"ws\",\r\n\t\t\t\"type\":\"Server\",\r\n\t\t\t\"host\":\"localhost\",\r\n\t\t\t\"port\":5002\r\n\t\t}\r\n\t},\r\n\t\r\n\t\"settings_provider\": {\r\n\t\t\"source\":\"local_file\",\r\n\t\t\"relative_path\":\"world.json\"\r\n\t}\r\n}\r\n```\r\n\r\n\r\nSecondly we describe our application features topology:\r\nFile: dist/resources/world/world.json\r\n```js\r\n{\r\n\t\"nodes\":\"nodes\":{\r\n\t\t\"NodeA\":{\r\n\t\t\t\"host\":\"localhost\",\r\n\t\t\t\"is_master\":true,\r\n\t\t\t\"servers\":{\r\n\t\t\t\t\"NodeALocal8080\":{\r\n\t\t\t\t\t\"type\":\"express\",\r\n\t\t\t\t\t\"port\":8080,\r\n\t\t\t\t\t\"protocole\":\"http\",\r\n\t\t\t\t\t\"middlewares\":[],\r\n\t\t\t\t\t\"use_socketio\":true,\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"security\": {\r\n\t\t\t\t\t\t\"authentication\": {\r\n\t\t\t\t\t\t\t\"enabled\":false,\r\n\t\t\t\t\t\t\t\"plugins\":[]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"NodeALocalLogs\":{\r\n\t\t\t\t\t\"type\":\"logs\",\r\n\t\t\t\t\t\"port\":\"N/A\",\r\n\t\t\t\t\t\"protocole\":\"bus\",\r\n\t\t\t\t\t\"middlewares\":[],\r\n\t\t\t\t\t\"use_socketio\":false,\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"security\": {\r\n\t\t\t\t\t\t\"authentication\": {\r\n\t\t\t\t\t\t\t\"enabled\":false,\r\n\t\t\t\t\t\t\t\"plugins\":[]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t\"tenants\":{\r\n\t\t\"tenantA\":{\r\n\t\t\t\"applications\":{\r\n\t\t\t\t\"assets\":{\r\n\t\t\t\t\t\"title\":\"Assets provider\",\r\n\t\t\t\t\t\"url\":\"assets\",\r\n\t\t\t\t\t\"license\":\"APACHE-LICENSE-2.0\",\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"provided_services\":[],\r\n\t\t\t\t\t\"used_services\":[],\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"used_packages\": [\"my_app_pkg\"],\r\n\t\t\t\t\t\"used_plugins\":[\"DefaultRendering\"],\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"assets\":{\r\n\t\t\t\t\t\t\"css\":[],\r\n\t\t\t\t\t\t\"js\":[],\r\n\t\t\t\t\t\t\"img\":[],\r\n\t\t\t\t\t\t\"index\":\"\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"packages\":{\r\n\t\t\t\t\"my_app_pkg\":{\r\n\t\t\t\t\t\"base_dir\":null,\r\n\t\t\t\t\t\"resources\":[],\r\n\t\t\t\t\t\"templates\":[],\r\n\t\t\t\t\t\"includes\":[],\r\n\t\t\t\t\t\"commands\":[],\r\n\t\t\t\t\t\"services\":{\r\n\t\t\t\t\t\t\"pingpong\":{\r\n\t\t\t\t\t\t\t\"type\":\"ping_svc\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"html_assets\":{\r\n\t\t\t\t\t\t\t\"type\":\"html_assets_svc\",\r\n\t\t\t\t\t\t\t\"routes\":[\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\"route\":\"/\",\r\n\t\t\t\t\t\t\t\t\t\"directory\":\"../../public/assets/\",\r\n\t\t\t\t\t\t\t\t\t\"required_prefixes\":[],\r\n\t\t\t\t\t\t\t\t\t\"required_suffixes\":[\".js\", \".js.map\", \".css\", \".html\", \".png\", \".jpg\"]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\"security\":{\r\n\t\t\t\t\t\t\t\t\"enabled\":false,\r\n\t\t\t\t\t\t\t\t\"authentication\":{\r\n\t\t\t\t\t\t\t\t\t\"enabled\":false,\r\n\t\t\t\t\t\t\t\t\t\"engines\":[]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"authorization\":{\r\n\t\t\t\t\t\t\t\t\t\"enabled\":false,\r\n\t\t\t\t\t\t\t\t\t\"engines\":[],\r\n\t\t\t\t\t\t\t\t\t\"permissions\":{\r\n\t\t\t\t\t\t\t\t\t\t\"*\":[\"*\"]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"security\":{}\r\n\t\t}\r\n\t},\r\n\r\n\t\"deployments\":{\r\n\t\t\"tenantA\":{\r\n\t\t\t\"assets\":{\r\n\t\t\t\t\"assets\":{},\r\n\t\t\t\t\"services\":{\r\n\t\t\t\t\t\"topology\":{ \"servers\":[\"NodeALocal8080\"], \"filters\":[\"*\"] },\r\n\t\t\t\t\t\"html_assets\":{ \"servers\":[\"NodeALocal8080\"], \"filters\":[\"*\"] },\r\n\t\t\t\t\t\"pingpong\":{ \"servers\":[\"NodeALocal8080\"], \"filters\":[\"*\"] }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t\"security\":{\r\n\t\t\"is_readonly\":false,\r\n\t\t\r\n\t\t\"datasources\":[],\r\n\t\t\r\n\t\t\"authentication\": {\r\n\t\t\t\"enabled\":false,\r\n\t\t\t\r\n\t\t\t\"plugins\":{},\r\n\t\t\t\r\n\t\t\t\"default_plugins\": []\r\n\t\t},\r\n\t\t\r\n\t\t\"authorization\": {\r\n\t\t\t\"enabled\":false\r\n\t\t}\r\n\t},\r\n\r\n\t\"plugins\":{\r\n\t\t\"DefaultRendering\":{\r\n\t\t\t\"type\":\"rendering\",\r\n\t\t\t\"file\":\"../../../node_modules/devapt-core-common/dist/js/default_plugins/rendering_default_plugin\"\r\n\t\t},\r\n\t\t\"DefaultServices\":{\r\n\t\t\t\"type\":\"services\",\r\n\t\t\t\"file\":\"../../../node_modules/devapt-core-services/dist/js/default_plugins/services_default_plugin\"\r\n\t\t}\r\n\t},\r\n\t\r\n\t\"loggers\":{},\r\n\t\r\n\t\"traces\":{}\r\n}\r\n```\r\n\r\n\r\nLaunch your runtime nodes and servers:\r\n\r\n```\r\ncd my_app\r\nnode node_modules/devapt-core-server/dist/js/start_node.js -n NodeA -t dist/resources/world -b node_modules/devapt-core-server/dist/js -s NodeA:NodeALocal8081\r\n```\r\n\r\n\r\nExample with settings in many files:\r\n\r\n```js\r\n\"resources//worldworld.json\":\r\n\r\n{\r\n\t\"nodes\":\"nodes.json\",\r\n\t\r\n\t\"tenants\":{\r\n\t\t\"tenantA\":{\r\n\t\t\t\"applications\":\"applications.json\",\r\n\t\t\t\"packages\":\"tenantA_packages.json\",\r\n\t\t\t\"security\":{}\r\n\t\t}\r\n\t},\r\n\r\n\t\"deployments\":\"deployments.json\",\r\n\r\n\t\"security\":\"security.json\",\r\n\r\n\t\"plugins\":\"plugins.json\",\r\n\t\r\n\t\"loggers\":\"loggers.json\",\r\n\t\r\n\t\"traces\":\"traces.json\"\r\n}\r\n\r\n\"nodes.json\":\r\n{\r\n\t\"nodes\":{ same settings than above }\r\n}\r\n\r\n\"services.json\":\r\n{\r\n\t\"services\":{ same settings than above }\r\n}\r\n\r\nRepeat on each files on the same manner.\r\n\r\n```\r\n\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design.md",
    "name": "./docs/manual/design.md",
    "content": "# Design\r\n\r\nDevapt is full stack solution. So it's usefull to provide an integrated framework to build your application with configuration files.\r\nOn the other hands it's difficult to have an overview of all parts and undestand how all this parts work together.\r\n\r\nFirst, devapt is provided throught specialized core projects and addon features. If you write an application you don't need to know all details. But if you want to add features, you should understand on what starting to build your feature.\r\n[Details of projects](https://lucbories.github.io/projects.md)\r\n\r\n\r\n## Main devapt concepts are:\r\n* Node: each application can be distributed on one or many nodes. Each node run on a NodeJS instance with some inter node communication channels. One or many nodes can run on one NodeJS instance. One or many NodeJS instance can run on one hostnames.\r\n* Node settings: JSON file which describe one or many nodes with their names, security, debug trace and communication channels.\r\n* Application settings or configuration or description: main JSON file which define application features, packages, resources (UI components...), debug traces and security.\r\n* Bus: all nodes communicate together with messages throught a communication bus. An application can have one or more buses, one for metrics, one for logs and one between components.\r\n* Tenant: a tenant is a set of applications and packages with its own security access. for example, we can have one tenant per company on a shared server (SaaS).\r\n* Service: a service provide a feature which responds some datas on a request. For example, a ping pong service responds a 'pong' on each 'ping' request.\r\n* Server: a server (not a hostname) is an engine which provides services and others features. For example, a logs server exists to process received logs.\r\n* Metric: metrics are collected datas from a node, an application, a server, a service... which help to monitors system health.\r\n* Rendering: it's the process of producing DOM content for the browser page.\r\n* Virtual DOM: it's a technology which can produce DOM content outside of browser and to apply differential changes on a page. It enhance performance and decrease browser load.\r\n* Security: security is an important need for all usages. Security is everywhere in devapt apps but all parts aren't finished yet. (TODO)\r\n\r\n\r\n## How an application work\r\nAn application has one directory but two targets: server and browser. On server side, an application launches nodes and services. On browser side, the page receive its content from the server: it's a lightweight HTML page with two scripts: a credentials record and an initial application state. Each user action on the interface call some scripts and request server if needed.\r\n\r\n\r\n## Features\r\n\r\n\r\n<a href=\"./design_distributed.html\">Distributed</a>\r\n\r\n<a href=\"./design_messaging.html\">Messaging</a>\r\n\r\n<a href=\"./design_metrics.html\">Metrics</a>\r\n\r\n<a href=\"./design_rendering.html\">Rendering</a>\r\n\r\n<a href=\"./design_security.html\">Security</a>\r\n\r\n<a href=\"./design_servers.html\">Servers</a>\r\n\r\n<a href=\"./design_services.html\">Services</a>\r\n\r\n<a href=\"./design_starting_process.html\">Starting process</a>\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_configurable.md",
    "name": "./docs/manual/design_configurable.md",
    "content": "## Design - Configurable without code feature\r\n\r\nDevapt has for first principle to build applications without coding common features.\r\nWhy writing code to offer REST api, metrics, role based security, database access...\r\nConcentrate your coding forces to write uncommon business code.\r\n\r\n\r\n### Description\r\nDevapt first principle to build applications without coding common features.\r\n\r\nWhy write code for REST api, metrics, role based security, database access...\r\n\r\nIt is best to concentrate on the business code.\r\n\r\n\r\n\r\n### Status\r\n\r\n\r\nConfiguration providers:\r\n* JSON file: DONE\r\n* JSON url: TO TEST\r\n* Datas model: TO IMPLEMENT\r\n\r\nLocal configuration loading: DONE 1.0\r\n\r\nDistributed configuration loading: DONE 2.0\r\n\r\n\r\n\r\n### Format\r\n\r\n\r\n#### Source\r\nSettings are loaded from a Json object.\r\nJson providers could be: files, sql db, nosql db...\r\nFor instance only file provider is available.\r\n\r\n\r\n#### Fisrt level format:\r\nFirst levels are the sub-tree at the Json tree root.\r\nThis level describes the runtime world.\r\n\r\nFirst level keys should be:\r\n * nodes: collection of defined nodes and servers.\r\n * tenants\r\n * deployments\r\n * security: authentication and authorization configuration.\r\n * plugins: collection of defined plugins, a plugin is an addon for rendering, security, servers types, services types...\r\n * loggers: collection of defined loggers.\r\n * traces: configuration of enabled traces for modules, classes, instances of classes.\r\n\r\nWith sub settings files:\r\n```js\r\n{\r\n\t\"nodes\":\"nodes.json\",\r\n\t\r\n\t\"tenants\":{\r\n\t\t\"tenantA\":{\r\n\t\t\t\"applications\":\"applications.json\",\r\n\t\t\t\"packages\":\"tenantA_packages.json\",\r\n\t\t\t\"security\":{}\r\n\t\t}\r\n\t},\r\n\r\n\t\"deployments\":\"deployments.json\",\r\n\r\n\t\"security\":\"security.json\",\r\n\r\n\t\"plugins\":\"plugins.json\",\r\n\t\r\n\t\"loggers\":\"loggers.json\",\r\n\t\r\n\t\"traces\":\"traces.json\"\r\n}\r\n```\r\n\r\n\r\n\r\n * services: collection of defined services, a service is a feature which could be applied on a set of servers for a set of applications.\r\n * applications: collection of defined applications, an application links servers and services.\r\n * modules: collection of defined modules, a module is a set of resources.\r\n\r\nWith inline settings:\r\n```js\r\n{\r\n\t\"nodes\":{ ... },\r\n\t\r\n\t\"tenants\":{ ... },\r\n\t\r\n\t\"deployments\":{ ... },\r\n\t\r\n\t\"plugins\":{ ... },\r\n\t\r\n\t\"security\":{ ... },\r\n\t\r\n\t\"loggers\":{ ... },\r\n\t\r\n\t\"traces\":{ ... }\r\n}\r\n```\r\n\r\n\r\nWith a mix of inline and files settings:\r\n```js\r\n{\r\n\t\"nodes\":{ ... },\r\n\t\r\n\t\"tenants\":{ ... },\r\n\t\r\n\t\"deployments\":{ ... },\r\n\t\r\n\t\"plugins\":{ ... },\r\n\t\r\n\t\"security\":\"security.json\",\r\n\t\r\n\t\"loggers\":\"loggers.json\",\r\n\t\r\n\t\"traces\":\"traces.json\"\r\n}\r\n```\r\n\r\n\r\n\r\n#### Second level settings:\r\n\r\n###### For nodes\r\n<a href=\"./design_configuration_for_nodes.html\">NODES CONFIGURATION</a>\r\n\r\n\r\n###### For tenants\r\n<a href=\"./design_configuration_for_tenants.html\">TENANTS CONFIGURATION</a>\r\n\r\n\r\n###### For deployments\r\n<a href=\"./design_configuration_for_deployments.html\">DEPLOYMENTS CONFIGURATION</a>\r\n\r\n\r\n###### For plugins\r\n<a href=\"./design_configuration_for_plugins.html\">PLUGINS CONFIGURATION</a>\r\n\r\n\r\n###### For security\r\n<a href=\"./design_configuration_for_security.html\">SECURITY CONFIGURATION</a>\r\n\r\n\r\n###### For loggers\r\n<a href=\"./design_configuration_for_loggers.html\">LOGGERS CONFIGURATION</a>\r\n\r\n\r\n###### For traces\r\n<a href=\"./design_configuration_for_traces.html\">TRACES CONFIGURATION</a>\r\n\r\n\r\n###### For templates:\r\nThe second level \"templates\" collection stores all templates definition.\r\nA template can be used everywhere.\r\n\r\nDefine a global template and a service template:\r\n```{\r\n\t\"templates\":{\r\n\t\t\"services\":{\r\n\t\t\t\"security_svc_template\":{\r\n\t\t\t\t\"type\":\"security\",\r\n\t\t\t\t\"tenant\":\"${svc_tenant}\",\r\n\t\t\t\t\"version\":\"1.2.0\",\r\n\t\t\t\t\"routes\":[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"route\":\"/login\",\r\n\t\t\t\t\t\t\"action\":\"login\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"route\":\"/signin\",\r\n\t\t\t\t\t\t\"action\":\"login\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"route\":\"/logout\",\r\n\t\t\t\t\t\t\"action\":\"logout\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"route\":\"/signup\",\r\n\t\t\t\t\t\t\"action\":\"signup\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"route\":\"/renew\",\r\n\t\t\t\t\t\t\"action\":\"renew\"\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"security_single_node_template\":{\r\n\t\t\t\"services\":{\r\n\t\t\t\t\"${svc_name}\":{\r\n\t\t\t\t\t\"template\":\"security_svc_template\",\r\n\t\t\t\t\t\"values\":{\r\n\t\t\t\t\t\t\"svc_tenant\":${app_tenant}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"nodes\":{\r\n\t\t\t\t\"${node_name}\":{\r\n\t\t\t\t\t\"host\":\"${$host_name}\",\r\n\t\t\t\t\t\"tenant\":\"${app_tenant}\",\r\n\t\t\t\t\t\"is_master\":false,\r\n\t\t\t\t\t\"servers\":{\r\n\t\t\t\t\t\t\"${node_server_name}\":{\r\n\t\t\t\t\t\t\t\"type\":\"express\",\r\n\t\t\t\t\t\t\t\"tenant\":\"${app_tenant}\",\r\n\t\t\t\t\t\t\t\"port\":\"${node_server_port}\",\r\n\t\t\t\t\t\t\t\"protocole\":\"http\",\r\n\t\t\t\t\t\t\t\"middlewares\":[],\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\"security\": {\r\n\t\t\t\t\t\t\t\t\"authentication\": {\r\n\t\t\t\t\t\t\t\t\t\"enabled\":true,\r\n\t\t\t\t\t\t\t\t\t\"plugins\":\"${security_plugins}\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"applications\":{\r\n\t\t\t\t\"${app_name}\":{\r\n\t\t\t\t\t\"tenant\":\"${app_tenant}\",\r\n\t\t\t\t\t\"version\":\"${app_version}\",\r\n\t\t\t\t\t\"env\":\"${app_env}\",\r\n\t\t\t\t\t\"group\":\"${app_group}\",\r\n\r\n\t\t\t\t\t\"description\":\"...\",\r\n\r\n\t\t\t\t\t\"url\":\"${app_url}\",\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"services\":{\r\n\t\t\t\t\t\t\"provides\":{\r\n\t\t\t\t\t\t\t\"${svc_name}\": { \"servers\":[\"${node_server_name}\"], \"filters\":[\"*\"] }\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"consumes\":{\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"modules\": [],\r\n\t\t\t\t\t\"plugins\":[],\r\n\t\t\t\t\t\"resources\":[],\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"assets\":{\r\n\t\t\t\t\t\t\"css\":[],\r\n\t\t\t\t\t\t\"js\":[],\r\n\t\t\t\t\t\t\"img\":[],\r\n\t\t\t\t\t\t\"index\":\"\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"license\":\"APACHE-LICENSE-2.0\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}```\r\n\r\n\r\nUse a global template:\r\n\r\n```{\r\n\t\"nodes\":...,\r\n\t\"templated\":[\r\n\t\t{\r\n\t\t\t\"template\":\"security_single_node\",\r\n\t\t\t\"values\":{\r\n\t\t\t\t\"app_name\":\"my_app_1\",\r\n\t\t\t\t\"app_tenant\":\"Client 12\",\r\n\t\t\t\t\"app_version\":\"0.5.3\",\r\n\t\t\t\t\"app_env\":\"production\",\r\n\t\t\t\t\"app_group\":\"financial\",\r\n\t\t\t\t\"app_url\":\"my_apps/my_app_1\",\r\n\t\t\t\t\"svc_name\":\"my_app_1_svc\",\r\n\t\t\t\t\"node_name\":\"my_app_1_node\",\r\n\t\t\t\t\"host_name\":\"localhost\",\r\n\t\t\t\t\"node_server_name\":\"my_app_1_server\",\r\n\t\t\t\t\"node_server_port\":8080,\r\n\t\t\t\t\"security_plugins\":[\"file_users\", \"oauth2\"]\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n}```",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_configuration_for_deployments.md",
    "name": "./docs/manual/design_configuration_for_deployments.md",
    "content": "## Design - Configuration for Deployments\r\n\r\n\r\n### Description\r\nTopology deployments description.\r\n\r\n\r\n### Format\r\nComing soon.\r\n\r\n\r\n### Example\r\n```js\r\n\r\n...coming soon.\r\n\r\n```\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_configuration_for_loggers.md",
    "name": "./docs/manual/design_configuration_for_loggers.md",
    "content": "## Design - Configuration for Loggers\r\n\r\n\r\n### Description\r\nTopology loggers description.\r\n\r\n\r\n### Format\r\nComing soon.\r\n\r\n\r\n### Example\r\n```js\r\n\r\n...coming soon.\r\n\r\n```\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_configuration_for_nodes.md",
    "name": "./docs/manual/design_configuration_for_nodes.md",
    "content": "## Design - Configuration for Nodes\r\n\r\n\r\n### Description\r\nTopology nodes description.\r\n\r\n\r\n### Format\r\nProvide a list of distributed nodes with:\r\n * node name\r\n * is_master: node is the topology master node ? (true/false)\r\n * servers: provided features servers for this node, a list of servers configurations with for each:\r\n   * server name\r\n   * type: kind of server (express/restify/logs for instance)\r\n   * port: server communication port number\r\n   * protocole: server server communication protocole (http/https)\r\n   * middlewares: server used middlewares\r\n   * use_socketio: server use socketio communication ? (true/false)\r\n   * security: server security configuration\r\n\r\n\r\n### Example\r\n```js\r\n{\r\n\t\"nodes\":{\r\n\t\t\"NodeA\":{\r\n\t\t\t\"host\":\"localhost\",\r\n\t\t\t\"is_master\":true,\r\n\t\t\t\"servers\":{\r\n\t\t\t\t\"NodeALocal8080\":{\r\n\t\t\t\t\t\"type\":\"express\",\r\n\t\t\t\t\t\"port\":8080,\r\n\t\t\t\t\t\"protocole\":\"http\",\r\n\t\t\t\t\t\"middlewares\":[],\r\n\t\t\t\t\t\"use_socketio\":true,\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"security\": {\r\n\t\t\t\t\t\t\"authentication\": {\r\n\t\t\t\t\t\t\t\"enabled\":false,\r\n\t\t\t\t\t\t\t\"plugins\":[]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"NodeALocalLogs\":{\r\n\t\t\t\t\t\"type\":\"logs\",\r\n\t\t\t\t\t\"port\":\"N/A\",\r\n\t\t\t\t\t\"protocole\":\"bus\",\r\n\t\t\t\t\t\"middlewares\":[],\r\n\t\t\t\t\t\"use_socketio\":false,\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"security\": {\r\n\t\t\t\t\t\t\"authentication\": {\r\n\t\t\t\t\t\t\t\"enabled\":false,\r\n\t\t\t\t\t\t\t\"plugins\":[]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t\"NodeB\":{\r\n\t\t\t\"host\":\"localhost\",\r\n\t\t\t\"is_master\":false,\r\n\t\t\t\"servers\":{\r\n\t\t\t\t\"NodeBLocal7080\":{\r\n\t\t\t\t\t\"type\":\"express\",\r\n\t\t\t\t\t\"port\":7080,\r\n\t\t\t\t\t\"protocole\":\"http\",\r\n\t\t\t\t\t\"middlewares\":[],\r\n\t\t\t\t\t\"use_socketio\":true,\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"security\": {\r\n\t\t\t\t\t\t\"authentication\": {\r\n\t\t\t\t\t\t\t\"enabled\":false,\r\n\t\t\t\t\t\t\t\"plugins\":[]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t\"NodeC\":{\r\n\t\t\t\"host\":\"localhost\",\r\n\t\t\t\"is_master\":false,\r\n\t\t\t\"servers\":{\r\n\t\t\t\t\"NodeCLocal6080\":{\r\n\t\t\t\t\t\"type\":\"express\",\r\n\t\t\t\t\t\"port\":6080,\r\n\t\t\t\t\t\"protocole\":\"http\",\r\n\t\t\t\t\t\"middlewares\":[],\r\n\t\t\t\t\t\"use_socketio\":true,\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"security\": {\r\n\t\t\t\t\t\t\"authentication\": {\r\n\t\t\t\t\t\t\t\"enabled\":false,\r\n\t\t\t\t\t\t\t\"plugins\":[]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_configuration_for_plugins.md",
    "name": "./docs/manual/design_configuration_for_plugins.md",
    "content": "## Design - Configuration for Plugins\r\n\r\n\r\n### Description\r\nTopology plugins description.\r\n\r\n\r\n### Format\r\nComing soon.\r\n\r\n\r\n### Example\r\n```js\r\n\r\n...coming soon.\r\n\r\n```\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_configuration_for_security.md",
    "name": "./docs/manual/design_configuration_for_security.md",
    "content": "## Design - Configuration for Security\r\n\r\n\r\n### Description\r\nTopology security description.\r\n\r\n\r\n### Format\r\nComing soon.\r\n\r\n\r\n### Example\r\n```js\r\n\r\n...coming soon.\r\n\r\n```\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_configuration_for_tenants.md",
    "name": "./docs/manual/design_configuration_for_tenants.md",
    "content": "## Design - Configuration for Tenants\r\n\r\n\r\n### Description\r\nTopology tenants description.\r\n\r\n\r\n### Format\r\nComing soon.\r\n\r\n\r\n### Example\r\n```js\r\n\r\n...coming soon.\r\n\r\n```\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_configuration_for_traces.md",
    "name": "./docs/manual/design_configuration_for_traces.md",
    "content": "## Design - Configuration for Traces\r\n\r\n\r\n### Description\r\nTopology traces description.\r\n\r\n\r\n### Format\r\nComing soon.\r\n\r\n\r\n### Example\r\n```js\r\n\r\n...coming soon.\r\n\r\n```\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_distributed.md",
    "name": "./docs/manual/design_distributed.md",
    "content": "## Design - Distributed feature\r\n\r\nDevapt provides a distributed infrastructure of nodes with a master configuration pushed on others nodes.\r\n\r\nNodes communicate between them with messages passing.\r\n\r\nEach node corresponds to a Node instance and provides one or more servers.\r\n\r\nEache server provides one ore more services.\r\n\r\nA simple application can have one node with one server.\r\n\r\nA more complex application can have several nodes on one ore more host and each node can have one ore more servers.\r\n\r\nDistributed feature can help to create micro-services based application.\r\n\r\n\r\n\r\n### Description\r\nDevapt provides a distributed infrastructure of nodes with a master configuration pushed on others nodes.\r\n\r\nNodes communicate between them with messages passing.\r\n\r\nEach node corresponds to a Node instance and provides one or more servers.\r\n\r\nEache server provides one ore more services.\r\n\r\nA simple application can have one node with one server.\r\n\r\nA more complex application can have several nodes on one ore more host and each node can have one ore more servers.\r\n\r\nDistributed feature can help to create micro-services based application.\r\n\r\n\r\n\r\n### Status\r\nThe nodes, servers and services are ready for use.\r\n\r\nThe messaging bus is ready too but it sould be tested on many host.\r\n\r\nTo finish: push configuration.\r\n\r\nNeed Test, Optimization and code review.\r\n\r\n\r\n\r\n### For Devapt users:\r\nComing soon.\r\n```\r\n```\r\n\r\n\r\n\r\n### For Devapt contributers:\r\nComing soon.\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_messaging.md",
    "name": "./docs/manual/design_messaging.md",
    "content": "## Design - Messaging feature\r\n\r\nDevapt provides messages bus server and client classes.\r\n\r\nDistributed nodes communicates each others with simple JSON messages.\r\n\r\n### Description\r\nA distributed application needs to provide a communication between its nodes.\r\n\r\nDevapt provides messages buses to ensure JSON messages exchange.\r\n\r\n![Messaging](https://github.com/lucbories/devapt/blob/master/docs/features/buses.png)\r\n\r\nEach topology node has 3 buses to communicate inside a node or between nodes:\r\n* metrics bus: metrics collectors push metrics messages on this bus and metrics server listen on it to reduce metrics values.\r\n* messages bus nodes servers and services communicate through messages.\r\n* logs bus: each node part can log its activity on this bus.\r\n\r\nEach browser has a socketio bus for communication between browser and topology.\r\n\r\n\r\nExample for message communication inside a Node\r\n\r\nNode A\r\n\r\nServer A1\t\t\tServer A2\r\n\r\n\r\n\r\n\r\n### Status\r\nThe nodes, servers and services are ready for use.\r\nThe messaging bus is ready too but it sould be tested on many host.\r\n\r\nTo finish: push configuration.\r\n\r\nNeed Test, Optimization and code review.\r\n\r\n\r\n\r\n### For Devapt users:\r\nComing soon.\r\n```\r\n```\r\n\r\n\r\n\r\n### For Devapt contributers:\r\nComing soon.\r\n\r\n\r\n\r\n### Thanks\r\n\r\n#### SimpleBus\r\nAJ Lopez provides many specialized projects.\r\nIt's a great work.\r\nOne of them is SimpleBus, a messaging system between a server and its clients (local or remote).\r\n\r\n[SimpleBus](https://github.com/ajlopez/SimpleBus)\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_metrics.md",
    "name": "./docs/manual/design_metrics.md",
    "content": "## Design - Metrics feature\r\n\r\nApplications optimization and analyze need some metrics.\r\n\r\nUsefull libraries offer builin metrics support but each one with its own format.\r\n\r\nDevapt provides a unique metrics format per server domain: http request, messaging request...\r\n\r\n### Description\r\nApplications optimization and analyze need some metrics.\r\n\r\nUsefull libraries offer builin metrics support but each one with its own format.\r\n\r\nDevapt provides a unique metrics format per domain: http request, messaging, host, nodejs...\r\n\r\n\r\nMetrics architecture consist of 4 main base classes and one bus per topology, on the master node:\r\n* MetricsCollector: update MetricsRecord values, use MetricsReducer to consolidate values and post a message onto the metrics bus.\r\n* MetricsRecord: a snapshot of a set of values\r\n* MetricsReducer: reduce a list of MetricsRecord values\r\n* MetricsState: MetricsReducer result\r\nEach of this 4 classes should be subclassed to create a new metrics feature.\r\n\r\n\r\nFor instance, available metrics are:\r\n* Bus metrics: collect master node buses counters (messages count, messages size, errors count, subscribers count)\r\n* Host metrics: collect NodeJs host metrics (CPUs count, CPUs architecture, CPUs usage...)\r\n* NodeJs metrics: collect NodeJs process metrics (pid, version, plateform, uptime, memory)\r\n* Http metrics: for Restify and Express, collect request metrics (id, method, status, referer, url, service, latency, browser...)\r\n\r\n\r\nHow it runs:\r\n\r\nThe MetricsServer owns collectors instance and listen the metrics bus and call a MetricsCollector method to process new metrics values.\r\nA MetricsCollector owns one MetricsReducer, one MetricsState and one MetricsRecord.\r\nThe MetricsServer provides metrics reduced values to metrics services.\r\nEach metrics feature has its corresponding metrics service to publish metrics outside the node:\r\n* MetricsBusService\r\n* MetricsHostService\r\n* MetricsNodeJsService\r\n* MetricsHttpService\r\n\r\n\r\n### Status\r\nFeatures are finished for Bus, Host, NodeJs and Http metrics.\r\n\r\nThe metrics server is operational.\r\n\r\nSee devapt-devtools project for a full example of metrics services usage.\r\n\r\n[DEVTOOLS Project](https://github.com/lucbories/devapt-devtools/)\r\n\r\n\r\n### For Devapt users:\r\n```\r\n    // GET NODE\r\n    let node = ...\r\n    \r\n    // GET HTTP METRICS STATISTICS VALUES\r\n    const http_metrics = node.get_metrics_server().get_http_metrics().get_values()\r\n    \r\n    /*\r\n        HTTP METRICS STATISTICS FORMAT:\r\n        \r\n        // REQUEST VERSIONS\r\n        http_metrics.version_counters: a map of Devapt versions counters (plain object)\r\n        \r\n        // REQUEST UUID\r\n        http_metrics.id_counters: a map of requests ids counters { id1:counter1, id2:counter2 } (plain object)\r\n        http_metrics.pid_counters: a map of process ids counters { pid1:counter1, pid2:counter2 } (plain object)\r\n        \r\n        // DURATIONS\r\n        http_metrics.latency_min: the minimal latencies value (integer)\r\n        http_metrics.latency_counter: the counter latencies values (integer)\r\n        http_metrics.latency_sum: the sum of latencies values (integer)\r\n        http_metrics.latency_mean: the sum divided by the count of latencies values (integer)\r\n        http_metrics.latency_max: the maximal latencies value (integer)\r\n        \r\n        // SERVICE IDENTIFICATION\r\n        http_metrics.service_name_counters: a map of service name counters (plain object)\r\n        http_metrics.service_url_counters: a map of service url counters (plain object)\r\n        http_metrics.service_method_counters: a map of service method counters (plain object)\r\n        http_metrics.service_http_version_counters: a map of service http counters (plain object)\r\n        http_metrics.service_route_counters: a map of service route counters (plain object)\r\n        \r\n        // SERVER IDENTIFICATION\r\n        http_metrics.server_node_name_counters: a map of Devapt versions counters (plain object)\r\n        http_metrics.server_server_name_counters: a map of Devapt versions counters (plain object)\r\n        \r\n        // CLIENT IDENTIFICATION\r\n        http_metrics.client_user_name_counters: a map of user name counters (plain object)\r\n        http_metrics.client_user_id_counters: a map of user id counters (plain object)\r\n        http_metrics.client_browser_counters: a map of client browser type counters (plain object)\r\n        http_metrics.client_referrer_counters: a map of client referrer counters (plain object)\r\n\r\n        // RESPONSE\r\n        http_metrics.response_status_counters: a map of response status counters (plain object)\r\n    */\r\n```\r\n\r\n\r\n\r\n### For Devapt contributers:\r\n\r\nMetrics classes are:\r\n| Class file | Class name and description |\r\n|:-----------|:--------------------------:|\r\n| /metric_duration.js | MetricDuration: metrics values collector for a simple time interval.|\r\n| | |\r\n| /base/metrics_collector.js | MetricsCollector: metrics values collector base class.|\r\n| /base/metrics_record.js | MetricsRecord: metrics values snapshot base class.|\r\n| /base/metrics_reducer.js | MetricsHost: metrics values reducer base class.|\r\n| /base/metrics_state.js | MetricsState: metrics values persistent state base class.|\r\n| | |\r\n| /bus/metrics_bus_collector.js | MetricsBusCollector: metrics values collector class for bus metrics feature.|\r\n| /bus/metrics_bus_record.js | MetricsBusRecord: metrics values snapshot class for bus metrics feature.|\r\n| /bus/metrics_bus_reducer.js | MetricsBusHost: metrics values reducer class for bus metrics feature.|\r\n| /bus/metrics_bus_state.js | MetricsBusState: metrics values persistent state class for bus metrics feature.|\r\n| | |\r\n| /host/metrics_host_collector.js | MetricsCollector: metrics values collector class for host metrics feature.|\r\n| /host/metrics_host_record.js | MetricsRecord: metrics values snapshot class for host metrics feature.|\r\n| /host/metrics_host_reducer.js | MetricsHost: metrics values reducer class for host metrics feature.|\r\n| /host/metrics_host_state.js | MetricsState: metrics values persistent state class for host metrics feature.|\r\n| | |\r\n| /http/metrics_http_collector.js | MetricsHttpCollector: metrics values collector class for Http metrics feature.|\r\n| /http/metrics_http_record.js | MetricsHttpRecord: metrics values snapshot class for Http metrics feature.|\r\n| /http/metrics_http_reducer.js | MetricsHttpHost: metrics values reducer class for Http metrics feature.|\r\n| /http/metrics_http_state.js | MetricsHttpState: metrics values persistent state class for Http metrics feature.|\r\n| | |\r\n| /nodejs/metrics_nodejs_collector.js | MetricsNodeJsCollector: metrics values collector class for NodeJs metrics feature.|\r\n| /nodejs/metrics_nodejs_record.js | MetricsNodeJsRecord: metrics values snapshot class for NodeJs metrics feature.|\r\n| /nodejs/metrics_nodejs_reducer.js | MetricsNodeJsHost: metrics values reducer class for NodeJs metrics feature.|\r\n| /nodejs/metrics_nodejs_state.js | MetricsNodeJsState: metrics values persistent state class for NodeJs metrics feature.|\r\n| | |\r\n| common/servers/metric_server.js | MetricsServer: server which reveive metrics message and call a reducer to update statistics|\r\n\r\n\r\nMetrics bus message format:\r\n```\r\n{\r\n   \"target\":\"metrics_server\", // Fixed name: see node.metrics_server.get_name()\r\n   \"sender\":\"...\", // fill by BusClient.send_msg(target,payload)\r\n   \"payload\":{\r\n       \"is_metrics_message\":true,\r\n       \"metric\":\"...\", // metrics collector type: http/message/...\r\n       \"metrics\":[\r\n           {\r\n                // metrics values\r\n           }\r\n       ],\r\n       \"metrics_count\":999 // count of metrics\r\n    }\r\n}\r\n```\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_rendering.md",
    "name": "./docs/manual/design_rendering.md",
    "content": "## Design - Rendering feature\r\n\r\nApplications can render pages on server side or on browser side.\r\n\r\nRender engine accepts rendering plugins:\r\n* default (simple HTML tags)\r\n* Foundation (ZURB HTML/CSS rendering framework)\r\n* jQuery UI\r\n\r\n### Description\r\nRendering is the process of making an Html content.\r\n\r\nDevapt allows you to render page content on the server or on the browser side or all both together.\r\n\r\nDevapt rendering is a set of pure functions which take settings, state and context.\r\n* settings contains what to be rendering: a trre of component descriptions.\r\n* state has initial values of component: label, placeholder, items...\r\n* context is an object with rendering helpers: functions resolver, result data to be updated...\r\n\r\nDevapt rendering is stateless and isomorphic component classes with simple signature:\r\n\r\nAll rendering functions update a virtual dom tree based on virtual-dom.\r\nRendered virtual nodes are stored in a RenderingResult instance.\r\nOn server side rendering, RenderingResult instance is serialized and given to the browser to update the browser dom tree.\r\nOn browser side, rendering is processed by Component classes which update the real dom tree and manage UI interactions (user actions, stream events...).\r\n\r\nA work in progress is to give plugins component class to the browser with browserify build process.\r\n\r\n\r\n\r\n### At startup\r\nA page is rendered by the server and send to the browser.\r\n\r\nThe initial page contains:\r\n* common page headers\r\n* applications initial settings and states: window.__INITIAL_STATE__\r\n* page initial content to be rendered: window.__INITIAL_CONTENT__\r\n* page initial content headers: css, js...\r\n* a single empty body DIV tag with id 'content'\r\n* a devapt bootstrap script\r\n\r\nDevapt bootstrap script calls:\r\n```javascript\r\nwindow.devapt().on_dom_loaded( window.devapt().create_runtime )\r\nwindow.devapt().on_runtime_created( window.devapt().render_page_content )\r\nwindow.devapt().on_content_rendered( window.devapt().init_anchors_commands )\r\n```\r\n\r\nFirst line create Devapt runtime, load initial Redux state.\r\n\r\nLine two render initial content and initialize router current path:\r\n```javascript\r\nwindow.devapt().ui().process_rendering_result(json_result)\r\nwindow.devapt().router().set_hash_if_empty('/')\r\n```\r\n\r\nLine three update anchors path with application url prefix.\r\n\r\n\r\n\r\n### Rendering result process\r\nAt startup <DIV id=\"content\"> is empty and initial RenderingResult contains a virtual tree of the \"content\" tag.\r\n\r\nFor example, \"content\" virtual tree children can contain:\r\n* \"menubar\":vnode_a\r\n* \"separator\":vnode_b\r\n* \"table\":vnode_c\r\n\r\nFirst children components are created and intialized with a vnode:\r\n```javascript\r\n// REMOVE \"content\" existing children\r\n\r\nvar compo_a = window.devapt().ui(\"menubar\")\r\ncompo_a.process_rendering_result(vnode_a)\r\ncompo_content.get_dom_element().appendChild( compo_a.get_dom_element() )\r\n\r\nvar compo_b = window.devapt().ui(\"separator\")\r\ncompo_b.process_rendering_result(vnode_b)\r\ncompo_content.get_dom_element().appendChild( compo_b.get_dom_element() )\r\n\r\nvar compo_c = window.devapt().ui(\"table\")\r\ncompo_c.process_rendering_result(vnode_c)\r\ncompo_content.get_dom_element().appendChild( compo_c.get_dom_element() )\r\n\r\n```\r\n\r\n\r\n\r\n### Rendering component\r\nEach rendering component is a base class of devapt/src/browser/Component.\r\nA Component has a private Rendering instance named \"_rendering\" which manage dom and vnode rendering actions.\r\n\r\n\r\n\r\n```javascript\r\n\r\nconst component_instance = window.document.devapt().runtime().ui().get_component_class(class_name)\r\nconst c = new component_class(settings)\r\nc.render(state)\r\n```\r\n* An other axis is to manage DOM update through a virtual DOM.\r\n\r\nDevapt comes is a set of rendering components but it is expandable with plugins for foundation-site, cytoscape...\r\n\r\n\r\n\r\n\r\n### Example\r\nFor example, at the beginning you have a /myapp/home route to display your home page.\r\n\r\nServer receives a /myapp/home request:\r\n* server search for a corresponding service service and reply with a 404 not found page if no service was found.\r\n* server ask service to process the request: service serves a static page, process a custom work or call a rendering middleware.\r\n* for rendering middleware, service response with a common page skeleton and a RenderingResult instance.\r\n* browser receive html page, init javascript to create ClientRuntime and UI instances.\r\n* browser UI instance processes RenderingResult to finalize page content.\r\n\r\nAfter you choose a menu item with a route command as\r\n```javascript\r\n{\r\n\t\"type\":\"display\",\r\n\t\"url\":\"/page2\",\r\n\t\"middleware\":\"mypage2service\"\r\n}\r\nassuming you have an application whith the /myapp route.\r\n```\r\nBrowser has append a route for each command at startup, so browser process the requested route and call UI instance method:\r\n```javascript\r\nwindow.document.devapt().runtime().ui().render_with_middleware(cmd, \"/myapp/page2\", \"mypage2service\")\r\n```\r\n* Browser asks server for a RenderingResult instance (server rendering result) via websocket.\r\n* Browser UI instance processes RenderingResult to update page content.\r\n\r\n\r\nIf you choose a menu item with a view command as\r\n```javascript\r\n{\r\n\t\"type\":\"display\",\r\n\t\"view\":\"page2_view\",\r\n\t\"menubar\":\"page2_menubar\"\r\n}\r\n```\r\n* Browser searchs for page2_view and page2_menubar (optional) settings. If not found into cache, asks server for settings.\r\n* Browser process rendering of page2_view and page2_menubar (optional).\r\n```javascript\r\nwindow.document.devapt().runtime().ui(page2_view).render()\r\nwindow.document.devapt().runtime().ui(page2_menubar).render()\r\n```\r\n\r\n\r\n\r\n\r\n### Status\r\n\r\nUsable but work in progress.\r\nNeed Test, Optimization and code review.\r\n\r\n\r\n\r\n\r\n### For Devapt users:\r\nComing soon.\r\n```javascript\r\n```\r\n\r\n\r\n\r\n### For Devapt contributers:\r\nComing soon.\r\n\r\n\r\n\r\n\r\n\r\n|    |     |    |\r\n|:---|:---:|---:|\r\n|[Metrics](https://github.com/lucbories/Devapt/tree/master/docs/features/METRICS.md)..........................|[Table of content](https://github.com/lucbories/Devapt/tree/master/docs/TOC.md)|..........................[Security](https://github.com/lucbories/Devapt/tree/master/docs/features/SECURITY.md)|\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_security.md",
    "name": "./docs/manual/design_security.md",
    "content": "## Design - Security feature\r\n\r\nDevapt framework lets you use the best in class authentication features with Passport technology.\r\n\r\nAuthorization is provided by an ACL module for per resource permissions with roles.\r\n\r\n\r\n### Description\r\n\r\n[See this excellent tutorial](https://www.ctl.io/developers/blog/post/build-user-authentication-with-node-js-express-passport-and-orchestrate)\r\n\r\nComing soon.",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_servers.md",
    "name": "./docs/manual/design_servers.md",
    "content": "## Design - Servers feature\r\n\r\nDevapt provides builtin servers for common usages (Restify, Express, SocketIO).\r\n\r\nBut you can code your own server.\r\n\r\nA server is attached to a node (a couple of hostname and port).\r\n\r\n\r\n### Description\r\nServers provide featured services.\r\n\r\n\r\n\r\n### Status\r\nExpress server: make middlewares use configurables.\r\n\r\nRestify server: make middlewares use configurables, check authorizations.\r\n\r\nNeed Test, Optimization and code review.\r\n\r\n\r\n\r\n### Builtin servers\r\nDevapt provides builtin servers for common usages.\r\nBut you can code your own server.\r\n\r\n#### EXPRESS\r\nServe static pages or middleware generated content.\r\n\r\n#### RESTIFY\r\nServe RESTfull content.\r\n\r\n\r\n\r\n#### For Devapt users:\r\nConfigure servers in nodes.json\r\nA JSON nodes servers declaration:\r\n```\r\n{\r\n\t\"nodes\":{\r\n\t\t\"NodeA\":{\r\n\t\t\t\"host\":\"localhost\",\r\n\t\t\t\"is_master\":true,\r\n\t\t\t\"servers\":{\r\n\t\t\t\t\"NodeALocal8080\":{\r\n\t\t\t\t\t\"type\":\"express\",\r\n\t\t\t\t\t\"port\":8080,\r\n\t\t\t\t\t\"protocole\":\"http\",\r\n\t\t\t\t\t\"middlewares\":[],\r\n\t\t\t\t\t\"use_socketio\":true,\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"security\": {\r\n\t\t\t\t\t\t\"authentication\": {\r\n\t\t\t\t\t\t\t\"enabled\":true,\r\n\t\t\t\t\t\t\t\"plugins\":[\"file_users\"]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"NodeALocal8081\":{\r\n\t\t\t\t\t\"type\":\"restify\",\r\n\t\t\t\t\t\"port\":8081,\r\n\t\t\t\t\t\"protocole\":\"http\",\r\n\t\t\t\t\t\"middlewares\":[],\r\n\t\t\t\t\t\"use_socketio\":true,\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"security\": {\r\n\t\t\t\t\t\t\"authentication\": {\r\n\t\t\t\t\t\t\t\"enabled\":true,\r\n\t\t\t\t\t\t\t\"plugins\":[\"file_users\"]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t\"NodeB\":{\r\n\t\t\t\"host\":\"localhost\",\r\n\t\t\t\"is_master\":false,\r\n\t\t\t\"servers\":{\r\n\t\t\t\t\"NodeBLocal8080\":{\r\n\t\t\t\t\t\"type\":\"express\",\r\n\t\t\t\t\t\"port\":8080,\r\n\t\t\t\t\t\"protocole\":\"http\",\r\n\t\t\t\t\t\"middlewares\":[],\r\n\t\t\t\t\t\"use_socketio\":true,\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"security\": {\r\n\t\t\t\t\t\t\"authentication\": {\r\n\t\t\t\t\t\t\t\"enabled\":true,\r\n\t\t\t\t\t\t\t\"plugins\":[\"file_users\"]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"NodeBLocal8081\":{\r\n\t\t\t\t\t\"type\":\"restify\",\r\n\t\t\t\t\t\"port\":8081,\r\n\t\t\t\t\t\"protocole\":\"http\",\r\n\t\t\t\t\t\"middlewares\":[],\r\n\t\t\t\t\t\"use_socketio\":true,\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"security\": {\r\n\t\t\t\t\t\t\"authentication\": {\r\n\t\t\t\t\t\t\t\"enabled\":true,\r\n\t\t\t\t\t\t\t\"plugins\":[\"file_users\"]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"NodeBLocal8082\":{\r\n\t\t\t\t\t\"type\":\"express\",\r\n\t\t\t\t\t\"port\":8082,\r\n\t\t\t\t\t\"protocole\":\"http\",\r\n\t\t\t\t\t\"middlewares\":[],\r\n\t\t\t\t\t\"use_socketio\":true,\r\n\t\t\t\t\t\r\n\t\t\t\t\t\"security\": {\r\n\t\t\t\t\t\t\"authentication\": {\r\n\t\t\t\t\t\t\t\"enabled\":true,\r\n\t\t\t\t\t\t\t\"plugins\":[\"file_users\"]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n```\r\nEach node contains one or more servers.\r\n\r\nA server declaration:\r\n```\r\n\"serverA2\":{\r\n\t\"type\":\"express\",\r\n\t\"port\":8082,\r\n\t\"protocole\":\"http\",\r\n\t\"middlewares\":[],\r\n\t\"use_socketio\":true,\r\n\t\r\n\t\"security\": {\r\n\t\t\"authentication\": {\r\n\t\t\t\"enabled\":true,\r\n\t\t\t\"plugins\":[\"file_users\"]\r\n\t\t}\r\n\t}\r\n}\r\n```\r\nA server has \r\n* a name string, the key of the server record (\"serverA2\"), should be unique on a node and between all distributed nodes.\r\n* a type string: express, restify, socket.io (\"express\"), \"cluster\" and \"bus\" are coming soon.\r\n* a port integer (8081), should be unique on a node.\r\n* a protocole string (\"http\"), others will arrive later.\r\n* a middlewares array ([]), not used yet but it will give configurable middleware uses.\r\n* a flag: use or not socketio between browser and server.\r\n* a security record.\r\n\r\n\r\n\r\n\r\n### For Devapt contributers:\r\n\r\n\r\n\r\n\r\n### Thanks\r\n\r\n#### Express\r\nStrongloop provides a wonderfull de facto standard library, Express.\r\nIt's a very popular project, used by many people.\r\n\r\n[Express](https://github.com/strongloop/express)\r\n\r\n\r\n#### Restify\r\nRestify helps to easily provides a RESTfull server.\r\n\r\n[Express](https://github.com/.../restify)\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_services.md",
    "name": "./docs/manual/design_services.md",
    "content": "## Design - Services feature\r\n\r\nDevapt enables features for applications with services.\r\n\r\nA service is enabled on a server on a node.\r\n\r\nA service is provided and consumed.\r\n\r\nBuilin services:\r\n* static assets router\r\n* resources definitions router\r\n* CRUD operations router\r\n* middleware router for functions as f(request,response,next)\r\n\r\n\r\n### Description\r\nA service is a feature linked on a server and added to an application.\r\n\r\nBuiltin services are:\r\n * assets: serves static files (css, js, html, images).\r\n * crud: provides Create/Read/Update/Delete features to use databases, provides CRUD models restfull API.\r\n * logs: provides all registered logs from all topology servers.\r\n * messages: provides all exchanged bus messages for metrics/default/logs buses.\r\n * metrics_bus: provides metrics about topology buses.\r\n * metrics_host: provides metrics about topology hosts.\r\n * metrics_http: provides metrics about http traffic.\r\n * metrics_nodejs: provides metrics about nodejs activity.\r\n * middleware: provides feature to serve page from middleware like code.\r\n * resource: provides topology resources settings.\r\n * security: provides security features for signin, signup, logout, renew (coming soon).\r\n * topology: provides hierarchical logical or physical topology trees.\r\n\r\n\r\n\r\n# Examples\r\n\r\nDefine two routes to serve static files:\r\n * http://myserver/ with files read from an absolute path /.../devapt-app-devtools/dist/assets\r\n * http://myserver/myapp/css/*.css with files read from a project relative path ./public/.\r\n\r\n```js\r\n\t\"html_assets_1\":{\r\n\t\t\"type\":\"html_assets\",\r\n\t\t\"routes\":[\r\n\t\t\t{\r\n\t\t\t\t\"is_global\":true,\r\n\t\t\t\t\"route\":\"/\",\r\n\t\t\t\t\"directory\":\"/.../devapt-app-devtools/dist/assets\",\r\n\t\t\t\t\"default\":\"index.html\"\r\n\t\t\t},\r\n\r\n\t\t\t{\r\n\t\t\t\t\"route\":\"/css/.*.css\",\r\n\t\t\t\t\"directory\":\"./public\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n```\r\n\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\design_starting_process.md",
    "name": "./docs/manual/design_starting_process.md",
    "content": "## Design - runtime starting process\r\n\r\n\r\n### Starting code\r\n\r\n```js\r\nvar devapt = require('devapt/base/runtime'); // for ES5\r\nimport runtime from 'devapt/base/runtime' // for ES6 / ES2015\r\n\r\nvar runtime_settings = {\r\n\t'is_master':true,\r\n\t'name':'NodeA',\r\n\t\r\n\t// BUSES SERVERS (for inter nodex communication)\r\n\t\"master\":{\r\n\t\t\"name\":\"NodeA\",\r\n\t\t\r\n\t\t\"msg_bus\":{\r\n\t\t\t\"type\":\"simplebus_server\",\r\n\t\t\t\"host\":\"localhost\",\r\n\t\t\t\"port\":5000\r\n\t\t},\r\n\t\t\"logs_bus\":{\r\n\t\t\t\"type\":\"simplebus_server\",\r\n\t\t\t\"host\":\"localhost\",\r\n\t\t\t\"port\":5001\r\n\t\t},\r\n\t\t\"metrics_bus\":{\r\n\t\t\t\"type\":\"simplebus_server\",\r\n\t\t\t\"host\":\"localhost\",\r\n\t\t\t\"port\":5002\r\n\t\t}\r\n\t},\r\n\t\r\n\t\"base_dir\": \"\",\r\n\t\r\n\t\"settings_provider\": {\r\n\t\t\"source\":\"local_file\",\r\n\t\t\"relative_path\":\"resources/apps.json\"\r\n\t}\r\n}\r\n\r\nruntime.load(runtime_settings)\r\n```\r\n\r\n\r\n---------------------\r\n### Starting sequence brief\r\n\r\n#### import runtime from 'devapt/base/runtime'\r\nThe first time the file is loaded, the singleton instance of Runtime class is created.\r\n\r\nRuntime.constructor is called to define instance attributes:\r\n```js\r\nthis.is_runtime = true\r\nthis.is_master = this.get_setting('is_master', false)\r\n\r\nthis.node = null\r\n\r\nthis.nodes = new Collection()\r\nthis.servers = new Collection()\r\nthis.services = new Collection()\r\nthis.registered_services = new Collection()\r\n\r\nthis.modules = new Collection()\r\nthis.plugins = new Collection()\r\nthis.resources = new Collection()\r\n\r\nthis.transactions = new Collection()\r\nthis.applications = new Collection()\r\n\r\nthis.security = new Security()\r\n```\r\n\r\nSecurity.constructor\r\n* call AuthenticationManager.constructor\r\n* call AuthorizationManager.constructor\r\n\r\n\r\n#### runtime.load\r\nLoad method register runtime settings and call a sequence of executable instances.\r\n* RuntimeStage0Executable\r\n* RuntimeStage1Executable\r\n* RuntimeStage2Executable\r\n* RuntimeStage3Executable\r\n* RuntimeStage4Executable\r\n* RuntimeStage5Executable\r\n\r\n\r\n\r\n---------------------\r\n### Starting sequence details\r\n\r\n#### Runtime loading stage 0 - RuntimeStage0Executable\r\n* create and load runtime node\r\n* create bus instance or connect to an existing bus\r\n\r\nExample of code\r\n```js\r\nthis.runtime.node = new Node(node_name, this.runtime.get_settings())\r\nthis.runtime.node.load()\r\n```\r\n\r\n\r\nNode.constructor\r\n* init Node.servers collection\r\n\r\n\r\nNode.load (for a master node)\r\n* create and load a bus server and connect to it\r\n* create and load a metrics server and connect to it\r\n\r\n\r\nNode.load (not for a master node)\r\n* connect to an existing bus server\r\n* connect to an existing metrics server\r\n\r\n\r\n\r\n#### Runtime loading stage 1 - RuntimeStage1Executable\r\n* load master apps settings\r\n* load security settings\r\n* load loggers settings\r\n\r\ndispatch_store_config_set_all(settings) for master node only\r\n\r\nruntime.security.load = Security.load\r\n* call this.authentication_manager.load(authentication settings)\r\n* call this.authorization_manager.load(authorization settings)\r\n\r\nAuthenticationManager.load\r\n* select one of AuthenticationPlugin* (AuthenticationPluginPassportLocalDb, AuthenticationPluginPassportLocalFile)\r\n* call AuthenticationPlugin*.constructor\r\n* call AuthenticationPlugin*.enable(plugin settings)\r\n!!! AuthenticationPluginPassportLocalDb needs users Model which is defined in stage 3\r\n\r\n\r\n#### Runtime loading stage 2 - RuntimeStage2Executable\r\n* create node servers (for master node only)\r\n* create services (for master node only)\r\n\r\n```js\r\nruntime.node.load_master_settings(node_settings)\r\nmake_services()\r\n```\r\n\r\n\r\nNode.load_master_settings\r\ncall Node.load_servers\r\nfor each servers settings call Node.create_server\r\n```js\r\nlet server = this.create_server(server_type, server_name, server_cfg)\r\nserver.load()\r\nserver.node = this\r\nserver.init_bus_client(host, port)\r\nthis.servers.add(server)\r\n```\r\n\r\nNode.create_server\r\ncreate a Server instance (ExpressServer, RestifyServer...)\r\n\r\nServer.load\r\nload server settings\r\ncall Server.build_server\r\n\r\nServer.build_server\r\nbuild a Server.server instance as an Express or Restify object for example.\r\nload server middlewares for errors, security, metrics...\r\n\r\nmake_services\r\nfor each service config of node settings services\r\n* create a Service instance\r\n* call service.enable()\r\n* call runtime.services.add(service)\r\n\r\n\r\n\r\n#### Runtime loading stage 3 - RuntimeStage3Executable\r\n* create Database instances (connexions), call db.load, call runtime.resources.add(db)\r\n* create Module instances, call module.load, call runtime.modules.add(module)\r\n* loop on modules resources and call runtime.resources.add(res_obj) for each one\r\n* for each model resources call resource.load_associations() and resource.load_includes()\r\n* create Plugin instances, call plugin.load, call runtime.plugins.add(plugin)\r\n\r\nModule.load\r\nloop on resources settings and create Resource instances (Model, View, Menu, Menubar, Database)\r\n\r\n\r\n\r\n#### Runtime loading stage 4 - RuntimeStage4Executable\r\nIf node is master\r\n* create Application instances from runtime settings\r\n* call application.load\r\n* call runtime.applications.add(application)\r\n\r\nApplication.load\r\n* enable consumed services\r\n* enable used services\r\n* enable used plugins\r\n* enable provided services\r\n\r\n\r\n\r\n\r\n#### Runtime loading stage 5 - RuntimeStage5Executable\r\n* enable servers (for master node only)\r\n\r\nif node is master node, call runtime.node.start()\r\n\r\nruntime.node.start\r\ncall server.enable() on each runtime servers\r\n\r\n\r\nServer.enable\r\napply security middlewares !!! TODO\r\nstart listening\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\tutorials.md",
    "name": "./docs/manual/tutorials.md",
    "content": "# Tutorials\r\n\r\nSome usefull applications are:\r\n * DEVTOOLS which actualy display settings, logs, buses messages, metrics and topology. [DEVTOOLS app project](https://github.com/lucbories/devapt-app-devtools/)\r\n * TESTBUS wich helps to test distributed features: basic ping/pong communication, messaging, logs, topology. [TESTBUS app project](https://github.com/lucbories/devapt-app-testbus/)\r\n * TESTUI wich helps to test user interface features. (coming soon) [TESTUI app project](https://github.com/lucbories/devapt-app-testui/)",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\projects.md",
    "name": "./docs/manual/projects.md",
    "content": "# Projects map\r\n\r\nDevapt projects refcard.\r\n\r\n\r\n## Development Map\r\n\r\n### Projects core dependencies (package.json)\r\n\r\n|Project|devapt-core-common|devapt-core-browser|devapt-core-services|devapt-core-server|\r\n|------|------|------|------|------|\r\n|devapt-app-testbus|x|x|x|x|\r\n|devapt-app-testui|x|x|x|x|\r\n|devapt-app-devtools|x|x|x|x|\r\n|devapt-core-doc|x|x|x|x|\r\n|devapt-core-common|||||\r\n|devapt-core-browser|x||||\r\n|devapt-core-services|x||||\r\n|devapt-core-server|x||x||\r\n|devapt-features-foundation6||x|||\r\n|devapt-features-cytoscape||x|||\r\n|devapt-features-sparklines||x|||\r\n|devapt-features-labs|x|x|||\r\n|devtools|x||x||\r\n\r\n### Projects features dependencies (package.json)\r\n\r\n|Project|devapt-features-foundation6|devapt-features-cytoscape|devapt-features-sparklines|devapt-features-labs|devtools|\r\n|------|------|------|------|------|------|\r\n|devapt-app-testbus||||||\r\n|devapt-app-testui||||||\r\n|devapt-app-devtools|||||x|\r\n|devapt-core-common||||||\r\n|devapt-core-browser||||||\r\n|devapt-core-services||||||\r\n|devapt-core-server||||||\r\n|devapt-features-labs||||||\r\n|devapt-app-labs|x|||x||\r\n|devtools|x|x|x|||\r\n\r\n\r\n\r\n## devapt-core-doc\r\n[DEVAPT CORE DOC project](https://github.com/lucbories/devapt-core-doc/)\r\n\r\nPurpose: generate core projects documentation (API, manuals, tutorials)\r\n\r\nDevapt projects dependencies:\r\n * devapt-core-browser\r\n * devapt-core-common\r\n * devapt-core-server\r\n * devapt-core-services\r\n\r\n\r\n## devapt-core-common\r\n[DEVAPT CORE COMMON project](https://github.com/lucbories/devapt-core-common/)\r\n\r\nPurpose: common features for all others projects.\r\n\r\nDevapt projects dependencies:\r\n * none\r\n\r\n\r\n## devapt-core-services\r\n[DEVAPT CORE SERVICES project](https://github.com/lucbories/devapt-core-services/)\r\n\r\nPurpose: services implementation for browser/server projects.\r\n\r\nDevapt projects dependencies:\r\n * devapt-core-common\r\n\r\nProvided services:\r\n * assets routes\r\n * logs stream provider\r\n * messages/logs/metrics stream provider and dispatching\r\n * filtered metrics stream provider\r\n * middleware based routes provider\r\n * ping/pong provider\r\n * resources configuration provider\r\n * security login/signup/logout/... provider (coming soon)\r\n * topology description provider\r\n\r\n\r\n## devapt-core-server\r\n[DEVAPT CORE SERVER project](https://github.com/lucbories/devapt-core-server/)\r\n\r\nPurpose: server features. Provides assets, resources, services, security, plugins, server runtime and metrics.\r\n\r\nDevapt projects dependencies:\r\n * devapt-core-common\r\n * devapt-core-services\r\n\r\n\r\n## devapt-core-browser\r\n[DEVAPT CORE BROWSER project](https://github.com/lucbories/devapt-core-browser/)\r\n\r\nPurpose: browser features. Provides commands, client runtime and components.\r\n\r\nDevapt projects dependencies:\r\n * devapt-core-common\r\n\r\n\r\n## devapt-app-testbus\r\n[TESTBUS app project](https://github.com/lucbories/devapt-app-testbus/)\r\n\r\nPurpose: messages bus testing application.\r\n\r\nDevapt projects dependencies:\r\n * devapt-core-common\r\n * devapt-core-browser\r\n * devapt-core-server\r\n * devapt-core-services\r\n\r\n\r\n## devapt-app-testui\r\n[TESTUI app project](https://github.com/lucbories/devapt-app-testui/)\r\n\r\nPurpose: user interface testing application.\r\n\r\nDevapt projects dependencies:\r\n * devapt-core-common\r\n * devapt-core-browser\r\n * devapt-core-server\r\n * devapt-core-services\r\n\r\n\r\n## devapt-features-foundation6\r\n[DEVAPT FOUNDATION 6 features project](https://github.com/lucbories/devapt-features-foundation6/)\r\n\r\nPurpose: Foundation 6 rendering features.\r\n\r\nDevapt projects dependencies:\r\n * devapt-core-common\r\n\r\n\r\n## devapt-features-cytoscape\r\n[DEVAPT CYTOSCAPE features project](https://github.com/lucbories/devapt-features-cytoscape/)\r\n\r\nPurpose: Cytoscape rendering features.\r\n\r\nDevapt projects dependencies:\r\n * devapt-core-common\r\n * devapt-core-browser\r\n\r\n\r\n## devapt-features-sparklines\r\n[DEVAPT SPARKLINES features project](https://github.com/lucbories/devapt-features-sparklines/)\r\n\r\nPurpose: Sparklines rendering features.\r\n\r\nDevapt projects dependencies:\r\n * devapt-core-common\r\n * devapt-core-browser\r\n\r\n\r\n## devapt-features-labs\r\n[DEVAPT LABS features project](https://github.com/lucbories/devapt-features-labs/)\r\n\r\nPurpose: labs features. Provides calculus and plots.\r\n\r\nDevapt projects dependencies:\r\n * devapt-core-common\r\n * devapt-core-browser\r\n\r\n\r\n## devapt-app-labs\r\n[DEVAPT LABS app project](https://github.com/lucbories/devapt-app-labs/)\r\n\r\nPurpose: Amazing labs application.\r\n\r\nDevapt projects dependencies:\r\n * devapt-core-common\r\n * devapt-core-server\r\n * devapt-core-services\r\n * devapt-features-foundation6\r\n * devapt-features-labs\r\n\r\n\r\n## devapt-devtools\r\n[DEVTOOLS project](https://github.com/lucbories/devapt-devtools/)\r\n\r\nPurpose: development tools features.\r\n\r\nDevapt projects dependencies:\r\n * devapt-core-common\r\n * devapt-features-cytoscape\r\n * devapt-features-foundation6\r\n * devapt-features-sparklines\r\n\r\n\r\n## devapt-app-devtools\r\n[DEVTOOLS app project](https://github.com/lucbories/devapt-app-devtools/)\r\n\r\nPurpose: development tools application.\r\n\r\nDevapt projects dependencies:\r\n * devapt-core-common\r\n * devapt-core-server\r\n * devapt-core-services\r\n * devapt-devtools\r\n * devapt-features-cytoscape\r\n * devapt-features-foundation6\r\n * devapt-features-sparklines\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\Users\\lbories\\Documents\\PERSONNEL\\MYPROJECTS\\GitHub\\devapt-core-doc\\docs\\manual\\roadmap.md",
    "name": "./docs/manual/roadmap.md",
    "content": "# Roadmap\r\n\r\n\r\n## 2.0.x   breaking changes and new features (CURRENT)\r\n\r\n### MAIN GOALS\r\nWhen I was working on devtools features with devapt 1.0.x, I meet some trouble with missing features.\r\nAn other problem was to deal with topology definition and deployment information previously stored in many pieces of code.\r\nIt was difficult to obtain a global view of defined or deployed topology.\r\nSo I pull out deployment information from topology definition.\r\n\r\nOne missing feature for fine deployment was the lake of customer and version of defined items.\r\n\r\n\r\n\r\nMain added features:\r\n* isomorphic Credentials class to deal with session information on browser or on server (tenant, application, username, token...). (DONE)\r\n* isomorphic data management classes: DataStore, DataRecord, DataCollection...\r\n* topology management classes: TopologyDefineItem...(DONE)\r\n* topology deployment classes: TopologyDeployLocalNode... (DONE)\r\n* browser router (for single page application and more) (DONE)\r\n* isomorphic cache management (DONE)\r\n* versionned Collection to register versionned items (CURRENT)\r\n \r\n\r\nMain breaking changes:\r\n* settings json format has evolved\r\n* module was renamed to package\r\n* change Collection.$items from [] to {}, use lodash as collection backend\r\n\r\n\r\n\r\nNew topology tree is now:\r\n```\r\nworld: the root of the topology\r\n\r\n-nodes\r\n--nodeA\r\n---serverA1\r\n---serverA2\r\n\r\n-tenants\r\n--tenantA\r\n---applications\r\n----applicationA\r\n-----url\r\n-----license\r\n-----provided_services\r\n-----used_services\r\n-----used_packages\r\n-----used_plugins\r\n-----assets\r\n---packages\r\n----packageA\r\n-----base_dir\r\n-----resources\r\n-----services\r\n---security\r\n\r\n-plugins\r\n--pluginA\r\n---type\r\n---file or package\r\n\r\n-deployments\r\n--tenantA\r\n---applicationA\r\n----assets\r\n----services\r\n\r\n-security\r\n-loggers\r\n-traces\r\n```\r\nThat's why previous roadmap is outdated, sorry for the changes.\r\n\r\n\r\n\r\n### enhance core features, architecture and stability (previous 1.1.x)\r\n\r\n#### PROJECT\r\n* refactor directories into common/, browser/, server/ (DONE)\r\n* implement Unit tests for base classes (CURRENT)\r\n* use babel-register to debug without build to dist/ directory (DONE)\r\n* test on nodejs 4.4, 5.1, 6.x (DONE)\r\n\r\n#### FEATURES\r\n* implement browser router for single page application (DONE)\r\n* enhance devapt-devtools: runtime registry viewing (DONE)\r\n* enhance devapt-devtools: runtime topology viewing (DONE)\r\n* enhance devapt-devtools: metrics on topology (TODO)\r\n* enhance devapt-devtools: application Redux state viewing (TODO)\r\n* enhance devapt-devtools: application Redux state history player (TODO)\r\n* implement unit test for instances, traces, loggers... (CURRENT)\r\n* implement topology registry (DONE)\r\n* implement topology runtime (DONE)\r\n* implement generic api for state storing (Redux, Map) (DONE)\r\n* implement cache management classes for browser and server (DONE)\r\n\r\n\r\n\r\n### enhance datas access features (previous 1.3.x)\r\n\r\n### PROJECT\r\n* document datas access layers (TODO)\r\n* write Unit tests for datas access classes (TODO)\r\n\r\n\r\n### FEATURES\r\n* enhance devapt-devtools: create datas access dashboard (TODO)\r\n* enhance devapt-devtools: create datas admin backend (TODO)\r\n* implement homogeneous datas access for all datasources (DONE)\r\n* enhance sequelize datasource for SQL databases:MySQL, MariaDb, PostgreSQL, SQLite, MSSQL (DONE)\r\n* implement waterline ORM layer (TODO)\r\n* implement Redis datasource for caching, messaging, NoSQL database (TODO)\r\n* implement datas management classes for browser and server (DONE)\r\n* implement datas cache on distributed nodes (TODO)\r\n\r\n\r\n\r\n## 2.1.x\tenhance distributed features and documentatioon (LATER)\r\n\r\n### PROJECT\r\n* update web site on github with project/, technical/... (TODO)\r\n* document build process (TODO)\r\n\r\n\r\n### FEATURES\r\n* implement distributed services consumers (TODO)\r\n* implement master configuration changes: receive and propagate complete/add/remove/update (TODO)\r\n* implement master node revocation and promotion (TODO)\r\n* implement node settings filter (TODO)\r\n* implement swagger API player (TODO)\r\n* implement circuit breaker on browser (TODO)\r\n\r\n\r\n\r\n## 2.2.x\tenhance security features (LATER)\r\n\r\n### PROJECT\r\n* document security process (TODO)\r\n* write Unit tests for security classes (TODO)\r\n\r\n\r\n### FEATURES\r\n* enhance devapt-devtools: create security dashboard (TODO)\r\n* enhance devapt-devtools: create security admin backend (TODO)\r\n* implement security routes /login, /signup, /logout (TODO)\r\n* implement Passport security plugin (TODO)\r\n* implement authorization with ACL (TODO)\r\n* implement security token (TODO)\r\n* implement registry setting validation with a json schema (TODO)\r\n\r\n\r\n\r\n## 2.3.x\timplement Cloud features (LATER)\r\n\r\n### PROJECT\r\n* document Cloud integration process (TODO)\r\n* write Unit tests for Cloud integration classes (TODO)\r\n\r\n\r\n### FEATURES\r\n* implement AWS DynamoDB datasource (TODO)\r\n* implement AWS Lambda integration (TODO)\r\n* implement AWS Security integration (TODO)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "static": true,
    "access": "public"
  }
]