[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "js/default_plugins/services_default_plugin.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport _      from 'lodash'\r\n\r\n// SERVER IMPORTS\r\nimport T               from 'devapt-core-common/dist/js/utils/types'\r\nimport ServicesPlugin  from 'devapt-core-common/dist/js/plugins/services_plugin'\r\nimport Service         from 'devapt-core-common/dist/js/services/service'\r\nimport ServiceProvider from 'devapt-core-common/dist/js/services/service_provider'\r\nimport ServiceConsumer from 'devapt-core-common/dist/js/services/service_consumer_by_url'\r\n\r\n\r\nconst default_plugins_map = {\r\n\t'ping_svc':{\r\n\t\t'provider':'devapt-core-services/dist/js/services/ping/ping_svc_provider'\r\n\t},\r\n\t'html_assets_svc':{\r\n\t\t'provider':'devapt-core-services/dist/js/services/assets/assets_svc_provider'\r\n\t},\r\n\t'logs_svc':{\r\n\t\t'provider':'devapt-core-services/dist/js/services/logs/logs_svc_provider'\r\n\t},\r\n\t'topology_svc':{\r\n\t\t'provider':'devapt-core-services/dist/js/services/topology/topology_svc_provider'\r\n\t},\r\n\t'messages_svc':{\r\n\t\t'provider':'devapt-core-services/dist/js/services/messages/messages_svc_provider'\r\n\t}\r\n\t\r\n\t// 'middleware':               'devapt-core-services/dist/js/services/middleware/mw_service',\r\n\t// 'metrics_http':             'devapt-core-services/dist/js/services/metrics_http/metrics_service',\r\n\t// 'metrics_host':             'devapt-core-services/dist/js/services/metrics_host/metrics_service',\r\n\t// 'metrics_nodejs':           'devapt-core-services/dist/js/services/metrics_nodejs/metrics_service',\r\n\t// 'metrics_bus':              'devapt-core-services/dist/js/services/metrics_bus/metrics_service',\r\n\t// 'logs':                     'devapt-core-services/dist/js/services/logs/logs_service',\r\n\t// 'topology':                 'devapt-core-services/dist/js/services/topology/topology_service',\r\n\t// 'messages':                 'devapt-core-services/dist/js/services/messages/messages_service',\r\n\t// 'rest_api_models_query':    'devapt-core-services/dist/js/services/crud/crud_service',\r\n\t// 'rest_api_models_modifier': 'devapt-core-services/dist/js/services/crud/crud_service',\r\n\t// 'rest_api_resources_query': 'devapt-core-services/dist/js/services/resource/resources_service',\r\n\t// 'resources_query':          'devapt-core-services/dist/js/services/resource/resources_service',\r\n\t/*'html_assets':              'devapt-core-services/dist/js/services/assets/assets_service',\r\n\t'security':                 'devapt-core-services/dist/js/services/security/security_service'*/\r\n}\r\n\r\n\r\nconst context = 'services/default_plugins/services_default_plugin'\r\n\r\n\r\n\r\n/**\r\n * Plugin class for default services.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class DefaultServicesPlugin extends ServicesPlugin\r\n{\r\n\tconstructor(arg_runtime, arg_manager)\r\n\t{\r\n\t\tassert( T.isObject(arg_runtime) && arg_runtime.is_base_runtime, context + ':constructor:bad runtime instance' )\r\n\t\tassert( T.isObject(arg_manager), context + ':constructor:bad plugins manager instance' )\r\n\r\n\t\tsuper(arg_runtime, arg_manager, 'DefaultServices', '1.0.0')\r\n\r\n\t\tthis._services_classes = {}\r\n\r\n\t\t// FILL SERVICES CLASSES\r\n\t\t_.forEach(\r\n\t\t\tdefault_plugins_map,\r\n\t\t\t(value, svc_name)=>{\r\n\t\t\t\tconsole.log('service [' + svc_name + '] configuration=', value)\r\n\r\n\t\t\t\t// TEMPORARY DEFAULT CLASSES\r\n\t\t\t\tlet provider_class = ServiceProvider\r\n\t\t\t\tlet consumer_class = ServiceConsumer\r\n\t\t\t\tlet service_class  = Service\r\n\t\t\t\t\r\n\t\t\t\t// GET SERVICE CLASS\r\n\t\t\t\tif ( T.isClass(value) )\r\n\t\t\t\t{\r\n\t\t\t\t\tservice_class = value\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// GET SERVICE CLASS FILE\r\n\t\t\t\tif ( T.isString(value) )\r\n\t\t\t\t{\r\n\t\t\t\t\tservice_class = this.load_feature_class(value)\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// GET SERVICE CONFIGURATION\r\n\t\t\t\tif ( T.isObject(value) )\r\n\t\t\t\t{\r\n\t\t\t\t\t// GET SERVICE PROVIDER CLASS FILE\r\n\t\t\t\t\tif ( T.isString(value.provider) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconsole.log('service [' + svc_name + '] configuration:value.provider', value.provider)\r\n\t\t\t\t\t\tprovider_class = this.load_feature_class(value.provider)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// GET SERVICE CONSUMER CLASS FILE\r\n\t\t\t\t\tif ( T.isString(value.consumer) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconsole.log('service [' + svc_name + '] configuration:value.consumer', value.consumer)\r\n\t\t\t\t\t\tconsumer_class = this.load_feature_class(value.consumer)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// GET SERVICE CLASS FILE\r\n\t\t\t\t\tif ( T.isString(value.service) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconsole.log('service [' + svc_name + '] configuration:value.service', value.service)\r\n\t\t\t\t\t\tservice_class = this.load_feature_class(value.service)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// CHECK SERVICES CLASSES\r\n\t\t\t\tif ( ! T.isClass(service_class) || ! T.isClass(provider_class) || ! T.isClass(consumer_class) )\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.log('service [' + svc_name + '] service_class', service_class)\r\n\t\t\t\t\tconsole.log('service [' + svc_name + '] provider_class', provider_class)\r\n\t\t\t\t\tconsole.log('service [' + svc_name + '] consumer_class', consumer_class)\r\n\t\t\t\t\tconsole.error(context + ':constructor:bad classes for service=' + svc_name)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// REGISTER SERVICES CLASSES\r\n\t\t\t\tconsole.log(context + ':constructor:register classes for service=' + svc_name)\r\n\t\t\t\tthis._services_classes[svc_name] = {\r\n\t\t\t\t\tservice:service_class,\r\n\t\t\t\t\tprovider:provider_class,\r\n\t\t\t\t\tconsumer:consumer_class\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\t\r\n\t\r\n\thas(arg_class_name)\r\n\t{\r\n\t\treturn (arg_class_name in this._services_classes)\r\n\t}\r\n\t\r\n\t\r\n    \r\n\t/**\r\n     * Create a component instance.\r\n\t * \r\n     * @param {string} arg_class_name - type or class feature name.\r\n     * @param {string} arg_name - feature name.\r\n     * @param {object} arg_settings - feature settings plain object.\r\n     * @param {object} arg_state - feature initial state plain object (optional).\r\n\t * \r\n     * @returns {object} feature instance.\r\n     */\r\n\tcreate(arg_class_name, arg_name, arg_settings, arg_state)\r\n\t{\r\n\t\tassert( T.isString(arg_class_name), context + ':bad class string')\r\n\t\tassert( T.isString(arg_name), context + ':bad name string')\r\n\t\tassert( T.isObject(arg_settings), context + ':bad settings object')\r\n\t\t\r\n\t\tconst found = (arg_class_name in this._services_classes)\r\n\t\tassert( found, context + ':create:feature name not found')\r\n\t\t\r\n\t\tconst service_classes = this._services_classes[arg_class_name]\r\n\r\n\t\tif ( T.isFunction(arg_settings.has) )\r\n\t\t{\r\n\t\t\targ_settings = arg_settings.set('provider_class', service_classes.provider)\r\n\t\t\targ_settings = arg_settings.set('consumer_class', service_classes.consumer)\r\n\t\t} else {\r\n\t\t\targ_settings.provider_class = service_classes.provider\r\n\t\t\targ_settings.consumer_class = service_classes.consumer\r\n\t\t}\r\n\t\t\r\n\t\treturn super.create(arg_class_name, arg_name, arg_settings, arg_state)\r\n\t}\r\n\r\n\r\n\r\n\tget_feature_class(arg_class_name)\r\n\t{\r\n\t\tassert( T.isString(arg_class_name), context + ':create:bad name string')\r\n\t\t\r\n\t\tconst found = (arg_class_name in this._services_classes)\r\n\t\tassert( found, context + ':create:feature name not found')\r\n\t\t\r\n\t\tconst service_classes = this._services_classes[arg_class_name]\r\n\t\t\r\n\t\treturn service_classes.service\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/default_plugins/services_default_plugin.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "variable",
    "name": "default_plugins_map",
    "memberof": "js/default_plugins/services_default_plugin.js",
    "static": true,
    "longname": "js/default_plugins/services_default_plugin.js~default_plugins_map",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/default_plugins/services_default_plugin.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"ping_svc\": *, \"html_assets_svc\": *, \"logs_svc\": *, \"topology_svc\": *, \"messages_svc\": *}"
      ]
    }
  },
  {
    "__docId__": 2,
    "kind": "variable",
    "name": "context",
    "memberof": "js/default_plugins/services_default_plugin.js",
    "static": true,
    "longname": "js/default_plugins/services_default_plugin.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/default_plugins/services_default_plugin.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 3,
    "kind": "class",
    "name": "DefaultServicesPlugin",
    "memberof": "js/default_plugins/services_default_plugin.js",
    "static": true,
    "longname": "js/default_plugins/services_default_plugin.js~DefaultServicesPlugin",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/default_plugins/services_default_plugin.js",
    "importStyle": "DefaultServicesPlugin",
    "description": "Plugin class for default services.",
    "lineNumber": 56,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "devapt-core-common/dist/js/plugins/services_plugin~ServicesPlugin"
    ]
  },
  {
    "__docId__": 4,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/default_plugins/services_default_plugin.js~DefaultServicesPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/default_plugins/services_default_plugin.js~DefaultServicesPlugin#constructor",
    "access": null,
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "arg_runtime",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_manager",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 5,
    "kind": "member",
    "name": "_services_classes",
    "memberof": "js/default_plugins/services_default_plugin.js~DefaultServicesPlugin",
    "static": false,
    "longname": "js/default_plugins/services_default_plugin.js~DefaultServicesPlugin#_services_classes",
    "access": null,
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 6,
    "kind": "method",
    "name": "has",
    "memberof": "js/default_plugins/services_default_plugin.js~DefaultServicesPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/default_plugins/services_default_plugin.js~DefaultServicesPlugin#has",
    "access": null,
    "description": null,
    "lineNumber": 137,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "arg_class_name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 7,
    "kind": "method",
    "name": "create",
    "memberof": "js/default_plugins/services_default_plugin.js~DefaultServicesPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/default_plugins/services_default_plugin.js~DefaultServicesPlugin#create",
    "access": null,
    "description": "Create a component instance.",
    "lineNumber": 154,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} feature instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_class_name",
        "description": "type or class feature name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "feature name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "feature settings plain object."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_state",
        "description": "feature initial state plain object (optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "feature instance."
    }
  },
  {
    "__docId__": 8,
    "kind": "method",
    "name": "get_feature_class",
    "memberof": "js/default_plugins/services_default_plugin.js~DefaultServicesPlugin",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/default_plugins/services_default_plugin.js~DefaultServicesPlugin#get_feature_class",
    "access": null,
    "description": null,
    "lineNumber": 179,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "arg_class_name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 9,
    "kind": "file",
    "name": "js/executables/executable_command.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T          from 'devapt-core-common/dist/js/utils/types'\r\nimport Executable from 'devapt-core-common/dist/js/base/executable'\r\n\r\n\r\nlet context = 'services/executables/executable_command'\r\n\r\n\r\n\r\n/**\r\n *  @file todo Executable command class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class ExecutableCommand extends Executable\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(context)\r\n\t}\r\n\t\r\n\t\r\n\tprepare(arg_settings)\r\n\t{\r\n\t\tassert( T.isObject(arg_settings), context + ':no given config')\r\n\t\tthis.store_config = arg_settings\r\n\t\t\r\n\t\tassert(T.isObject(this.store_config), context + ':bad config object')\r\n\t\t\r\n\t\tassert(T.isObject(this.store_config.server), context + ':bad server object')\r\n\t\tassert(this.store_config.server.is_server, context + ':bad server instance')\r\n\t\t\r\n\t\tthis.server = this.store_config.server\r\n\t}\r\n\t\r\n\t\r\n\texecute(arg_data)\r\n\t{\r\n\t\t// CHECK APPLICATION\r\n\t\tassert(T.isObject(arg_data), context + ':bad application object')\r\n\t\tassert(arg_data.is_topology_define_application, context + ':bad application instance')\r\n\t\tconst application = arg_data\r\n\t\tthis.info('Execute: add server route for ' + application.$name)\r\n\t\t\r\n\t\t// CHECK SERVER\r\n\t\tconst server_instance = this.server\r\n\t\tassert(T.isString(server_instance.server_type), context + ':bad server_instance.server_type string')\r\n\t\t// assert(this.store_config.server_types.indexOf(server_instance.server_type) > -1, context + ':server_instance.server_type not valid')\r\n\t\t// console.log(server_instance, 'server_instance')\r\n\t\t// console.log(server_instance.server, 'server_instance.server')\r\n\t\t// assert(T.isObject(server_instance.server), context + ':bad server_instance.server object')\r\n\t\tassert(T.isObject(server_instance.server) || T.isFunction(server_instance.server), context + ':bad server_instance.server object or function')\r\n\t\t\r\n\t\treturn Promise.resolve()\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/executables/executable_command.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 10,
    "kind": "variable",
    "name": "context",
    "memberof": "js/executables/executable_command.js",
    "static": true,
    "longname": "js/executables/executable_command.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/executables/executable_command.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 11,
    "kind": "class",
    "name": "ExecutableCommand",
    "memberof": "js/executables/executable_command.js",
    "static": true,
    "longname": "js/executables/executable_command.js~ExecutableCommand",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/executables/executable_command.js",
    "importStyle": "ExecutableCommand",
    "description": "",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "todo Executable command class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "devapt-core-common/dist/js/base/executable~Executable"
    ]
  },
  {
    "__docId__": 12,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/executables/executable_command.js~ExecutableCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/executables/executable_command.js~ExecutableCommand#constructor",
    "access": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 13,
    "kind": "method",
    "name": "prepare",
    "memberof": "js/executables/executable_command.js~ExecutableCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/executables/executable_command.js~ExecutableCommand#prepare",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "arg_settings",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 14,
    "kind": "member",
    "name": "store_config",
    "memberof": "js/executables/executable_command.js~ExecutableCommand",
    "static": false,
    "longname": "js/executables/executable_command.js~ExecutableCommand#store_config",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 15,
    "kind": "member",
    "name": "server",
    "memberof": "js/executables/executable_command.js~ExecutableCommand",
    "static": false,
    "longname": "js/executables/executable_command.js~ExecutableCommand#server",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 16,
    "kind": "method",
    "name": "execute",
    "memberof": "js/executables/executable_command.js~ExecutableCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/executables/executable_command.js~ExecutableCommand#execute",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "arg_data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 17,
    "kind": "file",
    "name": "js/executables/executable_route.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T          from 'devapt-core-common/dist/js/utils/types'\r\nimport Executable from 'devapt-core-common/dist/js/base/executable'\r\nimport {get_runtime}    from 'devapt-core-common/dist/js/base/runtime'\r\nconst runtime = get_runtime()\r\n\r\n// SERVER IMPORTS\r\n\r\n\r\nlet context = 'services/executables/executable_route'\r\nconsole.log(context + ':HAS RUNTIME ?' + runtime ? 'yes' : 'no')\r\n\r\n\r\n\r\n/**\r\n * @file Route registering base class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class ExecutableRoute extends Executable\r\n{\r\n    /**\r\n     * Create a ExecutableRoute instance.\r\n\t * @extends Executable\r\n     * @abstract\r\n     */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(context, runtime.get_logger_manager())\r\n\t}\r\n\t\r\n\t\r\n    \r\n\t/**\r\n     * Prepare an execution with contextual informations.\r\n     * @override\r\n\t * \r\n     * @param {object} arg_settings - execution settings.\r\n\t * \r\n     * @returns {nothing}\r\n     */\r\n\tprepare(arg_settings)\r\n\t{\r\n\t\t// console.log(context + ':prepare:arg_settings', arg_settings)\r\n\t\t\r\n\t\tassert( T.isObject(arg_settings), context + ':no given config')\r\n\t\tthis.store_config = arg_settings\r\n\t\t\r\n\t\tassert(T.isObject(this.store_config), context + ':bad config object')\r\n\t\t\r\n\t\tassert(T.isObject(this.store_config.server), context + ':bad server object')\r\n\t\tassert(this.store_config.server.is_server, context + ':bad server instance')\r\n\t\t\r\n\t\tthis.server = this.store_config.server\r\n\t}\r\n    \r\n\t\r\n\r\n\t/**\r\n     * Execution with contextual informations.\r\n     * @override\r\n\t * \r\n     * @param {object} arg_data - Application instance.\r\n\t * \r\n     * @returns {object} promise.\r\n     */\r\n\texecute(arg_data)\r\n\t{\r\n\t\t// console.log(context + ':execute:store_config', this.store_config)\r\n\t\t\r\n\t\t// CHECK APPLICATION\r\n\t\tassert(T.isObject(arg_data), context + ':bad application object')\r\n\t\tassert(arg_data.is_topology_define_application, context + ':bad application instance')\r\n\t\tconst application = arg_data\r\n\t\t\r\n\t\tthis.info('Execute: add server route for ' + application.get_name())\r\n\t\t\r\n\t\t\r\n\t\t// CHECK SERVER\r\n\t\tconst server_instance = this.server\r\n\t\tassert(T.isString(server_instance.server_type), context + ':bad server_instance.server_type string')\r\n\t\tassert(T.isObject(server_instance.server) || T.isFunction(server_instance.server), context + ':bad server_instance.server object or function')\r\n\t\t\r\n\r\n\t\t// LOOP ON ROUTES\r\n\t\tthis.debug('this.store_config.routes', this.store_config.routes)\r\n\t\tlet routes_registering_promises = []\r\n\t\tassert(T.isArray(this.store_config.routes), context + ':bad store_config.routes object')\r\n\t\tconst cfg_routes = this.store_config.routes\r\n\r\n\t\t// PROBLEM WITH NODEJS 0.10\r\n\t\t// for(let cfg_route of cfg_routes)\r\n\t\t// {\r\n\t\tfor(let cfg_route_index = 0 ; cfg_route_index < cfg_routes.length ; cfg_route_index++)\r\n\t\t{\r\n\t\t\t// GET ROUTE CONFIG\r\n\t\t\tlet cfg_route = cfg_routes[cfg_route_index]\r\n\t\t\tthis.debug('loop on cfg_route', cfg_route)\r\n\t\t\tassert(T.isObject(cfg_route), context + ':bad cfg_route object')\r\n\t\t\tassert(T.isString(cfg_route.route), context + ':bad route string')\r\n\t\t\t\r\n\t\t\t// GET APPLICATION URL\r\n\t\t\tconst app_url = T.isString(application.app_url) ? application.app_url : ''\r\n\t\t\tthis.debug('app_route', app_url)\r\n\t\t\t\r\n\t\t\t// GET ROUTE IS GLOBAL (HAS FULL ROUTE INSIDE)\r\n\t\t\tconst route_is_global = (T.isBoolean(cfg_route.is_global) && cfg_route.is_global == true)\r\n\r\n\t\t\t// GET APPLICATION ROUTE\r\n\t\t\tlet app_route = route_is_global ? cfg_route.route : app_url + cfg_route.route\r\n\t\t\tapp_route = (app_route[0] == '/' ? '' : '/') + app_route\r\n\t\t\tcfg_route.full_route = app_route\r\n\r\n\t\t\t// DEBUG\r\n\t\t\t// console.log('route=%s, app_route=%s, cfg.route=%s, is_global=%s, cond=%s', route, app_route, cfg_route.route, cfg_route.is_global, (cfg_route.is_global && cfg_route.is_global == true))\r\n\t\t\t\r\n\t\t\t// GET REGEXP\r\n\t\t\tcfg_route.route_regexp = undefined\r\n\t\t\tif ( app_route.indexOf('.*') > -1 || app_route.indexOf('$') > -1 || app_route.indexOf('^') > -1 )\r\n\t\t\t{\r\n\t\t\t\t// cfg_route.full_route = route_is_global ? app_route : app_url + '/'\r\n\t\t\t\tcfg_route.route_regexp = new RegExp( app_route.replace('/', '\\/') )\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.debug('route', cfg_route.full_route.toString())\r\n\t\t\tthis.debug('directory', cfg_route.directory)\r\n\t\t\t\r\n\t\t\tconst route_resistering_promise = this.process_route(server_instance, application, cfg_route, arg_data)\r\n\t\t\troutes_registering_promises.push(route_resistering_promise)\r\n            \r\n\t\t\tthis.info('registering route [' + app_route + '] for application [' + application.$name + ']')\r\n\t\t}\r\n        \r\n\t\treturn Promise.all(routes_registering_promises)\r\n\t}\r\n\r\n\t\r\n    \r\n\t/**\r\n     * Process a route registering.\r\n\t * \r\n     * @param {Server} arg_server - Server instance.\r\n     * @param {TopologyDefineApplication} arg_application - Application instance.\r\n     * @param {object} arg_cfg_route - plain object route configuration.\r\n     * @param {object} arg_data - plain object contextual datas.\r\n\t * \r\n     * @returns {Promise} - Promise(boolean) with (true:success, false: failure).\r\n     */\r\n\tprocess_route(arg_server, arg_application, arg_cfg_route, arg_data)\r\n\t{\r\n\t\t// DEBUG\r\n\t\t// console.log(arg_cfg_route, 'arg_cfg_route')\r\n\t\t\r\n\t\t// GET ROUTE CALLBACK\r\n\t\tconst route_cb = this.get_route_cb(arg_application, arg_cfg_route, arg_data)\r\n\t\tif (!route_cb)\r\n\t\t{\r\n\t\t\tconsole.error('bad route callback', context)\r\n\t\t\treturn Promise.reject(context + ':process_route:bad route callback')\r\n\t\t}\r\n\r\n\t\t// CHECK SERVER\r\n\t\tif ( ! T.isObject(arg_server) || ! arg_server.is_server || ! arg_server.is_routable_server )\r\n\t\t{\r\n\t\t\treturn Promise.reject(context + ':process_route:bad server type')\r\n\t\t}\r\n        \r\n\t\t// ADD ROUTE HANDLER\r\n\t\ttry\r\n\t\t{\r\n\t\t\targ_server.add_get_route(arg_cfg_route, route_cb)\r\n\r\n\t\t\treturn Promise.resolve(true)\r\n\t\t}\r\n\t\tcatch(e)\r\n\t\t{\r\n\t\t\tconsole.error(e, context)\r\n\t\t\tconst cfg_route_str = JSON.stringify(arg_cfg_route)\r\n\t\t\treturn Promise.reject(context + ':process_route:' + e.toString() + ' for route config=[' + cfg_route_str + ']')\r\n\t\t}\r\n\t}\r\n    \r\n\r\n\t\r\n\t/**\r\n     * Callback for route handling.\r\n     * @abstract\r\n\t * \r\n     * @param {TopologyDefineApplication} arg_application - Application instance.\r\n     * @param {object} arg_cfg_route - plain object route configuration.\r\n     * @param {object} arg_data - plain object contextual datas.\r\n\t * \r\n     * @param {function} route handler.\r\n     */\r\n\tget_route_cb(/*arg_application, arg_cfg_route, arg_data*/)\r\n\t{\r\n\t\tassert(false, context + ':get_route_cb(cfg_route) should be implemented')\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Callback for redirect route handling.\r\n\t * \r\n\t * @param {TopologyDefineApplication} arg_application - Application instance.\r\n\t * @param {object} arg_cfg_route - plain object route configuration.\r\n\t * @param {object} arg_data - plain object contextual datas.\r\n\t * \r\n\t * @param {function} route handler.\r\n\t */\r\n\tget_route_redirect_cb(arg_application, arg_cfg_route/*, arg_data*/)\r\n\t{\r\n\t\tassert(T.isString(arg_cfg_route.redirect), context + ':bad redirect route string')\r\n\t\t\r\n\t\treturn (req, res/*, next*/) => {\r\n\t\t\tconst url = runtime.context.get_url_with_credentials(arg_cfg_route.redirect, req)\r\n\t\t\tres.redirect(url)\r\n\t\t}\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/executables/executable_route.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 18,
    "kind": "variable",
    "name": "runtime",
    "memberof": "js/executables/executable_route.js",
    "static": true,
    "longname": "js/executables/executable_route.js~runtime",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/executables/executable_route.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 19,
    "kind": "variable",
    "name": "context",
    "memberof": "js/executables/executable_route.js",
    "static": true,
    "longname": "js/executables/executable_route.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/executables/executable_route.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 20,
    "kind": "class",
    "name": "ExecutableRoute",
    "memberof": "js/executables/executable_route.js",
    "static": true,
    "longname": "js/executables/executable_route.js~ExecutableRoute",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/executables/executable_route.js",
    "importStyle": "ExecutableRoute",
    "description": "",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Route registering base class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "devapt-core-common/dist/js/base/executable~Executable"
    ]
  },
  {
    "__docId__": 21,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/executables/executable_route.js~ExecutableRoute",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/executables/executable_route.js~ExecutableRoute#constructor",
    "access": null,
    "description": "Create a ExecutableRoute instance.",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "Executable"
      }
    ],
    "params": [],
    "abstract": true
  },
  {
    "__docId__": 22,
    "kind": "method",
    "name": "prepare",
    "memberof": "js/executables/executable_route.js~ExecutableRoute",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/executables/executable_route.js~ExecutableRoute#prepare",
    "access": null,
    "description": "Prepare an execution with contextual informations.",
    "lineNumber": 45,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_settings",
        "description": "execution settings."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 23,
    "kind": "member",
    "name": "store_config",
    "memberof": "js/executables/executable_route.js~ExecutableRoute",
    "static": false,
    "longname": "js/executables/executable_route.js~ExecutableRoute#store_config",
    "access": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 24,
    "kind": "member",
    "name": "server",
    "memberof": "js/executables/executable_route.js~ExecutableRoute",
    "static": false,
    "longname": "js/executables/executable_route.js~ExecutableRoute#server",
    "access": null,
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 25,
    "kind": "method",
    "name": "execute",
    "memberof": "js/executables/executable_route.js~ExecutableRoute",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/executables/executable_route.js~ExecutableRoute#execute",
    "access": null,
    "description": "Execution with contextual informations.",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} promise."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_data",
        "description": "Application instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "promise."
    },
    "override": true
  },
  {
    "__docId__": 26,
    "kind": "method",
    "name": "process_route",
    "memberof": "js/executables/executable_route.js~ExecutableRoute",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/executables/executable_route.js~ExecutableRoute#process_route",
    "access": null,
    "description": "Process a route registering.",
    "lineNumber": 152,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Promise(boolean) with (true:success, false: failure)."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Server"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_server",
        "description": "Server instance."
      },
      {
        "nullable": null,
        "types": [
          "TopologyDefineApplication"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_application",
        "description": "Application instance."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_cfg_route",
        "description": "plain object route configuration."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_data",
        "description": "plain object contextual datas."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise(boolean) with (true:success, false: failure)."
    }
  },
  {
    "__docId__": 27,
    "kind": "method",
    "name": "get_route_cb",
    "memberof": "js/executables/executable_route.js~ExecutableRoute",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/executables/executable_route.js~ExecutableRoute#get_route_cb",
    "access": null,
    "description": "Callback for route handling.",
    "lineNumber": 198,
    "params": [
      {
        "nullable": null,
        "types": [
          "TopologyDefineApplication"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_application",
        "description": "Application instance."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_cfg_route",
        "description": "plain object route configuration."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_data",
        "description": "plain object contextual datas."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": "handler."
      }
    ],
    "abstract": true
  },
  {
    "__docId__": 28,
    "kind": "method",
    "name": "get_route_redirect_cb",
    "memberof": "js/executables/executable_route.js~ExecutableRoute",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/executables/executable_route.js~ExecutableRoute#get_route_redirect_cb",
    "access": null,
    "description": "Callback for redirect route handling.",
    "lineNumber": 214,
    "params": [
      {
        "nullable": null,
        "types": [
          "TopologyDefineApplication"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_application",
        "description": "Application instance."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_cfg_route",
        "description": "plain object route configuration."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_data",
        "description": "plain object contextual datas."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": "handler."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 29,
    "kind": "file",
    "name": "js/services/assets/assets_svc_provider.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T               from 'devapt-core-common/dist/js/utils/types'\r\nimport ServiceProvider from 'devapt-core-common/dist/js/services/service_provider'\r\nimport ServiceResponse from 'devapt-core-common/dist/js/services/service_response'\r\n\r\n// SERVICES IMPORTS\r\nimport ExecutableRouteAssets from './executable_route_assets'\r\n\r\n\r\nlet context = 'services/assets/assets_svc_provider'\r\n\r\n\r\n\r\n/**\r\n * Assets service provider class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class AssetsSvcProvider extends ServiceProvider\r\n{\r\n\t/**\r\n\t * Create a assets service provider.\r\n\t * \r\n\t * @param {string} arg_provider_name - consumer name.\r\n\t * @param {Service} arg_service_instance - service instance.\r\n\t * @param {string} arg_context - logging context label.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_provider_name, arg_service_instance, arg_context=context)\r\n\t{\r\n\t\tsuper(arg_provider_name, arg_service_instance, arg_context)\r\n\r\n\t\tthis.is_assets_svc_provider = true\r\n\t\t\r\n\t\tthis.exec = new ExecutableRouteAssets()\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get provider operations names.\r\n\t * @abstract\r\n\t * \r\n\t * @returns {array}\r\n\t */\r\n\tget_operations_names()\r\n\t{\r\n\t\treturn ['list', 'get']\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Produce service datas on request.\r\n\t * \r\n\t * @param {ServiceRequest} arg_request - service request instance.\r\n\t * \r\n\t * @returns {Promise} - promise of ServiceResponse instance.\r\n\t */\r\n\tproduce(arg_request)\r\n\t{\r\n\t\tconst operation = arg_request.get_operation()\r\n\t\tconst operands = arg_request.get_operands()\r\n\r\n\t\t// CHECK OPERANDS\r\n\t\tif ( ! T.isNotEmptyArray(operands) )\r\n\t\t{\r\n\t\t\treturn Promise.resolve(undefined)\r\n\t\t}\r\n\r\n\t\t// OPERATION=GET\r\n\t\tif (operation == 'get')\r\n\t\t{\r\n\t\t\tconst results = []\r\n\t\t\toperands.forEach(\r\n\t\t\t\t(asset_name)=>{\r\n\t\t\t\t\tif ( T.isNotEmptyString(asset_name) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tresults.push( this.get_plugin_asset_file_path(asset_name) )\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\r\n\t\t\tconst response = new ServiceResponse(arg_request)\r\n\t\t\tresponse.set_results(results)\r\n\t\t\treturn Promise.resolve(response)\r\n\t\t}\r\n\r\n\t\treturn Promise.resolve(undefined)\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get plugin asset file path name.\r\n\t * \r\n\t * @param {string} arg_asset_name - asset name to lookup for.\r\n\t * \r\n\t * @returns {string|undefined} - asset file path name or undefined if not found.\r\n\t */\r\n\tget_plugin_asset_file_path(arg_asset_name)\r\n\t{\r\n\t\tconst arg_cfg_route = this.get_setting('routes', {})\r\n\t\tconst plugins_names = arg_cfg_route.plugins\r\n\t\tconst rendering_manager = this.get_runtime().get_plugins_factory().get_rendering_manager()\r\n\r\n\t\tfor(let plugin_name of plugins_names)\r\n\t\t{\r\n\t\t\t// console.log('MIDDLEWARE: ROUTE FOR ASSETS IN PLUGINS MODE:loop on ', plugin_name)\r\n\t\t\t\r\n\t\t\tconst plugin = rendering_manager.plugin(plugin_name)\r\n\t\t\tconst asset_file_path = plugin.get_public_asset(arg_asset_name)\r\n\t\t\tif (asset_file_path)\r\n\t\t\t{\r\n\t\t\t\treturn asset_file_path\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn undefined\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/assets/assets_svc_provider.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 30,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/assets/assets_svc_provider.js",
    "static": true,
    "longname": "js/services/assets/assets_svc_provider.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/assets/assets_svc_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 31,
    "kind": "class",
    "name": "AssetsSvcProvider",
    "memberof": "js/services/assets/assets_svc_provider.js",
    "static": true,
    "longname": "js/services/assets/assets_svc_provider.js~AssetsSvcProvider",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/assets/assets_svc_provider.js",
    "importStyle": "AssetsSvcProvider",
    "description": "Assets service provider class.",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "devapt-core-common/dist/js/services/service_provider~ServiceProvider"
    ]
  },
  {
    "__docId__": 32,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/assets/assets_svc_provider.js~AssetsSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/assets/assets_svc_provider.js~AssetsSvcProvider#constructor",
    "access": null,
    "description": "Create a assets service provider.",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider_name",
        "description": "consumer name."
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 33,
    "kind": "member",
    "name": "is_assets_svc_provider",
    "memberof": "js/services/assets/assets_svc_provider.js~AssetsSvcProvider",
    "static": false,
    "longname": "js/services/assets/assets_svc_provider.js~AssetsSvcProvider#is_assets_svc_provider",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 34,
    "kind": "member",
    "name": "exec",
    "memberof": "js/services/assets/assets_svc_provider.js~AssetsSvcProvider",
    "static": false,
    "longname": "js/services/assets/assets_svc_provider.js~AssetsSvcProvider#exec",
    "access": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 35,
    "kind": "method",
    "name": "get_operations_names",
    "memberof": "js/services/assets/assets_svc_provider.js~AssetsSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/assets/assets_svc_provider.js~AssetsSvcProvider#get_operations_names",
    "access": null,
    "description": "Get provider operations names.",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true
  },
  {
    "__docId__": 36,
    "kind": "method",
    "name": "produce",
    "memberof": "js/services/assets/assets_svc_provider.js~AssetsSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/assets/assets_svc_provider.js~AssetsSvcProvider#produce",
    "access": null,
    "description": "Produce service datas on request.",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of ServiceResponse instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ServiceRequest"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_request",
        "description": "service request instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of ServiceResponse instance."
    }
  },
  {
    "__docId__": 37,
    "kind": "method",
    "name": "get_plugin_asset_file_path",
    "memberof": "js/services/assets/assets_svc_provider.js~AssetsSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/assets/assets_svc_provider.js~AssetsSvcProvider#get_plugin_asset_file_path",
    "access": null,
    "description": "Get plugin asset file path name.",
    "lineNumber": 105,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|undefined} - asset file path name or undefined if not found."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_asset_name",
        "description": "asset name to lookup for."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "undefined"
      ],
      "spread": false,
      "description": "asset file path name or undefined if not found."
    }
  },
  {
    "__docId__": 38,
    "kind": "file",
    "name": "js/services/assets/executable_route_assets.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T             from 'devapt-core-common/dist/js/utils/types'\r\nimport {get_runtime} from 'devapt-core-common/dist/js/base/runtime'\r\nconst runtime = get_runtime()\r\n\r\n// SERVER IMPORTS\r\nimport ExecutableRoute from '../../executables/executable_route'\r\n\r\n\r\nlet context = 'server/services/base/executable_route_assets'\r\n\r\n\r\n\r\n/**\r\n * @file Assets route registering class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class ExecutableRouteAssets extends ExecutableRoute\r\n{\r\n\t/**\r\n\t * Create an assets route registering executable.\r\n\t * @extends ExecutableRoute\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(context)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Callback for route handling.\r\n\t * @override\r\n\t * \r\n\t * @param {object} arg_application - Application instance.\r\n\t * @param {object} arg_cfg_route - plain object route configuration.\r\n\t * @param {object} arg_data - plain object contextual datas.\r\n\t * \r\n\t * @returns {function} - route handler.\r\n\t */\r\n\tget_route_cb(arg_application, arg_cfg_route, arg_data)\r\n\t{\r\n\t\tif ( T.isString(arg_cfg_route.directory) )\r\n\t\t{\r\n\t\t\tconsole.log(context + ':ROUTE FOR ASSETS IN DIRECTORY MODE for ', arg_cfg_route.directory)\r\n\r\n\t\t\treturn this.get_route_directory_cb(arg_application, arg_cfg_route, arg_data)\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tif ( T.isArray(arg_cfg_route.plugins) )\r\n\t\t{\r\n\t\t\tconsole.log(context + ':ROUTE FOR ASSETS IN PLUGINS MODE for ', arg_cfg_route.plugins)\r\n\t\t\treturn this.get_route_plugins_cb(arg_application, arg_cfg_route, arg_data)\r\n\t\t}\r\n\r\n\r\n\t\tif ( T.isString(arg_cfg_route.redirect) )\r\n\t\t{\r\n\t\t\tconsole.log(context + ':REDIRECT ROUTE FOR ASSETS', arg_cfg_route.redirect)\r\n\t\t\treturn this.get_route_redirect_cb(arg_application, arg_cfg_route, arg_data)\r\n\t\t}\r\n\t\t\r\n\t\t// UNKNOW SERVER TO SERVE STATIC FILES\r\n\t\tconsole.error('UNKNOW ROUTE MODE', arg_cfg_route)\r\n\t\treturn null\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Callback for route handling.\r\n\t * \r\n\t * @param {object} arg_application - Application instance.\r\n\t * @param {object} arg_cfg_route - plain object route configuration.\r\n\t * @param {object} arg_data - plain object contextual datas.\r\n\t * \r\n\t * @returns {function} - route handler.\r\n\t */\r\n\tget_route_directory_cb(arg_application, arg_cfg_route/*, arg_data*/)\r\n\t{\r\n\t\tassert(T.isString(arg_cfg_route.directory), context + ':bad directory string')\r\n\t\t\r\n\t\t// CHECK SERVER\r\n\t\tif ( ! T.isObject(this.server) || ! this.server.is_server || ! this.server.is_routable_server )\r\n\t\t{\r\n\t\t\tconsole.error(context + ':get_route_directory_cb:bad routable server')\r\n\t\t\treturn undefined\r\n\t\t}\r\n\t\t\r\n\t\treturn this.server.get_middleware_for_static_route(arg_cfg_route)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Callback for route handling.\r\n\t * @param {object} arg_application - Application instance.\r\n\t * @param {object} arg_cfg_route - plain object route configuration.\r\n\t * @param {object} arg_data - plain object contextual datas.\r\n\t * @param {function} route handler.\r\n\t */\r\n\tget_route_plugins_cb(arg_application, arg_cfg_route/*, arg_data*/)\r\n\t{\r\n\t\tassert(T.isArray(arg_cfg_route.plugins), context + ':bad plugins array')\r\n\t\t\r\n\t\tconsole.log(context + ':ROUTE FOR ASSETS IN PLUGINS MODE')\r\n\t\t\r\n\t\tconst plugins_names = arg_cfg_route.plugins\r\n\t\tconst rendering_manager = runtime.get_plugins_factory().get_rendering_manager()\r\n\t\t\r\n\t\treturn (req, res/*, next*/) => {\r\n\t\t\tconst asset_name_parts = req.path.split('?', 2)\r\n\t\t\tconst asset_name = asset_name_parts[0]\r\n\t\t\tconsole.log(context + ':MIDDLEWARE: ROUTE FOR ASSETS IN PLUGINS MODE for ', asset_name, plugins_names)\r\n\r\n\t\t\t// BAD METHOD\r\n\t\t\tif (req.method !== 'GET' && req.method !== 'HEAD')\r\n\t\t\t{\r\n\t\t\t\t// method not allowed\r\n\t\t\t\tres.statusCode = 405\r\n\t\t\t\tres.setHeader('Allow', 'GET, HEAD')\r\n\t\t\t\tres.setHeader('Content-Length', '0')\r\n\t\t\t\tres.end()\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor(let plugin_name of plugins_names)\r\n\t\t\t{\r\n\t\t\t\tconsole.log(context + ':MIDDLEWARE: ROUTE FOR ASSETS IN PLUGINS MODE:loop on ', plugin_name)\r\n\t\t\t\t\r\n\t\t\t\tconst plugin = rendering_manager.plugin(plugin_name)\r\n\t\t\t\tconst asset_file_path = plugin.get_public_asset(asset_name)\r\n\t\t\t\tif (asset_file_path)\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.log(context + ':MIDDLEWARE: ROUTE FOR ASSETS IN PLUGINS MODE:found for ', plugin_name, asset_file_path)\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar options = {\r\n\t\t\t\t\t\tdotfiles: 'deny',\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t'x-timestamp': Date.now(),\r\n\t\t\t\t\t\t\t'x-sent': true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tres.sendFile(asset_file_path, options,\r\n\t\t\t\t\t\t(err) => {\r\n\t\t\t\t\t\t\tif (err)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tconsole.log(err)\r\n\t\t\t\t\t\t\t\tres.status(err.status).end()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tconsole.log(context + ':Sent:', asset_file_path)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/assets/executable_route_assets.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 39,
    "kind": "variable",
    "name": "runtime",
    "memberof": "js/services/assets/executable_route_assets.js",
    "static": true,
    "longname": "js/services/assets/executable_route_assets.js~runtime",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/assets/executable_route_assets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 40,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/assets/executable_route_assets.js",
    "static": true,
    "longname": "js/services/assets/executable_route_assets.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/assets/executable_route_assets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 41,
    "kind": "class",
    "name": "ExecutableRouteAssets",
    "memberof": "js/services/assets/executable_route_assets.js",
    "static": true,
    "longname": "js/services/assets/executable_route_assets.js~ExecutableRouteAssets",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/assets/executable_route_assets.js",
    "importStyle": "ExecutableRouteAssets",
    "description": "",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Assets route registering class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/executables/executable_route.js~ExecutableRoute"
    ]
  },
  {
    "__docId__": 42,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/assets/executable_route_assets.js~ExecutableRouteAssets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/assets/executable_route_assets.js~ExecutableRouteAssets#constructor",
    "access": null,
    "description": "Create an assets route registering executable.",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "ExecutableRoute"
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 43,
    "kind": "method",
    "name": "get_route_cb",
    "memberof": "js/services/assets/executable_route_assets.js~ExecutableRouteAssets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/assets/executable_route_assets.js~ExecutableRouteAssets#get_route_cb",
    "access": null,
    "description": "Callback for route handling.",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} - route handler."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_application",
        "description": "Application instance."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_cfg_route",
        "description": "plain object route configuration."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_data",
        "description": "plain object contextual datas."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "route handler."
    },
    "override": true
  },
  {
    "__docId__": 44,
    "kind": "method",
    "name": "get_route_directory_cb",
    "memberof": "js/services/assets/executable_route_assets.js~ExecutableRouteAssets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/assets/executable_route_assets.js~ExecutableRouteAssets#get_route_directory_cb",
    "access": null,
    "description": "Callback for route handling.",
    "lineNumber": 85,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} - route handler."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_application",
        "description": "Application instance."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_cfg_route",
        "description": "plain object route configuration."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_data",
        "description": "plain object contextual datas."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "route handler."
    }
  },
  {
    "__docId__": 45,
    "kind": "method",
    "name": "get_route_plugins_cb",
    "memberof": "js/services/assets/executable_route_assets.js~ExecutableRouteAssets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/assets/executable_route_assets.js~ExecutableRouteAssets#get_route_plugins_cb",
    "access": null,
    "description": "Callback for route handling.",
    "lineNumber": 108,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_application",
        "description": "Application instance."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_cfg_route",
        "description": "plain object route configuration."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_data",
        "description": "plain object contextual datas."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": "handler."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 46,
    "kind": "file",
    "name": "js/services/assets/unused_assets_service.js",
    "content": "// COMMON IMPORTS\r\nimport BaseService from 'devapt-core-common/dist/js/services/service'\r\n\r\n// SERVICES IMPORTS\r\nimport AssetsSvcProvider from './assets_svc_provider'\r\nimport AssetsSvcConsumer from './assets_svc_consumer'\r\n\r\n\r\nlet context = 'services/assets/assets_service'\r\n\r\n\r\n\r\n/**\r\n * Assets service class for assets routes.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class AssetsService extends BaseService\r\n{\r\n\t/**\r\n\t * Create an assets service.\r\n\t * @param {string} arg_svc_name - service name\r\n\t * @param {object} arg_service_settings - service settings\r\n\t * @param {string} arg_context - logging context label\r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_svc_name, arg_service_settings, arg_context)\r\n\t{\r\n\t\tsuper(arg_svc_name, arg_service_settings, arg_context ? arg_context : context)\r\n\t\t\r\n\t\tthis.is_assets_service = true\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a service provider.\r\n\t * @param {string} arg_name - provider name\r\n\t * @param {Service} arg_service - service instance\r\n\t * @returns {ServiceProvider} - service provider instance\r\n\t */\r\n\tcreate_provider(arg_name, arg_service)\r\n\t{\r\n\t\t// TODO: why not this in place of arg_service\r\n\t\treturn new AssetsSvcProvider(arg_name, arg_service)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a service consumer.\r\n\t * @returns {ServiceConsumer} - service consumer instance\r\n\t */\r\n\tcreate_consumer()\r\n\t{\r\n\t\treturn new AssetsSvcConsumer(this.get_name() + '_consumer_' + this.get_id(), this)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/assets/unused_assets_service.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 47,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/assets/unused_assets_service.js",
    "static": true,
    "longname": "js/services/assets/unused_assets_service.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/assets/unused_assets_service.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 48,
    "kind": "class",
    "name": "AssetsService",
    "memberof": "js/services/assets/unused_assets_service.js",
    "static": true,
    "longname": "js/services/assets/unused_assets_service.js~AssetsService",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/assets/unused_assets_service.js",
    "importStyle": "AssetsService",
    "description": "Assets service class for assets routes.",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "devapt-core-common/dist/js/services/service~BaseService"
    ]
  },
  {
    "__docId__": 49,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/assets/unused_assets_service.js~AssetsService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/assets/unused_assets_service.js~AssetsService#constructor",
    "access": null,
    "description": "Create an assets service.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_name",
        "description": "service name"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_settings",
        "description": "service settings"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 50,
    "kind": "member",
    "name": "is_assets_service",
    "memberof": "js/services/assets/unused_assets_service.js~AssetsService",
    "static": false,
    "longname": "js/services/assets/unused_assets_service.js~AssetsService#is_assets_service",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 51,
    "kind": "method",
    "name": "create_provider",
    "memberof": "js/services/assets/unused_assets_service.js~AssetsService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/assets/unused_assets_service.js~AssetsService#create_provider",
    "access": null,
    "description": "Create a service provider.",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceProvider} - service provider instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "provider name"
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service",
        "description": "service instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ServiceProvider"
      ],
      "spread": false,
      "description": "service provider instance"
    }
  },
  {
    "__docId__": 52,
    "kind": "method",
    "name": "create_consumer",
    "memberof": "js/services/assets/unused_assets_service.js~AssetsService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/assets/unused_assets_service.js~AssetsService#create_consumer",
    "access": null,
    "description": "Create a service consumer.",
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceConsumer} - service consumer instance"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "ServiceConsumer"
      ],
      "spread": false,
      "description": "service consumer instance"
    }
  },
  {
    "__docId__": 53,
    "kind": "file",
    "name": "js/services/assets/unused_assets_svc_consumer.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// SERVER IMPORTS\r\nimport RoutesServiceConsumer from 'devapt-core-server/dist/js/services/routes_svc_consumer'\r\n\r\n\r\nlet context = 'services/assets/assets_svc_consumer'\r\n\r\n\r\n\r\n/**\r\n * Service consumer class for CRUD routes.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class AssetsSvcConsumer extends RoutesServiceConsumer\r\n{\r\n\t\r\n\t/**\r\n\t * Create a service consumer for CRUD routes.\r\n\t * @param {string} arg_consumer_name - consumer name\r\n\t * @param {Service} arg_service_instance - service instance\r\n\t * @param {string} arg_context - logging context label\r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_consumer_name, arg_service_instance, arg_context)\r\n\t{\r\n\t\tsuper(arg_consumer_name, arg_service_instance, arg_context ? arg_context : context)\r\n\t\tassert( arg_service_instance.is_assets_service, context + ':constructor:bad assets service instance')\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/assets/unused_assets_svc_consumer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 54,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/assets/unused_assets_svc_consumer.js",
    "static": true,
    "longname": "js/services/assets/unused_assets_svc_consumer.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/assets/unused_assets_svc_consumer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "class",
    "name": "AssetsSvcConsumer",
    "memberof": "js/services/assets/unused_assets_svc_consumer.js",
    "static": true,
    "longname": "js/services/assets/unused_assets_svc_consumer.js~AssetsSvcConsumer",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/assets/unused_assets_svc_consumer.js",
    "importStyle": "AssetsSvcConsumer",
    "description": "Service consumer class for CRUD routes.",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "devapt-core-server/dist/js/services/routes_svc_consumer~RoutesServiceConsumer"
    ]
  },
  {
    "__docId__": 56,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/assets/unused_assets_svc_consumer.js~AssetsSvcConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/assets/unused_assets_svc_consumer.js~AssetsSvcConsumer#constructor",
    "access": null,
    "description": "Create a service consumer for CRUD routes.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_consumer_name",
        "description": "consumer name"
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 57,
    "kind": "file",
    "name": "js/services/cli/cli_svc_consumer.js",
    "content": "",
    "static": true,
    "longname": "js/services/cli/cli_svc_consumer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 58,
    "kind": "file",
    "name": "js/services/cli/cli_svc_provider.js",
    "content": "",
    "static": true,
    "longname": "js/services/cli/cli_svc_provider.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 59,
    "kind": "file",
    "name": "js/services/crud/crud_service.js",
    "content": "// SERVER IMPORTS\r\nimport BaseService from '../base/base_service'\r\nimport CrudSvcProvider from './crud_svc_provider'\r\nimport CrudSvcConsumer from './crud_svc_consumer'\r\n\r\n\r\nlet context = 'server/services/crud/crud_service'\r\n\r\n\r\n\r\n/**\r\n * Crud service class for CRUD routes.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class CrudService extends BaseService\r\n{\r\n\t/**\r\n\t * Create a crud service.\r\n\t * @param {string} arg_svc_name - service name\r\n\t * @param {object} arg_service_settings - service settings\r\n\t * @param {string} arg_context - logging context label\r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_svc_name, arg_service_settings, arg_context)\r\n\t{\r\n\t\tsuper(arg_svc_name, arg_service_settings, arg_context ? arg_context : context)\r\n\t\t\r\n\t\tthis.is_crud_service = true\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a service provider.\r\n\t * @param {string} arg_name - provider name\r\n\t * @param {Service} arg_service - service instance\r\n\t * @returns {ServiceProvider} - service provider instance\r\n\t */\r\n\tcreate_provider(arg_name, arg_service)\r\n\t{\r\n\t\t// TODO: why not this in place of arg_service\r\n\t\treturn new CrudSvcProvider(arg_name, arg_service)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a service consumer.\r\n\t * @returns {ServiceConsumer} - service consumer instance\r\n\t */\r\n\tcreate_consumer()\r\n\t{\r\n\t\treturn new CrudSvcConsumer(this.get_name() + '_consumer_' + this.get_id(), this)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/crud/crud_service.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 60,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/crud/crud_service.js",
    "static": true,
    "longname": "js/services/crud/crud_service.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/crud/crud_service.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "class",
    "name": "CrudService",
    "memberof": "js/services/crud/crud_service.js",
    "static": true,
    "longname": "js/services/crud/crud_service.js~CrudService",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/crud/crud_service.js",
    "importStyle": "CrudService",
    "description": "Crud service class for CRUD routes.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/base_service.js~BaseService"
    ]
  },
  {
    "__docId__": 62,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/crud/crud_service.js~CrudService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/crud/crud_service.js~CrudService#constructor",
    "access": null,
    "description": "Create a crud service.",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_name",
        "description": "service name"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_settings",
        "description": "service settings"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 63,
    "kind": "member",
    "name": "is_crud_service",
    "memberof": "js/services/crud/crud_service.js~CrudService",
    "static": false,
    "longname": "js/services/crud/crud_service.js~CrudService#is_crud_service",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "create_provider",
    "memberof": "js/services/crud/crud_service.js~CrudService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/crud/crud_service.js~CrudService#create_provider",
    "access": null,
    "description": "Create a service provider.",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceProvider} - service provider instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "provider name"
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service",
        "description": "service instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ServiceProvider"
      ],
      "spread": false,
      "description": "service provider instance"
    }
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "create_consumer",
    "memberof": "js/services/crud/crud_service.js~CrudService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/crud/crud_service.js~CrudService#create_consumer",
    "access": null,
    "description": "Create a service consumer.",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceConsumer} - service consumer instance"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "ServiceConsumer"
      ],
      "spread": false,
      "description": "service consumer instance"
    }
  },
  {
    "__docId__": 66,
    "kind": "file",
    "name": "js/services/crud/crud_svc_consumer.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// SERVER IMPORTS\r\nimport RoutesServiceConsumer from '../base/routes_svc_consumer'\r\n\r\n\r\nlet context = 'server/services/crud/crud_svc_consumer'\r\n\r\n\r\n\r\n/**\r\n * Service consumer class for CRUD routes.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class CrudSvcConsumer extends RoutesServiceConsumer\r\n{\r\n\t\r\n\t/**\r\n\t * Create a service consumer for CRUD routes.\r\n\t * @param {string} arg_consumer_name - consumer name\r\n\t * @param {Service} arg_service_instance - service instance\r\n\t * @param {string} arg_context - logging context label\r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_consumer_name, arg_service_instance, arg_context)\r\n\t{\r\n\t\tsuper(arg_consumer_name, arg_service_instance, arg_context ? arg_context : context)\r\n\t\tassert( arg_service_instance.is_crud_service, context + ':constructor:bad crud service instance')\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/crud/crud_svc_consumer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 67,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/crud/crud_svc_consumer.js",
    "static": true,
    "longname": "js/services/crud/crud_svc_consumer.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/crud/crud_svc_consumer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "class",
    "name": "CrudSvcConsumer",
    "memberof": "js/services/crud/crud_svc_consumer.js",
    "static": true,
    "longname": "js/services/crud/crud_svc_consumer.js~CrudSvcConsumer",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/crud/crud_svc_consumer.js",
    "importStyle": "CrudSvcConsumer",
    "description": "Service consumer class for CRUD routes.",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/routes_svc_consumer.js~RoutesServiceConsumer"
    ]
  },
  {
    "__docId__": 69,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/crud/crud_svc_consumer.js~CrudSvcConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/crud/crud_svc_consumer.js~CrudSvcConsumer#constructor",
    "access": null,
    "description": "Create a service consumer for CRUD routes.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_consumer_name",
        "description": "consumer name"
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 70,
    "kind": "file",
    "name": "js/services/crud/crud_svc_provider.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// SERVER IMPORTS\r\nimport ExecutableRouteCrud from './executable_route_model_crud'\r\nimport ServiceExecProvider from '../base/service_exec_provider'\r\n\r\n\r\nlet context = 'server/services/crud/crud_svc_provider'\r\n\r\n\r\n\r\n/**\r\n * Crud service provider class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class CrudSvcProvider extends ServiceExecProvider\r\n{\r\n\t/**\r\n\t * Create a crud service provider.\r\n\t * @param {string} arg_provider_name - consumer name\r\n\t * @param {Service} arg_service_instance - service instance\r\n\t * @param {string} arg_context - logging context label\r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_provider_name, arg_service_instance, arg_context)\r\n\t{\r\n\t\tsuper(arg_provider_name, arg_service_instance, arg_context ? arg_context : context)\r\n\t\t\r\n\t\tassert(this.service.is_crud_service, context + ':bad crud service')\r\n\t\t\r\n\t\tthis.exec = new ExecutableRouteCrud()\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Produce service datas on request (not implemented)\r\n\t * @returns {Promise} - promise of results\r\n\t */\r\n\tproduce()\r\n\t{\r\n\t\treturn Promise.resolve(undefined)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/crud/crud_svc_provider.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 71,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/crud/crud_svc_provider.js",
    "static": true,
    "longname": "js/services/crud/crud_svc_provider.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/crud/crud_svc_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "class",
    "name": "CrudSvcProvider",
    "memberof": "js/services/crud/crud_svc_provider.js",
    "static": true,
    "longname": "js/services/crud/crud_svc_provider.js~CrudSvcProvider",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/crud/crud_svc_provider.js",
    "importStyle": "CrudSvcProvider",
    "description": "Crud service provider class.",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/service_exec_provider.js~ServiceExecProvider"
    ]
  },
  {
    "__docId__": 73,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/crud/crud_svc_provider.js~CrudSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/crud/crud_svc_provider.js~CrudSvcProvider#constructor",
    "access": null,
    "description": "Create a crud service provider.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider_name",
        "description": "consumer name"
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 74,
    "kind": "member",
    "name": "exec",
    "memberof": "js/services/crud/crud_svc_provider.js~CrudSvcProvider",
    "static": false,
    "longname": "js/services/crud/crud_svc_provider.js~CrudSvcProvider#exec",
    "access": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "produce",
    "memberof": "js/services/crud/crud_svc_provider.js~CrudSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/crud/crud_svc_provider.js~CrudSvcProvider#produce",
    "access": null,
    "description": "Produce service datas on request (not implemented)",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of results"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of results"
    }
  },
  {
    "__docId__": 76,
    "kind": "file",
    "name": "js/services/crud/executable_route_model_crud.js",
    "content": "// NPM IMPORTS\r\nimport T from 'typr'\r\nimport assert from 'assert'\r\n\r\n// SERVER IMPORTS\r\nimport ExecutableRoute from '../../executables/executable_route'\r\n\r\n\r\nlet context = 'server/services/base/executable_route_model_crud'\r\n\r\n\r\n\r\n/**\r\n * @file CRUD operations route registering class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class ExecutableRouteModelCrud extends ExecutableRoute\r\n{\r\n    /**\r\n     * Create a route registration executable for CRUD operations\r\n\t * @extends ExecutableRoute\r\n\t * @returns {nothing}\r\n     */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(context)\r\n\t}\r\n\t\r\n    \r\n\t/**\r\n     * Process a route registering.\r\n     * @override\r\n     * @param {object} arg_server - Server instance.\r\n     * @param {object} arg_application - Application instance.\r\n     * @param {object} arg_cfg_route - plain object route configuration.\r\n     * @param {object} arg_data - plain object contextual datas.\r\n     * @returns {object} promise with a boolean resolved value (true:success, false: failure).\r\n     */\r\n\tprocess_route(arg_server, arg_application, arg_cfg_route, arg_data)\r\n\t{\r\n\t\tlet self = this\r\n\t\tself.enter_group('ExecutableRouteModelCrud.process_route')\r\n\t\t\r\n\t\t\r\n\t\t// EPILOGUE CALLBACK FUNCTION TO CHECK AUTHENTICATION AND AUTHORIZATION\r\n\t\t/*var security_epilogue_cb2 = function(arg_model_name, arg_role, arg_action_name)\r\n\t\t{\r\n\t\t\treturn function(arg_req, arg_res, arg_context)\r\n\t\t\t{\r\n\t\t\t\tconsole.info('check security for [' + arg_action_name + '] on model [' + arg_model_name + '] with role [' + arg_role + ']');\r\n\t\t\t\t\r\n\t\t\t\tvar authentication_msg = 'Authentication is rejected to ' + arg_action_name + ' for model [' + arg_model_name + ']';\r\n\t\t\t\tvar authorization_msg = 'Authorization is rejected to ' + arg_action_name + ' for model [' + arg_model_name + ']';\r\n\t\t\t\tvar failure_msg = 'Failure for ' + arg_action_name + ' for model [' + arg_model_name + ']';\r\n\t\t\t\t\r\n\t\t\t\tvar failure_cb = function(arg_msg)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn  arg_context.error( new ForbiddenError(failure_msg + \":[\" + arg_msg + ']') );\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar success_cb = function(arg_authenticated)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (! arg_authenticated)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconsole.error(authentication_msg);\r\n\t\t\t\t\t\t// throw new ForbiddenError(authentication_msg);\r\n\t\t\t\t\t\treturn arg_context.error( new ForbiddenError(authentication_msg) );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconsole.info('items ' + arg_action_name + ' authentication is accepted for model [' + arg_model_name + ']');\r\n\t\t\t\t\t\r\n\t\t\t\t\tauthorization.check_authorization(arg_req, arg_role).then(\r\n\t\t\t\t\t\tfunction(arg_authorized)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (! arg_authorized)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tconsole.error(authorization_msg);\r\n\t\t\t\t\t\t\t\t// throw new ForbiddenError(authorization_msg);\r\n\t\t\t\t\t\t\t\treturn arg_context.error( new ForbiddenError(authorization_msg) );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tconsole.info('items ' + arg_action_name + ' authorization is accepted for model [' + arg_model_name + ']');\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tfailure_cb\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tauthentication.check_request(arg_req).then(success_cb, failure_cb);\r\n\t\t\t}\r\n\t\t}*/\r\n\t\t\r\n\t\t\r\n\t\tvar security_epilogue_cb = function(/*arg_model_name, arg_role, arg_action_name*/)\r\n\t\t{\r\n\t\t\treturn function(arg_req, arg_res, arg_context)\r\n\t\t\t{\r\n\t\t\t\treturn arg_context.continue()\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\t\r\n\t\tconst app_models = arg_application.resources.get_all('models')\r\n\t\t\r\n\t\tapp_models.forEach(\r\n\t\t\t(model) => {\r\n\t\t\t\t// CHECK ARGS\r\n\t\t\t\tassert(T.isObject(model), context + ':bad model object')\r\n\t\t\t\tassert(T.isString(model.$name), context + ':bad model name')\r\n\t\t\t\tassert(T.isObject(model.roles), context + ':bad model roles')\r\n\t\t\t\t\r\n\t\t\t\tself.info('add route for model [' + model.$name + ']')\r\n\t\t\t\t\r\n\t\t\t\tlet model_name = model.$name\r\n\t\t\t\tlet model_roles = model.roles\r\n\t\t\t\tlet epilogue_resource = model.get_epilogue_resource(arg_server, arg_cfg_route.full_route)\r\n\t\t\t\t\r\n\t\t\t\t// REGISTER CREATE ACCESS CHECK\r\n\t\t\t\tepilogue_resource.create.auth( security_epilogue_cb(model_name, model_roles.create, 'create items') )\r\n\t\t\t\t\r\n\t\t\t\t// REGISTER LIST ACCESS CHECK\r\n\t\t\t\tepilogue_resource.list.auth( security_epilogue_cb(model_name, model_roles.read, 'list items') )\r\n\t\t\t\t\r\n\t\t\t\t// REGISTER READ ACCESS CHECK\r\n\t\t\t\tepilogue_resource.read.auth( security_epilogue_cb(model_name, model_roles.read, 'read an item') )\r\n\t\t\t\t\r\n\t\t\t\t// REGISTER UPDATE ACCESS CHECK\r\n\t\t\t\tepilogue_resource.update.auth( security_epilogue_cb(model_name, model_roles.update, 'update items') )\r\n\t\t\t\t\r\n\t\t\t\t// REGISTER DELETE ACCESS CHECK\r\n\t\t\t\tepilogue_resource.delete.auth( security_epilogue_cb(model_name, model_roles.delete, 'delete items') )\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\t\r\n\t\tself.leave_group('ExecutableRouteModelCrud.process_route')\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/crud/executable_route_model_crud.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 77,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/crud/executable_route_model_crud.js",
    "static": true,
    "longname": "js/services/crud/executable_route_model_crud.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/crud/executable_route_model_crud.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "class",
    "name": "ExecutableRouteModelCrud",
    "memberof": "js/services/crud/executable_route_model_crud.js",
    "static": true,
    "longname": "js/services/crud/executable_route_model_crud.js~ExecutableRouteModelCrud",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/crud/executable_route_model_crud.js",
    "importStyle": "ExecutableRouteModelCrud",
    "description": "",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "CRUD operations route registering class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/executables/executable_route.js~ExecutableRoute"
    ]
  },
  {
    "__docId__": 79,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/crud/executable_route_model_crud.js~ExecutableRouteModelCrud",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/crud/executable_route_model_crud.js~ExecutableRouteModelCrud#constructor",
    "access": null,
    "description": "Create a route registration executable for CRUD operations",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "ExecutableRoute"
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "process_route",
    "memberof": "js/services/crud/executable_route_model_crud.js~ExecutableRouteModelCrud",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/crud/executable_route_model_crud.js~ExecutableRouteModelCrud#process_route",
    "access": null,
    "description": "Process a route registering.",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} promise with a boolean resolved value (true:success, false: failure)."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_server",
        "description": "Server instance."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_application",
        "description": "Application instance."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_cfg_route",
        "description": "plain object route configuration."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_data",
        "description": "plain object contextual datas."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "promise with a boolean resolved value (true:success, false: failure)."
    },
    "override": true
  },
  {
    "__docId__": 81,
    "kind": "file",
    "name": "js/services/logs/logs_svc_provider.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T               from 'devapt-core-common/dist/js/utils/types'\r\nimport ServiceProvider from 'devapt-core-common/dist/js/services/service_provider'\r\nimport ServiceResponse from 'devapt-core-common/dist/js/services/service_response'\r\n\r\n// SERVICES IMPORTS\r\n\r\n\r\nlet context = 'services/logs/logs_svc_provider'\r\n\r\n\r\n\r\n/**\r\n * Logs service provider class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class LogsSvcProvider extends ServiceProvider\r\n{\r\n\t/**\r\n\t * Create a assets service provider.\r\n\t * \r\n\t * @param {string} arg_provider_name - consumer name.\r\n\t * @param {Service} arg_service_instance - service instance.\r\n\t * @param {string} arg_context - logging context label.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_provider_name, arg_service_instance, arg_context=context)\r\n\t{\r\n\t\tsuper(arg_provider_name, arg_service_instance, arg_context)\r\n\r\n\t\tthis.is_logs_svc_provider = true\r\n\t\t\r\n\t\t// GET INPUT STREAM TO FORWARD TO SUBSCRIBERS\r\n\t\tthis.logs_bus_stream = this.get_runtime().node.get_logs_bus().get_input_stream()\r\n\t\tthis.init_logs_bus_stream()\r\n\r\n\t\t// DEBUG\r\n\t\t// this.logs_bus_stream.subscribe(\r\n\t\t// \t(logs_record) => {\r\n\t\t// \t\tconsole.log('LogsSvcProvider: new logs record on the bus', logs_record)\r\n\t\t// \t\tthis.provided_values_stream.push(logs_record)\r\n\t\t// \t}\r\n\t\t// )\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get provider operations names.\r\n\t * @abstract\r\n\t * \r\n\t * @returns {array}\r\n\t */\r\n\tget_operations_names()\r\n\t{\r\n\t\treturn ['devapt-log'].concat(super.get_operations_names())\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Produce service datas on request.\r\n\t * \r\n\t * @param {ServiceRequest} arg_request - service request instance.\r\n\t * \r\n\t * @returns {Promise} - promise of ServiceResponse instance.\r\n\t */\r\n\tproduce(arg_request)\r\n\t{\r\n\t\tconst operation = arg_request.get_operation()\r\n\t\t// const operands = arg_request.get_operands()\r\n\r\n\t\t// // CHECK OPERANDS\r\n\t\t// if ( ! T.isNotEmptyArray(operands) )\r\n\t\t// {\r\n\t\t// \treturn Promise.resolve(undefined)\r\n\t\t// }\r\n\r\n\t\tconst response = new ServiceResponse(arg_request)\r\n\r\n\t\t// SUBSCRIBE TO PROVIDER STREAM DATAS\r\n\t\tif (operation == 'devapt-log')\r\n\t\t{\r\n\t\t\t// TODO\r\n\t\t\tresponse.set_results([ { error:'...' } ])\r\n\t\t\treturn Promise.resolve(response)\r\n\t\t}\r\n\r\n\t\treturn super.produce(arg_request)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\tinit_logs_bus_stream()\r\n\t{\r\n\t\tconst max_logs_per_msg = 10\r\n\t\tconst delay_per_logs_msg = 100\r\n\t\tconst self = this\r\n\t\tconst limit_cb = (grouped_stream/*, group_start_event*/) => {\r\n\t\t\tconst map_cb = (values) => {\r\n\t\t\t\t// console.log(values, 'limit.map.values')\r\n\t\t\t\t\r\n\t\t\t\tlet logs_record = {\r\n\t\t\t\t\tts:undefined,\r\n\t\t\t\t\tlevel: undefined,\r\n\t\t\t\t\tsource:undefined,\r\n\t\t\t\t\tlogs:[]\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvalues.forEach(\r\n\t\t\t\t\t(value) => {\r\n\t\t\t\t\t\tlogs_record.ts = value.ts,\r\n\t\t\t\t\t\tlogs_record.level = value.level,\r\n\t\t\t\t\t\tlogs_record.source = value.source,\r\n\t\t\t\t\t\tlogs_record.logs = logs_record.logs.concat(value.logs)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\t\r\n\t\t\t\t// console.log(logs_record, 'limit.map.logs_record')\r\n\t\t\t\treturn logs_record\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn grouped_stream.bufferWithTimeOrCount(delay_per_logs_msg, max_logs_per_msg).map(map_cb)\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tconst key_cb = (value) => {\r\n\t\t\t// console.log(value.level, 'value.level')\r\n\t\t\treturn value.level\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tconst flatmap_cb = (grouped_stream) => {\r\n\t\t\treturn grouped_stream\r\n\t\t}\r\n\t\t\r\n\t\tconst msg_cb = (arg_msg) => {\r\n\t\t\tlet logs_ts = undefined\r\n\t\t\tlet logs_level = undefined\r\n\t\t\tlet logs_source = undefined\r\n\t\t\tlet logs_array = undefined\r\n\t\t\t\r\n\t\t\t// DEBUG\r\n\t\t\t// debugger\r\n\r\n\t\t\tif ( T.isObject(arg_msg) && arg_msg.is_distributed_logs )\r\n\t\t\t{\r\n\t\t\t\tlogs_ts = arg_msg.get_logs_ts()\r\n\t\t\t\tlogs_level = arg_msg.get_logs_level()\r\n\t\t\t\tlogs_source = arg_msg.get_logs_source()\r\n\t\t\t\tlogs_array = arg_msg.get_logs_values()\r\n\t\t\t}\r\n\t\t\telse if ( T.isObject(arg_msg) && T.isString(arg_msg.level) && T.isArray(arg_msg.logs) )\r\n\t\t\t{\r\n\t\t\t\tlogs_ts = arg_msg.ts\r\n\t\t\t\tlogs_level = arg_msg.level\r\n\t\t\t\tlogs_source = arg_msg.source\r\n\t\t\t\tlogs_array = arg_msg.logs\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst logs_record = {\r\n\t\t\t\tts: logs_ts,\r\n\t\t\t\tlevel: logs_level,\r\n\t\t\t\tsource: logs_source,\r\n\t\t\t\tlogs:logs_array\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\treturn logs_record\r\n\t\t}\r\n\t\t\r\n\t\tself.logs_bus_stream_transfomed = self.logs_bus_stream.get_transformed_stream().map(msg_cb).groupBy(key_cb, limit_cb).flatMap(flatmap_cb)\r\n\t\t\r\n\t\tself.logs_bus_stream_transfomed.onValue(\r\n\t\t\t(logs_record) => {\r\n\t\t\t\tthis.provided_values_stream.push(logs_record)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/logs/logs_svc_provider.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 82,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/logs/logs_svc_provider.js",
    "static": true,
    "longname": "js/services/logs/logs_svc_provider.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/logs/logs_svc_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "class",
    "name": "LogsSvcProvider",
    "memberof": "js/services/logs/logs_svc_provider.js",
    "static": true,
    "longname": "js/services/logs/logs_svc_provider.js~LogsSvcProvider",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/logs/logs_svc_provider.js",
    "importStyle": "LogsSvcProvider",
    "description": "Logs service provider class.",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "devapt-core-common/dist/js/services/service_provider~ServiceProvider"
    ]
  },
  {
    "__docId__": 84,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/logs/logs_svc_provider.js~LogsSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/logs/logs_svc_provider.js~LogsSvcProvider#constructor",
    "access": null,
    "description": "Create a assets service provider.",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider_name",
        "description": "consumer name."
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 85,
    "kind": "member",
    "name": "is_logs_svc_provider",
    "memberof": "js/services/logs/logs_svc_provider.js~LogsSvcProvider",
    "static": false,
    "longname": "js/services/logs/logs_svc_provider.js~LogsSvcProvider#is_logs_svc_provider",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "member",
    "name": "logs_bus_stream",
    "memberof": "js/services/logs/logs_svc_provider.js~LogsSvcProvider",
    "static": false,
    "longname": "js/services/logs/logs_svc_provider.js~LogsSvcProvider#logs_bus_stream",
    "access": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "get_operations_names",
    "memberof": "js/services/logs/logs_svc_provider.js~LogsSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/logs/logs_svc_provider.js~LogsSvcProvider#get_operations_names",
    "access": null,
    "description": "Get provider operations names.",
    "lineNumber": 59,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "produce",
    "memberof": "js/services/logs/logs_svc_provider.js~LogsSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/logs/logs_svc_provider.js~LogsSvcProvider#produce",
    "access": null,
    "description": "Produce service datas on request.",
    "lineNumber": 73,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of ServiceResponse instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ServiceRequest"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_request",
        "description": "service request instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of ServiceResponse instance."
    }
  },
  {
    "__docId__": 89,
    "kind": "method",
    "name": "init_logs_bus_stream",
    "memberof": "js/services/logs/logs_svc_provider.js~LogsSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/logs/logs_svc_provider.js~LogsSvcProvider#init_logs_bus_stream",
    "access": null,
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 90,
    "kind": "file",
    "name": "js/services/logs/unused_logs_service.js",
    "content": "// SERVER IMPORTS\r\nimport BaseService from '../base/base_service'\r\nimport LogsSvcProvider from './logs_svc_provider'\r\nimport LogsSvcConsumer from './logs_svc_consumer'\r\n\r\n\r\nlet context = 'server/services/logs/logs_service'\r\n\r\n\r\n\r\n/**\r\n * Service class for Logs datas.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class LogsService extends BaseService\r\n{\r\n\t/**\r\n\t * Create a service.\r\n\t * @param {string} arg_svc_name - service name\r\n\t * @param {object} arg_service_settings - service settings\r\n\t * @param {string} arg_context - logging context label\r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_svc_name, arg_service_settings, arg_context)\r\n\t{\r\n\t\tsuper(arg_svc_name, arg_service_settings, arg_context ? arg_context : context)\r\n\t\t\r\n\t\tthis.is_logs_service = true\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a service provider.\r\n\t * @param {string} arg_name - provider name\r\n\t * @param {Service} arg_service - service instance\r\n\t * @returns {ServiceProvider} - service provider instance\r\n\t */\r\n\tcreate_provider(arg_name, arg_service)\r\n\t{\r\n\t\t// TODO: why not this in place of arg_service\r\n\t\treturn new LogsSvcProvider(arg_name, arg_service)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a service consumer.\r\n\t * @returns {ServiceConsumer} - service consumer instance\r\n\t */\r\n\tcreate_consumer()\r\n\t{\r\n\t\treturn new LogsSvcConsumer(this.get_name() + '_consumer_' + this.get_id(), this)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/logs/unused_logs_service.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 91,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/logs/unused_logs_service.js",
    "static": true,
    "longname": "js/services/logs/unused_logs_service.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/logs/unused_logs_service.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "class",
    "name": "LogsService",
    "memberof": "js/services/logs/unused_logs_service.js",
    "static": true,
    "longname": "js/services/logs/unused_logs_service.js~LogsService",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/logs/unused_logs_service.js",
    "importStyle": "LogsService",
    "description": "Service class for Logs datas.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/base_service.js~BaseService"
    ]
  },
  {
    "__docId__": 93,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/logs/unused_logs_service.js~LogsService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/logs/unused_logs_service.js~LogsService#constructor",
    "access": null,
    "description": "Create a service.",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_name",
        "description": "service name"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_settings",
        "description": "service settings"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 94,
    "kind": "member",
    "name": "is_logs_service",
    "memberof": "js/services/logs/unused_logs_service.js~LogsService",
    "static": false,
    "longname": "js/services/logs/unused_logs_service.js~LogsService#is_logs_service",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "create_provider",
    "memberof": "js/services/logs/unused_logs_service.js~LogsService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/logs/unused_logs_service.js~LogsService#create_provider",
    "access": null,
    "description": "Create a service provider.",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceProvider} - service provider instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "provider name"
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service",
        "description": "service instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ServiceProvider"
      ],
      "spread": false,
      "description": "service provider instance"
    }
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "create_consumer",
    "memberof": "js/services/logs/unused_logs_service.js~LogsService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/logs/unused_logs_service.js~LogsService#create_consumer",
    "access": null,
    "description": "Create a service consumer.",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceConsumer} - service consumer instance"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "ServiceConsumer"
      ],
      "spread": false,
      "description": "service consumer instance"
    }
  },
  {
    "__docId__": 97,
    "kind": "file",
    "name": "js/services/logs/unused_logs_svc_consumer.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// SERVER IMPORTS\r\nimport ServiceConsumer from '../base/service_consumer'\r\n\r\n\r\nlet context = 'server/services/logs/logs_svc_consumer'\r\n\r\n\r\n\r\n/**\r\n * Service consumer class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class LogsSvcConsumer extends ServiceConsumer\r\n{\r\n\t\r\n\t/**\r\n\t * Create a service consumer.\r\n\t * @param {string} arg_consumer_name - consumer name\r\n\t * @param {Service} arg_service_instance - service instance\r\n\t * @param {string} arg_context - logging context label\r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_consumer_name, arg_service_instance, arg_context)\r\n\t{\r\n\t\tsuper(arg_consumer_name, arg_service_instance, arg_context ? arg_context : context)\r\n\t\tassert( arg_service_instance.is_logs_service, context + ':constructor:bad logs service instance')\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Enhance operands if needed\r\n\t * @params {array} arg_operands - Variable list of operands\r\n\t * @returns {array} - not used\r\n\t */\r\n\tprepare_args(arg_operands)\r\n\t{\r\n\t\tthis.enter_group('prepare_args')\r\n\t\t\r\n\t\tthis.leave_group('prepare_args')\r\n\t\treturn arg_operands\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Consume a service on the same host.\r\n\t * @param {object} arg_provider - service provider\r\n\t * @return {object} a promise of results\r\n\t */\r\n\tconsume_local(/*arg_provider*/)\r\n\t{\r\n\t\treturn Promise.resolve(undefined)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Consume a service on a remote host\r\n\t * @param {object} arg_provider - service provider\r\n\t * @param {array} arg_routes - Routes to request\r\n\t * @return {object} a promise of results\r\n\t */\r\n\tconsume_remote(/*arg_provider, arg_routes*/)\r\n\t{\r\n\t\tthis.enter_group('consume_remote')\r\n\t\t\r\n\t\t\r\n\t\tthis.leave_group('consume_remote')\r\n\t\treturn Promise.resolve(undefined)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/logs/unused_logs_svc_consumer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 98,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/logs/unused_logs_svc_consumer.js",
    "static": true,
    "longname": "js/services/logs/unused_logs_svc_consumer.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/logs/unused_logs_svc_consumer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 99,
    "kind": "class",
    "name": "LogsSvcConsumer",
    "memberof": "js/services/logs/unused_logs_svc_consumer.js",
    "static": true,
    "longname": "js/services/logs/unused_logs_svc_consumer.js~LogsSvcConsumer",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/logs/unused_logs_svc_consumer.js",
    "importStyle": "LogsSvcConsumer",
    "description": "Service consumer class.",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/service_consumer.js~ServiceConsumer"
    ]
  },
  {
    "__docId__": 100,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/logs/unused_logs_svc_consumer.js~LogsSvcConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/logs/unused_logs_svc_consumer.js~LogsSvcConsumer#constructor",
    "access": null,
    "description": "Create a service consumer.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_consumer_name",
        "description": "consumer name"
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "prepare_args",
    "memberof": "js/services/logs/unused_logs_svc_consumer.js~LogsSvcConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/logs/unused_logs_svc_consumer.js~LogsSvcConsumer#prepare_args",
    "access": null,
    "description": "Enhance operands if needed",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@params",
        "tagValue": "{array} arg_operands - Variable list of operands"
      },
      {
        "tagName": "@returns",
        "tagValue": "{array} - not used"
      }
    ],
    "params": [
      {
        "name": "arg_operands",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "not used"
    }
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "consume_local",
    "memberof": "js/services/logs/unused_logs_svc_consumer.js~LogsSvcConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/logs/unused_logs_svc_consumer.js~LogsSvcConsumer#consume_local",
    "access": null,
    "description": "Consume a service on the same host.",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider",
        "description": "service provider"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "a promise of results"
    }
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "consume_remote",
    "memberof": "js/services/logs/unused_logs_svc_consumer.js~LogsSvcConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/logs/unused_logs_svc_consumer.js~LogsSvcConsumer#consume_remote",
    "access": null,
    "description": "Consume a service on a remote host",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider",
        "description": "service provider"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_routes",
        "description": "Routes to request"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "a promise of results"
    }
  },
  {
    "__docId__": 104,
    "kind": "file",
    "name": "js/services/logs/unused_logs_svc_provider.js",
    "content": "// NPM IMPORTS\r\nimport T from 'typr'\r\nimport assert from 'assert'\r\n\r\n// SERVER IMPORTS\r\nimport SocketIOServiceProvider from '../base/socketio_service_provider'\r\nimport runtime from '../../base/runtime'\r\n\r\n\r\nlet context = 'server/services/logs/logs_svc_provider'\r\n\r\n\r\n\r\n/**\r\n * Logs service provider class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class LogsSvcProvider extends SocketIOServiceProvider\r\n{\r\n\t/**\r\n\t * Create a Logs service provider.\r\n\t * @param {string} arg_provider_name - consumer name\r\n\t * @param {Service} arg_service_instance - service instance\r\n\t * @param {string} arg_context - logging context label\r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_provider_name, arg_service_instance, arg_context)\r\n\t{\r\n\t\tsuper(arg_provider_name, arg_service_instance, arg_context ? arg_context : context)\r\n\t\t\r\n\t\tassert(this.service.is_logs_service, context + ':bad Logs service')\r\n\t\t\r\n\t\tthis.is_logs_service_provider = true\r\n\t\t\r\n\t\t// CREATE A BUS CLIENT\r\n\t\tthis.logs_bus_stream = runtime.node.get_logs_bus().get_output_stream()\r\n\t\tthis.init_logs_bus_stream()\r\n\t\t// this.logs_bus_stream.subscribe(\r\n\t\t// \t(logs_record) => {\r\n\t\t// \t\tconsole.log('LogsSvcProvider: new logs record on the bus', logs_record)\r\n\t\t// \t}\r\n\t\t// )\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\tinit_logs_bus_stream()\r\n\t{\r\n\t\tconst max_logs_per_msg = 10\r\n\t\tconst delay_per_logs_msg = 100\r\n\t\tconst self = this\r\n\t\tconst limit_cb = (grouped_stream/*, group_start_event*/) => {\r\n\t\t\tconst map_cb = (values) => {\r\n\t\t\t\t// console.log(values, 'limit.map.values')\r\n\t\t\t\t\r\n\t\t\t\tlet logs_record = {\r\n\t\t\t\t\tts:undefined,\r\n\t\t\t\t\tlevel: undefined,\r\n\t\t\t\t\tsource:undefined,\r\n\t\t\t\t\tlogs:[]\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvalues.forEach(\r\n\t\t\t\t\t(value) => {\r\n\t\t\t\t\t\tlogs_record.ts = value.ts,\r\n\t\t\t\t\t\tlogs_record.level = value.level,\r\n\t\t\t\t\t\tlogs_record.source = value.source,\r\n\t\t\t\t\t\tlogs_record.logs = logs_record.logs.concat(value.logs)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\t\r\n\t\t\t\t// console.log(logs_record, 'limit.map.logs_record')\r\n\t\t\t\treturn logs_record\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn grouped_stream.bufferWithTimeOrCount(delay_per_logs_msg, max_logs_per_msg).map(map_cb)\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tconst key_cb = (value) => {\r\n\t\t\t// console.log(value.level, 'value.level')\r\n\t\t\treturn value.level\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tconst flatmap_cb = (grouped_stream) => {\r\n\t\t\treturn grouped_stream\r\n\t\t}\r\n\t\t\r\n\t\tconst msg_cb = (arg_msg) => {\r\n\t\t\tlet logs_ts = undefined\r\n\t\t\tlet logs_level = undefined\r\n\t\t\tlet logs_source = undefined\r\n\t\t\tlet logs_array = undefined\r\n\t\t\t\r\n\t\t\tif ( T.isObject(arg_msg) && T.isString(arg_msg.target) && T.isObject(arg_msg.payload) )\r\n\t\t\t{\r\n\t\t\t\tlogs_ts = arg_msg.payload.ts\r\n\t\t\t\tlogs_level = arg_msg.payload.level\r\n\t\t\t\tlogs_source = arg_msg.payload.source\r\n\t\t\t\tlogs_array = arg_msg.payload.logs\r\n\t\t\t}\r\n\t\t\telse if ( T.isString(arg_msg.level) && T.isArray(arg_msg.logs) )\r\n\t\t\t{\r\n\t\t\t\tlogs_ts = arg_msg.ts\r\n\t\t\t\tlogs_level = arg_msg.level\r\n\t\t\t\tlogs_source = arg_msg.source\r\n\t\t\t\tlogs_array = arg_msg.logs\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst logs_record = {\r\n\t\t\t\tts: logs_ts,\r\n\t\t\t\tlevel: logs_level,\r\n\t\t\t\tsource: logs_source,\r\n\t\t\t\tlogs:logs_array\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\treturn logs_record\r\n\t\t}\r\n\t\t\r\n\t\tself.logs_bus_stream_transfomed = self.logs_bus_stream.get_transformed_stream().map(msg_cb).groupBy(key_cb, limit_cb).flatMap(flatmap_cb)\r\n\t\t\r\n\t\tself.logs_bus_stream_transfomed.onValue(\r\n\t\t\t(logs_record) => {\r\n\t\t\t\tthis.provided_values_stream.push(logs_record)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Process request and returns datas.\r\n\t * \r\n\t * @param {string} arg_method - method name\r\n\t * @param {array} arg_operands - request operands\r\n\t * @param {Credentials} arg_credentials - request credentials\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tprocess(/*arg_method, arg_operands, arg_credentials*/)\r\n\t{\r\n\t\treturn Promise.reject('nothing to do')\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/logs/unused_logs_svc_provider.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 105,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/logs/unused_logs_svc_provider.js",
    "static": true,
    "longname": "js/services/logs/unused_logs_svc_provider.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/logs/unused_logs_svc_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "class",
    "name": "LogsSvcProvider",
    "memberof": "js/services/logs/unused_logs_svc_provider.js",
    "static": true,
    "longname": "js/services/logs/unused_logs_svc_provider.js~LogsSvcProvider",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/logs/unused_logs_svc_provider.js",
    "importStyle": "LogsSvcProvider",
    "description": "Logs service provider class.",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/socketio_service_provider.js~SocketIOServiceProvider"
    ]
  },
  {
    "__docId__": 107,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/logs/unused_logs_svc_provider.js~LogsSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/logs/unused_logs_svc_provider.js~LogsSvcProvider#constructor",
    "access": null,
    "description": "Create a Logs service provider.",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider_name",
        "description": "consumer name"
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 108,
    "kind": "member",
    "name": "is_logs_service_provider",
    "memberof": "js/services/logs/unused_logs_svc_provider.js~LogsSvcProvider",
    "static": false,
    "longname": "js/services/logs/unused_logs_svc_provider.js~LogsSvcProvider#is_logs_service_provider",
    "access": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "member",
    "name": "logs_bus_stream",
    "memberof": "js/services/logs/unused_logs_svc_provider.js~LogsSvcProvider",
    "static": false,
    "longname": "js/services/logs/unused_logs_svc_provider.js~LogsSvcProvider#logs_bus_stream",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 110,
    "kind": "method",
    "name": "init_logs_bus_stream",
    "memberof": "js/services/logs/unused_logs_svc_provider.js~LogsSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/logs/unused_logs_svc_provider.js~LogsSvcProvider#init_logs_bus_stream",
    "access": null,
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "process",
    "memberof": "js/services/logs/unused_logs_svc_provider.js~LogsSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/logs/unused_logs_svc_provider.js~LogsSvcProvider#process",
    "access": null,
    "description": "Process request and returns datas.",
    "lineNumber": 142,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_method",
        "description": "method name"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_operands",
        "description": "request operands"
      },
      {
        "nullable": null,
        "types": [
          "Credentials"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "request credentials"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 112,
    "kind": "file",
    "name": "js/services/messages/messages_svc_provider.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T                  from 'devapt-core-common/dist/js/utils/types'\r\nimport ServiceProvider    from 'devapt-core-common/dist/js/services/service_provider'\r\nimport ServiceResponse    from 'devapt-core-common/dist/js/services/service_response'\r\nimport DistributedMessage from 'devapt-core-common/dist/js/base/distributed_message'\r\nimport DistributedLogs    from 'devapt-core-common/dist/js/base/distributed_logs'\r\nimport DistributedMetrics from 'devapt-core-common/dist/js/base/distributed_metrics'\r\n// import Stream             from 'devapt-core-common/dist/js/messaging/stream'\r\n\r\n// SERVICES IMPORTS\r\n\r\n\r\nlet context = 'services/messages/messages_svc_provider'\r\n\r\n\r\n\r\n/**\r\n * Messages service provider class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class MessagesSvcProvider extends ServiceProvider\r\n{\r\n\t/**\r\n\t * Create a messages gateway service provider.\r\n\t * \r\n\t * \tAPI:\r\n\t * \t\tthis._msg_subscriptions = {\r\n\t * \t\t\tsender name:{\r\n\t * \t\t\t\tbus name:{\r\n\t * \t\t\t\t\tchannel name:{\r\n\t * \t\t\t\t\t\tsocket: server/browser socket,\r\n\t * \t\t\t\t\t\tunsubscribe: function\r\n\t * \t\t\t\t\t}\r\n\t * \t\t\t\t}\r\n\t * \t\t\t}\r\n\t * \t\t}\r\n\t * \r\n\t * \t\t->\r\n\t * \r\n\t * @param {string} arg_provider_name - consumer name.\r\n\t * @param {Service} arg_service_instance - service instance.\r\n\t * @param {string} arg_context - logging context label.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_provider_name, arg_service_instance, arg_context=context)\r\n\t{\r\n\t\tsuper(arg_provider_name, arg_service_instance, arg_context)\r\n\r\n\t\tthis.is_messages_svc_provider = true\r\n\r\n\t\tthis._msg_subscriptions = {}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get provider operations names.\r\n\t * @abstract\r\n\t * \r\n\t * @returns {array}\r\n\t */\r\n\tget_operations_names()\r\n\t{\r\n\t\treturn [\r\n\t\t\t'devapt-msg-describe', 'devapt-msg-recipients',\r\n\t\t\t'devapt-msg-send',\r\n\t\t\t'devapt-msg-subscribe', 'devapt-msg-unsubscribe', 'devapt-msg-subscription'\r\n\t\t].concat( super.get_operations_names() )\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Produce service datas on request.\r\n\t * \r\n\t * @param {ServiceRequest} arg_request - service request instance.\r\n\t * \r\n\t * @returns {Promise} - promise of ServiceResponse instance.\r\n\t */\r\n\tproduce(arg_request)\r\n\t{\r\n\t\tthis.enter_group('produce')\r\n\r\n\t\tif ( ! T.isObject(arg_request) || ! arg_request.is_service_request)\r\n\t\t{\r\n\t\t\tthis.leave_group('produce:error:bad request object.')\r\n\t\t\treturn Promise.resolve({error:'bad request object'})\r\n\t\t}\r\n\r\n\t\tconst response = new ServiceResponse(arg_request)\r\n\t\tconst operation = arg_request.get_operation()\r\n\t\tconst operands = arg_request.get_operands()\r\n\r\n\t\t// console.log(context + ':produce:request for service=' + this.service.get_name() + ':operation=' + operation)\r\n\r\n\t\t// GET BUSES\r\n\t\tconst node = this.get_runtime().get_node()\r\n\t\tconst msg_bus = node.get_msg_bus()\r\n\t\tconst logs_bus = node.get_logs_bus()\r\n\t\tconst metrics_bus = node.get_metrics_bus()\r\n\t\tconst msg_engine = msg_bus.get_bus_engine()\r\n\t\tconst logs_engine = logs_bus.get_bus_engine()\r\n\t\tconst metrics_engine = metrics_bus.get_bus_engine()\r\n\r\n\r\n\t\tif (operation == 'devapt-msg-recipients')\r\n\t\t{\r\n\t\t\tconst bus        = operands.length > 0 ? operands[0] : undefined\r\n\t\t\tconst page_size  = operands.length > 1 ? operands[1] : 99\r\n\t\t\tconst page_index = operands.length > 2 ? operands[2] : 0\r\n\r\n\t\t\tif (bus == 'messages')\r\n\t\t\t{\r\n\t\t\t\tconst paged_result = msg_bus.msg_recipients(page_size, page_index)\r\n\t\t\t\tresponse.set_results(paged_result)\r\n\t\t\t\tthis.leave_group('produce:operation[' + operation + '] for bus [' + bus + ']')\r\n\t\t\t\treturn Promise.resolve(response)\r\n\t\t\t}\r\n\r\n\t\t\tif (bus == 'logs')\r\n\t\t\t{\r\n\t\t\t\tconst paged_result = logs_bus.msg_recipients(page_size, page_index)\r\n\t\t\t\tresponse.set_results(paged_result)\r\n\t\t\t\tthis.leave_group('produce:operation[' + operation + '] for bus [' + bus + ']')\r\n\t\t\t\treturn Promise.resolve(response)\r\n\t\t\t}\r\n\r\n\t\t\tif (bus == 'metrics')\r\n\t\t\t{\r\n\t\t\t\tconst paged_result = metrics_bus.msg_recipients(page_size, page_index)\r\n\t\t\t\tresponse.set_results(paged_result)\r\n\t\t\t\tthis.leave_group('produce:operation[' + operation + '] for bus [' + bus + ']')\r\n\t\t\t\treturn Promise.resolve(response)\r\n\t\t\t}\r\n\r\n\t\t\t// ERROR: BAD BUS NAME\r\n\t\t\tresponse.set_has_error(true)\r\n\t\t\tresponse.set_error('bad operands bus [' + bus + '] for operation [' + operation + ']')\r\n\t\t\tresponse.set_results(operands)\r\n\r\n\t\t\tthis.leave_group('produce:error:operation failure [' + operation + ']:bad operands bus [' + bus + '].')\r\n\t\t\treturn Promise.resolve(response)\r\n\t\t}\r\n\t\r\n\t\tif (operation == 'devapt-msg-describe')\r\n\t\t{\r\n\t\t\tconst buses = {}\r\n\r\n\t\t\tbuses['messages'] = {\r\n\t\t\t\tname:msg_bus.get_name(),\r\n\t\t\t\ttype:'messages',\r\n\t\t\t\tengine:msg_engine.get_name(),\r\n\t\t\t\tchannels:msg_engine.channel_list(),\r\n\t\t\t\trecipients:node.get_msg_bus().msg_recipients(99, 0)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tbuses['logs'] = {\r\n\t\t\t\tname:logs_bus.get_name(),\r\n\t\t\t\ttype:'logs',\r\n\t\t\t\tengine:logs_engine.get_name(),\r\n\t\t\t\tchannels:logs_engine.channel_list(),\r\n\t\t\t\trecipients:node.get_logs_bus().msg_recipients(99, 0)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tbuses['metrics'] = {\r\n\t\t\t\tname:metrics_bus.get_name(),\r\n\t\t\t\ttype:'metrics',\r\n\t\t\t\tengine:metrics_engine.get_name(),\r\n\t\t\t\tchannels:metrics_engine.channel_list(),\r\n\t\t\t\trecipients:node.get_metrics_bus().msg_recipients(99, 0)\r\n\t\t\t}\r\n\r\n\t\t\tresponse.set_results(buses)\r\n\r\n\t\t\t// console.log(context + ':produce:reply for service=' + this.service.get_name() + ':operation=' + operation, response.get_properties_values())\r\n\r\n\t\t\tthis.leave_group('produce:operation[' + operation + ']')\r\n\t\t\treturn Promise.resolve(response)\r\n\t\t}\r\n\r\n\r\n\t\tif (operation == 'devapt-msg-send')\r\n\t\t{\r\n\t\t\tconst response_promise = this.produce_send(arg_request)\r\n\t\t\tthis.leave_group('produce:[' + operation + ']')\r\n\t\t\treturn response_promise\r\n\t\t}\r\n\r\n\r\n\t\tif (operation == 'devapt-msg-subscribe')\r\n\t\t{\r\n\t\t\tconst response_promise = this.produce_subscribe(arg_request)\r\n\t\t\tthis.leave_group('produce:[' + operation + ']')\r\n\t\t\treturn response_promise\r\n\t\t}\r\n\r\n\r\n\t\tif (operation == 'devapt-msg-unsubscribe')\r\n\t\t{\r\n\t\t\tconst response_promise = this.produce_unsubscribe(arg_request)\r\n\t\t\tthis.leave_group('produce:[' + operation + ']')\r\n\t\t\treturn response_promise\r\n\t\t}\r\n\r\n\r\n\t\tif (operation == 'devapt-msg-subscription')\r\n\t\t{\r\n\t\t\tthis.leave_group('produce:[' + operation + ']')\r\n\t\t\treturn Promise.resolve(response)\r\n\t\t}\r\n\r\n\t\tthis.leave_group('produce:super.')\r\n\t\treturn super.produce(arg_request)\r\n\t}\r\n\r\n\r\n\r\n\tproduce_send(arg_request)\r\n\t{\r\n\t\tthis.enter_group('produce_send')\r\n\r\n\t\tconst response = new ServiceResponse(arg_request)\r\n\t\tconst operation = arg_request.get_operation()\r\n\t\tconst operands = arg_request.get_operands()\r\n\t\tconst node = this.get_runtime().get_node()\r\n\r\n\t\t// GET REQUEST OPERANDS\r\n\t\tconst sender  = arg_request.get_session_uid()\r\n\t\tconst bus     = operands.length > 0 ? operands[0] : undefined\r\n\t\tconst channel = operands.length > 1 ? operands[1] : 'default'\r\n\t\tconst target  = operands.length > 2 ? operands[2] : undefined\r\n\t\tconst payload = operands.length > 3 ? operands[3] : undefined\r\n\r\n\t\tif (bus == 'messages')\r\n\t\t{\r\n\t\t\t// CHECK REQUEST OPERANDS\r\n\t\t\tif ( ! T.isString(channel) || ! T.isString(target) || ! T.isObject(payload) )\r\n\t\t\t{\r\n\t\t\t\tresponse.set_has_error(true)\r\n\t\t\t\tresponse.set_error('bad operands to send a message.')\r\n\t\t\t\tresponse.set_results(operands)\r\n\r\n\t\t\t\tthis.leave_group('produce_send:error:operation failure [' + operation + ']:bad operands to send a message.')\r\n\t\t\t\treturn Promise.resolve(response)\r\n\t\t\t}\r\n\r\n\t\t\tconst msg = new DistributedMessage(sender, target, payload, channel)\r\n\t\t\tnode.get_msg_bus().msg_post(msg)\r\n\r\n\t\t\tthis.leave_group('produce_send:operation[' + operation + '] for bus=[' + bus + '], channel=[' + channel + '], target=[' + target + ']')\r\n\t\t\treturn Promise.resolve(response)\r\n\t\t}\r\n\r\n\t\tif (bus == 'logs')\r\n\t\t{\r\n\t\t\t// CHECK REQUEST OPERANDS\r\n\t\t\tif ( ! T.isString(channel) || ! T.isString(target) || ! T.isObject(payload) )\r\n\t\t\t{\r\n\t\t\t\tresponse.set_has_error(true)\r\n\t\t\t\tresponse.set_error('bad operands to send logs.')\r\n\t\t\t\tresponse.set_results(operands)\r\n\r\n\t\t\t\tthis.leave_group('produce_send:error:operation failure [' + operation + ']:bad operands to send logs.')\r\n\t\t\t\treturn Promise.resolve(response)\r\n\t\t\t}\r\n\r\n\t\t\t// CHECK LOGS CONTENT\r\n\t\t\tif ( ! T.isString(payload.timestamp) || ! T.isString(payload.level) || ! T.isArray(payload.values) )\r\n\t\t\t{\r\n\t\t\t\tresponse.set_has_error(true)\r\n\t\t\t\tresponse.set_error('bad operands payload to send logs: {timestamp:\"\", level:\"\", values:[]}.')\r\n\t\t\t\tresponse.set_results(operands)\r\n\r\n\t\t\t\tthis.leave_group('produce_send:error:operation failure [' + operation + ']:bad operands payload to send logs: {timestamp:\"\", level:\"\", values:[]}.')\r\n\t\t\t\treturn Promise.resolve(response)\r\n\t\t\t}\r\n\r\n\t\t\tconst msg = new DistributedLogs(sender, target, payload.timestamp, payload.level, payload.values)\r\n\t\t\tnode.get_logs_bus().msg_post(msg)\r\n\t\t\t\r\n\t\t\tthis.leave_group('produce_send:operation[' + operation + '] for bus=[logs]')\r\n\t\t\treturn Promise.resolve(response)\r\n\t\t}\r\n\r\n\t\tif (bus == 'metrics')\r\n\t\t{\r\n\t\t\t// CHECK REQUEST OPERANDS\r\n\t\t\tif ( ! T.isString(channel) || ! T.isString(target) || ! T.isObject(payload) )\r\n\t\t\t{\r\n\t\t\t\tresponse.set_has_error(true)\r\n\t\t\t\tresponse.set_error('bad operands to send metrics.')\r\n\t\t\t\tresponse.set_results(operands)\r\n\r\n\t\t\t\tthis.leave_group('produce_send:error:operation failure [' + operation + ']:bad operands to send metrics.')\r\n\t\t\t\treturn Promise.resolve(response)\r\n\t\t\t}\r\n\r\n\t\t\t// CHECK METRICS CONTENT\r\n\t\t\tif ( ! T.isString(payload.type) || ! T.isArray(payload.values) )\r\n\t\t\t{\r\n\t\t\t\tresponse.set_has_error(true)\r\n\t\t\t\tresponse.set_error('bad operands payload to send metrics: {type:\"\", values:[]}.')\r\n\t\t\t\tresponse.set_results(operands)\r\n\r\n\t\t\t\tthis.leave_group('produce_send:error:operation failure [' + operation + ']:bad operands payload to send metrics: {type:\"\", values:[]}.')\r\n\t\t\t\treturn Promise.resolve(response)\r\n\t\t\t}\r\n\r\n\t\t\tconst msg = new DistributedMetrics(sender, target, payload.type, payload.values)\r\n\t\t\tnode.get_metrics_bus().msg_post(msg)\r\n\t\t\t\r\n\t\t\tthis.leave_group('produce_send:operation[' + operation + '] for bus=[metrics]')\r\n\t\t\treturn Promise.resolve(response)\r\n\t\t}\r\n\r\n\t\t// ERROR: BAD BUS NAME\r\n\t\tresponse.set_has_error(true)\r\n\t\tresponse.set_error('bad operands bus [' + bus + '] for operation [' + operation + ']')\r\n\t\tresponse.set_results(operands)\r\n\r\n\t\tthis.leave_group('produce_send:error:operation failure [' + operation + ']:bad operands bus [' + bus + '].')\r\n\t\treturn Promise.resolve(response)\r\n\t}\r\n\r\n\r\n\r\n\tproduce_subscribe(arg_request)\r\n\t{\r\n\t\tthis.enter_group('produce_subscribe')\r\n\r\n\t\tconst response = new ServiceResponse(arg_request)\r\n\t\tconst operation = arg_request.get_operation()\r\n\t\tconst operands = arg_request.get_operands()\r\n\t\tconst node = this.get_runtime().get_node()\r\n\r\n\t\t// // GET REQUEST OPERANDS\r\n\t\tconst sender  = arg_request.get_session_uid()\r\n\t\tconst bus     = operands.length > 0 ? operands[0] : undefined\r\n\t\tconst channel = operands.length > 1 ? operands[1] : 'default'\r\n\t\t\r\n\t\tif (bus == 'messages')\r\n\t\t{\r\n\t\t\t// CHECK REQUEST OPERANDS\r\n\t\t\tif ( ! T.isString(channel) )\r\n\t\t\t{\r\n\t\t\t\tresponse.set_has_error(true)\r\n\t\t\t\tresponse.set_error('bad operands channel to subscribe on messages.')\r\n\t\t\t\tresponse.set_results(operands)\r\n\r\n\t\t\t\tthis.leave_group('produce_subscribe:error:operation failure [' + operation + ']:bad operands channel to subscribe on messages.')\r\n\t\t\t\treturn Promise.resolve(response)\r\n\t\t\t}\r\n\r\n\t\t\t// SUBSCRIPTION EXISTS\r\n\t\t\tif ( this.has_subscription(sender, bus, channel) )\r\n\t\t\t{\r\n\t\t\t\tresponse.set_has_error(true)\r\n\t\t\t\tresponse.set_error('messages subscription already exists for sender [' + sender + '].')\r\n\t\t\t\tresponse.set_results(operands)\r\n\r\n\t\t\t\tthis.leave_group('produce_subscribe:error:operation failure [' + operation + ']:messages subscription already exists for sender [' + sender + '].')\r\n\t\t\t\treturn Promise.resolve(response)\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// CREATE SESSION STREAM\r\n\t\t\tconst socket = arg_request.get_socket()\r\n\t\t\tthis._msg_subscriptions[sender] = this.init_subscription(sender, bus, channel, socket)\r\n\r\n\t\t\tconst handler = (arg_msg)=>{\r\n\t\t\t\tif (arg_msg.get_target() == sender)\r\n\t\t\t\t{\r\n\t\t\t\t\tsocket.emit('devapt-msg-subscription', { service:this.service.get_name(), operation:'devapt-msg-subscription', result:'done', datas:arg_msg })\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._msg_subscriptions[sender][bus][channel].unsubscribe = node.get_msg_bus().msg_subscribe(channel, handler, sender)\r\n\t\t\t\r\n\t\t\t// UNSUBSCRIBE ON SOCKET CLOSE\r\n\t\t\tsocket.on('disconnect', ()=>{\r\n\t\t\t\tif ( this.has_subscription(sender, bus, channel) && this._msg_subscriptions[sender][bus][channel].unsubscribe )\r\n\t\t\t\t{\r\n\t\t\t\t\tthis._msg_subscriptions[sender][bus][channel].unsubscribe()\r\n\t\t\t\t}\r\n\t\t\t\tnode.get_msg_bus().msg_remove_recipient(sender)\r\n\t\t\t})\r\n\t\t\tsocket.on('end', ()=>{\r\n\t\t\t\tif ( this.has_subscription(sender, bus, channel) && this._msg_subscriptions[sender][bus][channel].unsubscribe )\r\n\t\t\t\t{\r\n\t\t\t\t\tthis._msg_subscriptions[sender][bus][channel].unsubscribe()\r\n\t\t\t\t}\r\n\t\t\t\tnode.get_msg_bus().msg_remove_recipient(sender)\r\n\t\t\t})\r\n\r\n\t\t\tthis.leave_group('produce_subscribe:operation[' + operation + '] for bus=[messages] for sender [' + sender + ']')\r\n\t\t\treturn Promise.resolve(response)\r\n\t\t}\r\n\r\n\t\t// ERROR: BAD BUS NAME\r\n\t\tresponse.set_has_error(true)\r\n\t\tresponse.set_error('bad operands bus [' + bus + '] for operation [' + operation + ']')\r\n\t\tresponse.set_results(operands)\r\n\r\n\t\tthis.leave_group('produce_subscribe:error:operation failure [' + operation + ']:bad operands bus [' + bus + '].')\r\n\t\treturn Promise.resolve(response)\r\n\t}\r\n\r\n\r\n\thas_subscription(arg_sender, arg_bus, arg_channel)\r\n\t{\r\n\t\tif (arg_sender in this._msg_subscriptions)\r\n\t\t{\r\n\t\t\tconst subscription = this._msg_subscriptions[arg_sender]\r\n\t\t\tif (arg_bus in subscription)\r\n\t\t\t{\r\n\t\t\t\tif (arg_channel in subscription[arg_bus])\r\n\t\t\t\t{\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false\r\n\t}\r\n\r\n\r\n\tinit_subscription(arg_sender, arg_bus, arg_channel, arg_socket)\r\n\t{\r\n\t\tlet subscription = this._msg_subscriptions[arg_sender]\r\n\t\tif ( ! subscription)\r\n\t\t{\r\n\t\t\tsubscription = {}\r\n\t\t}\r\n\r\n\t\tif ( !(arg_bus in subscription) )\r\n\t\t{\r\n\t\t\tsubscription[arg_bus] = {}\r\n\t\t}\r\n\r\n\t\tif ( ! (arg_channel in subscription[arg_bus]) )\r\n\t\t{\r\n\t\t\tsubscription[arg_bus][arg_channel] = {\r\n\t\t\t\tsocket:arg_socket,\r\n\t\t\t\tunsubscribe: undefined\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn subscription\r\n\t}\r\n\r\n\r\n\r\n\tproduce_unsubscribe(arg_request)\r\n\t{\r\n\t\tthis.enter_group('produce_unsubscribe')\r\n\r\n\t\tconst response = new ServiceResponse(arg_request)\r\n\t\tconst operation = arg_request.get_operation()\r\n\t\tconst operands = arg_request.get_operands()\r\n\r\n\t\t// // GET REQUEST OPERANDS\r\n\t\tconst sender  = arg_request.get_session_uid()\r\n\t\tconst bus     = operands.length > 0 ? operands[0] : undefined\r\n\t\tconst channel = operands.length > 1 ? operands[1] : 'default'\r\n\t\t\r\n\t\tif (bus == 'messages')\r\n\t\t{\r\n\t\t\t// CHECK REQUEST OPERANDS\r\n\t\t\tif ( ! T.isString(channel) )\r\n\t\t\t{\r\n\t\t\t\tresponse.set_has_error(true)\r\n\t\t\t\tresponse.set_error('bad operands channel to unsubscribe for messages.')\r\n\t\t\t\tresponse.set_results(operands)\r\n\r\n\t\t\t\tthis.leave_group('produce_unsubscribe:error:operation failure [' + operation + ']:bad operands channel to unsubscribe for messages.')\r\n\t\t\t\treturn Promise.resolve(response)\r\n\t\t\t}\r\n\r\n\t\t\t// CHECK SUBSCRIPTION\r\n\t\t\tif ( ! this.has_subscription(sender, bus, channel) )\r\n\t\t\t{\r\n\t\t\t\tresponse.set_has_error(true)\r\n\t\t\t\tresponse.set_error('messages subscription doesn t exists for sender [' + sender + '].')\r\n\t\t\t\tresponse.set_results(operands)\r\n\r\n\t\t\t\tthis.leave_group('produce_unsubscribe:error:operation failure [' + operation + ']:messages subscription doesn t exists for sender [' + sender + '].')\r\n\t\t\t\treturn Promise.resolve(response)\r\n\t\t\t}\r\n\t\t\tconst subscription = this._msg_subscriptions[sender][bus][channel]\r\n\r\n\t\t\t// REMOVE SESSION STREAM\r\n\t\t\tconst unsubscribe_fn = subscription.unsubscribe\r\n\t\t\tif (unsubscribe_fn)\r\n\t\t\t{\r\n\t\t\t\tunsubscribe_fn()\r\n\t\t\t}\r\n\t\t\tdelete this._msg_subscriptions[sender][bus][channel]\r\n\r\n\t\t\tthis.leave_group('produce_unsubscribe:operation[' + operation + '] for bus=[messages] for sender [' + sender + ']')\r\n\t\t\treturn Promise.resolve(response)\r\n\t\t}\r\n\r\n\t\t// ERROR: BAD BUS NAME\r\n\t\tresponse.set_has_error(true)\r\n\t\tresponse.set_error('bad operands bus [' + bus + '] for operation [' + operation + ']')\r\n\t\tresponse.set_results(operands)\r\n\r\n\t\tthis.leave_group('produce_unsubscribe:error:operation failure [' + operation + ']:bad operands bus [' + bus + '].')\r\n\t\treturn Promise.resolve(response)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/messages/messages_svc_provider.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 113,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/messages/messages_svc_provider.js",
    "static": true,
    "longname": "js/services/messages/messages_svc_provider.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/messages/messages_svc_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 114,
    "kind": "class",
    "name": "MessagesSvcProvider",
    "memberof": "js/services/messages/messages_svc_provider.js",
    "static": true,
    "longname": "js/services/messages/messages_svc_provider.js~MessagesSvcProvider",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/messages/messages_svc_provider.js",
    "importStyle": "MessagesSvcProvider",
    "description": "Messages service provider class.",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "devapt-core-common/dist/js/services/service_provider~ServiceProvider"
    ]
  },
  {
    "__docId__": 115,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/messages/messages_svc_provider.js~MessagesSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/messages/messages_svc_provider.js~MessagesSvcProvider#constructor",
    "access": null,
    "description": "Create a messages gateway service provider.\n\n\tAPI:\n\t\tthis._msg_subscriptions = {\n\t\t\tsender name:{\n\t\t\t\tbus name:{\n\t\t\t\t\tchannel name:{\n\t\t\t\t\t\tsocket: server/browser socket,\n\t\t\t\t\t\tunsubscribe: function\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t->",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider_name",
        "description": "consumer name."
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 116,
    "kind": "member",
    "name": "is_messages_svc_provider",
    "memberof": "js/services/messages/messages_svc_provider.js~MessagesSvcProvider",
    "static": false,
    "longname": "js/services/messages/messages_svc_provider.js~MessagesSvcProvider#is_messages_svc_provider",
    "access": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 117,
    "kind": "member",
    "name": "_msg_subscriptions",
    "memberof": "js/services/messages/messages_svc_provider.js~MessagesSvcProvider",
    "static": false,
    "longname": "js/services/messages/messages_svc_provider.js~MessagesSvcProvider#_msg_subscriptions",
    "access": null,
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "get_operations_names",
    "memberof": "js/services/messages/messages_svc_provider.js~MessagesSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/messages/messages_svc_provider.js~MessagesSvcProvider#get_operations_names",
    "access": null,
    "description": "Get provider operations names.",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "produce",
    "memberof": "js/services/messages/messages_svc_provider.js~MessagesSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/messages/messages_svc_provider.js~MessagesSvcProvider#produce",
    "access": null,
    "description": "Produce service datas on request.",
    "lineNumber": 85,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of ServiceResponse instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ServiceRequest"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_request",
        "description": "service request instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of ServiceResponse instance."
    }
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "produce_send",
    "memberof": "js/services/messages/messages_svc_provider.js~MessagesSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/messages/messages_svc_provider.js~MessagesSvcProvider#produce_send",
    "access": null,
    "description": null,
    "lineNumber": 223,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "arg_request",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "produce_subscribe",
    "memberof": "js/services/messages/messages_svc_provider.js~MessagesSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/messages/messages_svc_provider.js~MessagesSvcProvider#produce_subscribe",
    "access": null,
    "description": null,
    "lineNumber": 332,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "arg_request",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "method",
    "name": "has_subscription",
    "memberof": "js/services/messages/messages_svc_provider.js~MessagesSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/messages/messages_svc_provider.js~MessagesSvcProvider#has_subscription",
    "access": null,
    "description": null,
    "lineNumber": 414,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "arg_sender",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_bus",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_channel",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "init_subscription",
    "memberof": "js/services/messages/messages_svc_provider.js~MessagesSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/messages/messages_svc_provider.js~MessagesSvcProvider#init_subscription",
    "access": null,
    "description": null,
    "lineNumber": 432,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "arg_sender",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_bus",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_channel",
        "types": [
          "*"
        ]
      },
      {
        "name": "arg_socket",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "produce_unsubscribe",
    "memberof": "js/services/messages/messages_svc_provider.js~MessagesSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/messages/messages_svc_provider.js~MessagesSvcProvider#produce_unsubscribe",
    "access": null,
    "description": null,
    "lineNumber": 458,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "arg_request",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 125,
    "kind": "file",
    "name": "js/services/messages/unused_messages_service.js",
    "content": "// SERVER IMPORTS\r\nimport BaseService from '../base/base_service'\r\nimport MessagesSvcProvider from './messages_svc_provider'\r\nimport MessagesSvcConsumer from './messages_svc_consumer'\r\n\r\n\r\nlet context = 'server/services/messages/messages_service'\r\n\r\n\r\n\r\n/**\r\n * Service class for Messages datas.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class MessagesService extends BaseService\r\n{\r\n\t/**\r\n\t * Create a service.\r\n\t * @param {string} arg_svc_name - service name\r\n\t * @param {object} arg_service_settings - service settings\r\n\t * @param {string} arg_context - logging context label\r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_svc_name, arg_service_settings, arg_context)\r\n\t{\r\n\t\tsuper(arg_svc_name, arg_service_settings, arg_context ? arg_context : context)\r\n\t\t\r\n\t\tthis.is_messages_service = true\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a service provider.\r\n\t * @param {string} arg_name - provider name\r\n\t * @param {Service} arg_service - service instance\r\n\t * @returns {ServiceProvider} - service provider instance\r\n\t */\r\n\tcreate_provider(arg_name, arg_service)\r\n\t{\r\n\t\t// TODO: why not this in place of arg_service\r\n\t\treturn new MessagesSvcProvider(arg_name, arg_service)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a service consumer.\r\n\t * @returns {ServiceConsumer} - service consumer instance\r\n\t */\r\n\tcreate_consumer()\r\n\t{\r\n\t\treturn new MessagesSvcConsumer(this.get_name() + '_consumer_' + this.get_id(), this)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/messages/unused_messages_service.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 126,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/messages/unused_messages_service.js",
    "static": true,
    "longname": "js/services/messages/unused_messages_service.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/messages/unused_messages_service.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 127,
    "kind": "class",
    "name": "MessagesService",
    "memberof": "js/services/messages/unused_messages_service.js",
    "static": true,
    "longname": "js/services/messages/unused_messages_service.js~MessagesService",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/messages/unused_messages_service.js",
    "importStyle": "MessagesService",
    "description": "Service class for Messages datas.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/base_service.js~BaseService"
    ]
  },
  {
    "__docId__": 128,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/messages/unused_messages_service.js~MessagesService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/messages/unused_messages_service.js~MessagesService#constructor",
    "access": null,
    "description": "Create a service.",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_name",
        "description": "service name"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_settings",
        "description": "service settings"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 129,
    "kind": "member",
    "name": "is_messages_service",
    "memberof": "js/services/messages/unused_messages_service.js~MessagesService",
    "static": false,
    "longname": "js/services/messages/unused_messages_service.js~MessagesService#is_messages_service",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 130,
    "kind": "method",
    "name": "create_provider",
    "memberof": "js/services/messages/unused_messages_service.js~MessagesService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/messages/unused_messages_service.js~MessagesService#create_provider",
    "access": null,
    "description": "Create a service provider.",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceProvider} - service provider instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "provider name"
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service",
        "description": "service instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ServiceProvider"
      ],
      "spread": false,
      "description": "service provider instance"
    }
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "create_consumer",
    "memberof": "js/services/messages/unused_messages_service.js~MessagesService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/messages/unused_messages_service.js~MessagesService#create_consumer",
    "access": null,
    "description": "Create a service consumer.",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceConsumer} - service consumer instance"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "ServiceConsumer"
      ],
      "spread": false,
      "description": "service consumer instance"
    }
  },
  {
    "__docId__": 132,
    "kind": "file",
    "name": "js/services/messages/unused_messages_svc_consumer.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// SERVER IMPORTS\r\nimport ServiceConsumer from '../base/service_consumer'\r\n\r\n\r\nlet context = 'server/services/messages/messages_svc_consumer'\r\n\r\n\r\n\r\n/**\r\n * Service consumer class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class MessagesSvcConsumer extends ServiceConsumer\r\n{\r\n\t\r\n\t/**\r\n\t * Create a service consumer.\r\n\t * @param {string} arg_consumer_name - consumer name\r\n\t * @param {Service} arg_service_instance - service instance\r\n\t * @param {string} arg_context - logging context label\r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_consumer_name, arg_service_instance, arg_context)\r\n\t{\r\n\t\tsuper(arg_consumer_name, arg_service_instance, arg_context ? arg_context : context)\r\n\t\tassert( arg_service_instance.is_messages_service, context + ':constructor:bad messages service instance')\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Enhance operands if needed\r\n\t * @params {array} arg_operands - Variable list of operands\r\n\t * @returns {array} - not used\r\n\t */\r\n\tprepare_args(arg_operands)\r\n\t{\r\n\t\tthis.enter_group('prepare_args')\r\n\t\t\r\n\t\tthis.leave_group('prepare_args')\r\n\t\treturn arg_operands\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Consume a service on the same host.\r\n\t * @param {object} arg_provider - service provider\r\n\t * @return {object} a promise of results\r\n\t */\r\n\tconsume_local(/*arg_provider*/)\r\n\t{\r\n\t\treturn Promise.resolve(undefined)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Consume a service on a remote host\r\n\t * @param {object} arg_provider - service provider\r\n\t * @param {array} arg_routes - Routes to request\r\n\t * @return {object} a promise of results\r\n\t */\r\n\tconsume_remote(/*arg_provider, arg_routes*/)\r\n\t{\r\n\t\tthis.enter_group('consume_remote')\r\n\t\t\r\n\t\t\r\n\t\tthis.leave_group('consume_remote')\r\n\t\treturn Promise.resolve(undefined)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/messages/unused_messages_svc_consumer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 133,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/messages/unused_messages_svc_consumer.js",
    "static": true,
    "longname": "js/services/messages/unused_messages_svc_consumer.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/messages/unused_messages_svc_consumer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 134,
    "kind": "class",
    "name": "MessagesSvcConsumer",
    "memberof": "js/services/messages/unused_messages_svc_consumer.js",
    "static": true,
    "longname": "js/services/messages/unused_messages_svc_consumer.js~MessagesSvcConsumer",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/messages/unused_messages_svc_consumer.js",
    "importStyle": "MessagesSvcConsumer",
    "description": "Service consumer class.",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/service_consumer.js~ServiceConsumer"
    ]
  },
  {
    "__docId__": 135,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/messages/unused_messages_svc_consumer.js~MessagesSvcConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/messages/unused_messages_svc_consumer.js~MessagesSvcConsumer#constructor",
    "access": null,
    "description": "Create a service consumer.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_consumer_name",
        "description": "consumer name"
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "prepare_args",
    "memberof": "js/services/messages/unused_messages_svc_consumer.js~MessagesSvcConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/messages/unused_messages_svc_consumer.js~MessagesSvcConsumer#prepare_args",
    "access": null,
    "description": "Enhance operands if needed",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@params",
        "tagValue": "{array} arg_operands - Variable list of operands"
      },
      {
        "tagName": "@returns",
        "tagValue": "{array} - not used"
      }
    ],
    "params": [
      {
        "name": "arg_operands",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "not used"
    }
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "consume_local",
    "memberof": "js/services/messages/unused_messages_svc_consumer.js~MessagesSvcConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/messages/unused_messages_svc_consumer.js~MessagesSvcConsumer#consume_local",
    "access": null,
    "description": "Consume a service on the same host.",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider",
        "description": "service provider"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "a promise of results"
    }
  },
  {
    "__docId__": 138,
    "kind": "method",
    "name": "consume_remote",
    "memberof": "js/services/messages/unused_messages_svc_consumer.js~MessagesSvcConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/messages/unused_messages_svc_consumer.js~MessagesSvcConsumer#consume_remote",
    "access": null,
    "description": "Consume a service on a remote host",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider",
        "description": "service provider"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_routes",
        "description": "Routes to request"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "a promise of results"
    }
  },
  {
    "__docId__": 139,
    "kind": "file",
    "name": "js/services/messages/unused_messages_svc_provider.js",
    "content": "// NPM IMPORTS\r\nimport T from 'typr'\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport Stream from '../../../common/messaging/stream'\r\n\r\nimport runtime from '../../base/runtime'\r\n// SERVER IMPORTS\r\nimport SocketIOServiceProvider from '../base/socketio_service_provider'\r\n\r\n\r\nlet context = 'server/services/messages/messages_svc_provider'\r\n\r\n\r\n\r\n/**\r\n * Messages service provider class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class MessagesSvcProvider extends SocketIOServiceProvider\r\n{\r\n\t/**\r\n\t * Create a Messages service provider.\r\n\t * \r\n\t * @param {string} arg_provider_name - consumer name.\r\n\t * @param {Service} arg_service_instance - service instance.\r\n\t * @param {string} arg_context - logging context label.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_provider_name, arg_service_instance, arg_context)\r\n\t{\r\n\t\tsuper(arg_provider_name, arg_service_instance, arg_context ? arg_context : context)\r\n\t\t\r\n\t\tassert(this.service.is_messages_service, context + ':constructor:bad Messages service')\r\n\t\t\r\n\t\tthis.is_messages_service_provider = true\r\n\t\t\r\n\r\n\t\t// INIT STREAM TRANSFORMATION WHEN BUS IS READY\r\n\t\tthis.is_ready = false\r\n\t\tconst self = this\r\n\t\truntime.node.msg_bus_feature.started_promise.then(\r\n\t\t\t() => {\r\n\t\t\t\t// console.log(context + ':init:msg feature is ready')\r\n\r\n\t\t\t\tconst bus = runtime.node.get_msg_bus()\r\n\t\t\t\tconst gws = bus.get_gateways()\r\n\t\t\t\tif ( gws.length > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\t// LOOP ON BUS GATEWAYS\r\n\t\t\t\t\tlet gws_promises = []\r\n\t\t\t\t\tgws.forEach(\r\n\t\t\t\t\t\t(gw) => {\r\n\t\t\t\t\t\t\t// console.log(context + ':init:msg feature gw=%s', gw.get_name())\r\n\t\t\t\t\t\t\tgws_promises.push(gw.started_promise)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t\tPromise.all(gws_promises).then( self.init_messages_bus_stream.bind(self) )\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tself.init_messages_bus_stream()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\r\n\r\n\t\t// DEBUG\r\n\t\t// this.messages_bus_stream.subscribe(\r\n\t\t// \t(messages_record) => {\r\n\t\t// \t\tconsole.log(context + ':messages_bus_stream.subscribe:', messages_record)\r\n\t\t// \t}\r\n\t\t// )\r\n\t}\r\n\r\n\r\n\t\r\n\t\r\n\tinit_messages_bus_stream()\r\n\t{\r\n\t\tconst self = this\r\n\t\t// console.log(context + ':init_messages_bus_stream')\r\n\r\n\t\t// CREATE NEW STREAM OF MESSAGES WITH TRANSPORTER ATTRIBUTE\r\n\t\tconst bus = runtime.node.get_msg_bus()\r\n\t\tthis.messages_bus_stream = new Stream()\r\n\t\tconst bus_stream_with_transporter = bus.get_output_stream().get_transformed_stream().map(\r\n\t\t\t(msg) => {\r\n\t\t\t\tmsg.transporter = bus.get_name()\r\n\t\t\t\treturn msg\r\n\t\t\t}\r\n\t\t)\r\n\t\tthis.messages_bus_stream.set_transformed_stream(bus_stream_with_transporter)\r\n\r\n\t\t// LOOP ON BUS GATEWAYS\r\n\t\tconst gws = bus.get_gateways()\r\n\t\tif ( gws.length > 0)\r\n\t\t{\r\n\t\t\tlet merged_stream = bus_stream_with_transporter\r\n\t\t\tgws.forEach(\r\n\t\t\t\t(gw) => {\r\n\t\t\t\t\t// console.log(context + ':init:merge gw stream=%s', gw.get_name())\r\n\t\t\t\t\tconst stream = gw.get_output_stream()\r\n\t\t\t\t\tif (stream)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst gw_stream_with_transporter = stream.get_transformed_stream().map(\r\n\t\t\t\t\t\t\t(msg) => {\r\n\t\t\t\t\t\t\t\tmsg.transporter = gw.get_name()\r\n\t\t\t\t\t\t\t\t// console.log(context + ':gw bus msg:transporter=%s sender=%s target=%s', msg.transporter, msg.sender, msg.target)\r\n\t\t\t\t\t\t\t\treturn msg\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\tmerged_stream = merged_stream.merge(gw_stream_with_transporter)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\tthis.messages_bus_stream.set_transformed_stream(merged_stream)\r\n\t\t}\r\n\r\n\t\tconst msg_cb = (arg_msg) => {\r\n\t\t\tconst message_ts = new Date()\r\n\t\t\tconst message_transporter = arg_msg && arg_msg.transporter ? arg_msg.transporter : 'unknow'\r\n\t\t\tconst message_sender = arg_msg && arg_msg.sender ? arg_msg.sender : 'unknow'\r\n\t\t\tconst message_target = arg_msg && arg_msg.target ? arg_msg.target : 'unknow'\r\n\t\t\tconst message_payload = arg_msg && arg_msg.payload ? arg_msg.payload : { error:'unknow message payload' }\r\n\t\t\t\r\n\t\t\tconst max_payload_chars = 100\r\n\t\t\tlet payload_str = JSON.stringify( message_payload )\r\n\t\t\tpayload_str = payload_str.substr(0, max_payload_chars)\r\n\t\t\t// payload_str = escape(payload_str) // TODO SANITIZE\r\n\r\n\t\t\tconst message_record = {\r\n\t\t\t\tts:message_ts,\r\n\t\t\t\ttransporter:message_transporter,\r\n\t\t\t\tsender:message_sender,\r\n\t\t\t\ttarget:message_target,\r\n\t\t\t\tpayload:payload_str\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// console.log(context + ':init_messages_bus_stream::msg_cb:message_record', message_record)\r\n\r\n\t\t\treturn [message_record]\r\n\t\t}\r\n\t\t\r\n\t\tself.messages_bus_stream_transfomed = self.messages_bus_stream.get_transformed_stream().map(msg_cb)\r\n\t\t\r\n\t\tself.messages_bus_stream_transfomed.onValue(\r\n\t\t\t(values) => {\r\n\t\t\t\tconst msg = values[0]\r\n\t\t\t\t// console.log(context + ':provided_values_stream.push:transporter=%s sender=%s target=%s', msg.transporter, msg.sender, msg.target)\r\n\r\n\t\t\t\tthis.provided_values_stream.push(values)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tthis.is_ready = true\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Process request and returns datas.\r\n\t * \r\n\t * @param {string} arg_method - method name.\r\n\t * @param {array} arg_operands - request operands.\r\n\t * @param {Credentials} arg_credentials - request credentials.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tprocess(arg_method, arg_operands, arg_credentials)\r\n\t{\r\n\t\t// console.log(context + ':process')\r\n\t\tassert(this.is_ready, context + ':process:not ready yet')\r\n\t\tassert( T.isString(arg_method), context + ':process:bad method string')\r\n\t\tassert( T.isArray(arg_operands), context + ':process:bad operands array')\r\n\t\tassert( T.isObject(arg_credentials) && arg_credentials.is_credentials, context + ':process:bad credentials object')\r\n\t\t\r\n\t\tswitch(arg_method)\r\n\t\t{\r\n\t\t\tcase 'get': {\r\n\t\t\t\t// GET WITHOUT OPERANDS\r\n\t\t\t\tif ( arg_operands.length == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tconst bus_state_values = {}\r\n\t\t\t\t\t// console.log(bus_state_values, context + ':produce:get:no opds:bus_state_values')\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn Promise.resolve(bus_state_values)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// GET WITH OPERANDS\r\n\t\t\t\tconst first_operand = arg_operands[0]\r\n\t\t\t\t\r\n\t\t\t\tif ( T.isObject(first_operand) && T.isObject(first_operand.args) )\r\n\t\t\t\t{\r\n\t\t\t\t\tif ( T.isString(first_operand.args.bus_name) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst bus_state_values = {}\r\n\t\t\t\t\t\t// console.log(bus_state_values, context + ':produce:get:bus_name=' + first_operand.args.bus_name + ':bus_state_values')\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn Promise.resolve(bus_state_values)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst bus_state_values = {}\r\n\t\t\t\t// console.log(bus_state_values, context + ':produce:get:bad opds:bus_state_values')\r\n\t\t\t\treturn Promise.resolve(bus_state_values)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase 'list': {\r\n\t\t\t\tconst bus_state_items = {}\r\n\t\t\t\t// console.log(bus_state_items, context + ':produce:list:bus_state_items')\r\n\t\t\t\t\r\n\t\t\t\treturn Promise.resolve(bus_state_items)\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\treturn Promise.reject('bad data request operation [' + arg_method + ']')\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/messages/unused_messages_svc_provider.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 140,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/messages/unused_messages_svc_provider.js",
    "static": true,
    "longname": "js/services/messages/unused_messages_svc_provider.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/messages/unused_messages_svc_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 141,
    "kind": "class",
    "name": "MessagesSvcProvider",
    "memberof": "js/services/messages/unused_messages_svc_provider.js",
    "static": true,
    "longname": "js/services/messages/unused_messages_svc_provider.js~MessagesSvcProvider",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/messages/unused_messages_svc_provider.js",
    "importStyle": "MessagesSvcProvider",
    "description": "Messages service provider class.",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/socketio_service_provider.js~SocketIOServiceProvider"
    ]
  },
  {
    "__docId__": 142,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/messages/unused_messages_svc_provider.js~MessagesSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/messages/unused_messages_svc_provider.js~MessagesSvcProvider#constructor",
    "access": null,
    "description": "Create a Messages service provider.",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider_name",
        "description": "consumer name."
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 143,
    "kind": "member",
    "name": "is_messages_service_provider",
    "memberof": "js/services/messages/unused_messages_svc_provider.js~MessagesSvcProvider",
    "static": false,
    "longname": "js/services/messages/unused_messages_svc_provider.js~MessagesSvcProvider#is_messages_service_provider",
    "access": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 144,
    "kind": "member",
    "name": "is_ready",
    "memberof": "js/services/messages/unused_messages_svc_provider.js~MessagesSvcProvider",
    "static": false,
    "longname": "js/services/messages/unused_messages_svc_provider.js~MessagesSvcProvider#is_ready",
    "access": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "init_messages_bus_stream",
    "memberof": "js/services/messages/unused_messages_svc_provider.js~MessagesSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/messages/unused_messages_svc_provider.js~MessagesSvcProvider#init_messages_bus_stream",
    "access": null,
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 146,
    "kind": "member",
    "name": "messages_bus_stream",
    "memberof": "js/services/messages/unused_messages_svc_provider.js~MessagesSvcProvider",
    "static": false,
    "longname": "js/services/messages/unused_messages_svc_provider.js~MessagesSvcProvider#messages_bus_stream",
    "access": null,
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 147,
    "kind": "member",
    "name": "is_ready",
    "memberof": "js/services/messages/unused_messages_svc_provider.js~MessagesSvcProvider",
    "static": false,
    "longname": "js/services/messages/unused_messages_svc_provider.js~MessagesSvcProvider#is_ready",
    "access": null,
    "description": null,
    "lineNumber": 159,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 148,
    "kind": "method",
    "name": "process",
    "memberof": "js/services/messages/unused_messages_svc_provider.js~MessagesSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/messages/unused_messages_svc_provider.js~MessagesSvcProvider#process",
    "access": null,
    "description": "Process request and returns datas.",
    "lineNumber": 173,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_method",
        "description": "method name."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_operands",
        "description": "request operands."
      },
      {
        "nullable": null,
        "types": [
          "Credentials"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "request credentials."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 149,
    "kind": "file",
    "name": "js/services/metrics_bus/metrics_service.js",
    "content": "// SERVER IMPORTS\r\nimport BaseService from '../base/base_service'\r\nimport MetricsBusSvcProvider from './metrics_svc_provider'\r\nimport MetricsBusSvcConsumer from './metrics_svc_consumer'\r\n\r\n\r\nlet context = 'server/services/metrics_bus/metrics_service'\r\n\r\n\r\n\r\n/**\r\n * Service class for metrics datas.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class MetricsBusService extends BaseService\r\n{\r\n\t/**\r\n\t * Create a service.\r\n\t * \r\n\t * @param {string} arg_svc_name - service name.\r\n\t * @param {object} arg_service_settings - service settings.\r\n\t * @param {string} arg_context - logging context label.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_svc_name, arg_service_settings, arg_context)\r\n\t{\r\n\t\tsuper(arg_svc_name, arg_service_settings, arg_context ? arg_context : context)\r\n\t\t\r\n\t\tthis.is_metrics_bus_service = true\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a service provider.\r\n\t * \r\n\t * @param {string} arg_name - provider name.\r\n\t * @param {Service} arg_service - service instance.\r\n\t * \r\n\t * @returns {ServiceProvider} - service provider instance.\r\n\t */\r\n\tcreate_provider(arg_name, arg_service)\r\n\t{\r\n\t\t// TODO: why not this in place of arg_service\r\n\t\treturn new MetricsBusSvcProvider(arg_name, arg_service)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a service consumer.\r\n\t * \r\n\t * @returns {ServiceConsumer} - service consumer instance\r\n\t */\r\n\tcreate_consumer()\r\n\t{\r\n\t\treturn new MetricsBusSvcConsumer(this.get_name() + '_consumer_' + this.get_id(), this)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/metrics_bus/metrics_service.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 150,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/metrics_bus/metrics_service.js",
    "static": true,
    "longname": "js/services/metrics_bus/metrics_service.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/metrics_bus/metrics_service.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 151,
    "kind": "class",
    "name": "MetricsBusService",
    "memberof": "js/services/metrics_bus/metrics_service.js",
    "static": true,
    "longname": "js/services/metrics_bus/metrics_service.js~MetricsBusService",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/metrics_bus/metrics_service.js",
    "importStyle": "MetricsBusService",
    "description": "Service class for metrics datas.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/base_service.js~BaseService"
    ]
  },
  {
    "__docId__": 152,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/metrics_bus/metrics_service.js~MetricsBusService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_bus/metrics_service.js~MetricsBusService#constructor",
    "access": null,
    "description": "Create a service.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_name",
        "description": "service name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_settings",
        "description": "service settings."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 153,
    "kind": "member",
    "name": "is_metrics_bus_service",
    "memberof": "js/services/metrics_bus/metrics_service.js~MetricsBusService",
    "static": false,
    "longname": "js/services/metrics_bus/metrics_service.js~MetricsBusService#is_metrics_bus_service",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "method",
    "name": "create_provider",
    "memberof": "js/services/metrics_bus/metrics_service.js~MetricsBusService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_bus/metrics_service.js~MetricsBusService#create_provider",
    "access": null,
    "description": "Create a service provider.",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceProvider} - service provider instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "provider name."
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service",
        "description": "service instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ServiceProvider"
      ],
      "spread": false,
      "description": "service provider instance."
    }
  },
  {
    "__docId__": 155,
    "kind": "method",
    "name": "create_consumer",
    "memberof": "js/services/metrics_bus/metrics_service.js~MetricsBusService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_bus/metrics_service.js~MetricsBusService#create_consumer",
    "access": null,
    "description": "Create a service consumer.",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceConsumer} - service consumer instance"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "ServiceConsumer"
      ],
      "spread": false,
      "description": "service consumer instance"
    }
  },
  {
    "__docId__": 156,
    "kind": "file",
    "name": "js/services/metrics_bus/metrics_svc_consumer.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// SERVER IMPORTS\r\nimport ServiceConsumer from '../base/service_consumer'\r\n\r\n\r\nlet context = 'server/services/metrics_bus/metrics_svc_consumer'\r\n\r\n\r\n\r\n/**\r\n * Service consumer class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class MetricsSvcBusConsumer extends ServiceConsumer\r\n{\r\n\t/**\r\n\t * Create a service consumer.\r\n\t * \r\n\t * @param {string} arg_consumer_name - consumer name.\r\n\t * @param {Service} arg_service_instance - service instance.\r\n\t * @param {string} arg_context - logging context label.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_consumer_name, arg_service_instance, arg_context)\r\n\t{\r\n\t\tsuper(arg_consumer_name, arg_service_instance, arg_context ? arg_context : context)\r\n\t\tassert( arg_service_instance.is_metrics_service, context + ':constructor:bad crud service instance')\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Enhance operands if needed.\r\n\t * \r\n\t * @params {array} arg_operands - Variable list of operands.\r\n\t * \r\n\t * @returns {array} - not used.\r\n\t */\r\n\tprepare_args(arg_operands)\r\n\t{\r\n\t\tthis.enter_group('prepare_args')\r\n\t\t\r\n\t\tthis.leave_group('prepare_args')\r\n\t\treturn arg_operands\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Consume a service on the same bus.\r\n\t * \r\n\t * @param {object} arg_provider - service provider.\r\n\t * \r\n\t * @return {object} a promise of results.\r\n\t */\r\n\tconsume_local(/*arg_provider*/)\r\n\t{\r\n\t\treturn Promise.resolve(undefined)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Consume a service on a remote bus.\r\n\t * \r\n\t * @param {object} arg_provider - service provider.\r\n\t * @param {array} arg_routes - Routes to request.\r\n\t * \r\n\t * @return {object} a promise of results.\r\n\t */\r\n\tconsume_remote(/*arg_provider, arg_routes*/)\r\n\t{\r\n\t\tthis.enter_group('consume_remote')\r\n\t\t\r\n\t\t\r\n\t\tthis.leave_group('consume_remote')\r\n\t\treturn Promise.resolve(undefined)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/metrics_bus/metrics_svc_consumer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 157,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/metrics_bus/metrics_svc_consumer.js",
    "static": true,
    "longname": "js/services/metrics_bus/metrics_svc_consumer.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/metrics_bus/metrics_svc_consumer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 158,
    "kind": "class",
    "name": "MetricsSvcBusConsumer",
    "memberof": "js/services/metrics_bus/metrics_svc_consumer.js",
    "static": true,
    "longname": "js/services/metrics_bus/metrics_svc_consumer.js~MetricsSvcBusConsumer",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/metrics_bus/metrics_svc_consumer.js",
    "importStyle": "MetricsSvcBusConsumer",
    "description": "Service consumer class.",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/service_consumer.js~ServiceConsumer"
    ]
  },
  {
    "__docId__": 159,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/metrics_bus/metrics_svc_consumer.js~MetricsSvcBusConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_bus/metrics_svc_consumer.js~MetricsSvcBusConsumer#constructor",
    "access": null,
    "description": "Create a service consumer.",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_consumer_name",
        "description": "consumer name."
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 160,
    "kind": "method",
    "name": "prepare_args",
    "memberof": "js/services/metrics_bus/metrics_svc_consumer.js~MetricsSvcBusConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_bus/metrics_svc_consumer.js~MetricsSvcBusConsumer#prepare_args",
    "access": null,
    "description": "Enhance operands if needed.",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@params",
        "tagValue": "{array} arg_operands - Variable list of operands."
      },
      {
        "tagName": "@returns",
        "tagValue": "{array} - not used."
      }
    ],
    "params": [
      {
        "name": "arg_operands",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "not used."
    }
  },
  {
    "__docId__": 161,
    "kind": "method",
    "name": "consume_local",
    "memberof": "js/services/metrics_bus/metrics_svc_consumer.js~MetricsSvcBusConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_bus/metrics_svc_consumer.js~MetricsSvcBusConsumer#consume_local",
    "access": null,
    "description": "Consume a service on the same bus.",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider",
        "description": "service provider."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "a promise of results."
    }
  },
  {
    "__docId__": 162,
    "kind": "method",
    "name": "consume_remote",
    "memberof": "js/services/metrics_bus/metrics_svc_consumer.js~MetricsSvcBusConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_bus/metrics_svc_consumer.js~MetricsSvcBusConsumer#consume_remote",
    "access": null,
    "description": "Consume a service on a remote bus.",
    "lineNumber": 75,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider",
        "description": "service provider."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_routes",
        "description": "Routes to request."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "a promise of results."
    }
  },
  {
    "__docId__": 163,
    "kind": "file",
    "name": "js/services/metrics_bus/metrics_svc_provider.js",
    "content": "// NPM IMPORTS\r\nimport T from 'typr'\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport Stream from '../../../common/messaging/stream'\r\n\r\n// SERVER IMPORTS\r\nimport runtime from '../../base/runtime'\r\nimport SocketIOServiceProvider from '../base/socketio_service_provider'\r\n\r\n\r\nconst context = 'server/services/metrics_bus/metrics_svc_provider'\r\n\r\n\r\n\r\n/**\r\n * Bus metrics service provider class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class MetricsBusSvcProvider extends SocketIOServiceProvider\r\n{\r\n\t/**\r\n\t * Create a Bus metrics service provider.\r\n\t * \r\n\t * @param {string} arg_provider_name - consumer name.\r\n\t * @param {Service} arg_service_instance - service instance.\r\n\t * @param {string} arg_context - logging context label.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_provider_name, arg_service_instance, arg_context)\r\n\t{\r\n\t\tsuper(arg_provider_name, arg_service_instance, arg_context ? arg_context : context)\r\n\t\t\r\n\t\tassert(this.service.is_metrics_bus_service, context + ':bad Metrics Bus service')\r\n\t\t\r\n\t\t// CREATE A STREAM\r\n\t\tthis.metrics_stream = new Stream()\r\n\t\tthis.init_stream()\r\n\t\t\r\n\t\t// DEBUG STREAM\r\n\t\t// this.metrics_bus_stream.subscribe(\r\n\t\t// \t(metrics_record) => {\r\n\t\t// \t\tconsole.log('MetricsSvcProvider: new metrics record on the bus', metrics_record)\r\n\t\t// \t}\r\n\t\t// )\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Init output stream.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tinit_stream()\r\n\t{\r\n\t\tconst self = this\r\n\t\t\r\n\t\tconst max_metrics_per_msg = 10\r\n\t\tconst delay_per_metrics_msg = 100\r\n\t\tconst limit_cb = (grouped_stream/*, group_start_event*/) => {\r\n\t\t\tconst map_cb = (values) => {\r\n\t\t\t\t// console.log(values, 'limit.map.values')\r\n\t\t\t\t\r\n\t\t\t\tlet metrics_record = {\r\n\t\t\t\t\tmetric: undefined,\r\n\t\t\t\t\tmetrics:[]\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvalues.forEach(\r\n\t\t\t\t\t(value) => {\r\n\t\t\t\t\t\tmetrics_record.metric = value.metric,\r\n\t\t\t\t\t\tmetrics_record.metrics = metrics_record.metrics.concat(value.metrics)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\t\r\n\t\t\t\t// console.log(metrics_record, 'limit.map.metrics_record')\r\n\t\t\t\treturn metrics_record\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn grouped_stream.bufferWithTimeOrCount(delay_per_metrics_msg, max_metrics_per_msg).map(map_cb)\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tconst key_cb = (value) => {\r\n\t\t\t// console.log(value.metric, 'value.metric')\r\n\t\t\treturn value.metric\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tconst flatmap_cb = (grouped_stream) => {\r\n\t\t\treturn grouped_stream\r\n\t\t}\r\n\t\t\r\n\t\tconst msg_filter_cb = (arg_msg) => {\r\n\t\t\treturn arg_msg.payload.metric == 'bus'\r\n\t\t}\r\n\t\t\r\n\t\tconst msg_cb = (arg_msg) => {\r\n\t\t\tconst metric_type = arg_msg.payload.metric\r\n\t\t\tconst metrics_array = arg_msg.payload.metrics\r\n\t\t\tconst metrics_record = {\r\n\t\t\t\tmetric: metric_type,\r\n\t\t\t\tmetrics:metrics_array\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn metrics_record\r\n\t\t}\r\n\t\t\r\n\t\tthis.metrics_bus_stream = runtime.node.get_metrics_bus().get_output_stream()\r\n\t\tself.msg_bus_stream_transfomed = self.metrics_bus_stream.get_transformed_stream().filter(msg_filter_cb).map(msg_cb).groupBy(key_cb, limit_cb).flatMap(flatmap_cb)\r\n\t\t\r\n\t\tself.msg_bus_stream_transfomed.onValue(\r\n\t\t\t(metrics_record) => {\r\n\t\t\t\tself.provided_values_stream.push(metrics_record)\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\t// SEND METRICS TO SOCKETIO SUBSCRIBERS\r\n\t\tself.metrics_stream.subscribe(\r\n\t\t\t(metrics_record) => {\r\n\t\t\t\t// console.log(metrics_record, 'metrics_record')\r\n\t\t\t\tself.provided_values_stream.push(metrics_record)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Process request and returns datas.\r\n\t * \r\n\t * @param {string} arg_method - method name\r\n\t * @param {array} arg_operands - request operands\r\n\t * @param {Credentials} arg_credentials - request credentials\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tprocess(arg_method, arg_operands, arg_credentials)\r\n\t{\r\n\t\tassert( T.isString(arg_method), context + ':process:bad method string')\r\n\t\tassert( T.isArray(arg_operands), context + ':process:bad operands array')\r\n\t\tassert( T.isObject(arg_credentials) && arg_credentials.is_credentials, context + ':process:bad credentials object')\r\n\t\t\r\n\t\tconst metrics_server = runtime.node.get_metrics_server()\r\n\t\t\r\n\t\tswitch(arg_method)\r\n\t\t{\r\n\t\t\tcase 'get': {\r\n\t\t\t\t// NO LOCAL METRICS SERVER\r\n\t\t\t\tif (! metrics_server)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn Promise.reject('node has no metrics server for operation [' + arg_method + ']')\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// GET WITHOUT OPERANDS\r\n\t\t\t\tif ( arg_operands.length == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tconst bus_state_values = metrics_server.get_bus_metrics_state_values()\r\n\t\t\t\t\t// console.log(bus_state_values, context + ':produce:get:no opds:bus_state_values')\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn Promise.resolve(bus_state_values)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// GET WITH OPERANDS\r\n\t\t\t\tconst first_operand = arg_operands[0]\r\n\t\t\t\t\r\n\t\t\t\tif ( T.isObject(first_operand) && T.isObject(first_operand.args) )\r\n\t\t\t\t{\r\n\t\t\t\t\tif ( T.isString(first_operand.args.bus_name) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst bus_state_values = metrics_server.get_bus_metrics_state_values_for(first_operand.args.bus_name)\r\n\t\t\t\t\t\t// console.log(bus_state_values, context + ':produce:get:bus_name=' + first_operand.args.bus_name + ':bus_state_values')\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn Promise.resolve(bus_state_values)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst bus_state_values = metrics_server.get_bus_metrics_state_values()\r\n\t\t\t\t// console.log(bus_state_values, context + ':produce:get:bad opds:bus_state_values')\r\n\t\t\t\treturn Promise.resolve(bus_state_values)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase 'list': {\r\n\t\t\t\t// NO LOCAL METRICS SERVER\r\n\t\t\t\tif (! metrics_server)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn Promise.reject('node has no metrics server for operation [' + arg_method + ']')\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst bus_state_items = metrics_server.get_bus_metrics_state_values_items()\r\n\t\t\t\t// console.log(bus_state_items, context + ':produce:list:bus_state_items')\r\n\t\t\t\t\r\n\t\t\t\treturn Promise.resolve(bus_state_items)\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\treturn Promise.reject('bad data request operation [' + arg_method + ']')\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/metrics_bus/metrics_svc_provider.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 164,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/metrics_bus/metrics_svc_provider.js",
    "static": true,
    "longname": "js/services/metrics_bus/metrics_svc_provider.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/metrics_bus/metrics_svc_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 165,
    "kind": "class",
    "name": "MetricsBusSvcProvider",
    "memberof": "js/services/metrics_bus/metrics_svc_provider.js",
    "static": true,
    "longname": "js/services/metrics_bus/metrics_svc_provider.js~MetricsBusSvcProvider",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/metrics_bus/metrics_svc_provider.js",
    "importStyle": "MetricsBusSvcProvider",
    "description": "Bus metrics service provider class.",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/socketio_service_provider.js~SocketIOServiceProvider"
    ]
  },
  {
    "__docId__": 166,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/metrics_bus/metrics_svc_provider.js~MetricsBusSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_bus/metrics_svc_provider.js~MetricsBusSvcProvider#constructor",
    "access": null,
    "description": "Create a Bus metrics service provider.",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider_name",
        "description": "consumer name."
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 167,
    "kind": "member",
    "name": "metrics_stream",
    "memberof": "js/services/metrics_bus/metrics_svc_provider.js~MetricsBusSvcProvider",
    "static": false,
    "longname": "js/services/metrics_bus/metrics_svc_provider.js~MetricsBusSvcProvider#metrics_stream",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 168,
    "kind": "method",
    "name": "init_stream",
    "memberof": "js/services/metrics_bus/metrics_svc_provider.js~MetricsBusSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_bus/metrics_svc_provider.js~MetricsBusSvcProvider#init_stream",
    "access": null,
    "description": "Init output stream.",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 169,
    "kind": "member",
    "name": "metrics_bus_stream",
    "memberof": "js/services/metrics_bus/metrics_svc_provider.js~MetricsBusSvcProvider",
    "static": false,
    "longname": "js/services/metrics_bus/metrics_svc_provider.js~MetricsBusSvcProvider#metrics_bus_stream",
    "access": null,
    "description": null,
    "lineNumber": 113,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 170,
    "kind": "method",
    "name": "process",
    "memberof": "js/services/metrics_bus/metrics_svc_provider.js~MetricsBusSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_bus/metrics_svc_provider.js~MetricsBusSvcProvider#process",
    "access": null,
    "description": "Process request and returns datas.",
    "lineNumber": 142,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_method",
        "description": "method name"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_operands",
        "description": "request operands"
      },
      {
        "nullable": null,
        "types": [
          "Credentials"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "request credentials"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 171,
    "kind": "file",
    "name": "js/services/metrics_host/metrics_service.js",
    "content": "// SERVER IMPORTS\r\nimport BaseService from '../base/base_service'\r\nimport MetricsHostSvcProvider from './metrics_svc_provider'\r\nimport MetricsHostSvcConsumer from './metrics_svc_consumer'\r\n\r\n\r\nlet context = 'server/services/metrics_host/metrics_service'\r\n\r\n\r\n\r\n/**\r\n * Service class for metrics datas.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class MetricsHostService extends BaseService\r\n{\r\n\t/**\r\n\t * Create a service.\r\n\t * \r\n\t * @param {string} arg_svc_name - service name.\r\n\t * @param {object} arg_service_settings - service settings.\r\n\t * @param {string} arg_context - logging context label.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_svc_name, arg_service_settings, arg_context)\r\n\t{\r\n\t\tsuper(arg_svc_name, arg_service_settings, arg_context ? arg_context : context)\r\n\t\t\r\n\t\tthis.is_metrics_host_service = true\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a service provider.\r\n\t * \r\n\t * @param {string} arg_name - provider name.\r\n\t * @param {Service} arg_service - service instance.\r\n\t * \r\n\t * @returns {ServiceProvider} - service provider instance.\r\n\t */\r\n\tcreate_provider(arg_name, arg_service)\r\n\t{\r\n\t\t// TODO: why not this in place of arg_service\r\n\t\treturn new MetricsHostSvcProvider(arg_name, arg_service)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a service consumer.\r\n\t * \r\n\t * @returns {ServiceConsumer} - service consumer instance\r\n\t */\r\n\tcreate_consumer()\r\n\t{\r\n\t\treturn new MetricsHostSvcConsumer(this.get_name() + '_consumer_' + this.get_id(), this)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/metrics_host/metrics_service.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 172,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/metrics_host/metrics_service.js",
    "static": true,
    "longname": "js/services/metrics_host/metrics_service.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/metrics_host/metrics_service.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 173,
    "kind": "class",
    "name": "MetricsHostService",
    "memberof": "js/services/metrics_host/metrics_service.js",
    "static": true,
    "longname": "js/services/metrics_host/metrics_service.js~MetricsHostService",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/metrics_host/metrics_service.js",
    "importStyle": "MetricsHostService",
    "description": "Service class for metrics datas.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/base_service.js~BaseService"
    ]
  },
  {
    "__docId__": 174,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/metrics_host/metrics_service.js~MetricsHostService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_host/metrics_service.js~MetricsHostService#constructor",
    "access": null,
    "description": "Create a service.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_name",
        "description": "service name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_settings",
        "description": "service settings."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 175,
    "kind": "member",
    "name": "is_metrics_host_service",
    "memberof": "js/services/metrics_host/metrics_service.js~MetricsHostService",
    "static": false,
    "longname": "js/services/metrics_host/metrics_service.js~MetricsHostService#is_metrics_host_service",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 176,
    "kind": "method",
    "name": "create_provider",
    "memberof": "js/services/metrics_host/metrics_service.js~MetricsHostService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_host/metrics_service.js~MetricsHostService#create_provider",
    "access": null,
    "description": "Create a service provider.",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceProvider} - service provider instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "provider name."
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service",
        "description": "service instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ServiceProvider"
      ],
      "spread": false,
      "description": "service provider instance."
    }
  },
  {
    "__docId__": 177,
    "kind": "method",
    "name": "create_consumer",
    "memberof": "js/services/metrics_host/metrics_service.js~MetricsHostService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_host/metrics_service.js~MetricsHostService#create_consumer",
    "access": null,
    "description": "Create a service consumer.",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceConsumer} - service consumer instance"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "ServiceConsumer"
      ],
      "spread": false,
      "description": "service consumer instance"
    }
  },
  {
    "__docId__": 178,
    "kind": "file",
    "name": "js/services/metrics_host/metrics_svc_consumer.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// SERVER IMPORTS\r\nimport ServiceConsumer from '../base/service_consumer'\r\n\r\n\r\nlet context = 'server/services/metrics_host/metrics_svc_consumer'\r\n\r\n\r\n\r\n/**\r\n * Service consumer class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class MetricsSvcHostConsumer extends ServiceConsumer\r\n{\r\n\t/**\r\n\t * Create a service consumer.\r\n\t * \r\n\t * @param {string} arg_consumer_name - consumer name.\r\n\t * @param {Service} arg_service_instance - service instance.\r\n\t * @param {string} arg_context - logging context label.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_consumer_name, arg_service_instance, arg_context)\r\n\t{\r\n\t\tsuper(arg_consumer_name, arg_service_instance, arg_context ? arg_context : context)\r\n\t\tassert( arg_service_instance.is_metrics_service, context + ':constructor:bad crud service instance')\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Enhance operands if needed.\r\n\t * \r\n\t * @params {array} arg_operands - Variable list of operands.\r\n\t * \r\n\t * @returns {array} - not used.\r\n\t */\r\n\tprepare_args(arg_operands)\r\n\t{\r\n\t\tthis.enter_group('prepare_args')\r\n\t\t\r\n\t\tthis.leave_group('prepare_args')\r\n\t\treturn arg_operands\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Consume a service on the same host.\r\n\t * \r\n\t * @param {object} arg_provider - service provider.\r\n\t * \r\n\t * @return {object} a promise of results.\r\n\t */\r\n\tconsume_local(/*arg_provider*/)\r\n\t{\r\n\t\treturn Promise.resolve(undefined)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Consume a service on a remote host.\r\n\t * \r\n\t * @param {object} arg_provider - service provider.\r\n\t * @param {array} arg_routes - Routes to request.\r\n\t * \r\n\t * @return {object} a promise of results.\r\n\t */\r\n\tconsume_remote(/*arg_provider, arg_routes*/)\r\n\t{\r\n\t\tthis.enter_group('consume_remote')\r\n\t\t\r\n\t\t\r\n\t\tthis.leave_group('consume_remote')\r\n\t\treturn Promise.resolve(undefined)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/metrics_host/metrics_svc_consumer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 179,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/metrics_host/metrics_svc_consumer.js",
    "static": true,
    "longname": "js/services/metrics_host/metrics_svc_consumer.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/metrics_host/metrics_svc_consumer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 180,
    "kind": "class",
    "name": "MetricsSvcHostConsumer",
    "memberof": "js/services/metrics_host/metrics_svc_consumer.js",
    "static": true,
    "longname": "js/services/metrics_host/metrics_svc_consumer.js~MetricsSvcHostConsumer",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/metrics_host/metrics_svc_consumer.js",
    "importStyle": "MetricsSvcHostConsumer",
    "description": "Service consumer class.",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/service_consumer.js~ServiceConsumer"
    ]
  },
  {
    "__docId__": 181,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/metrics_host/metrics_svc_consumer.js~MetricsSvcHostConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_host/metrics_svc_consumer.js~MetricsSvcHostConsumer#constructor",
    "access": null,
    "description": "Create a service consumer.",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_consumer_name",
        "description": "consumer name."
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 182,
    "kind": "method",
    "name": "prepare_args",
    "memberof": "js/services/metrics_host/metrics_svc_consumer.js~MetricsSvcHostConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_host/metrics_svc_consumer.js~MetricsSvcHostConsumer#prepare_args",
    "access": null,
    "description": "Enhance operands if needed.",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@params",
        "tagValue": "{array} arg_operands - Variable list of operands."
      },
      {
        "tagName": "@returns",
        "tagValue": "{array} - not used."
      }
    ],
    "params": [
      {
        "name": "arg_operands",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "not used."
    }
  },
  {
    "__docId__": 183,
    "kind": "method",
    "name": "consume_local",
    "memberof": "js/services/metrics_host/metrics_svc_consumer.js~MetricsSvcHostConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_host/metrics_svc_consumer.js~MetricsSvcHostConsumer#consume_local",
    "access": null,
    "description": "Consume a service on the same host.",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider",
        "description": "service provider."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "a promise of results."
    }
  },
  {
    "__docId__": 184,
    "kind": "method",
    "name": "consume_remote",
    "memberof": "js/services/metrics_host/metrics_svc_consumer.js~MetricsSvcHostConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_host/metrics_svc_consumer.js~MetricsSvcHostConsumer#consume_remote",
    "access": null,
    "description": "Consume a service on a remote host.",
    "lineNumber": 75,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider",
        "description": "service provider."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_routes",
        "description": "Routes to request."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "a promise of results."
    }
  },
  {
    "__docId__": 185,
    "kind": "file",
    "name": "js/services/metrics_host/metrics_svc_provider.js",
    "content": "// NPM IMPORTS\r\nimport T from 'typr'\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport Stream from '../../../common/messaging/stream'\r\n\r\n// SERVER IMPORTS\r\nimport runtime from '../../base/runtime'\r\nimport SocketIOServiceProvider from '../base/socketio_service_provider'\r\n\r\n\r\nconst context = 'server/services/metrics_host/metrics_svc_provider'\r\n\r\n\r\n\r\n/**\r\n * Host metrics service provider class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class MetricsHostSvcProvider extends SocketIOServiceProvider\r\n{\r\n\t/**\r\n\t * Create a Host metrics service provider.\r\n\t * \r\n\t * @param {string} arg_provider_name - consumer name.\r\n\t * @param {Service} arg_service_instance - service instance.\r\n\t * @param {string} arg_context - logging context label.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_provider_name, arg_service_instance, arg_context)\r\n\t{\r\n\t\tsuper(arg_provider_name, arg_service_instance, arg_context ? arg_context : context)\r\n\t\t\r\n\t\tassert(this.service.is_metrics_host_service, context + ':bad Metrics Host service')\r\n\t\t\r\n\t\t// CREATE A STREAM\r\n\t\tthis.metrics_stream = new Stream()\r\n\t\tthis.init_stream()\r\n\t\t\r\n\t\t// DEBUG STREAM\r\n\t\t// this.metrics_bus_stream.subscribe(\r\n\t\t// \t(metrics_record) => {\r\n\t\t// \t\tconsole.log('MetricsSvcProvider: new metrics record on the bus', metrics_record)\r\n\t\t// \t}\r\n\t\t// )\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Init output stream.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tinit_stream()\r\n\t{\r\n\t\tconst self = this\r\n\t\t\r\n\t\tconst max_metrics_per_msg = 10\r\n\t\tconst delay_per_metrics_msg = 100\r\n\t\tconst limit_cb = (grouped_stream/*, group_start_event*/) => {\r\n\t\t\tconst map_cb = (values) => {\r\n\t\t\t\t// console.log(values, 'limit.map.values')\r\n\t\t\t\t\r\n\t\t\t\tlet metrics_record = {\r\n\t\t\t\t\tmetric: undefined,\r\n\t\t\t\t\tmetrics:[]\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvalues.forEach(\r\n\t\t\t\t\t(value) => {\r\n\t\t\t\t\t\tmetrics_record.metric = value.metric,\r\n\t\t\t\t\t\tmetrics_record.metrics = metrics_record.metrics.concat(value.metrics)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\t\r\n\t\t\t\t// console.log(metrics_record, 'limit.map.metrics_record')\r\n\t\t\t\treturn metrics_record\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn grouped_stream.bufferWithTimeOrCount(delay_per_metrics_msg, max_metrics_per_msg).map(map_cb)\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tconst key_cb = (value) => {\r\n\t\t\t// console.log(value.metric, 'value.metric')\r\n\t\t\treturn value.metric\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tconst flatmap_cb = (grouped_stream) => {\r\n\t\t\treturn grouped_stream\r\n\t\t}\r\n\t\t\r\n\t\tconst msg_filter_cb = (arg_msg) => {\r\n\t\t\t// console.log(context + ':msg_filter_cb:', arg_msg)\r\n\t\t\treturn arg_msg.payload.metric == 'host'\r\n\t\t}\r\n\t\t\r\n\t\tconst msg_cb = (arg_msg) => {\r\n\t\t\tconst metric_type = arg_msg.payload.metric\r\n\t\t\tconst metrics_array = arg_msg.payload.metrics\r\n\t\t\tconst metrics_record = {\r\n\t\t\t\tmetric: metric_type,\r\n\t\t\t\tmetrics:metrics_array\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn metrics_record\r\n\t\t}\r\n\t\t\r\n\t\tthis.metrics_bus_stream = runtime.node.get_metrics_bus().get_output_stream()\r\n\t\tself.msg_bus_stream_transfomed = self.metrics_bus_stream.get_transformed_stream().filter(msg_filter_cb).map(msg_cb).groupBy(key_cb, limit_cb).flatMap(flatmap_cb)\r\n\t\t\r\n\t\tself.msg_bus_stream_transfomed.onValue(\r\n\t\t\t(metrics_record) => {\r\n\t\t\t\tself.provided_values_stream.push(metrics_record)\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\t// SEND METRICS TO SOCKETIO SUBSCRIBERS\r\n\t\tself.metrics_stream.subscribe(\r\n\t\t\t(metrics_record) => {\r\n\t\t\t\t// console.log(metrics_record, 'metrics_record')\r\n\t\t\t\tself.provided_values_stream.push(metrics_record)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Process request and returns datas.\r\n\t * \r\n\t * @param {string} arg_method - method name\r\n\t * @param {array} arg_operands - request operands\r\n\t * @param {Credentials} arg_credentials - request credentials\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tprocess(arg_method, arg_operands, arg_credentials)\r\n\t{\r\n\t\tassert( T.isString(arg_method), context + ':process:bad method string')\r\n\t\tassert( T.isArray(arg_operands), context + ':process:bad operands array')\r\n\t\tassert( T.isObject(arg_credentials) && arg_credentials.is_credentials, context + ':process:bad credentials object')\r\n\t\t\r\n\t\tconst metrics_server = runtime.node.get_metrics_server()\r\n\t\t\r\n\t\tswitch(arg_method)\r\n\t\t{\r\n\t\t\tcase 'get': {\r\n\t\t\t\t// NO LOCAL METRICS SERVER\r\n\t\t\t\tif (! metrics_server)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn Promise.reject('node has no metrics server for operation [' + arg_method + ']')\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// GET WITHOUT OPERANDS\r\n\t\t\t\tif (arg_operands.length == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tconst host_state_values = metrics_server.get_host_metrics_state_values()\r\n\t\t\t\t\t// console.log(host_state_values, context + ':produce:get:no opds:host_state_values')\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn Promise.resolve(host_state_values)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// GET WITH OPERANDS\r\n\t\t\t\tconst first_operand = arg_operands[0]\r\n\t\t\t\t\r\n\t\t\t\tif ( T.isObject(first_operand) && T.isObject(first_operand.args) )\r\n\t\t\t\t{\r\n\t\t\t\t\tif ( T.isString(first_operand.args.hostname) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst host_state_values = metrics_server.get_host_metrics_state_values_for(first_operand.args.hostname)\r\n\t\t\t\t\t\t// console.log(host_state_values, context + ':produce:get:hostname=' + first_operand.args.hostname + ':host_state_values')\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn Promise.resolve(host_state_values)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst host_state_values = metrics_server.get_host_metrics_state_values()\r\n\t\t\t\t// console.log(host_state_values, context + ':produce:get:bad opds:host_state_values')\r\n\t\t\t\treturn Promise.resolve(host_state_values)\r\n\t\t\t}\r\n\t\t\r\n\t\t\tcase 'list': {\r\n\t\t\t\t// NO LOCAL METRICS SERVER\r\n\t\t\t\tif (! metrics_server)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn Promise.reject('node has no metrics server for operation [' + arg_method + ']')\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst host_state_items = metrics_server.get_host_metrics_state_values_items()\r\n\t\t\t\t// console.log(host_state_items, context + ':produce:list:host_state_items')\r\n\t\t\t\t\r\n\t\t\t\treturn Promise.resolve(host_state_items)\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.reject('bad data request operation [' + arg_method + ']')\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/metrics_host/metrics_svc_provider.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 186,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/metrics_host/metrics_svc_provider.js",
    "static": true,
    "longname": "js/services/metrics_host/metrics_svc_provider.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/metrics_host/metrics_svc_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 187,
    "kind": "class",
    "name": "MetricsHostSvcProvider",
    "memberof": "js/services/metrics_host/metrics_svc_provider.js",
    "static": true,
    "longname": "js/services/metrics_host/metrics_svc_provider.js~MetricsHostSvcProvider",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/metrics_host/metrics_svc_provider.js",
    "importStyle": "MetricsHostSvcProvider",
    "description": "Host metrics service provider class.",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/socketio_service_provider.js~SocketIOServiceProvider"
    ]
  },
  {
    "__docId__": 188,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/metrics_host/metrics_svc_provider.js~MetricsHostSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_host/metrics_svc_provider.js~MetricsHostSvcProvider#constructor",
    "access": null,
    "description": "Create a Host metrics service provider.",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider_name",
        "description": "consumer name."
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 189,
    "kind": "member",
    "name": "metrics_stream",
    "memberof": "js/services/metrics_host/metrics_svc_provider.js~MetricsHostSvcProvider",
    "static": false,
    "longname": "js/services/metrics_host/metrics_svc_provider.js~MetricsHostSvcProvider#metrics_stream",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 190,
    "kind": "method",
    "name": "init_stream",
    "memberof": "js/services/metrics_host/metrics_svc_provider.js~MetricsHostSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_host/metrics_svc_provider.js~MetricsHostSvcProvider#init_stream",
    "access": null,
    "description": "Init output stream.",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 191,
    "kind": "member",
    "name": "metrics_bus_stream",
    "memberof": "js/services/metrics_host/metrics_svc_provider.js~MetricsHostSvcProvider",
    "static": false,
    "longname": "js/services/metrics_host/metrics_svc_provider.js~MetricsHostSvcProvider#metrics_bus_stream",
    "access": null,
    "description": null,
    "lineNumber": 114,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 192,
    "kind": "method",
    "name": "process",
    "memberof": "js/services/metrics_host/metrics_svc_provider.js~MetricsHostSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_host/metrics_svc_provider.js~MetricsHostSvcProvider#process",
    "access": null,
    "description": "Process request and returns datas.",
    "lineNumber": 143,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_method",
        "description": "method name"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_operands",
        "description": "request operands"
      },
      {
        "nullable": null,
        "types": [
          "Credentials"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "request credentials"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 193,
    "kind": "file",
    "name": "js/services/metrics_http/metrics_service.js",
    "content": "// SERVER IMPORTS\r\nimport BaseService from '../base/base_service'\r\nimport MetricsSvcProvider from './metrics_svc_provider'\r\nimport MetricsSvcConsumer from './metrics_svc_consumer'\r\n\r\n\r\nlet context = 'server/services/metrics_http/metrics_service'\r\n\r\n\r\n\r\n/**\r\n * Service class for metrics datas.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class MetricsService extends BaseService\r\n{\r\n\t/**\r\n\t * Create a service.\r\n\t * \r\n\t * @param {string} arg_svc_name - service name.\r\n\t * @param {object} arg_service_settings - service settings.\r\n\t * @param {string} arg_context - logging context label.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_svc_name, arg_service_settings, arg_context)\r\n\t{\r\n\t\tsuper(arg_svc_name, arg_service_settings, arg_context ? arg_context : context)\r\n\t\t\r\n\t\tthis.is_metrics_service = true\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a service provider.\r\n\t * \r\n\t * @param {string} arg_name - provider name.\r\n\t * @param {Service} arg_service - service instance.\r\n\t * \r\n\t * @returns {ServiceProvider} - service provider instance.\r\n\t */\r\n\tcreate_provider(arg_name, arg_service)\r\n\t{\r\n\t\t// TODO: why not this in place of arg_service\r\n\t\treturn new MetricsSvcProvider(arg_name, arg_service)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a service consumer.\r\n\t * \r\n\t * @returns {ServiceConsumer} - service consumer instance\r\n\t */\r\n\tcreate_consumer()\r\n\t{\r\n\t\treturn new MetricsSvcConsumer(this.get_name() + '_consumer_' + this.get_id(), this)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/metrics_http/metrics_service.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 194,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/metrics_http/metrics_service.js",
    "static": true,
    "longname": "js/services/metrics_http/metrics_service.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/metrics_http/metrics_service.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 195,
    "kind": "class",
    "name": "MetricsService",
    "memberof": "js/services/metrics_http/metrics_service.js",
    "static": true,
    "longname": "js/services/metrics_http/metrics_service.js~MetricsService",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/metrics_http/metrics_service.js",
    "importStyle": "MetricsService",
    "description": "Service class for metrics datas.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/base_service.js~BaseService"
    ]
  },
  {
    "__docId__": 196,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/metrics_http/metrics_service.js~MetricsService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_http/metrics_service.js~MetricsService#constructor",
    "access": null,
    "description": "Create a service.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_name",
        "description": "service name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_settings",
        "description": "service settings."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 197,
    "kind": "member",
    "name": "is_metrics_service",
    "memberof": "js/services/metrics_http/metrics_service.js~MetricsService",
    "static": false,
    "longname": "js/services/metrics_http/metrics_service.js~MetricsService#is_metrics_service",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 198,
    "kind": "method",
    "name": "create_provider",
    "memberof": "js/services/metrics_http/metrics_service.js~MetricsService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_http/metrics_service.js~MetricsService#create_provider",
    "access": null,
    "description": "Create a service provider.",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceProvider} - service provider instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "provider name."
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service",
        "description": "service instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ServiceProvider"
      ],
      "spread": false,
      "description": "service provider instance."
    }
  },
  {
    "__docId__": 199,
    "kind": "method",
    "name": "create_consumer",
    "memberof": "js/services/metrics_http/metrics_service.js~MetricsService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_http/metrics_service.js~MetricsService#create_consumer",
    "access": null,
    "description": "Create a service consumer.",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceConsumer} - service consumer instance"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "ServiceConsumer"
      ],
      "spread": false,
      "description": "service consumer instance"
    }
  },
  {
    "__docId__": 200,
    "kind": "file",
    "name": "js/services/metrics_http/metrics_svc_consumer.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// SERVER IMPORTS\r\nimport ServiceConsumer from '../base/service_consumer'\r\n\r\n\r\nlet context = 'server/services/metrics_http/metrics_svc_consumer'\r\n\r\n\r\n\r\n/**\r\n * Service consumer class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class MetricsSvcConsumer extends ServiceConsumer\r\n{\r\n\t/**\r\n\t * Create a service consumer.\r\n\t * \r\n\t * @param {string} arg_consumer_name - consumer name.\r\n\t * @param {Service} arg_service_instance - service instance.\r\n\t * @param {string} arg_context - logging context label.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_consumer_name, arg_service_instance, arg_context)\r\n\t{\r\n\t\tsuper(arg_consumer_name, arg_service_instance, arg_context ? arg_context : context)\r\n\t\tassert( arg_service_instance.is_metrics_service, context + ':constructor:bad crud service instance')\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Enhance operands if needed.\r\n\t * \r\n\t * @params {array} arg_operands - Variable list of operands.\r\n\t * \r\n\t * @returns {array} - not used.\r\n\t */\r\n\tprepare_args(arg_operands)\r\n\t{\r\n\t\tthis.enter_group('prepare_args')\r\n\t\t\r\n\t\tthis.leave_group('prepare_args')\r\n\t\treturn arg_operands\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Consume a service on the same host.\r\n\t * @param {object} arg_provider - service provider.\r\n\t * \r\n\t * @return {object} a promise of results.\r\n\t */\r\n\tconsume_local(/*arg_provider*/)\r\n\t{\r\n\t\treturn Promise.resolve(undefined)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Consume a service on a remote host.\r\n\t * \r\n\t * @param {object} arg_provider - service provider.\r\n\t * @param {array} arg_routes - Routes to request.\r\n\t * \r\n\t * @return {object} a promise of results.\r\n\t */\r\n\tconsume_remote(/*arg_provider, arg_routes*/)\r\n\t{\r\n\t\tthis.enter_group('consume_remote')\r\n\t\t\r\n\t\t\r\n\t\tthis.leave_group('consume_remote')\r\n\t\treturn Promise.resolve(undefined)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/metrics_http/metrics_svc_consumer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 201,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/metrics_http/metrics_svc_consumer.js",
    "static": true,
    "longname": "js/services/metrics_http/metrics_svc_consumer.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/metrics_http/metrics_svc_consumer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 202,
    "kind": "class",
    "name": "MetricsSvcConsumer",
    "memberof": "js/services/metrics_http/metrics_svc_consumer.js",
    "static": true,
    "longname": "js/services/metrics_http/metrics_svc_consumer.js~MetricsSvcConsumer",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/metrics_http/metrics_svc_consumer.js",
    "importStyle": "MetricsSvcConsumer",
    "description": "Service consumer class.",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/service_consumer.js~ServiceConsumer"
    ]
  },
  {
    "__docId__": 203,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/metrics_http/metrics_svc_consumer.js~MetricsSvcConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_http/metrics_svc_consumer.js~MetricsSvcConsumer#constructor",
    "access": null,
    "description": "Create a service consumer.",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_consumer_name",
        "description": "consumer name."
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 204,
    "kind": "method",
    "name": "prepare_args",
    "memberof": "js/services/metrics_http/metrics_svc_consumer.js~MetricsSvcConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_http/metrics_svc_consumer.js~MetricsSvcConsumer#prepare_args",
    "access": null,
    "description": "Enhance operands if needed.",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@params",
        "tagValue": "{array} arg_operands - Variable list of operands."
      },
      {
        "tagName": "@returns",
        "tagValue": "{array} - not used."
      }
    ],
    "params": [
      {
        "name": "arg_operands",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "not used."
    }
  },
  {
    "__docId__": 205,
    "kind": "method",
    "name": "consume_local",
    "memberof": "js/services/metrics_http/metrics_svc_consumer.js~MetricsSvcConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_http/metrics_svc_consumer.js~MetricsSvcConsumer#consume_local",
    "access": null,
    "description": "Consume a service on the same host.",
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider",
        "description": "service provider."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "a promise of results."
    }
  },
  {
    "__docId__": 206,
    "kind": "method",
    "name": "consume_remote",
    "memberof": "js/services/metrics_http/metrics_svc_consumer.js~MetricsSvcConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_http/metrics_svc_consumer.js~MetricsSvcConsumer#consume_remote",
    "access": null,
    "description": "Consume a service on a remote host.",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider",
        "description": "service provider."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_routes",
        "description": "Routes to request."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "a promise of results."
    }
  },
  {
    "__docId__": 207,
    "kind": "file",
    "name": "js/services/metrics_http/metrics_svc_provider.js",
    "content": "// NPM IMPORTS\r\nimport T from 'typr'\r\nimport assert from 'assert'\r\n\r\n// SERVER IMPORTS\r\nimport SocketIOServiceProvider from '../base/socketio_service_provider'\r\nimport runtime from '../../base/runtime'\r\n\r\n\r\nlet context = 'server/services/metrics_http/metrics_svc_provider'\r\n\r\n\r\n\r\n/**\r\n * Http Metrics service provider class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class MetricsSvcProvider extends SocketIOServiceProvider\r\n{\r\n\t/**\r\n\t * Create a Http Metrics service provider.\r\n\t * \r\n\t * @param {string} arg_provider_name - consumer name.\r\n\t * @param {Service} arg_service_instance - service instance.\r\n\t * @param {string} arg_context - logging context label.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_provider_name, arg_service_instance, arg_context)\r\n\t{\r\n\t\tsuper(arg_provider_name, arg_service_instance, arg_context ? arg_context : context)\r\n\t\t\r\n\t\tassert(this.service.is_metrics_service, context + ':bad Metrics service')\r\n\t\t\r\n\t\t// CREATE A BUS CLIENT\r\n\t\tthis.metrics_bus_stream = runtime.node.get_metrics_bus().get_output_stream()\r\n\t\tthis.init_msg_bus_stream()\r\n\t\t\r\n\t\t// DEBUG STREAM\r\n\t\t// this.metrics_bus_stream.subscribe(\r\n\t\t// \t(metrics_record) => {\r\n\t\t// \t\tconsole.log('MetricsSvcProvider: new metrics record on the bus', metrics_record)\r\n\t\t// \t}\r\n\t\t// )\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Init output stream.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tinit_msg_bus_stream()\r\n\t{\r\n\t\tconst max_metrics_per_msg = 10\r\n\t\tconst delay_per_metrics_msg = 100\r\n\t\tconst self = this\r\n\t\tconst limit_cb = (grouped_stream/*, group_start_event*/) => {\r\n\t\t\tconst map_cb = (values) => {\r\n\t\t\t\t// console.log(values, 'limit.map.values')\r\n\t\t\t\t\r\n\t\t\t\tlet metrics_record = {\r\n\t\t\t\t\tmetric: undefined,\r\n\t\t\t\t\tmetrics:[]\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvalues.forEach(\r\n\t\t\t\t\t(value) => {\r\n\t\t\t\t\t\tmetrics_record.metric = value.metric,\r\n\t\t\t\t\t\tmetrics_record.metrics = metrics_record.metrics.concat(value.metrics)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\t\r\n\t\t\t\t// console.log(metrics_record, 'limit.map.metrics_record')\r\n\t\t\t\treturn metrics_record\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn grouped_stream.bufferWithTimeOrCount(delay_per_metrics_msg, max_metrics_per_msg).map(map_cb)\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tconst key_cb = (value) => {\r\n\t\t\t// console.log(value.metric, 'value.metric')\r\n\t\t\treturn value.metric\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tconst flatmap_cb = (grouped_stream) => {\r\n\t\t\treturn grouped_stream\r\n\t\t}\r\n\t\t\r\n\t\tconst msg_filter_cb = (arg_msg) => {\r\n\t\t\treturn arg_msg.payload.metric == 'http'\r\n\t\t}\r\n\t\t\r\n\t\tconst msg_cb = (arg_msg) => {\r\n\t\t\tconst metric_type = arg_msg.payload.metric\r\n\t\t\tconst metrics_array = arg_msg.payload.metrics\r\n\t\t\tconst metrics_record = {\r\n\t\t\t\tmetric: metric_type,\r\n\t\t\t\tmetrics:metrics_array\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn metrics_record\r\n\t\t}\r\n\t\t\r\n\t\tself.msg_bus_stream_transfomed = self.metrics_bus_stream.get_transformed_stream().filter(msg_filter_cb).map(msg_cb).groupBy(key_cb, limit_cb).flatMap(flatmap_cb)\r\n\t\t\r\n\t\tself.msg_bus_stream_transfomed.onValue(\r\n\t\t\t(metrics_record) => {\r\n\t\t\t\tself.provided_values_stream.push(metrics_record)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Process request and returns datas.\r\n\t * \r\n\t * @param {string} arg_method - method name\r\n\t * @param {array} arg_operands - request operands\r\n\t * @param {Credentials} arg_credentials - request credentials\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tprocess(arg_method, arg_operands, arg_credentials)\r\n\t{\r\n\t\tassert( T.isString(arg_method), context + ':process:bad method string')\r\n\t\tassert( T.isArray(arg_operands), context + ':process:bad operands array')\r\n\t\tassert( T.isObject(arg_credentials) && arg_credentials.is_credentials, context + ':process:bad credentials object')\r\n\t\t\r\n\t\tconst metrics_server = runtime.node.get_metrics_server()\r\n\t\t\r\n\t\tswitch(arg_method)\r\n\t\t{\r\n\t\t\tcase 'get': {\r\n\t\t\t\t// NO LOCAL METRICS SERVER\r\n\t\t\t\tif (! metrics_server)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn Promise.reject('node has no metrics server for operation [' + arg_method + ']')\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst http_state_values = metrics_server.get_http_metrics_state_values()\r\n\t\t\t\treturn Promise.resolve(http_state_values)\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.reject('bad data request operation [' + arg_method + ']')\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/metrics_http/metrics_svc_provider.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 208,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/metrics_http/metrics_svc_provider.js",
    "static": true,
    "longname": "js/services/metrics_http/metrics_svc_provider.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/metrics_http/metrics_svc_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 209,
    "kind": "class",
    "name": "MetricsSvcProvider",
    "memberof": "js/services/metrics_http/metrics_svc_provider.js",
    "static": true,
    "longname": "js/services/metrics_http/metrics_svc_provider.js~MetricsSvcProvider",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/metrics_http/metrics_svc_provider.js",
    "importStyle": "MetricsSvcProvider",
    "description": "Http Metrics service provider class.",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/socketio_service_provider.js~SocketIOServiceProvider"
    ]
  },
  {
    "__docId__": 210,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/metrics_http/metrics_svc_provider.js~MetricsSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_http/metrics_svc_provider.js~MetricsSvcProvider#constructor",
    "access": null,
    "description": "Create a Http Metrics service provider.",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider_name",
        "description": "consumer name."
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 211,
    "kind": "member",
    "name": "metrics_bus_stream",
    "memberof": "js/services/metrics_http/metrics_svc_provider.js~MetricsSvcProvider",
    "static": false,
    "longname": "js/services/metrics_http/metrics_svc_provider.js~MetricsSvcProvider#metrics_bus_stream",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 212,
    "kind": "method",
    "name": "init_msg_bus_stream",
    "memberof": "js/services/metrics_http/metrics_svc_provider.js~MetricsSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_http/metrics_svc_provider.js~MetricsSvcProvider#init_msg_bus_stream",
    "access": null,
    "description": "Init output stream.",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 213,
    "kind": "method",
    "name": "process",
    "memberof": "js/services/metrics_http/metrics_svc_provider.js~MetricsSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_http/metrics_svc_provider.js~MetricsSvcProvider#process",
    "access": null,
    "description": "Process request and returns datas.",
    "lineNumber": 129,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_method",
        "description": "method name"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_operands",
        "description": "request operands"
      },
      {
        "nullable": null,
        "types": [
          "Credentials"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "request credentials"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 214,
    "kind": "file",
    "name": "js/services/metrics_nodejs/metrics_service.js",
    "content": "// SERVER IMPORTS\r\nimport BaseService from '../base/base_service'\r\nimport MetricsNodeJsSvcProvider from './metrics_svc_provider'\r\nimport MetricsNodeJsSvcConsumer from './metrics_svc_consumer'\r\n\r\n\r\nlet context = 'server/services/metrics_nodejs/metrics_service'\r\n\r\n\r\n\r\n/**\r\n * Service class for metrics datas.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class MetricsNodeJsService extends BaseService\r\n{\r\n\t/**\r\n\t * Create a service.\r\n\t * \r\n\t * @param {string} arg_svc_name - service name.\r\n\t * @param {object} arg_service_settings - service settings.\r\n\t * @param {string} arg_context - logging context label.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_svc_name, arg_service_settings, arg_context)\r\n\t{\r\n\t\tsuper(arg_svc_name, arg_service_settings, arg_context ? arg_context : context)\r\n\t\t\r\n\t\tthis.is_metrics_nodejs_service = true\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a service provider.\r\n\t * \r\n\t * @param {string} arg_name - provider name.\r\n\t * @param {Service} arg_service - service instance.\r\n\t * \r\n\t * @returns {ServiceProvider} - service provider instance.\r\n\t */\r\n\tcreate_provider(arg_name, arg_service)\r\n\t{\r\n\t\t// TODO: why not this in place of arg_service\r\n\t\treturn new MetricsNodeJsSvcProvider(arg_name, arg_service)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a service consumer.\r\n\t * \r\n\t * @returns {ServiceConsumer} - service consumer instance\r\n\t */\r\n\tcreate_consumer()\r\n\t{\r\n\t\treturn new MetricsNodeJsSvcConsumer(this.get_name() + '_consumer_' + this.get_id(), this)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/metrics_nodejs/metrics_service.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 215,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/metrics_nodejs/metrics_service.js",
    "static": true,
    "longname": "js/services/metrics_nodejs/metrics_service.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/metrics_nodejs/metrics_service.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 216,
    "kind": "class",
    "name": "MetricsNodeJsService",
    "memberof": "js/services/metrics_nodejs/metrics_service.js",
    "static": true,
    "longname": "js/services/metrics_nodejs/metrics_service.js~MetricsNodeJsService",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/metrics_nodejs/metrics_service.js",
    "importStyle": "MetricsNodeJsService",
    "description": "Service class for metrics datas.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/base_service.js~BaseService"
    ]
  },
  {
    "__docId__": 217,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/metrics_nodejs/metrics_service.js~MetricsNodeJsService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_nodejs/metrics_service.js~MetricsNodeJsService#constructor",
    "access": null,
    "description": "Create a service.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_name",
        "description": "service name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_settings",
        "description": "service settings."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 218,
    "kind": "member",
    "name": "is_metrics_nodejs_service",
    "memberof": "js/services/metrics_nodejs/metrics_service.js~MetricsNodeJsService",
    "static": false,
    "longname": "js/services/metrics_nodejs/metrics_service.js~MetricsNodeJsService#is_metrics_nodejs_service",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 219,
    "kind": "method",
    "name": "create_provider",
    "memberof": "js/services/metrics_nodejs/metrics_service.js~MetricsNodeJsService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_nodejs/metrics_service.js~MetricsNodeJsService#create_provider",
    "access": null,
    "description": "Create a service provider.",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceProvider} - service provider instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "provider name."
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service",
        "description": "service instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ServiceProvider"
      ],
      "spread": false,
      "description": "service provider instance."
    }
  },
  {
    "__docId__": 220,
    "kind": "method",
    "name": "create_consumer",
    "memberof": "js/services/metrics_nodejs/metrics_service.js~MetricsNodeJsService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_nodejs/metrics_service.js~MetricsNodeJsService#create_consumer",
    "access": null,
    "description": "Create a service consumer.",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceConsumer} - service consumer instance"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "ServiceConsumer"
      ],
      "spread": false,
      "description": "service consumer instance"
    }
  },
  {
    "__docId__": 221,
    "kind": "file",
    "name": "js/services/metrics_nodejs/metrics_svc_consumer.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// SERVER IMPORTS\r\nimport ServiceConsumer from '../base/service_consumer'\r\n\r\n\r\nlet context = 'server/services/metrics_nodejs/metrics_svc_consumer'\r\n\r\n\r\n\r\n/**\r\n * Service consumer class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class MetricsSvcNodeJsConsumer extends ServiceConsumer\r\n{\r\n\t/**\r\n\t * Create a service consumer.\r\n\t * \r\n\t * @param {string} arg_consumer_name - consumer name.\r\n\t * @param {Service} arg_service_instance - service instance.\r\n\t * @param {string} arg_context - logging context label.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_consumer_name, arg_service_instance, arg_context)\r\n\t{\r\n\t\tsuper(arg_consumer_name, arg_service_instance, arg_context ? arg_context : context)\r\n\t\tassert( arg_service_instance.is_metrics_service, context + ':constructor:bad crud service instance')\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Enhance operands if needed.\r\n\t * \r\n\t * @params {array} arg_operands - Variable list of operands.\r\n\t * \r\n\t * @returns {array} - not used.\r\n\t */\r\n\tprepare_args(arg_operands)\r\n\t{\r\n\t\tthis.enter_group('prepare_args')\r\n\t\t\r\n\t\tthis.leave_group('prepare_args')\r\n\t\treturn arg_operands\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Consume a service on the same nodejs.\r\n\t * \r\n\t * @param {object} arg_provider - service provider.\r\n\t * \r\n\t * @return {object} a promise of results.\r\n\t */\r\n\tconsume_local(/*arg_provider*/)\r\n\t{\r\n\t\treturn Promise.resolve(undefined)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Consume a service on a remote nodejs.\r\n\t * \r\n\t * @param {object} arg_provider - service provider.\r\n\t * @param {array} arg_routes - Routes to request.\r\n\t * \r\n\t * @return {object} a promise of results.\r\n\t */\r\n\tconsume_remote(/*arg_provider, arg_routes*/)\r\n\t{\r\n\t\tthis.enter_group('consume_remote')\r\n\t\t\r\n\t\t\r\n\t\tthis.leave_group('consume_remote')\r\n\t\treturn Promise.resolve(undefined)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/metrics_nodejs/metrics_svc_consumer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 222,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/metrics_nodejs/metrics_svc_consumer.js",
    "static": true,
    "longname": "js/services/metrics_nodejs/metrics_svc_consumer.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/metrics_nodejs/metrics_svc_consumer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 223,
    "kind": "class",
    "name": "MetricsSvcNodeJsConsumer",
    "memberof": "js/services/metrics_nodejs/metrics_svc_consumer.js",
    "static": true,
    "longname": "js/services/metrics_nodejs/metrics_svc_consumer.js~MetricsSvcNodeJsConsumer",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/metrics_nodejs/metrics_svc_consumer.js",
    "importStyle": "MetricsSvcNodeJsConsumer",
    "description": "Service consumer class.",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/service_consumer.js~ServiceConsumer"
    ]
  },
  {
    "__docId__": 224,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/metrics_nodejs/metrics_svc_consumer.js~MetricsSvcNodeJsConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_nodejs/metrics_svc_consumer.js~MetricsSvcNodeJsConsumer#constructor",
    "access": null,
    "description": "Create a service consumer.",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_consumer_name",
        "description": "consumer name."
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 225,
    "kind": "method",
    "name": "prepare_args",
    "memberof": "js/services/metrics_nodejs/metrics_svc_consumer.js~MetricsSvcNodeJsConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_nodejs/metrics_svc_consumer.js~MetricsSvcNodeJsConsumer#prepare_args",
    "access": null,
    "description": "Enhance operands if needed.",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@params",
        "tagValue": "{array} arg_operands - Variable list of operands."
      },
      {
        "tagName": "@returns",
        "tagValue": "{array} - not used."
      }
    ],
    "params": [
      {
        "name": "arg_operands",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "not used."
    }
  },
  {
    "__docId__": 226,
    "kind": "method",
    "name": "consume_local",
    "memberof": "js/services/metrics_nodejs/metrics_svc_consumer.js~MetricsSvcNodeJsConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_nodejs/metrics_svc_consumer.js~MetricsSvcNodeJsConsumer#consume_local",
    "access": null,
    "description": "Consume a service on the same nodejs.",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider",
        "description": "service provider."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "a promise of results."
    }
  },
  {
    "__docId__": 227,
    "kind": "method",
    "name": "consume_remote",
    "memberof": "js/services/metrics_nodejs/metrics_svc_consumer.js~MetricsSvcNodeJsConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_nodejs/metrics_svc_consumer.js~MetricsSvcNodeJsConsumer#consume_remote",
    "access": null,
    "description": "Consume a service on a remote nodejs.",
    "lineNumber": 75,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider",
        "description": "service provider."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_routes",
        "description": "Routes to request."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "a promise of results."
    }
  },
  {
    "__docId__": 228,
    "kind": "file",
    "name": "js/services/metrics_nodejs/metrics_svc_provider.js",
    "content": "// NPM IMPORTS\r\nimport T from 'typr'\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport Stream from '../../../common/messaging/stream'\r\n\r\n// SERVER IMPORTS\r\nimport runtime from '../../base/runtime'\r\nimport SocketIOServiceProvider from '../base/socketio_service_provider'\r\n\r\n\r\nconst context = 'server/services/metrics_nodejs/metrics_svc_provider'\r\n\r\n\r\n\r\n/**\r\n * NodeJs metrics service provider class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class MetricsNodeJsSvcProvider extends SocketIOServiceProvider\r\n{\r\n\t/**\r\n\t * Create a NodeJs metrics service provider.\r\n\t * \r\n\t * @param {string} arg_provider_name - consumer name.\r\n\t * @param {Service} arg_service_instance - service instance.\r\n\t * @param {string} arg_context - logging context label.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_provider_name, arg_service_instance, arg_context)\r\n\t{\r\n\t\tsuper(arg_provider_name, arg_service_instance, arg_context ? arg_context : context)\r\n\t\t\r\n\t\tassert(this.service.is_metrics_nodejs_service, context + ':bad Metrics NodeJs service')\r\n\t\t\r\n\t\t// CREATE A STREAM\r\n\t\tthis.metrics_stream = new Stream()\r\n\t\tthis.init_stream()\r\n\t\t\r\n\t\t// DEBUG STREAM\r\n\t\t// this.metrics_bus_stream.subscribe(\r\n\t\t// \t(metrics_record) => {\r\n\t\t// \t\tconsole.log('MetricsSvcProvider: new metrics record on the bus', metrics_record)\r\n\t\t// \t}\r\n\t\t// )\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Init output stream.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tinit_stream()\r\n\t{\r\n\t\tconst self = this\r\n\t\t\r\n\t\tconst max_metrics_per_msg = 10\r\n\t\tconst delay_per_metrics_msg = 100\r\n\t\tconst limit_cb = (grouped_stream/*, group_start_event*/) => {\r\n\t\t\tconst map_cb = (values) => {\r\n\t\t\t\t// console.log(values, 'limit.map.values')\r\n\t\t\t\t\r\n\t\t\t\tlet metrics_record = {\r\n\t\t\t\t\tmetric: undefined,\r\n\t\t\t\t\tmetrics:[]\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvalues.forEach(\r\n\t\t\t\t\t(value) => {\r\n\t\t\t\t\t\tmetrics_record.metric = value.metric,\r\n\t\t\t\t\t\tmetrics_record.metrics = metrics_record.metrics.concat(value.metrics)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\t\r\n\t\t\t\t// console.log(metrics_record, 'limit.map.metrics_record')\r\n\t\t\t\treturn metrics_record\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn grouped_stream.bufferWithTimeOrCount(delay_per_metrics_msg, max_metrics_per_msg).map(map_cb)\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tconst key_cb = (value) => {\r\n\t\t\t// console.log(value.metric, 'value.metric')\r\n\t\t\treturn value.metric\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tconst flatmap_cb = (grouped_stream) => {\r\n\t\t\treturn grouped_stream\r\n\t\t}\r\n\t\t\r\n\t\tconst msg_filter_cb = (arg_msg) => {\r\n\t\t\treturn arg_msg.payload.metric == 'nodejs'\r\n\t\t}\r\n\t\t\r\n\t\tconst msg_cb = (arg_msg) => {\r\n\t\t\tconst metric_type = arg_msg.payload.metric\r\n\t\t\tconst metrics_array = arg_msg.payload.metrics\r\n\t\t\tconst metrics_record = {\r\n\t\t\t\tmetric: metric_type,\r\n\t\t\t\tmetrics:metrics_array\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn metrics_record\r\n\t\t}\r\n\t\t\r\n\t\tthis.metrics_bus_stream = runtime.node.get_metrics_bus().get_output_stream()\r\n\t\tself.msg_bus_stream_transfomed = self.metrics_bus_stream.get_transformed_stream().filter(msg_filter_cb).map(msg_cb).groupBy(key_cb, limit_cb).flatMap(flatmap_cb)\r\n\t\t\r\n\t\tself.msg_bus_stream_transfomed.onValue(\r\n\t\t\t(metrics_record) => {\r\n\t\t\t\tself.provided_values_stream.push(metrics_record)\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\t// SEND METRICS TO SOCKETIO SUBSCRIBERS\r\n\t\tself.metrics_stream.subscribe(\r\n\t\t\t(metrics_record) => {\r\n\t\t\t\t// console.log(metrics_record, 'metrics_record')\r\n\t\t\t\tself.provided_values_stream.push(metrics_record)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Process request and returns datas.\r\n\t * \r\n\t * @param {string} arg_method - method name\r\n\t * @param {array} arg_operands - request operands\r\n\t * @param {Credentials} arg_credentials - request credentials\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tprocess(arg_method, arg_operands, arg_credentials)\r\n\t{\r\n\t\tassert( T.isString(arg_method), context + ':process:bad method string')\r\n\t\tassert( T.isArray(arg_operands), context + ':process:bad operands array')\r\n\t\tassert( T.isObject(arg_credentials) && arg_credentials.is_credentials, context + ':process:bad credentials object')\r\n\t\t\r\n\t\tconst metrics_server = runtime.node.get_metrics_server()\r\n\t\t\r\n\t\tswitch(arg_method)\r\n\t\t{\r\n\t\t\tcase 'get': {\r\n\t\t\t\t// NO LOCAL METRICS SERVER\r\n\t\t\t\tif (! metrics_server)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn Promise.reject('node has no metrics server for operation [' + arg_method + ']')\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// GET WITHOUT OPERANDS\r\n\t\t\t\tif ( arg_operands.length == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tconst nodejs_state_values = metrics_server.get_nodejs_metrics_state_values()\r\n\t\t\t\t\t// console.log(nodejs_state_values, context + ':produce:get:no opds:nodejs_state_values')\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn Promise.resolve(nodejs_state_values)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// GET WITH OPERANDS\r\n\t\t\t\tconst first_operand = arg_operands[0]\r\n\t\t\t\t\r\n\t\t\t\tif ( T.isObject(first_operand) && T.isObject(first_operand.args) )\r\n\t\t\t\t{\r\n\t\t\t\t\tconst method_args = first_operand.args\r\n\t\t\t\t\t\r\n\t\t\t\t\tif ( method_args && T.isString(method_args.runtime_uid) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst nodejs_state_values = metrics_server.get_nodejs_metrics_state_values_for(method_args.runtime_uid)\r\n\t\t\t\t\t\t// console.log(nodejs_state_values, context + ':produce:get:runtime_uid=' + method_args.runtime_uid + ':nodejs_state_values')\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn Promise.resolve(nodejs_state_values)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst nodejs_state_values = metrics_server.get_nodejs_metrics_state_values()\r\n\t\t\t\t// console.log(nodejs_state_values, context + ':produce:get:bad opds:nodejs_state_values')\r\n\t\t\t\treturn Promise.resolve(nodejs_state_values)\r\n\t\t\t}\r\n\t\t\r\n\t\t\tcase 'list': {\r\n\t\t\t\t// NO LOCAL METRICS SERVER\r\n\t\t\t\tif (! metrics_server)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn Promise.reject('node has no metrics server for operation [' + arg_method + ']')\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst nodejs_state_items = metrics_server.get_nodejs_metrics_state_values_items()\r\n\t\t\t\treturn Promise.resolve(nodejs_state_items)\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.reject('bad data request operation [' + arg_data.request.operation + ']')\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/metrics_nodejs/metrics_svc_provider.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 229,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/metrics_nodejs/metrics_svc_provider.js",
    "static": true,
    "longname": "js/services/metrics_nodejs/metrics_svc_provider.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/metrics_nodejs/metrics_svc_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 230,
    "kind": "class",
    "name": "MetricsNodeJsSvcProvider",
    "memberof": "js/services/metrics_nodejs/metrics_svc_provider.js",
    "static": true,
    "longname": "js/services/metrics_nodejs/metrics_svc_provider.js~MetricsNodeJsSvcProvider",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/metrics_nodejs/metrics_svc_provider.js",
    "importStyle": "MetricsNodeJsSvcProvider",
    "description": "NodeJs metrics service provider class.",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/socketio_service_provider.js~SocketIOServiceProvider"
    ]
  },
  {
    "__docId__": 231,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/metrics_nodejs/metrics_svc_provider.js~MetricsNodeJsSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_nodejs/metrics_svc_provider.js~MetricsNodeJsSvcProvider#constructor",
    "access": null,
    "description": "Create a NodeJs metrics service provider.",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider_name",
        "description": "consumer name."
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 232,
    "kind": "member",
    "name": "metrics_stream",
    "memberof": "js/services/metrics_nodejs/metrics_svc_provider.js~MetricsNodeJsSvcProvider",
    "static": false,
    "longname": "js/services/metrics_nodejs/metrics_svc_provider.js~MetricsNodeJsSvcProvider#metrics_stream",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 233,
    "kind": "method",
    "name": "init_stream",
    "memberof": "js/services/metrics_nodejs/metrics_svc_provider.js~MetricsNodeJsSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_nodejs/metrics_svc_provider.js~MetricsNodeJsSvcProvider#init_stream",
    "access": null,
    "description": "Init output stream.",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 234,
    "kind": "member",
    "name": "metrics_bus_stream",
    "memberof": "js/services/metrics_nodejs/metrics_svc_provider.js~MetricsNodeJsSvcProvider",
    "static": false,
    "longname": "js/services/metrics_nodejs/metrics_svc_provider.js~MetricsNodeJsSvcProvider#metrics_bus_stream",
    "access": null,
    "description": null,
    "lineNumber": 113,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 235,
    "kind": "method",
    "name": "process",
    "memberof": "js/services/metrics_nodejs/metrics_svc_provider.js~MetricsNodeJsSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/metrics_nodejs/metrics_svc_provider.js~MetricsNodeJsSvcProvider#process",
    "access": null,
    "description": "Process request and returns datas.",
    "lineNumber": 142,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_method",
        "description": "method name"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_operands",
        "description": "request operands"
      },
      {
        "nullable": null,
        "types": [
          "Credentials"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "request credentials"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 236,
    "kind": "file",
    "name": "js/services/middleware/executable_route_middleware.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T                from 'devapt-core-common/dist/js/utils/types'\r\nimport RenderingBuilder from 'devapt-core-common/dist/js/rendering/rendering_builder'\r\n\r\n// SERVER IMPORTS\r\nimport runtime          from '../../base/runtime'\r\nimport ExecutableRoute  from '../../executables/executable_route'\r\n\r\n\r\nlet context = 'services/middleware/executable_route_middleware'\r\n\r\n\r\n\r\n/**\r\n * @file Middleware route registering class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class ExecutableRouteMiddleware extends ExecutableRoute\r\n{\r\n    /**\r\n     * Create a route middleware executable\r\n\t * @extends ExecutableRoute\r\n\t * @returns {nothing}\r\n     */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(context)\r\n\t}\r\n\t\r\n\r\n    \r\n\t/**\r\n     * Callback for route handling.\r\n     * @override\r\n\t * \r\n     * @param {object} arg_application - Application instance.\r\n     * @param {object} arg_cfg_route - plain object route configuration.\r\n     * @param {object} arg_data - plain object contextual datas.\r\n\t * \r\n     * @param {function} route handler.\r\n     */\r\n\tget_route_cb(arg_application, arg_cfg_route, arg_data)\r\n\t{\r\n\t\tlet self = this\r\n\t\t\r\n\t\t// REDIRECT\r\n\t\tif ( T.isString(arg_cfg_route.redirect) )\r\n\t\t{\r\n\t\t\t// console.log('REDIRECT ROUTE FOR ASSETS', arg_cfg_route.redirect)\r\n\t\t\treturn this.get_route_redirect_cb(arg_application, arg_cfg_route, arg_data)\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t// GET ASSETS CONFIG\r\n\t\tconst assets_for_region = this.service.get_assets_services_names('any')\r\n\t\t\r\n\r\n\t\t// MIDDLEWARE\r\n\t\treturn function exec_http(req, res, next)\r\n\t\t{\r\n\t\t\tself.enter_group('ExecutableRouteMiddleware.exec_http')\r\n\t\t\t\r\n\t\t\t// REGISTER ASSETS SERVICES\r\n\t\t\treq.devapt_assets_services = {\r\n\t\t\t\tstyle: assets_for_region.style,\r\n\t\t\t\tscript:assets_for_region.script,\r\n\t\t\t\timage: assets_for_region.image,\r\n\t\t\t\thtml:  assets_for_region.html\r\n\t\t\t}\r\n\r\n\t\t\tlet mw_cb = null\r\n\r\n\r\n\t\t\t// GET CUSTOM MIDDLEWARE FROM FILE\r\n\t\t\tif ( T.isString(arg_cfg_route.mw_file) )\r\n\t\t\t{\r\n\t\t\t\t// CHECK PATH\r\n\t\t\t\tconst path_file_name = runtime.context.get_absolute_path(arg_cfg_route.mw_file)\r\n\t\t\t\tassert(T.isString(path_file_name), context + ':bad middleware file path string')\r\n\t\t\t\t\r\n\t\t\t\t// LOAD MIDDLEWARE FILE\r\n\t\t\t\ttry{\r\n\t\t\t\t\tself.info('Loading middleware before')\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!mw_cb)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tself.info('Loading middleware file [' + path_file_name + ']')\r\n\t\t\t\t\t\tmw_cb = require(path_file_name).default\r\n\t\t\t\t\t\t// console.log(mw_cb, 'mw_cb')\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tself.info('Loading middleware after')\r\n\t\t\t\t}\r\n\t\t\t\tcatch(e)\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.log(context + ':middleware loading error:' + e)\r\n\t\t\t\t\tself.error('middleware file not found or not valid')\r\n\t\t\t\t\tself.leave_group('ExecutableRouteMiddleware.exec_http')\r\n\t\t\t\t\treturn next(e)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t// VIEW RENDERING MIDDLEWARE\r\n\t\t\telse if ( T.isString(arg_cfg_route.page_view) )\r\n\t\t\t{\r\n\t\t\t\tmw_cb = (req, res) => {\r\n\t\t\t\t\t// console.log(req.devapt_assets_services, 'get_route_cb:mw:req.devapt_assets_services')\r\n\t\t\t\t\tconst renderer = new RenderingBuilder(runtime, req.devapt_assets_services.style, req.devapt_assets_services.script, req.devapt_assets_services.image, req.devapt_assets_services.html, arg_application)\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst title = undefined\r\n\t\t\t\t\tconst credentials = req.devapt_credentials\r\n\t\t\t\t\tconst view_name = arg_cfg_route.page_view\r\n\t\t\t\t\tconst menubar_name = T.isString(arg_cfg_route.page_menubar) ? arg_cfg_route.page_menubar : undefined\r\n\r\n\t\t\t\t\tconst html = renderer.render_html_page(title, view_name, menubar_name, credentials)\r\n\r\n\t\t\t\t\t// MANAGE ERROR\r\n\t\t\t\t\tif (! T.isString(html) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tres.status(500)\r\n\t\t\t\t\t\tres.send('a rendering error occures for view [' + view_name + ']')\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tres.send(html)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t// EXECUTE MIDDLEWARE FUNCTION\r\n\t\t\tassert(T.isFunction(mw_cb), context + ':bad middleware function')\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tself.info('Execute middleware: before')\r\n\t\t\t\t\r\n\t\t\t\tmw_cb(req, res)\r\n\t\t\t\t\r\n\t\t\t\tself.info('Execute middleware: after')\r\n\t\t\t}\r\n\t\t\tcatch(e)\r\n\t\t\t{\r\n\t\t\t\tconsole.log(context + ':middleware execution error:' + e)\r\n\t\t\t\tself.error('middleware execution failed')\r\n\t\t\t\tself.leave_group('ExecutableRouteMiddleware.exec_http')\r\n\t\t\t\treturn next(e)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tself.leave_group('ExecutableRouteMiddleware.exec_http')\r\n\t\t\treturn\r\n\t\t}\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/middleware/executable_route_middleware.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 237,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/middleware/executable_route_middleware.js",
    "static": true,
    "longname": "js/services/middleware/executable_route_middleware.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/middleware/executable_route_middleware.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 238,
    "kind": "class",
    "name": "ExecutableRouteMiddleware",
    "memberof": "js/services/middleware/executable_route_middleware.js",
    "static": true,
    "longname": "js/services/middleware/executable_route_middleware.js~ExecutableRouteMiddleware",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/middleware/executable_route_middleware.js",
    "importStyle": "ExecutableRouteMiddleware",
    "description": "",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Middleware route registering class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/executables/executable_route.js~ExecutableRoute"
    ]
  },
  {
    "__docId__": 239,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/middleware/executable_route_middleware.js~ExecutableRouteMiddleware",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/middleware/executable_route_middleware.js~ExecutableRouteMiddleware#constructor",
    "access": null,
    "description": "Create a route middleware executable",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "ExecutableRoute"
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 240,
    "kind": "method",
    "name": "get_route_cb",
    "memberof": "js/services/middleware/executable_route_middleware.js~ExecutableRouteMiddleware",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/middleware/executable_route_middleware.js~ExecutableRouteMiddleware#get_route_cb",
    "access": null,
    "description": "Callback for route handling.",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_application",
        "description": "Application instance."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_cfg_route",
        "description": "plain object route configuration."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_data",
        "description": "plain object contextual datas."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": "handler."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "override": true
  },
  {
    "__docId__": 241,
    "kind": "file",
    "name": "js/services/middleware/mw_service.js",
    "content": "// SERVER IMPORTS\r\nimport BaseService from '../base/base_service'\r\nimport MidlewareSvcProvider from './mw_svc_provider'\r\nimport MidlewareSvcConsumer from './mw_svc_consumer'\r\n\r\n\r\nlet context = 'server/services/middleware/mw_service'\r\n\r\n\r\n\r\n/**\r\n * Midleware service class for middleware routes.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class MidlewareService extends BaseService\r\n{\r\n\t/**\r\n\t * Create a middleware service.\r\n\t * @param {string} arg_svc_name - service name\r\n\t * @param {object} arg_service_settings - service settings\r\n\t * @param {string} arg_context - logging context label\r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_svc_name, arg_service_settings, arg_context)\r\n\t{\r\n\t\tsuper(arg_svc_name, arg_service_settings, arg_context ? arg_context : context)\r\n\t\t\r\n\t\tthis.is_mw_service = true\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a service provider.\r\n\t * @param {string} arg_name - provider name\r\n\t * @param {Service} arg_service - service instance\r\n\t * @returns {ServiceProvider} - service provider instance\r\n\t */\r\n\tcreate_provider(arg_name, arg_service)\r\n\t{\r\n\t\t// TODO: why not this in place of arg_service\r\n\t\treturn new MidlewareSvcProvider(arg_name, arg_service)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a service consumer.\r\n\t * @returns {ServiceConsumer} - service consumer instance\r\n\t */\r\n\tcreate_consumer()\r\n\t{\r\n\t\treturn new MidlewareSvcConsumer(this.get_name() + '_consumer_' + this.get_id(), this)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/middleware/mw_service.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 242,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/middleware/mw_service.js",
    "static": true,
    "longname": "js/services/middleware/mw_service.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/middleware/mw_service.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 243,
    "kind": "class",
    "name": "MidlewareService",
    "memberof": "js/services/middleware/mw_service.js",
    "static": true,
    "longname": "js/services/middleware/mw_service.js~MidlewareService",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/middleware/mw_service.js",
    "importStyle": "MidlewareService",
    "description": "Midleware service class for middleware routes.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/base_service.js~BaseService"
    ]
  },
  {
    "__docId__": 244,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/middleware/mw_service.js~MidlewareService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/middleware/mw_service.js~MidlewareService#constructor",
    "access": null,
    "description": "Create a middleware service.",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_name",
        "description": "service name"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_settings",
        "description": "service settings"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 245,
    "kind": "member",
    "name": "is_mw_service",
    "memberof": "js/services/middleware/mw_service.js~MidlewareService",
    "static": false,
    "longname": "js/services/middleware/mw_service.js~MidlewareService#is_mw_service",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 246,
    "kind": "method",
    "name": "create_provider",
    "memberof": "js/services/middleware/mw_service.js~MidlewareService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/middleware/mw_service.js~MidlewareService#create_provider",
    "access": null,
    "description": "Create a service provider.",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceProvider} - service provider instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "provider name"
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service",
        "description": "service instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ServiceProvider"
      ],
      "spread": false,
      "description": "service provider instance"
    }
  },
  {
    "__docId__": 247,
    "kind": "method",
    "name": "create_consumer",
    "memberof": "js/services/middleware/mw_service.js~MidlewareService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/middleware/mw_service.js~MidlewareService#create_consumer",
    "access": null,
    "description": "Create a service consumer.",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceConsumer} - service consumer instance"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "ServiceConsumer"
      ],
      "spread": false,
      "description": "service consumer instance"
    }
  },
  {
    "__docId__": 248,
    "kind": "file",
    "name": "js/services/middleware/mw_svc_consumer.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// SERVER IMPORTS\r\nimport RoutesServiceConsumer from '../base/routes_svc_consumer'\r\n\r\n\r\nlet context = 'server/services/middleware/mw_svc_consumer'\r\n\r\n\r\n\r\n/**\r\n * Service consumer class for middleware routes.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class MiddlewareSvcConsumer extends RoutesServiceConsumer\r\n{\r\n\t/**\r\n\t * Create a service consumer for middleware routes.\r\n\t * @param {string} arg_consumer_name - consumer name\r\n\t * @param {Service} arg_service_instance - service instance\r\n\t * @param {string} arg_context - logging context label\r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_consumer_name, arg_service_instance, arg_context)\r\n\t{\r\n\t\tsuper(arg_consumer_name, arg_service_instance, arg_context ? arg_context : context)\r\n\t\tassert( arg_service_instance.is_mw_service, context + ':constructor:bad mw service instance')\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/middleware/mw_svc_consumer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 249,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/middleware/mw_svc_consumer.js",
    "static": true,
    "longname": "js/services/middleware/mw_svc_consumer.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/middleware/mw_svc_consumer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 250,
    "kind": "class",
    "name": "MiddlewareSvcConsumer",
    "memberof": "js/services/middleware/mw_svc_consumer.js",
    "static": true,
    "longname": "js/services/middleware/mw_svc_consumer.js~MiddlewareSvcConsumer",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/middleware/mw_svc_consumer.js",
    "importStyle": "MiddlewareSvcConsumer",
    "description": "Service consumer class for middleware routes.",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/routes_svc_consumer.js~RoutesServiceConsumer"
    ]
  },
  {
    "__docId__": 251,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/middleware/mw_svc_consumer.js~MiddlewareSvcConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/middleware/mw_svc_consumer.js~MiddlewareSvcConsumer#constructor",
    "access": null,
    "description": "Create a service consumer for middleware routes.",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_consumer_name",
        "description": "consumer name"
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 252,
    "kind": "file",
    "name": "js/services/middleware/mw_svc_provider.js",
    "content": "// NPM IMPORTS\r\nimport T from 'typr'\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\n// import RenderingResult  from '../../../common/rendering/rendering_result'\r\nimport RenderingBuilder from '../../../common/rendering/rendering_builder'\r\n\r\n// SERVER IMPORTS\r\nimport ExecutableRouteMiddleware from './executable_route_middleware'\r\nimport ServiceExecProvider from '../base/service_exec_provider'\r\n\r\n\r\nlet context = 'server/services/middleware/mw_svc_provider'\r\n\r\n\r\n\r\n/**\r\n * Middleware service provider class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class MiddlewareSvcProvider extends ServiceExecProvider\r\n{\r\n\t/**\r\n\t * Create a middleware service provider.\r\n\t * \r\n\t * @param {string} arg_provider_name - consumer name.\r\n\t * @param {Service} arg_service_instance - service instance.\r\n\t * @param {string} arg_context - logging context label.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_provider_name, arg_service_instance, arg_context)\r\n\t{\r\n\t\tsuper(arg_provider_name, arg_service_instance, arg_context ? arg_context : context)\r\n\t\t\r\n\t\tassert(this.service.is_mw_service, context + ':bad mw service')\r\n\t\t\r\n\t\tthis.exec = new ExecutableRouteMiddleware()\r\n\t\tthis.exec.service = this.service\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Process request and returns datas.\r\n\t * \r\n\t * @param {string} arg_method - method name.\r\n\t * @param {array} arg_operands - request operands.\r\n\t * @param {Credentials} arg_credentials - request credentials.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tprocess(arg_method, arg_operands, arg_credentials)\r\n\t{\r\n\t\tconsole.log(context + ':process:method, operands:', arg_method, arg_operands)\r\n\r\n\t\tassert( T.isString(arg_method), context + ':process:bad method string')\r\n\t\tassert( T.isArray(arg_operands), context + ':process:bad operands array')\r\n\t\tassert( T.isObject(arg_credentials) && arg_credentials.is_credentials, context + ':process:bad credentials object')\r\n\t\t\r\n\t\tconst method = arg_method.toLocaleLowerCase()\r\n\t\tlet target_route = arg_operands[0].route\r\n\t\ttarget_route = target_route.endsWith('/') ? target_route.slice(0, target_route.length - 1) : target_route\r\n\t\tconst routes = this.get_setting_js('routes')\r\n\t\tconsole.log(context + ':process:target_route:', target_route)\r\n\r\n\t\tswitch(method) {\r\n\t\t\tcase 'get': {\r\n\t\t\t\tlet rendering_result = undefined\r\n\r\n\t\t\t\t// SEARCH ROUTE\r\n\t\t\t\tlet route_mw_file = undefined\r\n\t\t\t\tlet route_page_view = undefined\r\n\t\t\t\tlet route_page_menubar = undefined\r\n\r\n\t\t\t\t// TODO REPLACE FOREACH TO END LOOP ON FOUND\r\n\t\t\t\troutes.forEach(\r\n\t\t\t\t\t(route_cfg)=>{\r\n\t\t\t\t\t\tconst loop_route = route_cfg.route.endsWith('/') ? route_cfg.route.slice(0, target_route.length - 1) : route_cfg.route\r\n\t\t\t\t\t\tif (loop_route == target_route)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\troute_mw_file = route_cfg.mw_file\r\n\t\t\t\t\t\t\troute_page_view = route_cfg.page_view\r\n\t\t\t\t\t\t\troute_page_menubar = route_cfg.page_menubar\r\n\r\n\t\t\t\t\t\t\tconsole.log(context + ':process:target_route found')\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// PROCESS MIDDLEWARE FILE\r\n\t\t\t\t\tif ( T.isString(route_mw_file) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconsole.log(context + ':process:route_mw_file found', route_mw_file)\r\n\r\n\t\t\t\t\t\trendering_result = this.process_mw_file(route_mw_file, arg_credentials)\r\n\r\n\t\t\t\t\t\treturn Promise.resolve(rendering_result)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// VIEW RENDERING MIDDLEWARE\r\n\t\t\t\t\tif ( T.isString(route_page_view) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconsole.log(context + ':process:route_page_view found', route_page_view)\r\n\r\n\t\t\t\t\t\trendering_result = this.process_mw_view(route_page_view, route_page_menubar, arg_credentials)\r\n\r\n\t\t\t\t\t\treturn Promise.resolve(rendering_result)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// BAD ROUTE CONFIG\r\n\t\t\t\t\treturn Promise.reject(context + ':process:route not found for target [' + target_route + ']')\r\n\t\t\t\t}\r\n\t\t\t\tcatch(e)\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.error(context + ':process:exception=', e)\r\n\t\t\t\t\treturn Promise.reject(context + ':process:exception=' + e)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn Promise.reject(context + ':process:bad config')\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Process a middleware file.\r\n\t * \r\n\t * @param {string} arg_mw_file - middleware file.\r\n\t * @param {Credentials} arg_credentials - request credentials.\r\n\t * \r\n\t * @returns {RenderingResult}\r\n\t */\r\n\tprocess_mw_file(arg_mw_file, arg_credentials)\r\n\t{\r\n\t\tthis.info('process_mw_file:file:', arg_mw_file)\r\n\t\tassert( T.isString(arg_mw_file), context + ':process_mw_file:bad file string')\r\n\t\t\r\n\t\tlet mw_cfg = undefined\r\n\r\n\t\t// CHECK PATH\r\n\t\tconst path_file_name = this.get_runtime().context.get_absolute_path(arg_mw_file)\r\n\t\tassert(T.isString(path_file_name), context + ':bad middleware file path string')\r\n\t\t\r\n\t\t// LOAD MIDDLEWARE FILE\r\n\t\ttry {\r\n\t\t\tthis.info('Loading middleware file')\r\n\t\t\t\r\n\t\t\tmw_cfg = require(path_file_name).service_cfg\r\n\t\t\t// console.log(mw_cfg, 'mw_cfg')\r\n\t\t}\r\n\t\tcatch(e)\r\n\t\t{\r\n\t\t\tconsole.log(context + ':process_mw_file:middleware loading error:' + e)\r\n\t\t\tthis.error('process_mw_file:middleware file not found or not valid')\r\n\t\t\t\r\n\t\t\tthis.leave_group('ExecutableRouteMiddleware.exec_http')\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\t// PROCESSING MIDDLEWARE\r\n\t\ttry {\r\n\t\t\tthis.info('Processing middleware view')\r\n\t\t\t\r\n\t\t\tconst view = mw_cfg.view\r\n\t\t\tconst menubar = mw_cfg.menubar\r\n\t\t\tconst result = this.process_mw_view(view, menubar, arg_credentials)\r\n\r\n\t\t\tthis.info('Loading middleware after')\r\n\t\t\treturn result\r\n\t\t}\r\n\t\tcatch(e)\r\n\t\t{\r\n\t\t\tconsole.log(context + ':process_mw_file:middleware processing error:' + e)\r\n\t\t\tthis.error('process_mw_file:middleware processing error', e)\r\n\r\n\t\t\tthis.leave_group('ExecutableRouteMiddleware.exec_http')\r\n\t\t\treturn undefined\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Process a middleware view.\r\n\t * \r\n\t * @param {string|Component} arg_view_name - middleware view name.\r\n\t * @param {string} arg_menubar_name - middleware menubar name.\r\n\t * @param {Credentials} arg_credentials - request credentials.\r\n\t * \r\n\t * @returns {RenderingResult}\r\n\t */\r\n\tprocess_mw_view(arg_view_name, arg_menubar_name, arg_credentials)\r\n\t{\r\n\t\tconst view_name = T.isString(arg_view_name) ? arg_view_name : ( ( T.isObject(arg_view_name) && arg_view_name.is_component) ? arg_view_name.get_name() : 'undefined')\r\n\t\tconst menubar_name = T.isString(arg_menubar_name) ? arg_menubar_name : ( ( T.isObject(arg_menubar_name) && arg_menubar_name.is_component) ? arg_menubar_name.get_name() : 'undefined')\r\n\t\tconsole.log(context + ':process_mw_view:view,menubar:', view_name, menubar_name)\r\n\r\n\t\tassert( T.isString(arg_view_name) || ( T.isObject(arg_view_name) && arg_view_name.is_component), context + ':process_mw_view:bad view string or object')\r\n\r\n\t\t// GET ASSETS CONFIG\r\n\t\tconst assets = this.service.get_assets_services_names('any')\r\n\r\n\t\t// CREATE RENDERING RESULT AND BUILDER\r\n\t\tconst arg_application = undefined\r\n\t\tconst renderer = new RenderingBuilder(this.runtime, assets.style, assets.script, assets.image, assets.html, arg_application)\r\n\t\t\r\n\t\t// RENDER TREE\r\n\t\tconst renderer_result = renderer.render_json_content(arg_view_name, arg_menubar_name, arg_credentials)\r\n\r\n\t\treturn renderer_result\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/middleware/mw_svc_provider.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 253,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/middleware/mw_svc_provider.js",
    "static": true,
    "longname": "js/services/middleware/mw_svc_provider.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/middleware/mw_svc_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 254,
    "kind": "class",
    "name": "MiddlewareSvcProvider",
    "memberof": "js/services/middleware/mw_svc_provider.js",
    "static": true,
    "longname": "js/services/middleware/mw_svc_provider.js~MiddlewareSvcProvider",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/middleware/mw_svc_provider.js",
    "importStyle": "MiddlewareSvcProvider",
    "description": "Middleware service provider class.",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/service_exec_provider.js~ServiceExecProvider"
    ]
  },
  {
    "__docId__": 255,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/middleware/mw_svc_provider.js~MiddlewareSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/middleware/mw_svc_provider.js~MiddlewareSvcProvider#constructor",
    "access": null,
    "description": "Create a middleware service provider.",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider_name",
        "description": "consumer name."
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 256,
    "kind": "member",
    "name": "exec",
    "memberof": "js/services/middleware/mw_svc_provider.js~MiddlewareSvcProvider",
    "static": false,
    "longname": "js/services/middleware/mw_svc_provider.js~MiddlewareSvcProvider#exec",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 257,
    "kind": "method",
    "name": "process",
    "memberof": "js/services/middleware/mw_svc_provider.js~MiddlewareSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/middleware/mw_svc_provider.js~MiddlewareSvcProvider#process",
    "access": null,
    "description": "Process request and returns datas.",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_method",
        "description": "method name."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_operands",
        "description": "request operands."
      },
      {
        "nullable": null,
        "types": [
          "Credentials"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "request credentials."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 258,
    "kind": "method",
    "name": "process_mw_file",
    "memberof": "js/services/middleware/mw_svc_provider.js~MiddlewareSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/middleware/mw_svc_provider.js~MiddlewareSvcProvider#process_mw_file",
    "access": null,
    "description": "Process a middleware file.",
    "lineNumber": 138,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_mw_file",
        "description": "middleware file."
      },
      {
        "nullable": null,
        "types": [
          "Credentials"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "request credentials."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 259,
    "kind": "method",
    "name": "process_mw_view",
    "memberof": "js/services/middleware/mw_svc_provider.js~MiddlewareSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/middleware/mw_svc_provider.js~MiddlewareSvcProvider#process_mw_view",
    "access": null,
    "description": "Process a middleware view.",
    "lineNumber": 197,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RenderingResult}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "Component"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_view_name",
        "description": "middleware view name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_menubar_name",
        "description": "middleware menubar name."
      },
      {
        "nullable": null,
        "types": [
          "Credentials"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "request credentials."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RenderingResult"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 260,
    "kind": "file",
    "name": "js/services/ping/ping_svc_provider.js",
    "content": "// NPM IMPORTS\r\n// import assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T               from 'devapt-core-common/dist/js/utils/types'\r\nimport ServiceProvider from 'devapt-core-common/dist/js/services/service_provider'\r\nimport ServiceResponse from 'devapt-core-common/dist/js/services/service_response'\r\n\r\n// SERVICES IMPORTS\r\n\r\n\r\nlet context = 'services/ping/ping_svc_provider'\r\n\r\n\r\n\r\n/**\r\n * Ping service provider class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class PingSvcProvider extends ServiceProvider\r\n{\r\n\t/**\r\n\t * Create a ping service provider.\r\n\t * \r\n\t * @param {string} arg_provider_name - consumer name.\r\n\t * @param {Service} arg_service_instance - service instance.\r\n\t * @param {string} arg_context - logging context label.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_provider_name, arg_service_instance, arg_context=context)\r\n\t{\r\n\t\tsuper(arg_provider_name, arg_service_instance, arg_context)\r\n\r\n\t\tthis.is_ping_svc_provider = true\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get provider operations names.\r\n\t * @abstract\r\n\t * \r\n\t * @returns {array}\r\n\t */\r\n\tget_operations_names()\r\n\t{\r\n\t\treturn ['devapt-ping'].concat(super.get_operations_names())\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Produce service datas on request.\r\n\t * \r\n\t * @param {ServiceRequest} arg_request - service request instance.\r\n\t * \r\n\t * @returns {Promise} - promise of ServiceResponse instance.\r\n\t */\r\n\tproduce(arg_request)\r\n\t{\r\n\t\tif ( ! T.isObject(arg_request) || ! arg_request.is_service_request)\r\n\t\t{\r\n\t\t\treturn Promise.resolve({error:'bad request object'})\r\n\t\t}\r\n\r\n\t\tconst operation = arg_request.get_operation()\r\n\r\n\t\t// console.log(context + ':produce:request for service=' + this.service.get_name() + ':operation=' + operation)\r\n\r\n\t\tif (operation == 'devapt-ping')\r\n\t\t{\r\n\t\t\tconst response = new ServiceResponse(arg_request)\r\n\t\t\tresponse.set_results(['devapt-pong'])\r\n\r\n\t\t\t// console.log(context + ':produce:reply for service=' + this.service.get_name() + ':operation=' + operation, response.get_properties_values())\r\n\r\n\t\t\treturn Promise.resolve(response)\r\n\t\t}\r\n\r\n\t\tthis.leave_group('produce:super.')\r\n\t\treturn super.produce(arg_request)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/ping/ping_svc_provider.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 261,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/ping/ping_svc_provider.js",
    "static": true,
    "longname": "js/services/ping/ping_svc_provider.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/ping/ping_svc_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 262,
    "kind": "class",
    "name": "PingSvcProvider",
    "memberof": "js/services/ping/ping_svc_provider.js",
    "static": true,
    "longname": "js/services/ping/ping_svc_provider.js~PingSvcProvider",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/ping/ping_svc_provider.js",
    "importStyle": "PingSvcProvider",
    "description": "Ping service provider class.",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "devapt-core-common/dist/js/services/service_provider~ServiceProvider"
    ]
  },
  {
    "__docId__": 263,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/ping/ping_svc_provider.js~PingSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/ping/ping_svc_provider.js~PingSvcProvider#constructor",
    "access": null,
    "description": "Create a ping service provider.",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider_name",
        "description": "consumer name."
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 264,
    "kind": "member",
    "name": "is_ping_svc_provider",
    "memberof": "js/services/ping/ping_svc_provider.js~PingSvcProvider",
    "static": false,
    "longname": "js/services/ping/ping_svc_provider.js~PingSvcProvider#is_ping_svc_provider",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 265,
    "kind": "method",
    "name": "get_operations_names",
    "memberof": "js/services/ping/ping_svc_provider.js~PingSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/ping/ping_svc_provider.js~PingSvcProvider#get_operations_names",
    "access": null,
    "description": "Get provider operations names.",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true
  },
  {
    "__docId__": 266,
    "kind": "method",
    "name": "produce",
    "memberof": "js/services/ping/ping_svc_provider.js~PingSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/ping/ping_svc_provider.js~PingSvcProvider#produce",
    "access": null,
    "description": "Produce service datas on request.",
    "lineNumber": 61,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of ServiceResponse instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ServiceRequest"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_request",
        "description": "service request instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of ServiceResponse instance."
    }
  },
  {
    "__docId__": 267,
    "kind": "file",
    "name": "js/services/resource/executable_route_get_resource.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\nimport fs from 'fs'\r\n\r\n// COMMON IMPORTS\r\nimport T from 'devapt-core-common/dist/js/utils/types'\r\n\r\n// SERVER IMPORTS\r\nimport runtime         from '../../base/runtime'\r\nimport ExecutableRoute from '../../executables/executable_route'\r\n\r\n\r\nlet context = 'server/services/base/executable_route_get_resources'\r\n\r\n\r\n\r\n/**\r\n * @file Get resource route registering class.\r\n * @todo check resources accesses\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class ExecutableRouteGetResources extends ExecutableRoute\r\n{\r\n    /**\r\n     * Create a ExecutableRouteGetResources instance.\r\n\t * @extends ExecutableRoute\r\n\t * \r\n\t * @param {ServiceProvider} arg_provider - service provider.\r\n\t * \r\n\t * @returns {nothing}\r\n     */\r\n\tconstructor(arg_provider)\r\n\t{\r\n\t\tsuper(context)\r\n\r\n\t\t// this.provider = arg_provider\r\n\t}\r\n\t\r\n\t\r\n\t\r\n    /**\r\n     * Get a collection resources list.\r\n\t * \r\n     * @param {object} res - response instance\r\n     * @param {object} arg_application - Application instance.\r\n     * @param {object} arg_cfg_route - plain object route configuration.\r\n\t * \r\n     * @returns {nothing}\r\n     */\r\n\tsend_resources_list(res, arg_application, arg_cfg_route)\r\n\t{\r\n\t\tthis.info('LIST resources')\r\n\t\t\t\t\r\n\t\t// GET RESOURCES LIST\r\n\t\tconst resources_list = arg_application.get_resources_names(arg_cfg_route.collection)\r\n\t\t\r\n\t\t// SEND OUTPUT\r\n\t\tres.contentType = 'json';\r\n\t\tres.send({ resources: resources_list });\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n     * Callback for route handling.\r\n     * @override\r\n     * @param {object} arg_application - Application instance.\r\n     * @param {object} arg_cfg_route - plain object route configuration.\r\n     * @param {object} arg_data - plain object contextual datas.\r\n     * @param {function} route handler.\r\n     */\r\n\tget_route_cb(arg_application, arg_cfg_route, arg_data)\r\n\t{\r\n\t\tlet self = this\r\n\t\t\r\n\t\treturn function exec_http(req, res, next)\r\n\t\t{\r\n\t\t\t// self.enable_trace()\r\n\t\t\t\r\n\t\t\tself.enter_group('ExecutableRouteGetResources.exec_http')\r\n\t\t\t\r\n\t\t\t// CHECK ARGS\r\n\t\t\tassert(T.isString(arg_cfg_route.collection), context + ':bad collection name')\r\n\t\t\t// console.log(arg_cfg_route, 'arg_cfg_route')\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t// TODO: CHECK ACCESS TO RESOURCE FROM USER\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t// LIST RESOURCES\r\n\t\t\tif (! arg_cfg_route.item)\r\n\t\t\t{\r\n\t\t\t\tself.send_resources_list(res, arg_application, arg_cfg_route)\r\n\t\t\t\t\r\n\t\t\t\tself.leave_group('ExecutableRouteGetResources.exec_http')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tassert( T.isString(arg_cfg_route.item), context + ':bad collection item string')\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t// GET RESOURCE NAME\r\n\t\t\tlet resource = null\r\n\t\t\tlet resource_name = req.params[arg_cfg_route.item];\r\n\t\t\tassert( T.isString(resource_name), context + ':bad resource name [%s]', resource_name)\r\n\t\t\t\r\n\t\t\tif (resource_name.length == 0)\r\n\t\t\t{\r\n\t\t\t\tself.send_resources_list(res, arg_application, arg_cfg_route)\r\n\t\t\t\t\r\n\t\t\t\tself.leave_group('ExecutableRouteGetResources.exec_http')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t// GET ONE RESOURCE\r\n\t\t\tself.info('GET one resource')\r\n\t\t\tif (arg_cfg_route.collection === '*')\r\n\t\t\t{\r\n\t\t\t\tself.info('GET one resource [' + resource_name + '] of any collection')\r\n\t\t\t\t\r\n\t\t\t\tresource = arg_application.find_resource(resource_name)\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tself.info('GET one resource [' + resource_name + '] of one collection [' + arg_cfg_route.collection + ']')\r\n\t\t\t\t\r\n\t\t\t\t// LOOKUP RESOURCE\r\n\t\t\t\tresource = arg_application.find_resource(resource_name, arg_cfg_route.collection)\r\n\t\t\t\tif ( ! resource)\r\n\t\t\t\t{\r\n\t\t\t\t\tself.debug('resource not found [' + resource_name + ']')\r\n\t\t\t\t\tconsole.error('bad resource type')\r\n\t\t\t\t\tconsole.log(resource.$type, 'resource.$type')\r\n\t\t\t\t\tconsole.log(arg_cfg_route.collection, 'arg_cfg_route.collection')\r\n\t\t\t\t\tresource = null\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// CHECK RESOURCE TYPE\r\n\t\t\t\t// if (resource && resource.$type != arg_cfg_route.collection)\r\n\t\t\t\t// {\r\n\t\t\t\t// }\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// RESOURCE NOT FOUND ?\r\n\t\t\tif ( ! T.isObject(resource) )\r\n\t\t\t{\r\n\t\t\t\t// SEND OUTPUT\r\n\t\t\t\tres.status(404)\r\n\t\t\t\tres.contentType = 'json'\r\n\t\t\t\tres.send({ error: 'Resource not found [' + resource_name + ']' })\r\n\t\t\t\t\r\n\t\t\t\t// next( new Error('Resource not found [' + resource_name + ']') )\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t// TODO: SANITY CHECK OF RESOURCE CONFIG (connections...)\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t// WRAP INCLUDED FILE\r\n\t\t\tif ( resource.has_setting('include_file_path_name') )\r\n\t\t\t{\r\n\t\t\t\tself.debug('Process resource.include_file_path_name [%s]', resource.include_file_path_name)\r\n\t\t\t\t\r\n\t\t\t\tconst file_path = resource.get_setting('include_file_path_name')\r\n\t\t\t\tif ( T.isString(file_path) )\r\n\t\t\t\t{\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst file_content = self.include_file(self, resource_name, file_path)\r\n\t\t\t\t\t\tresource.set_setting('include_file_content', file_content)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch(e)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst error_msg = 'an error occures when loading file [' + e.toString() + ']'\r\n\t\t\t\t\t\tresource.set_setting('include_file_content', error_msg)\r\n\t\t\t\t\t\tself.error(error_msg)\r\n\t\t\t\t\t\tconsole.error(error_msg)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t// SEND OUTPUT\r\n\t\t\tres.contentType = 'json'\r\n\t\t\tres.send({ resource: resource.export_settings() })\r\n\t\t\t\r\n\t\t\tself.leave_group('ExecutableRouteGetResources.exec_http')\r\n\t\t\treturn\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n    /**\r\n     * Load an asset file for a resource\r\n     * @param {object} self - this class instance\r\n     * @param {string} arg_resource_name - resource name\r\n     * @param {string} arg_file_path_name - file path name\r\n     * @returns {string} file content\r\n     */\r\n\tinclude_file(self, arg_resource_name, arg_file_path_name)\r\n\t{\r\n\t\tconst file_path = runtime.context.get_absolute_path(arg_file_path_name)\r\n\t\tself.debug('Process file_path [%s]', file_path)\r\n\t\t\r\n\t\t\r\n\t\tlet content = fs.readFileSync(file_path, {encoding: 'utf-8'} )\r\n\t\t\r\n\t\tif (! content)\r\n\t\t{\r\n\t\t\tvar error_msg = context + ':resource include file not found [' + arg_resource_name + '] for resource [' + file_path + ']'\r\n\t\t\tconsole.error('loading resource include file')\r\n\t\t\tthrow new Error(error_msg);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tconsole.log('loading resource include file: return')\r\n\t\treturn content\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/resource/executable_route_get_resource.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 268,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/resource/executable_route_get_resource.js",
    "static": true,
    "longname": "js/services/resource/executable_route_get_resource.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/resource/executable_route_get_resource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 269,
    "kind": "class",
    "name": "ExecutableRouteGetResources",
    "memberof": "js/services/resource/executable_route_get_resource.js",
    "static": true,
    "longname": "js/services/resource/executable_route_get_resource.js~ExecutableRouteGetResources",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/resource/executable_route_get_resource.js",
    "importStyle": "ExecutableRouteGetResources",
    "description": "",
    "lineNumber": 23,
    "todo": [
      "check resources accesses"
    ],
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Get resource route registering class."
      },
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/executables/executable_route.js~ExecutableRoute"
    ]
  },
  {
    "__docId__": 270,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/resource/executable_route_get_resource.js~ExecutableRouteGetResources",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/resource/executable_route_get_resource.js~ExecutableRouteGetResources#constructor",
    "access": null,
    "description": "Create a ExecutableRouteGetResources instance.",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@extends",
        "tagValue": "ExecutableRoute"
      },
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ServiceProvider"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider",
        "description": "service provider."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 271,
    "kind": "method",
    "name": "send_resources_list",
    "memberof": "js/services/resource/executable_route_get_resource.js~ExecutableRouteGetResources",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/resource/executable_route_get_resource.js~ExecutableRouteGetResources#send_resources_list",
    "access": null,
    "description": "Get a collection resources list.",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "response instance"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_application",
        "description": "Application instance."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_cfg_route",
        "description": "plain object route configuration."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 272,
    "kind": "method",
    "name": "get_route_cb",
    "memberof": "js/services/resource/executable_route_get_resource.js~ExecutableRouteGetResources",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/resource/executable_route_get_resource.js~ExecutableRouteGetResources#get_route_cb",
    "access": null,
    "description": "Callback for route handling.",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_application",
        "description": "Application instance."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_cfg_route",
        "description": "plain object route configuration."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_data",
        "description": "plain object contextual datas."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": "handler."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "override": true
  },
  {
    "__docId__": 273,
    "kind": "method",
    "name": "include_file",
    "memberof": "js/services/resource/executable_route_get_resource.js~ExecutableRouteGetResources",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/resource/executable_route_get_resource.js~ExecutableRouteGetResources#include_file",
    "access": null,
    "description": "Load an asset file for a resource",
    "lineNumber": 203,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} file content"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "self",
        "description": "this class instance"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_resource_name",
        "description": "resource name"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_file_path_name",
        "description": "file path name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "file content"
    }
  },
  {
    "__docId__": 274,
    "kind": "file",
    "name": "js/services/resource/resources_service.js",
    "content": "// SERVER IMPORTS\r\nimport BaseService from '../base/base_service'\r\nimport ResourcesSvcProvider from './resources_svc_provider'\r\nimport ResourcesSvcConsumer from './resources_svc_consumer'\r\n\r\n\r\nlet context = 'server/services/resources/resources_service'\r\n\r\n\r\n\r\n/**\r\n * Resources service class for resources routes.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class ResourcesService extends BaseService\r\n{\r\n\t/**\r\n\t * Create a resources service.\r\n\t * \r\n\t * CONFIGURATION FORMAT:\r\n\t * \tservices.json:\r\n\t * \t\t\"rest_api_resources_query_1\":{\r\n\t *\t\t\t\"type\":\"resources_query\",\r\n\t *\t\t\t\"routes\":[\r\n\t *\t\t\t\t{\r\n\t *\t\t\t\t\t\"route\":\"/views\",\r\n\t *\t\t\t\t\t\"collection\":\"views\" or \"*\"\r\n\t *\t\t\t\t},\r\n\t *\t\t\t\t{\r\n\t *\t\t\t\t\t\"route\":\"/views/:name\",\r\n\t *\t\t\t\t\t\"collection\":\"views\",\r\n\t *\t\t\t\t\t\"item\":\"name\"\r\n\t *\t\t\t\t}\r\n\t * \r\n\t * URL REQUEST FORMAT:\r\n\t * \t\tHTTP GET /.../views: get all views list.\r\n\t * \t\tHTTP GET /.../views/view_a: get view_a definition.\r\n\t * \r\n\t * LIST RESPONSE:         HTTP GET response with payload { resources: resources_list }\r\n\t * ONE RESOURCE RESPONSE: HTTP GET response with payload { resource: resource.export_settings() }\r\n\t * ERROR RESPONSE:        HTTP GET response with payload { error: 'Resource not found [' + resource_name + ']' }\r\n\t * \r\n\t * WEBSOCKET REQUEST FORMAT:\r\n\t * \t\tget: { resource:'', collection:'' }\r\n\t * \t\tlist: { collection:'' }\r\n\t * \r\n\t * WEBSOCKET RESPONSE: on success { service:svc_name, operation:'get|list', result:'done', datas:'list of resources or one resource response' }\r\n\t *                     on error   { service:svc_name, operation:'get|list', result:'error', datas:'error text' }\r\n\t * \r\n\t * @param {string} arg_svc_name - service name.\r\n\t * @param {object} arg_service_settings - service settings.\r\n\t * @param {string} arg_context - logging context label.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_svc_name, arg_service_settings, arg_context)\r\n\t{\r\n\t\tsuper(arg_svc_name, arg_service_settings, arg_context ? arg_context : context)\r\n\t\t\r\n\t\tthis.is_resources_service = true\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a service provider.\r\n\t * @param {string} arg_name - provider name\r\n\t * @param {Service} arg_service - service instance\r\n\t * @returns {ServiceProvider} - service provider instance\r\n\t */\r\n\tcreate_provider(arg_name, arg_service)\r\n\t{\r\n\t\t// TODO: why not this in place of arg_service\r\n\t\treturn new ResourcesSvcProvider(arg_name, arg_service)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a service consumer.\r\n\t * @returns {ServiceConsumer} - service consumer instance\r\n\t */\r\n\tcreate_consumer()\r\n\t{\r\n\t\treturn new ResourcesSvcConsumer(this.get_name() + '_consumer_' + this.get_id(), this)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/resource/resources_service.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 275,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/resource/resources_service.js",
    "static": true,
    "longname": "js/services/resource/resources_service.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/resource/resources_service.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 276,
    "kind": "class",
    "name": "ResourcesService",
    "memberof": "js/services/resource/resources_service.js",
    "static": true,
    "longname": "js/services/resource/resources_service.js~ResourcesService",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/resource/resources_service.js",
    "importStyle": "ResourcesService",
    "description": "Resources service class for resources routes.",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/base_service.js~BaseService"
    ]
  },
  {
    "__docId__": 277,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/resource/resources_service.js~ResourcesService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/resource/resources_service.js~ResourcesService#constructor",
    "access": null,
    "description": "Create a resources service.\n\nCONFIGURATION FORMAT:\n\tservices.json:\n\t\t\"rest_api_resources_query_1\":{\n\t\t\"type\":\"resources_query\",\n\t\t\"routes\":[\n\t\t\t{\n\t\t\t\t\"route\":\"/views\",\n\t\t\t\t\"collection\":\"views\" or \"*\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"route\":\"/views/:name\",\n\t\t\t\t\"collection\":\"views\",\n\t\t\t\t\"item\":\"name\"\n\t\t\t}\n\nURL REQUEST FORMAT:\n\t\tHTTP GET /.../views: get all views list.\n\t\tHTTP GET /.../views/view_a: get view_a definition.\n\nLIST RESPONSE:         HTTP GET response with payload { resources: resources_list }\nONE RESOURCE RESPONSE: HTTP GET response with payload { resource: resource.export_settings() }\nERROR RESPONSE:        HTTP GET response with payload { error: 'Resource not found [' + resource_name + ']' }\n\nWEBSOCKET REQUEST FORMAT:\n\t\tget: { resource:'', collection:'' }\n\t\tlist: { collection:'' }\n\nWEBSOCKET RESPONSE: on success { service:svc_name, operation:'get|list', result:'done', datas:'list of resources or one resource response' }\n                    on error   { service:svc_name, operation:'get|list', result:'error', datas:'error text' }",
    "lineNumber": 59,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_name",
        "description": "service name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_settings",
        "description": "service settings."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 278,
    "kind": "member",
    "name": "is_resources_service",
    "memberof": "js/services/resource/resources_service.js~ResourcesService",
    "static": false,
    "longname": "js/services/resource/resources_service.js~ResourcesService#is_resources_service",
    "access": null,
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 279,
    "kind": "method",
    "name": "create_provider",
    "memberof": "js/services/resource/resources_service.js~ResourcesService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/resource/resources_service.js~ResourcesService#create_provider",
    "access": null,
    "description": "Create a service provider.",
    "lineNumber": 73,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceProvider} - service provider instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "provider name"
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service",
        "description": "service instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ServiceProvider"
      ],
      "spread": false,
      "description": "service provider instance"
    }
  },
  {
    "__docId__": 280,
    "kind": "method",
    "name": "create_consumer",
    "memberof": "js/services/resource/resources_service.js~ResourcesService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/resource/resources_service.js~ResourcesService#create_consumer",
    "access": null,
    "description": "Create a service consumer.",
    "lineNumber": 84,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceConsumer} - service consumer instance"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "ServiceConsumer"
      ],
      "spread": false,
      "description": "service consumer instance"
    }
  },
  {
    "__docId__": 281,
    "kind": "file",
    "name": "js/services/resource/resources_svc_consumer.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// SERVER IMPORTS\r\nimport RoutesServiceConsumer from '../base/routes_svc_consumer'\r\n\r\n\r\nlet context = 'server/services/resources/resources_svc_consumer'\r\n\r\n\r\n\r\n/**\r\n * Service consumer class for resources routes.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class ResourcesSvcConsumer extends RoutesServiceConsumer\r\n{\r\n\t/**\r\n\t * Create a service consumer for resources routes.\r\n\t * @param {string} arg_consumer_name - consumer name\r\n\t * @param {Service} arg_service_instance - service instance\r\n\t * @param {string} arg_context - logging context label\r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_consumer_name, arg_service_instance, arg_context)\r\n\t{\r\n\t\tsuper(arg_consumer_name, arg_service_instance, arg_context ? arg_context : context)\r\n\t\tassert( arg_service_instance.is_resources_service, context + ':constructor:bad resources service instance')\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/resource/resources_svc_consumer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 282,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/resource/resources_svc_consumer.js",
    "static": true,
    "longname": "js/services/resource/resources_svc_consumer.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/resource/resources_svc_consumer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 283,
    "kind": "class",
    "name": "ResourcesSvcConsumer",
    "memberof": "js/services/resource/resources_svc_consumer.js",
    "static": true,
    "longname": "js/services/resource/resources_svc_consumer.js~ResourcesSvcConsumer",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/resource/resources_svc_consumer.js",
    "importStyle": "ResourcesSvcConsumer",
    "description": "Service consumer class for resources routes.",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/routes_svc_consumer.js~RoutesServiceConsumer"
    ]
  },
  {
    "__docId__": 284,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/resource/resources_svc_consumer.js~ResourcesSvcConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/resource/resources_svc_consumer.js~ResourcesSvcConsumer#constructor",
    "access": null,
    "description": "Create a service consumer for resources routes.",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_consumer_name",
        "description": "consumer name"
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 285,
    "kind": "file",
    "name": "js/services/resource/resources_svc_provider.js",
    "content": "// NPM IMPORTS\r\nimport T from 'typr'\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport RenderingBuilder from '../../../common/rendering/rendering_builder'\r\n\r\n// SERVER IMPORTS\r\nimport ExecutableRouteResources from './executable_route_get_resource'\r\nimport ServiceExecProvider from '../base/service_exec_provider'\r\n\r\n\r\nlet context = 'server/services/resources/resources_svc_provider'\r\n\r\n\r\n\r\n/**\r\n * Resources service provider class.\r\n * \r\n * @author Luc BORIES\r\n * \r\n * @license Apache-2.0\r\n */\r\nexport default class ResourcesSvcProvider extends ServiceExecProvider\r\n{\r\n\t/**\r\n\t * Create a resources service provider.\r\n\t * \r\n\t * @param {string} arg_provider_name - consumer name.\r\n\t * @param {Service} arg_service_instance - service instance.\r\n\t * @param {string} arg_context - logging context label.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_provider_name, arg_service_instance, arg_context)\r\n\t{\r\n\t\tsuper(arg_provider_name, arg_service_instance, arg_context ? arg_context : context)\r\n\t\t\r\n\t\tassert(this.service.is_resources_service, context + ':bad resources service')\r\n\t\t\r\n\t\tthis.exec = new ExecutableRouteResources(this)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Process request and returns datas.\r\n\t * \r\n\t * @param {string} arg_method - method name.\r\n\t * @param {array} arg_operands - request operands.\r\n\t * @param {object} arg_credentials - request credentials.\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tprocess(arg_method, arg_operands, arg_credentials)\r\n\t{\r\n\t\tassert( T.isString(arg_method), context + ':process:bad method string')\r\n\t\tassert( T.isArray(arg_operands) && arg_operands.length > 0, context + ':process:bad operands array')\r\n\t\tassert( T.isObject(arg_credentials) && arg_credentials.is_credentials, context + ':process:bad credentials object')\r\n\t\t\r\n\t\tconst credentials = arg_credentials.get_credentials()\r\n\r\n\t\tconst tenant_name = T.isObject(credentials) ? credentials.tenant : undefined\r\n\t\tassert( T.isString(tenant_name) && tenant_name.length > 0, context + ':process:bad credentials tenant name string')\r\n\t\tthis.debug('tenant_name', tenant_name)\r\n\t\t// console.log('tenant_name', tenant_name)\r\n\r\n\t\tconst application_name = T.isObject(credentials) ? credentials.application : undefined\r\n\t\tassert( T.isString(application_name) && application_name.length > 0, context + ':process:bad credentials application name string')\r\n\t\tthis.debug('application_name', application_name)\r\n\t\t// console.log('application_name', application_name)\r\n\t\t\r\n\t\tconsole.log(context + ':process:with method=%s for tenant=%s and app=%s', arg_method, tenant_name, application_name)\r\n\r\n\t\tconst defined_tenant = this.get_runtime().defined_world_topology.tenant(tenant_name)\r\n\t\tassert( T.isObject(defined_tenant) && defined_tenant.is_topology_define_tenant, context + ':process:bad tenant object')\r\n\r\n\t\tconst application = defined_tenant.application(application_name)\r\n\t\tassert( T.isObject(application) && application.is_topology_define_application, context + ':process:bad application object')\r\n\r\n\t\tconst args = arg_operands[0]\r\n\t\tassert( T.isObject(args), context + ':process:bad method first operands object')\r\n\t\tassert( T.isString(args.collection) && args.collection.length > 0, context + ':process:get:bad collection name string')\r\n\t\tconst collection = args.collection \r\n\r\n\t\tswitch(arg_method)\r\n\t\t{\r\n\t\t\tcase 'get': {\r\n\t\t\t\tassert( T.isString(args.resource) && args.resource.length > 0, context + ':process:get:bad resource name string')\r\n\t\t\t\tconst resource_name = args.resource\r\n\t\t\t\tconst type = (collection && collection != '*') ? collection : undefined\r\n\t\t\t\t\r\n\t\t\t\t// DEBUG\r\n\t\t\t\t// console.log('find resource name=%s with type=%s for tenant=%s and app=%s', resource_name, type, tenant_name, application_name)\r\n\r\n\t\t\t\tconst resource_instance = application.find_resource(resource_name, type)\r\n\r\n\t\t\t\tif (!  T.isObject(resource_instance) )\r\n\t\t\t\t{\r\n\t\t\t\t\treturn Promise.reject('not found')\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (collection !== '*' && (resource_instance.topology_type != collection) )\r\n\t\t\t\t{\r\n\t\t\t\t\treturn Promise.reject('found but bad type [' + resource_instance.topology_type + '] for [' + collection + ']')\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn Promise.resolve( this.get_resource_json(resource_instance) )\r\n\t\t\t}\r\n\r\n\t\t\tcase 'list': {\r\n\t\t\t\t\r\n\t\t\t\t// DEBUG\r\n\t\t\t\t// console.log('list resources of collection=%s for tenant=%s and app=%s', collection, tenant_name, application_name)\r\n\t\t\t\t\r\n\t\t\t\treturn Promise.resolve( { resources_names:application.get_resources_names(collection) } )\r\n\t\t\t}\r\n\r\n\t\t\t// case 'render': { // TODO\r\n\t\t\t// \tif (collection != 'views')\r\n\t\t\t// \t{\r\n\t\t\t// \t\treturn Promise.reject('bad collection, render need views collection')\r\n\t\t\t// \t}\r\n\t\t\t// \tassert( T.isString(args.resource) && args.resource.length > 0, context + ':process:get:bad resource name string')\r\n\t\t\t// \tconst resource_name = args.resource\r\n\t\t\t\t\r\n\t\t\t// \t// GET ASSETS CONFIG\r\n\t\t\t// \tconst assets_for_region = this.service.get_assets_services_names('all')\r\n\t\t\t// \tconst renderer = new RenderingBuilder(this.runtime, assets_for_region.style, assets_for_region.script, assets_for_region.image, assets_for_region.html)\r\n\t\t\t// \tconst html = renderer.add(resource).render() // TODO\r\n\t\t\t// \treturn Promise.resolve(html)\r\n\t\t\t// }\r\n\t\t}\r\n\r\n\t\treturn Promise.reject('unknow method [' + arg_method + ']')\r\n\t}\r\n\r\n\r\n\r\n\tget_resource_json(arg_resource)\r\n\t{\r\n\t\t// WRAP INCLUDED FILE\r\n\t\tif ( arg_resource.has_setting('include_file_path_name') )\r\n\t\t{\r\n\t\t\tself.debug('Process resource.include_file_path_name [%s]', arg_resource.include_file_path_name)\r\n\t\t\t\r\n\t\t\tconst file_path = arg_resource.get_setting('include_file_path_name')\r\n\t\t\tif ( T.isString(file_path) )\r\n\t\t\t{\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tconst file_content = self.include_file(self, arg_resource, file_path)\r\n\t\t\t\t\targ_resource.set_setting('include_file_content', file_content)\r\n\t\t\t\t}\r\n\t\t\t\tcatch(e)\r\n\t\t\t\t{\r\n\t\t\t\t\tconst error_msg = 'an error occures when loading file [' + e.toString() + ']'\r\n\t\t\t\t\targ_resource.set_setting('include_file_content', error_msg)\r\n\t\t\t\t\tconsole.error(error_msg)\r\n\t\t\t\t\treturn { error:error_msg }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn arg_resource.export_settings()\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/resource/resources_svc_provider.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 286,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/resource/resources_svc_provider.js",
    "static": true,
    "longname": "js/services/resource/resources_svc_provider.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/resource/resources_svc_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 287,
    "kind": "class",
    "name": "ResourcesSvcProvider",
    "memberof": "js/services/resource/resources_svc_provider.js",
    "static": true,
    "longname": "js/services/resource/resources_svc_provider.js~ResourcesSvcProvider",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/resource/resources_svc_provider.js",
    "importStyle": "ResourcesSvcProvider",
    "description": "Resources service provider class.",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/service_exec_provider.js~ServiceExecProvider"
    ]
  },
  {
    "__docId__": 288,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/resource/resources_svc_provider.js~ResourcesSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/resource/resources_svc_provider.js~ResourcesSvcProvider#constructor",
    "access": null,
    "description": "Create a resources service provider.",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider_name",
        "description": "consumer name."
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 289,
    "kind": "member",
    "name": "exec",
    "memberof": "js/services/resource/resources_svc_provider.js~ResourcesSvcProvider",
    "static": false,
    "longname": "js/services/resource/resources_svc_provider.js~ResourcesSvcProvider#exec",
    "access": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 290,
    "kind": "method",
    "name": "process",
    "memberof": "js/services/resource/resources_svc_provider.js~ResourcesSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/resource/resources_svc_provider.js~ResourcesSvcProvider#process",
    "access": null,
    "description": "Process request and returns datas.",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_method",
        "description": "method name."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_operands",
        "description": "request operands."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "request credentials."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 291,
    "kind": "method",
    "name": "get_resource_json",
    "memberof": "js/services/resource/resources_svc_provider.js~ResourcesSvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/resource/resources_svc_provider.js~ResourcesSvcProvider#get_resource_json",
    "access": null,
    "description": null,
    "lineNumber": 140,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "arg_resource",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 292,
    "kind": "file",
    "name": "js/services/security/security_service.js",
    "content": "// SERVER IMPORTS\r\nimport BaseService from '../base/base_service'\r\nimport SecuritySvcProvider from './security_svc_provider'\r\nimport SecuritySvcConsumer from './security_svc_consumer'\r\n\r\n\r\nlet context = 'server/services/security/security_service'\r\n\r\n\r\n\r\n/**\r\n * Service class for security access:login, logout, renew.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class SecurityService extends BaseService\r\n{\r\n\t/**\r\n\t * Create a Security service.\r\n\t * \r\n\t * @param {string} arg_svc_name - service name.\r\n\t * @param {object} arg_service_settings - service settings.\r\n\t * @param {string} arg_context - logging context label.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_svc_name, arg_service_settings, arg_context)\r\n\t{\r\n\t\tsuper(arg_svc_name, arg_service_settings, arg_context ? arg_context : context)\r\n\t\t\r\n\t\tthis.is_security_service = true\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a Security service provider.\r\n\t * \r\n\t * @param {string} arg_name - provider name.\r\n\t * @param {Service} arg_service - service instance.\r\n\t * \r\n\t * @returns {ServiceProvider} - service provider instance.\r\n\t */\r\n\tcreate_provider(arg_name, arg_service)\r\n\t{\r\n\t\t// TODO: why not this in place of arg_service\r\n\t\treturn new SecuritySvcProvider(arg_name, arg_service)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a Security service consumer.\r\n\t * \r\n\t * @returns {ServiceConsumer} - service consumer instance\r\n\t */\r\n\tcreate_consumer()\r\n\t{\r\n\t\treturn new SecuritySvcConsumer(this.get_name() + '_consumer_' + this.get_id(), this)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/security/security_service.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 293,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/security/security_service.js",
    "static": true,
    "longname": "js/services/security/security_service.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/security/security_service.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 294,
    "kind": "class",
    "name": "SecurityService",
    "memberof": "js/services/security/security_service.js",
    "static": true,
    "longname": "js/services/security/security_service.js~SecurityService",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/security/security_service.js",
    "importStyle": "SecurityService",
    "description": "Service class for security access:login, logout, renew.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/base_service.js~BaseService"
    ]
  },
  {
    "__docId__": 295,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/security/security_service.js~SecurityService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/security/security_service.js~SecurityService#constructor",
    "access": null,
    "description": "Create a Security service.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_name",
        "description": "service name."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_settings",
        "description": "service settings."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 296,
    "kind": "member",
    "name": "is_security_service",
    "memberof": "js/services/security/security_service.js~SecurityService",
    "static": false,
    "longname": "js/services/security/security_service.js~SecurityService#is_security_service",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 297,
    "kind": "method",
    "name": "create_provider",
    "memberof": "js/services/security/security_service.js~SecurityService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/security/security_service.js~SecurityService#create_provider",
    "access": null,
    "description": "Create a Security service provider.",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceProvider} - service provider instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "provider name."
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service",
        "description": "service instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ServiceProvider"
      ],
      "spread": false,
      "description": "service provider instance."
    }
  },
  {
    "__docId__": 298,
    "kind": "method",
    "name": "create_consumer",
    "memberof": "js/services/security/security_service.js~SecurityService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/security/security_service.js~SecurityService#create_consumer",
    "access": null,
    "description": "Create a Security service consumer.",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceConsumer} - service consumer instance"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "ServiceConsumer"
      ],
      "spread": false,
      "description": "service consumer instance"
    }
  },
  {
    "__docId__": 299,
    "kind": "file",
    "name": "js/services/security/security_svc_consumer.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// SERVER IMPORTS\r\nimport ServiceConsumer from '../base/service_consumer'\r\n\r\n\r\nlet context = 'server/services/security/security_svc_consumer'\r\n\r\n\r\n\r\n/**\r\n * Security service consumer class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class SecuritySvcConsumer extends ServiceConsumer\r\n{\r\n\t/**\r\n\t * Create a Security service consumer.\r\n\t * \r\n\t * @param {string} arg_consumer_name - consumer name.\r\n\t * @param {Service} arg_service_instance - service instance.\r\n\t * @param {string} arg_context - logging context label.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_consumer_name, arg_service_instance, arg_context)\r\n\t{\r\n\t\tsuper(arg_consumer_name, arg_service_instance, arg_context ? arg_context : context)\r\n\t\tassert( arg_service_instance.is_security_service, context + ':constructor:bad crud service instance')\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Enhance operands if needed.\r\n\t * \r\n\t * @params {array} arg_operands - Variable list of operands.\r\n\t * \r\n\t * @returns {array} - not used.\r\n\t */\r\n\tprepare_args(arg_operands)\r\n\t{\r\n\t\tthis.enter_group('prepare_args')\r\n\t\t\r\n\t\tthis.leave_group('prepare_args')\r\n\t\treturn arg_operands\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Consume a service on the same host.\r\n\t * @param {object} arg_provider - service provider.\r\n\t * \r\n\t * @return {object} a promise of results.\r\n\t */\r\n\tconsume_local(/*arg_provider*/)\r\n\t{\r\n\t\treturn Promise.resolve(undefined)\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Consume a service on a remote host.\r\n\t * \r\n\t * @param {object} arg_provider - service provider.\r\n\t * @param {array} arg_routes - Routes to request.\r\n\t * \r\n\t * @return {object} a promise of results.\r\n\t */\r\n\tconsume_remote(/*arg_provider, arg_routes*/)\r\n\t{\r\n\t\tthis.enter_group('consume_remote')\r\n\t\t\r\n\t\t\r\n\t\tthis.leave_group('consume_remote')\r\n\t\treturn Promise.resolve(undefined)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/security/security_svc_consumer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 300,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/security/security_svc_consumer.js",
    "static": true,
    "longname": "js/services/security/security_svc_consumer.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/security/security_svc_consumer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 301,
    "kind": "class",
    "name": "SecuritySvcConsumer",
    "memberof": "js/services/security/security_svc_consumer.js",
    "static": true,
    "longname": "js/services/security/security_svc_consumer.js~SecuritySvcConsumer",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/security/security_svc_consumer.js",
    "importStyle": "SecuritySvcConsumer",
    "description": "Security service consumer class.",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/service_consumer.js~ServiceConsumer"
    ]
  },
  {
    "__docId__": 302,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/security/security_svc_consumer.js~SecuritySvcConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/security/security_svc_consumer.js~SecuritySvcConsumer#constructor",
    "access": null,
    "description": "Create a Security service consumer.",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_consumer_name",
        "description": "consumer name."
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 303,
    "kind": "method",
    "name": "prepare_args",
    "memberof": "js/services/security/security_svc_consumer.js~SecuritySvcConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/security/security_svc_consumer.js~SecuritySvcConsumer#prepare_args",
    "access": null,
    "description": "Enhance operands if needed.",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@params",
        "tagValue": "{array} arg_operands - Variable list of operands."
      },
      {
        "tagName": "@returns",
        "tagValue": "{array} - not used."
      }
    ],
    "params": [
      {
        "name": "arg_operands",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "not used."
    }
  },
  {
    "__docId__": 304,
    "kind": "method",
    "name": "consume_local",
    "memberof": "js/services/security/security_svc_consumer.js~SecuritySvcConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/security/security_svc_consumer.js~SecuritySvcConsumer#consume_local",
    "access": null,
    "description": "Consume a service on the same host.",
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider",
        "description": "service provider."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "a promise of results."
    }
  },
  {
    "__docId__": 305,
    "kind": "method",
    "name": "consume_remote",
    "memberof": "js/services/security/security_svc_consumer.js~SecuritySvcConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/security/security_svc_consumer.js~SecuritySvcConsumer#consume_remote",
    "access": null,
    "description": "Consume a service on a remote host.",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider",
        "description": "service provider."
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_routes",
        "description": "Routes to request."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "a promise of results."
    }
  },
  {
    "__docId__": 306,
    "kind": "file",
    "name": "js/services/security/security_svc_provider.js",
    "content": "// NPM IMPORTS\r\nimport T from 'typr'\r\nimport assert from 'assert'\r\n\r\n// SERVER IMPORTS\r\nimport SocketIOServiceProvider from '../base/socketio_service_provider'\r\nimport runtime from '../../base/runtime'\r\n\r\n\r\nlet context = 'server/services/security/security_svc_provider'\r\n\r\n\r\n\r\n/**\r\n * Security service provider class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class SecuritySvcProvider extends SocketIOServiceProvider\r\n{\r\n\t/**\r\n\t * Create a Security service provider.\r\n\t * \r\n\t * @param {string} arg_provider_name - consumer name.\r\n\t * @param {Service} arg_service_instance - service instance.\r\n\t * @param {string} arg_context - logging context label.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_provider_name, arg_service_instance, arg_context)\r\n\t{\r\n\t\tsuper(arg_provider_name, arg_service_instance, arg_context ? arg_context : context)\r\n\t\t\r\n\t\tassert(this.service.is_security_service, context + ':bad Security service')\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Process request and returns datas.\r\n\t * \r\n\t * @param {string} arg_method - method name\r\n\t * @param {array} arg_operands - request operands\r\n\t * @param {Credentials} arg_credentials - request credentials\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tprocess(arg_method, arg_operands, arg_credentials)\r\n\t{\r\n\t\tassert( T.isString(arg_method), context + ':process:bad method string')\r\n\t\tassert( T.isArray(arg_operands), context + ':process:bad operands array')\r\n\t\tassert( T.isObject(arg_credentials) && arg_credentials.is_credentials, context + ':process:bad credentials object')\r\n\t\t\r\n\t\tswitch(arg_method)\r\n\t\t{\r\n\t\t\tcase 'login': {\r\n\t\t\t\t// GET WITHOUT OPERANDS\r\n\t\t\t\tif ( arg_operands.length == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tconst login_result = runtime.security().authenticate(arg_credentials)\r\n\t\t\t\t\treturn Promise.resolve(login_result)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// GET WITH OPERANDS\r\n\t\t\t\t// const first_operand = arg_operands[0]\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase 'signup': {\r\n\t\t\t\t// TODO logout\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase 'logout': {\r\n\t\t\t\t// TODO logout\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase 'change_password': {\r\n\t\t\t\t// TODO logout\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase 'reset_password': {\r\n\t\t\t\t// TODO logout\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase 'renew': {\r\n\t\t\t\t// TODO logout\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.reject('bad data request operation [' + arg_method + ']')\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/security/security_svc_provider.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 307,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/security/security_svc_provider.js",
    "static": true,
    "longname": "js/services/security/security_svc_provider.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/security/security_svc_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 308,
    "kind": "class",
    "name": "SecuritySvcProvider",
    "memberof": "js/services/security/security_svc_provider.js",
    "static": true,
    "longname": "js/services/security/security_svc_provider.js~SecuritySvcProvider",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/security/security_svc_provider.js",
    "importStyle": "SecuritySvcProvider",
    "description": "Security service provider class.",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/socketio_service_provider.js~SocketIOServiceProvider"
    ]
  },
  {
    "__docId__": 309,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/security/security_svc_provider.js~SecuritySvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/security/security_svc_provider.js~SecuritySvcProvider#constructor",
    "access": null,
    "description": "Create a Security service provider.",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider_name",
        "description": "consumer name."
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 310,
    "kind": "method",
    "name": "process",
    "memberof": "js/services/security/security_svc_provider.js~SecuritySvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/security/security_svc_provider.js~SecuritySvcProvider#process",
    "access": null,
    "description": "Process request and returns datas.",
    "lineNumber": 48,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_method",
        "description": "method name"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_operands",
        "description": "request operands"
      },
      {
        "nullable": null,
        "types": [
          "Credentials"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "request credentials"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 311,
    "kind": "file",
    "name": "js/services/topology/topology_svc_provider.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// COMMON IMPORTS\r\nimport T               from 'devapt-core-common/dist/js/utils/types'\r\nimport ServiceProvider from 'devapt-core-common/dist/js/services/service_provider'\r\nimport ServiceResponse from 'devapt-core-common/dist/js/services/service_response'\r\n\r\n// SERVICES IMPORTS\r\n\r\n\r\nconst context = 'services/topology/topology_svc_provider'\r\n\r\nconst GET_TENANTS_NAMES ='devapt-deployed-tenants-names'\r\nconst GET_TENANTS_INFOS ='devapt-deployed-tenants-infos'\r\nconst GET_TENANT_INFOS = 'devapt-deployed-tenant-infos'\r\n\r\nconst GET_TENANT_APPLICATIONS_NAMES = 'devapt-deployed-applications-names'\r\nconst GET_TENANT_APPLICATIONS_INFOS = 'devapt-deployed-applications-infos'\r\nconst GET_TENANT_APPLICATION_INFOS = 'devapt-deployed-application-infos'\r\n\r\nconst GET_TENANT_SERVICES_NAMES = 'devapt-deployed-services-names'\r\nconst GET_TENANT_SERVICES_INFOS = 'devapt-deployed-services-infos'\r\nconst GET_TENANT_SERVICE_INFOS = 'devapt-deployed-service-infos'\r\n\r\nconst GET_NODES_NAMES = 'devapt-deployed-nodes'\r\n\r\n\r\n\r\n/**\r\n * Topology service provider class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class TopologySvcProvider extends ServiceProvider\r\n{\r\n\t/**\r\n\t * Create a topology service provider.\r\n\t * \r\n\t * @param {string} arg_provider_name - consumer name.\r\n\t * @param {Service} arg_service_instance - service instance.\r\n\t * @param {string} arg_context - logging context label.\r\n\t * \r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_provider_name, arg_service_instance, arg_context=context)\r\n\t{\r\n\t\tsuper(arg_provider_name, arg_service_instance, arg_context)\r\n\r\n\t\tthis.is_topology_svc_provider = true\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get provider operations names.\r\n\t * \r\n\t * @returns {array} - operations names.\r\n\t */\r\n\tget_operations_names()\r\n\t{\r\n\t\treturn [\r\n\t\t\tGET_TENANTS_NAMES, GET_TENANTS_INFOS, GET_TENANT_INFOS,\r\n\t\t\tGET_TENANT_APPLICATIONS_NAMES, GET_TENANT_APPLICATIONS_INFOS, GET_TENANT_APPLICATION_INFOS,\r\n\t\t\tGET_TENANT_SERVICES_NAMES, GET_TENANT_SERVICES_INFOS, GET_TENANT_SERVICE_INFOS,\r\n\t\t\tGET_NODES_NAMES\r\n\t\t]\r\n\t\t//.concat(super.get_operations_names())\r\n\t}\r\n\r\n\r\n\t\r\n\t/**\r\n\t * Produce service datas on request.\r\n\t * \r\n\t * @param {ServiceRequest} arg_request - service request instance.\r\n\t * \r\n\t * @returns {Promise} - promise of ServiceResponse instance.\r\n\t */\r\n\tproduce(arg_request)\r\n\t{\r\n\t\tthis.enter_group('produce')\r\n\r\n\t\tif ( ! T.isObject(arg_request) || ! arg_request.is_service_request)\r\n\t\t{\r\n\t\t\tthis.leave_group('produce:error:bad request object')\r\n\t\t\treturn Promise.resolve({error:'bad request object'})\r\n\t\t}\r\n\r\n\t\tconst operation = arg_request.get_operation()\r\n\t\tconsole.log(context + ':produce:request for service=' + this.service.get_name() + ':operation=' + operation, 'operands=', arg_request.get_operands())\r\n\r\n\t\tconst deployed_topology = this.get_runtime().get_deployed_topology()\r\n\t\tconst operand_0 = arg_request.get_operand(0)\r\n\t\tconst operand_1 = arg_request.get_operand(1)\r\n\t\tconst tenant_name = T.isNotEmptyString(operand_0) ? operand_0 : undefined\r\n\t\tconst item_name = T.isNotEmptyString(operand_1) ? operand_1 : undefined\r\n\r\n\t\tconsole.log(context + ':produce:request for service=[%s] operation=[%s] tenant=[%s] item=[%s]', this.service.get_name(), operation, tenant_name, item_name)\r\n\t\tconst response = new ServiceResponse(arg_request)\r\n\t\tlet results = []\r\n\t\tswitch(operation){\r\n\t\t\tcase GET_TENANTS_NAMES:\r\n\t\t\t\tresults = deployed_topology.get_deployed_tenants_names()\r\n\t\t\t\tbreak\r\n\t\t\tcase GET_TENANTS_INFOS:\r\n\t\t\t\tresults = deployed_topology.get_deployed_tenants_infos(true)\r\n\t\t\t\tbreak\r\n\t\t\tcase GET_TENANT_INFOS:\r\n\t\t\t\tresults = tenant_name ? deployed_topology.get_deployed_tenant_infos(tenant_name, true) : []\r\n\t\t\t\tbreak\r\n\t\t\t\r\n\t\t\tcase GET_TENANT_APPLICATIONS_NAMES:\r\n\t\t\t\tresults = tenant_name ? deployed_topology.get_deployed_tenant_applications_names(tenant_name) : []\r\n\t\t\t\tbreak\r\n\t\t\tcase GET_TENANT_APPLICATIONS_INFOS:\r\n\t\t\t\tresults = tenant_name ? deployed_topology.get_deployed_tenant_applications_infos(tenant_name, true) : []\r\n\t\t\t\tbreak\r\n\t\t\tcase GET_TENANT_APPLICATION_INFOS:\r\n\t\t\t\tresults = tenant_name && item_name ? deployed_topology.get_deployed_tenant_application_infos(tenant_name, item_name, true) : []\r\n\t\t\t\tbreak\r\n\t\t\t\r\n\t\t\tcase GET_TENANT_SERVICES_NAMES:\r\n\t\t\t\tresults = tenant_name ? deployed_topology.get_deployed_tenant_services_names(tenant_name) : []\r\n\t\t\t\tbreak\r\n\t\t\tcase GET_TENANT_SERVICES_INFOS:\r\n\t\t\t\tresults = tenant_name ? deployed_topology.get_deployed_tenant_services_infos(tenant_name, true) : []\r\n\t\t\t\tbreak\r\n\t\t\tcase GET_TENANT_SERVICE_INFOS:\r\n\t\t\t\tresults = tenant_name && item_name ? deployed_topology.get_deployed_tenant_service_infos(tenant_name, item_name, true) : []\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase GET_NODES_NAMES:\r\n\t\t\t\tresults = deployed_topology.get_deployed_nodes_names()\r\n\t\t\t\tbreak\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tresponse.set_has_error(true)\r\n\t\t\t\tresponse.set_error('produce:error:bad operation [' + operation + ']')\r\n\t\t\t\t\r\n\t\t\t\tthis.leave_group('produce:error:bad operation [' + operation + ']')\r\n\t\t\t\treturn Promise.resolve(response)\r\n\t\t}\r\n\t\tif (! results)\r\n\t\t{\r\n\t\t\tresponse.set_has_error(true)\r\n\t\t\tresponse.set_error('produce:error:operation failure [' + operation + '], check tenant_name=' + tenant_name + ' or item name=' + item_name)\r\n\r\n\t\t\tthis.leave_group('produce:error:operation failure [' + operation + '], check tenant_name=' + tenant_name + ' or item name=' + item_name)\r\n\t\t\treturn Promise.resolve(response)\r\n\r\n\t\t\t// this.leave_group('produce:super.')\r\n\t\t\t// return super.produce(arg_request)\r\n\t\t}\r\n\t\tresponse.set_results(results)\r\n\r\n\t\t// console.log(context + ':produce:reply for service=' + this.service.get_name() + ':operation=' + operation, response.get_properties_values())\r\n\t\t\r\n\t\tthis.leave_group('produce')\r\n\t\treturn Promise.resolve(response)\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Get deployed nodes.\r\n\t */\r\n\tget_deployed_nodes_topology()\r\n\t{\r\n\t\tlet topology = { nodes:{} }\r\n\r\n\t\t// LOOP ON DEFINED NODES\r\n\t\tconst nodes = this.get_runtime().get_defined_topology().nodes().get_latest_items()\r\n\t\tassert( T.isArray(nodes), context + ':get_deployed_nodes_topology:bad runtime.nodes array')\r\n\t\tnodes.forEach(\r\n\t\t\t(node) => {\r\n\t\t\t\ttopology.nodes[node.get_name()] = this.get_deployed_node_topology(node)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\treturn topology.nodes\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get deployed topology for a node.\r\n\t * \r\n\t * @param {TopologyDeployedNode} arg_deployed_node - deployed node.\r\n\t * \r\n\t * @returns {object} - deployed node topology plain object.\r\n\t */\r\n\tget_deployed_node_topology(arg_deployed_node)\r\n\t{\r\n\t\tconst node_topology = {\r\n\t\t\tname:arg_deployed_node.get_name(),\r\n\t\t\tservers:{}\r\n\t\t}\r\n\r\n\t\t// LOOP ON NODE SERVERS\r\n\t\tconst node_servers = arg_deployed_node.servers().get_latest_items()\r\n\t\tassert( T.isArray(node_servers), context + ':get_deployed_node_topology:bad node.servers array')\r\n\t\tnode_servers.forEach(\r\n\t\t\t(server) => {\r\n\t\t\t\tnode_topology.servers[server.get_name()] = this.get_deployed_server(server)\r\n\t\t\t}\r\n\t\t)\r\n\t\t\r\n\t\treturn node_topology\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get deployed topology for a server.\r\n\t * \r\n\t * @param {TopologyDeployedServer} arg_deployed_server - deployed server.\r\n\t * \r\n\t * @returns {object} - deployed server topology plain object.\r\n\t */\r\n\tget_deployed_server_topology(arg_deployed_server)\r\n\t{\r\n\t\tconst server_topology = {\r\n\t\t\thost:arg_deployed_server.server_host,\r\n\t\t\tport:arg_deployed_server.server_port,\r\n\t\t\tprotocole:arg_deployed_server.server_protocole,\r\n\t\t\ttype:arg_deployed_server.server_type,\r\n\t\t\tmiddlewares:arg_deployed_server.server_middlewares,\r\n\t\t\tuse_socketio:arg_deployed_server.server_use_socketio\r\n\t\t}\r\n\t\t\r\n\t\treturn server_topology\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get deployed tenants topology.\r\n\t * \r\n\t * @returns {object} - deployed tenants topology plain object.\r\n\t */\r\n\tget_deployed_tenants_topology()\r\n\t{\r\n\t\tconst tenants_topology = {\r\n\t\t}\r\n\t\t\r\n\t\treturn tenants_topology\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get deployed tenants topology.\r\n\t * \r\n\t * @returns {object} - deployed tenant topology plain object.\r\n\t */\r\n\tget_deployed_tenant_topology(arg_tenant_name)\r\n\t{\r\n\t\tconst tenant_topology = {\r\n\t\t}\r\n\t\t\r\n\t\treturn tenant_topology\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Get deployed tenants topology.\r\n\t * \r\n\t * @returns {object} - deployed tenant topology plain object.\r\n\t */\r\n\tget_deployed_application_topology(arg_tenant_name)\r\n\t{\r\n\t\tconst tenant_topology = {\r\n\t\t}\r\n\t\t\r\n\t\treturn tenant_topology\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/topology/topology_svc_provider.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 312,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/topology/topology_svc_provider.js",
    "static": true,
    "longname": "js/services/topology/topology_svc_provider.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/topology/topology_svc_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 313,
    "kind": "variable",
    "name": "GET_TENANTS_NAMES",
    "memberof": "js/services/topology/topology_svc_provider.js",
    "static": true,
    "longname": "js/services/topology/topology_svc_provider.js~GET_TENANTS_NAMES",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/topology/topology_svc_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 314,
    "kind": "variable",
    "name": "GET_TENANTS_INFOS",
    "memberof": "js/services/topology/topology_svc_provider.js",
    "static": true,
    "longname": "js/services/topology/topology_svc_provider.js~GET_TENANTS_INFOS",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/topology/topology_svc_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 315,
    "kind": "variable",
    "name": "GET_TENANT_INFOS",
    "memberof": "js/services/topology/topology_svc_provider.js",
    "static": true,
    "longname": "js/services/topology/topology_svc_provider.js~GET_TENANT_INFOS",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/topology/topology_svc_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 316,
    "kind": "variable",
    "name": "GET_TENANT_APPLICATIONS_NAMES",
    "memberof": "js/services/topology/topology_svc_provider.js",
    "static": true,
    "longname": "js/services/topology/topology_svc_provider.js~GET_TENANT_APPLICATIONS_NAMES",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/topology/topology_svc_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 317,
    "kind": "variable",
    "name": "GET_TENANT_APPLICATIONS_INFOS",
    "memberof": "js/services/topology/topology_svc_provider.js",
    "static": true,
    "longname": "js/services/topology/topology_svc_provider.js~GET_TENANT_APPLICATIONS_INFOS",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/topology/topology_svc_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 318,
    "kind": "variable",
    "name": "GET_TENANT_APPLICATION_INFOS",
    "memberof": "js/services/topology/topology_svc_provider.js",
    "static": true,
    "longname": "js/services/topology/topology_svc_provider.js~GET_TENANT_APPLICATION_INFOS",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/topology/topology_svc_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 319,
    "kind": "variable",
    "name": "GET_TENANT_SERVICES_NAMES",
    "memberof": "js/services/topology/topology_svc_provider.js",
    "static": true,
    "longname": "js/services/topology/topology_svc_provider.js~GET_TENANT_SERVICES_NAMES",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/topology/topology_svc_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 320,
    "kind": "variable",
    "name": "GET_TENANT_SERVICES_INFOS",
    "memberof": "js/services/topology/topology_svc_provider.js",
    "static": true,
    "longname": "js/services/topology/topology_svc_provider.js~GET_TENANT_SERVICES_INFOS",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/topology/topology_svc_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 321,
    "kind": "variable",
    "name": "GET_TENANT_SERVICE_INFOS",
    "memberof": "js/services/topology/topology_svc_provider.js",
    "static": true,
    "longname": "js/services/topology/topology_svc_provider.js~GET_TENANT_SERVICE_INFOS",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/topology/topology_svc_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 322,
    "kind": "variable",
    "name": "GET_NODES_NAMES",
    "memberof": "js/services/topology/topology_svc_provider.js",
    "static": true,
    "longname": "js/services/topology/topology_svc_provider.js~GET_NODES_NAMES",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/topology/topology_svc_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 323,
    "kind": "class",
    "name": "TopologySvcProvider",
    "memberof": "js/services/topology/topology_svc_provider.js",
    "static": true,
    "longname": "js/services/topology/topology_svc_provider.js~TopologySvcProvider",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/topology/topology_svc_provider.js",
    "importStyle": "TopologySvcProvider",
    "description": "Topology service provider class.",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "devapt-core-common/dist/js/services/service_provider~ServiceProvider"
    ]
  },
  {
    "__docId__": 324,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/topology/topology_svc_provider.js~TopologySvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/topology/topology_svc_provider.js~TopologySvcProvider#constructor",
    "access": null,
    "description": "Create a topology service provider.",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider_name",
        "description": "consumer name."
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 325,
    "kind": "member",
    "name": "is_topology_svc_provider",
    "memberof": "js/services/topology/topology_svc_provider.js~TopologySvcProvider",
    "static": false,
    "longname": "js/services/topology/topology_svc_provider.js~TopologySvcProvider#is_topology_svc_provider",
    "access": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 326,
    "kind": "method",
    "name": "get_operations_names",
    "memberof": "js/services/topology/topology_svc_provider.js~TopologySvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/topology/topology_svc_provider.js~TopologySvcProvider#get_operations_names",
    "access": null,
    "description": "Get provider operations names.",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} - operations names."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "operations names."
    }
  },
  {
    "__docId__": 327,
    "kind": "method",
    "name": "produce",
    "memberof": "js/services/topology/topology_svc_provider.js~TopologySvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/topology/topology_svc_provider.js~TopologySvcProvider#produce",
    "access": null,
    "description": "Produce service datas on request.",
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - promise of ServiceResponse instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ServiceRequest"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_request",
        "description": "service request instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "promise of ServiceResponse instance."
    }
  },
  {
    "__docId__": 328,
    "kind": "method",
    "name": "get_deployed_nodes_topology",
    "memberof": "js/services/topology/topology_svc_provider.js~TopologySvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/topology/topology_svc_provider.js~TopologySvcProvider#get_deployed_nodes_topology",
    "access": null,
    "description": "Get deployed nodes.",
    "lineNumber": 167,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 329,
    "kind": "method",
    "name": "get_deployed_node_topology",
    "memberof": "js/services/topology/topology_svc_provider.js~TopologySvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/topology/topology_svc_provider.js~TopologySvcProvider#get_deployed_node_topology",
    "access": null,
    "description": "Get deployed topology for a node.",
    "lineNumber": 192,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - deployed node topology plain object."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "TopologyDeployedNode"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_deployed_node",
        "description": "deployed node."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "deployed node topology plain object."
    }
  },
  {
    "__docId__": 330,
    "kind": "method",
    "name": "get_deployed_server_topology",
    "memberof": "js/services/topology/topology_svc_provider.js~TopologySvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/topology/topology_svc_provider.js~TopologySvcProvider#get_deployed_server_topology",
    "access": null,
    "description": "Get deployed topology for a server.",
    "lineNumber": 220,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - deployed server topology plain object."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "TopologyDeployedServer"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_deployed_server",
        "description": "deployed server."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "deployed server topology plain object."
    }
  },
  {
    "__docId__": 331,
    "kind": "method",
    "name": "get_deployed_tenants_topology",
    "memberof": "js/services/topology/topology_svc_provider.js~TopologySvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/topology/topology_svc_provider.js~TopologySvcProvider#get_deployed_tenants_topology",
    "access": null,
    "description": "Get deployed tenants topology.",
    "lineNumber": 241,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - deployed tenants topology plain object."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "deployed tenants topology plain object."
    }
  },
  {
    "__docId__": 332,
    "kind": "method",
    "name": "get_deployed_tenant_topology",
    "memberof": "js/services/topology/topology_svc_provider.js~TopologySvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/topology/topology_svc_provider.js~TopologySvcProvider#get_deployed_tenant_topology",
    "access": null,
    "description": "Get deployed tenants topology.",
    "lineNumber": 256,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - deployed tenant topology plain object."
      }
    ],
    "params": [
      {
        "name": "arg_tenant_name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "deployed tenant topology plain object."
    }
  },
  {
    "__docId__": 333,
    "kind": "method",
    "name": "get_deployed_application_topology",
    "memberof": "js/services/topology/topology_svc_provider.js~TopologySvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/topology/topology_svc_provider.js~TopologySvcProvider#get_deployed_application_topology",
    "access": null,
    "description": "Get deployed tenants topology.",
    "lineNumber": 271,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - deployed tenant topology plain object."
      }
    ],
    "params": [
      {
        "name": "arg_tenant_name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "deployed tenant topology plain object."
    }
  },
  {
    "__docId__": 334,
    "kind": "file",
    "name": "js/services/topology/unused_topology_service.js",
    "content": "// SERVER IMPORTS\r\nimport BaseService from '../base/base_service'\r\nimport TopologySvcProvider from './topology_svc_provider'\r\nimport TopologySvcConsumer from './topology_svc_consumer'\r\n\r\n\r\nlet context = 'server/services/topology/topology_service'\r\n\r\n\r\n\r\n/**\r\n * Service class for topology datas.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class TopologyService extends BaseService\r\n{\r\n\t/**\r\n\t * Create a service.\r\n\t * @param {string} arg_svc_name - service name\r\n\t * @param {object} arg_service_settings - service settings\r\n\t * @param {string} arg_context - logging context label\r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_svc_name, arg_service_settings, arg_context)\r\n\t{\r\n\t\tsuper(arg_svc_name, arg_service_settings, arg_context ? arg_context : context)\r\n\t\t\r\n\t\tthis.is_topology_service = true\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a service provider.\r\n\t * @param {string} arg_name - provider name\r\n\t * @param {Service} arg_service - service instance\r\n\t * @returns {ServiceProvider} - service provider instance\r\n\t */\r\n\tcreate_provider(arg_name, arg_service)\r\n\t{\r\n\t\t// TODO: why not this in place of arg_service\r\n\t\treturn new TopologySvcProvider(arg_name, arg_service)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a service consumer.\r\n\t * @returns {ServiceConsumer} - service consumer instance\r\n\t */\r\n\tcreate_consumer()\r\n\t{\r\n\t\treturn new TopologySvcConsumer(this.get_name() + '_consumer_' + this.get_id(), this)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/topology/unused_topology_service.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 335,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/topology/unused_topology_service.js",
    "static": true,
    "longname": "js/services/topology/unused_topology_service.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/topology/unused_topology_service.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 336,
    "kind": "class",
    "name": "TopologyService",
    "memberof": "js/services/topology/unused_topology_service.js",
    "static": true,
    "longname": "js/services/topology/unused_topology_service.js~TopologyService",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/topology/unused_topology_service.js",
    "importStyle": "TopologyService",
    "description": "Service class for topology datas.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/base_service.js~BaseService"
    ]
  },
  {
    "__docId__": 337,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/topology/unused_topology_service.js~TopologyService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/topology/unused_topology_service.js~TopologyService#constructor",
    "access": null,
    "description": "Create a service.",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_svc_name",
        "description": "service name"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_settings",
        "description": "service settings"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 338,
    "kind": "member",
    "name": "is_topology_service",
    "memberof": "js/services/topology/unused_topology_service.js~TopologyService",
    "static": false,
    "longname": "js/services/topology/unused_topology_service.js~TopologyService#is_topology_service",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 339,
    "kind": "method",
    "name": "create_provider",
    "memberof": "js/services/topology/unused_topology_service.js~TopologyService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/topology/unused_topology_service.js~TopologyService#create_provider",
    "access": null,
    "description": "Create a service provider.",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceProvider} - service provider instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_name",
        "description": "provider name"
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service",
        "description": "service instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ServiceProvider"
      ],
      "spread": false,
      "description": "service provider instance"
    }
  },
  {
    "__docId__": 340,
    "kind": "method",
    "name": "create_consumer",
    "memberof": "js/services/topology/unused_topology_service.js~TopologyService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/topology/unused_topology_service.js~TopologyService#create_consumer",
    "access": null,
    "description": "Create a service consumer.",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ServiceConsumer} - service consumer instance"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "ServiceConsumer"
      ],
      "spread": false,
      "description": "service consumer instance"
    }
  },
  {
    "__docId__": 341,
    "kind": "file",
    "name": "js/services/topology/unused_topology_svc_consumer.js",
    "content": "// NPM IMPORTS\r\nimport assert from 'assert'\r\n\r\n// SERVER IMPORTS\r\nimport ServiceConsumer from '../base/service_consumer'\r\n\r\n\r\nlet context = 'server/services/topology/topology_svc_consumer'\r\n\r\n\r\n\r\n/**\r\n * Service consumer class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class TopologySvcHostConsumer extends ServiceConsumer\r\n{\r\n\t\r\n\t/**\r\n\t * Create a service consumer.\r\n\t * @param {string} arg_consumer_name - consumer name\r\n\t * @param {Service} arg_service_instance - service instance\r\n\t * @param {string} arg_context - logging context label\r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_consumer_name, arg_service_instance, arg_context)\r\n\t{\r\n\t\tsuper(arg_consumer_name, arg_service_instance, arg_context ? arg_context : context)\r\n\t\tassert( arg_service_instance.is_topology_service, context + ':constructor:bad service instance')\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Enhance operands if needed\r\n\t * @params {array} arg_operands - Variable list of operands\r\n\t * @returns {array} - not used\r\n\t */\r\n\tprepare_args(arg_operands)\r\n\t{\r\n\t\tthis.enter_group('prepare_args')\r\n\t\t\r\n\t\tthis.leave_group('prepare_args')\r\n\t\treturn arg_operands\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Consume a service on the same host.\r\n\t * @param {object} arg_provider - service provider\r\n\t * @return {object} a promise of results\r\n\t */\r\n\tconsume_local(/*arg_provider*/)\r\n\t{\r\n\t\treturn Promise.resolve(undefined)\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Consume a service on a remote host\r\n\t * @param {object} arg_provider - service provider\r\n\t * @param {array} arg_routes - Routes to request\r\n\t * @return {object} a promise of results\r\n\t */\r\n\tconsume_remote(/*arg_provider, arg_routes*/)\r\n\t{\r\n\t\tthis.enter_group('consume_remote')\r\n\t\t\r\n\t\t\r\n\t\tthis.leave_group('consume_remote')\r\n\t\treturn Promise.resolve(undefined)\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/topology/unused_topology_svc_consumer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 342,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/topology/unused_topology_svc_consumer.js",
    "static": true,
    "longname": "js/services/topology/unused_topology_svc_consumer.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/topology/unused_topology_svc_consumer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 343,
    "kind": "class",
    "name": "TopologySvcHostConsumer",
    "memberof": "js/services/topology/unused_topology_svc_consumer.js",
    "static": true,
    "longname": "js/services/topology/unused_topology_svc_consumer.js~TopologySvcHostConsumer",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/topology/unused_topology_svc_consumer.js",
    "importStyle": "TopologySvcHostConsumer",
    "description": "Service consumer class.",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/service_consumer.js~ServiceConsumer"
    ]
  },
  {
    "__docId__": 344,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/topology/unused_topology_svc_consumer.js~TopologySvcHostConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/topology/unused_topology_svc_consumer.js~TopologySvcHostConsumer#constructor",
    "access": null,
    "description": "Create a service consumer.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_consumer_name",
        "description": "consumer name"
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 345,
    "kind": "method",
    "name": "prepare_args",
    "memberof": "js/services/topology/unused_topology_svc_consumer.js~TopologySvcHostConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/topology/unused_topology_svc_consumer.js~TopologySvcHostConsumer#prepare_args",
    "access": null,
    "description": "Enhance operands if needed",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@params",
        "tagValue": "{array} arg_operands - Variable list of operands"
      },
      {
        "tagName": "@returns",
        "tagValue": "{array} - not used"
      }
    ],
    "params": [
      {
        "name": "arg_operands",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "not used"
    }
  },
  {
    "__docId__": 346,
    "kind": "method",
    "name": "consume_local",
    "memberof": "js/services/topology/unused_topology_svc_consumer.js~TopologySvcHostConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/topology/unused_topology_svc_consumer.js~TopologySvcHostConsumer#consume_local",
    "access": null,
    "description": "Consume a service on the same host.",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider",
        "description": "service provider"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "a promise of results"
    }
  },
  {
    "__docId__": 347,
    "kind": "method",
    "name": "consume_remote",
    "memberof": "js/services/topology/unused_topology_svc_consumer.js~TopologySvcHostConsumer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/topology/unused_topology_svc_consumer.js~TopologySvcHostConsumer#consume_remote",
    "access": null,
    "description": "Consume a service on a remote host",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider",
        "description": "service provider"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_routes",
        "description": "Routes to request"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "a promise of results"
    }
  },
  {
    "__docId__": 348,
    "kind": "file",
    "name": "js/services/topology/unused_topology_svc_provider.js",
    "content": "// NPM IMPORTS\r\nimport T from 'typr'\r\nimport assert from 'assert'\r\n\r\n// SERVER IMPORTS\r\nimport SocketIOServiceProvider from '../base/socketio_service_provider'\r\nimport runtime from '../../base/runtime'\r\n\r\n\r\nlet context = 'server/services/topology/topology_svc_provider'\r\n\r\n\r\n\r\n/**\r\n * Topology service provider class.\r\n * @author Luc BORIES\r\n * @license Apache-2.0\r\n */\r\nexport default class TopologySvcProvider extends SocketIOServiceProvider\r\n{\r\n\t/**\r\n\t * Create a Topology service provider.\r\n\t * @param {string} arg_provider_name - consumer name\r\n\t * @param {Service} arg_service_instance - service instance\r\n\t * @param {string} arg_context - logging context label\r\n\t * @returns {nothing}\r\n\t */\r\n\tconstructor(arg_provider_name, arg_service_instance, arg_context)\r\n\t{\r\n\t\tsuper(arg_provider_name, arg_service_instance, arg_context ? arg_context : context)\r\n\t\t\r\n\t\tassert(this.service.is_topology_service, context + ':bad topology service')\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Process request and returns datas.\r\n\t * Query filter: {\r\n\t * \t mode:'logical' or 'physical'\r\n\t *   root_type:'*' or 'node' or 'server' or 'application'\r\n\t *   root_name:node/server/application name\r\n\t * }\r\n\t * \r\n\t * @param {string} arg_method - method name\r\n\t * @param {array} arg_operands - request operands\r\n\t * @param {Credentials} arg_credentials - request credentials\r\n\t * \r\n\t * @returns {Promise}\r\n\t */\r\n\tprocess(arg_method, arg_operands, arg_credentials)\r\n\t{\r\n\t\tassert( T.isString(arg_method), context + ':process:bad method string')\r\n\t\tassert( T.isArray(arg_operands), context + ':process:bad operands array')\r\n\t\tassert( T.isObject(arg_credentials) && arg_credentials.is_credentials, context + ':process:bad credentials object')\r\n\t\t\r\n\t\t// const metrics_server = runtime.node.metrics_server\r\n\t\t\r\n\t\tswitch(arg_method)\r\n\t\t{\r\n\t\t\tcase 'get': {\r\n\t\t\t\t// GET WITHOUT OPERANDS\r\n\t\t\t\tif ( arg_operands.length == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\t// const nodejs_state_values = metrics_server.get_nodejs_metrics_state_values()\r\n\t\t\t\t\t// console.log(nodejs_state_values, context + ':produce:get:no opds:nodejs_state_values')\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn Promise.reject('bad query mode')\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// GET WITH OPERANDS\r\n\t\t\t\tconst query = arg_operands[0]\r\n\t\t\t\tif ( ! T.isObject(query) || ! T.isString(query.mode) )\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.log(query, context + ':produce:query')\r\n\t\t\t\t\treturn Promise.reject(context + ':produce:bad query object')\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// PHYSICAL TOPOLOGY\r\n\t\t\t\tif (query.mode == 'physical')\r\n\t\t\t\t{\r\n\t\t\t\t\tlet topology = { nodes:{} }\r\n\r\n\t\t\t\t\t// LOOP ON DEFINED NODES\r\n\t\t\t\t\tconst nodes = runtime.get_defined_topology().nodes().get_latest_items()\r\n\t\t\t\t\tassert( T.isArray(nodes), context + ':process:bad runtime.nodes array')\r\n\t\t\t\t\tnodes.forEach(\r\n\t\t\t\t\t\t(node) => {\r\n\t\t\t\t\t\t\tlet node_topology = { servers:{} }\r\n\r\n\t\t\t\t\t\t\t// LOOP ON NODE servers\r\n\t\t\t\t\t\t\tconst node_servers = node.servers().get_latest_items()\r\n\t\t\t\t\t\t\tassert( T.isArray(node_servers), context + ':process:bad node.servers array')\r\n\t\t\t\t\t\t\tnode_servers.forEach(\r\n\t\t\t\t\t\t\t\t(server) => {\r\n\t\t\t\t\t\t\t\t\tnode_topology.servers[server.get_name()] = {\r\n\t\t\t\t\t\t\t\t\t\thost:server.server_host,\r\n\t\t\t\t\t\t\t\t\t\tport:server.server_port,\r\n\t\t\t\t\t\t\t\t\t\tprotocole:server.server_protocole,\r\n\t\t\t\t\t\t\t\t\t\ttype:server.server_type,\r\n\t\t\t\t\t\t\t\t\t\tmiddlewares:server.server_middlewares,\r\n\t\t\t\t\t\t\t\t\t\tuse_socketio:server.server_use_socketio\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\ttopology.nodes[node.get_name()] = node_topology\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn Promise.resolve(topology)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// LOGICAL TOPOLOGY\r\n\t\t\t\tif (query.mode == 'logical')\r\n\t\t\t\t{\r\n\t\t\t\t\tlet topology = { applications:{} }\r\n\t\t\t\t\t\r\n\t\t\t\t\t// LOOP ON TENANTS\r\n\t\t\t\t\tconst defined_tenants = runtime.get_defined_topology().tenants().get_latest_items().get_latest_items()\r\n\t\t\t\t\tdefined_tenants.forEach(\r\n\t\t\t\t\t\t(defined_tenant)=>{\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// LOOP ON TENANT APPLICATIONS\r\n\t\t\t\t\t\t\tconst applications = defined_tenant.applications().get_latest_items()\r\n\t\t\t\t\t\t\tapplications.forEach(\r\n\t\t\t\t\t\t\t\t(defined_app) => {\r\n\r\n\t\t\t\t\t\t\t\t\tlet app_topology = { provided_services:{}, consumed_services:{} }\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// LOOP ON APPLICATION PROVIDED SERVICES\r\n\t\t\t\t\t\t\t\t\tconst app_provided_services = defined_app.provided_services().get_latest_items()\r\n\t\t\t\t\t\t\t\t\tapp_provided_services.forEach(\r\n\t\t\t\t\t\t\t\t\t\t(svc) => {\r\n\t\t\t\t\t\t\t\t\t\t\tapp_topology.provided_services[svc.get_name()] = {}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tapp.consumed_services.forEach(\r\n\t\t\t\t\t\t\t\t\t\t(svc) => {\r\n\t\t\t\t\t\t\t\t\t\t\tapp_topology.consumed_services[svc.get_name()] = {}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\ttopology.applications[app.get_name()] = app_topology\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn Promise.resolve(topology)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// LOGICAL TOPOLOGY\r\n\t\t\t\tif (query.mode == 'registry')\r\n\t\t\t\t{\r\n\t\t\t\t\tconst json = runtime.get_registry().get_state()\r\n\t\t\t\t\tdelete json.security\r\n\t\t\t\t\treturn Promise.resolve(json)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// LOGICAL TOPOLOGY\r\n\t\t\t\tif (query.mode == 'runtime')\r\n\t\t\t\t{\r\n\t\t\t\t\tconst json = runtime.get_defined_topology().get_topology_info(true)\r\n\t\t\t\t\t// console.log(context + ':produce:get:runtime:json=', json)\r\n\t\t\t\t\treturn Promise.resolve(json)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn Promise.reject(context + ':produce:bad query mode')\r\n\t}\r\n}\r\n",
    "static": true,
    "longname": "js/services/topology/unused_topology_svc_provider.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 349,
    "kind": "variable",
    "name": "context",
    "memberof": "js/services/topology/unused_topology_svc_provider.js",
    "static": true,
    "longname": "js/services/topology/unused_topology_svc_provider.js~context",
    "access": null,
    "export": false,
    "importPath": "devapt-core-doc/js/services/topology/unused_topology_svc_provider.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 350,
    "kind": "class",
    "name": "TopologySvcProvider",
    "memberof": "js/services/topology/unused_topology_svc_provider.js",
    "static": true,
    "longname": "js/services/topology/unused_topology_svc_provider.js~TopologySvcProvider",
    "access": null,
    "export": true,
    "importPath": "devapt-core-doc/js/services/topology/unused_topology_svc_provider.js",
    "importStyle": "TopologySvcProvider",
    "description": "Topology service provider class.",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Luc BORIES"
      },
      {
        "tagName": "@license",
        "tagValue": "Apache-2.0"
      }
    ],
    "interface": false,
    "extends": [
      "js/services/base/socketio_service_provider.js~SocketIOServiceProvider"
    ]
  },
  {
    "__docId__": 351,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "js/services/topology/unused_topology_svc_provider.js~TopologySvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/topology/unused_topology_svc_provider.js~TopologySvcProvider#constructor",
    "access": null,
    "description": "Create a Topology service provider.",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{nothing}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_provider_name",
        "description": "consumer name"
      },
      {
        "nullable": null,
        "types": [
          "Service"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_service_instance",
        "description": "service instance"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_context",
        "description": "logging context label"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "nothing"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 352,
    "kind": "method",
    "name": "process",
    "memberof": "js/services/topology/unused_topology_svc_provider.js~TopologySvcProvider",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "js/services/topology/unused_topology_svc_provider.js~TopologySvcProvider#process",
    "access": null,
    "description": "Process request and returns datas.\nQuery filter: {\n\t mode:'logical' or 'physical'\n  root_type:'*' or 'node' or 'server' or 'application'\n  root_name:node/server/application name\n}",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_method",
        "description": "method name"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_operands",
        "description": "request operands"
      },
      {
        "nullable": null,
        "types": [
          "Credentials"
        ],
        "spread": false,
        "optional": false,
        "name": "arg_credentials",
        "description": "request credentials"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 353,
    "kind": "file",
    "name": "js/services/unused_page/page_svc_consumer.js",
    "content": "",
    "static": true,
    "longname": "js/services/unused_page/page_svc_consumer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 354,
    "kind": "file",
    "name": "js/services/unused_page/page_svc_producer.js",
    "content": "",
    "static": true,
    "longname": "js/services/unused_page/page_svc_producer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 356,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 357,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 358,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 359,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 360,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 361,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 362,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 363,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 364,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 365,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 366,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 367,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 368,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 369,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 370,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 371,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 372,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 373,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 374,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 375,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 376,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 377,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 378,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 379,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 380,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 381,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 382,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 383,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 384,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 385,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 386,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 387,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 388,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 389,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 390,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 391,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 392,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 393,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 394,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 395,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 396,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 397,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 398,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 399,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 400,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 401,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 402,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "lineNumber": 193,
    "builtinExternal": true
  },
  {
    "__docId__": 404,
    "kind": "external",
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 405,
    "kind": "external",
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 406,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 407,
    "kind": "external",
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 408,
    "kind": "external",
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 409,
    "kind": "external",
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 410,
    "kind": "external",
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 411,
    "kind": "external",
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "builtinExternal": true
  }
]